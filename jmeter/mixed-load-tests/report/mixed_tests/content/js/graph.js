/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 49129.0, "series": [{"data": [[0.0, 1088.0], [0.1, 1088.0], [0.2, 1121.0], [0.3, 1121.0], [0.4, 1143.0], [0.5, 1156.0], [0.6, 1156.0], [0.7, 1164.0], [0.8, 1173.0], [0.9, 1173.0], [1.0, 1175.0], [1.1, 1175.0], [1.2, 1179.0], [1.3, 1186.0], [1.4, 1186.0], [1.5, 1194.0], [1.6, 1198.0], [1.7, 1198.0], [1.8, 1207.0], [1.9, 1207.0], [2.0, 1217.0], [2.1, 1221.0], [2.2, 1221.0], [2.3, 1223.0], [2.4, 1226.0], [2.5, 1226.0], [2.6, 1234.0], [2.7, 1234.0], [2.8, 1237.0], [2.9, 1238.0], [3.0, 1238.0], [3.1, 1241.0], [3.2, 1243.0], [3.3, 1243.0], [3.4, 1243.0], [3.5, 1243.0], [3.6, 1245.0], [3.7, 1248.0], [3.8, 1248.0], [3.9, 1248.0], [4.0, 1256.0], [4.1, 1256.0], [4.2, 1258.0], [4.3, 1274.0], [4.4, 1274.0], [4.5, 1275.0], [4.6, 1275.0], [4.7, 1292.0], [4.8, 1298.0], [4.9, 1298.0], [5.0, 1312.0], [5.1, 1319.0], [5.2, 1319.0], [5.3, 1321.0], [5.4, 1321.0], [5.5, 1324.0], [5.6, 1326.0], [5.7, 1326.0], [5.8, 1339.0], [5.9, 1343.0], [6.0, 1343.0], [6.1, 1345.0], [6.2, 1345.0], [6.3, 1347.0], [6.4, 1370.0], [6.5, 1370.0], [6.6, 1378.0], [6.7, 1380.0], [6.8, 1380.0], [6.9, 1381.0], [7.0, 1381.0], [7.1, 1420.0], [7.2, 1424.0], [7.3, 1424.0], [7.4, 1434.0], [7.5, 1439.0], [7.6, 1439.0], [7.7, 1444.0], [7.8, 1444.0], [7.9, 1465.0], [8.0, 1470.0], [8.1, 1470.0], [8.2, 1476.0], [8.3, 1489.0], [8.4, 1489.0], [8.5, 1496.0], [8.6, 1517.0], [8.7, 1517.0], [8.8, 1520.0], [8.9, 1520.0], [9.0, 1521.0], [9.1, 1524.0], [9.2, 1524.0], [9.3, 1535.0], [9.4, 1536.0], [9.5, 1536.0], [9.6, 1541.0], [9.7, 1541.0], [9.8, 1541.0], [9.9, 1546.0], [10.0, 1546.0], [10.1, 1549.0], [10.2, 1557.0], [10.3, 1557.0], [10.4, 1565.0], [10.5, 1565.0], [10.6, 1567.0], [10.7, 1582.0], [10.8, 1582.0], [10.9, 1626.0], [11.0, 1645.0], [11.1, 1645.0], [11.2, 1670.0], [11.3, 1670.0], [11.4, 1695.0], [11.5, 1705.0], [11.6, 1705.0], [11.7, 1737.0], [11.8, 1739.0], [11.9, 1739.0], [12.0, 1741.0], [12.1, 1741.0], [12.2, 1743.0], [12.3, 1780.0], [12.4, 1780.0], [12.5, 1786.0], [12.6, 1789.0], [12.7, 1789.0], [12.8, 1809.0], [12.9, 1821.0], [13.0, 1821.0], [13.1, 1833.0], [13.2, 1833.0], [13.3, 1836.0], [13.4, 1838.0], [13.5, 1838.0], [13.6, 1861.0], [13.7, 1875.0], [13.8, 1875.0], [13.9, 1916.0], [14.0, 1916.0], [14.1, 1923.0], [14.2, 1962.0], [14.3, 1962.0], [14.4, 1963.0], [14.5, 1993.0], [14.6, 1993.0], [14.7, 2038.0], [14.8, 2038.0], [14.9, 2041.0], [15.0, 2042.0], [15.1, 2042.0], [15.2, 2049.0], [15.3, 2058.0], [15.4, 2058.0], [15.5, 2070.0], [15.6, 2070.0], [15.7, 2077.0], [15.8, 2079.0], [15.9, 2079.0], [16.0, 2095.0], [16.1, 2099.0], [16.2, 2099.0], [16.3, 2103.0], [16.4, 2103.0], [16.5, 2107.0], [16.6, 2118.0], [16.7, 2118.0], [16.8, 2133.0], [16.9, 2146.0], [17.0, 2146.0], [17.1, 2157.0], [17.2, 2158.0], [17.3, 2158.0], [17.4, 2159.0], [17.5, 2159.0], [17.6, 2162.0], [17.7, 2170.0], [17.8, 2170.0], [17.9, 2180.0], [18.0, 2182.0], [18.1, 2182.0], [18.2, 2191.0], [18.3, 2191.0], [18.4, 2218.0], [18.5, 2220.0], [18.6, 2220.0], [18.7, 2223.0], [18.8, 2225.0], [18.9, 2225.0], [19.0, 2230.0], [19.1, 2230.0], [19.2, 2246.0], [19.3, 2314.0], [19.4, 2314.0], [19.5, 2337.0], [19.6, 2343.0], [19.7, 2343.0], [19.8, 2350.0], [19.9, 2350.0], [20.0, 2357.0], [20.1, 2387.0], [20.2, 2387.0], [20.3, 2387.0], [20.4, 2417.0], [20.5, 2417.0], [20.6, 2426.0], [20.7, 2426.0], [20.8, 2432.0], [20.9, 2440.0], [21.0, 2440.0], [21.1, 2455.0], [21.2, 2463.0], [21.3, 2463.0], [21.4, 2466.0], [21.5, 2493.0], [21.6, 2493.0], [21.7, 2551.0], [21.8, 2551.0], [21.9, 2630.0], [22.0, 2638.0], [22.1, 2638.0], [22.2, 2650.0], [22.3, 2703.0], [22.4, 2703.0], [22.5, 2810.0], [22.6, 2810.0], [22.7, 2852.0], [22.8, 2856.0], [22.9, 2856.0], [23.0, 2912.0], [23.1, 2923.0], [23.2, 2923.0], [23.3, 2926.0], [23.4, 2926.0], [23.5, 2933.0], [23.6, 2935.0], [23.7, 2935.0], [23.8, 2943.0], [23.9, 3006.0], [24.0, 3006.0], [24.1, 3007.0], [24.2, 3007.0], [24.3, 3012.0], [24.4, 3035.0], [24.5, 3035.0], [24.6, 3038.0], [24.7, 3039.0], [24.8, 3039.0], [24.9, 3043.0], [25.0, 3092.0], [25.1, 3092.0], [25.2, 3097.0], [25.3, 3097.0], [25.4, 3105.0], [25.5, 3118.0], [25.6, 3118.0], [25.7, 3123.0], [25.8, 3134.0], [25.9, 3134.0], [26.0, 3139.0], [26.1, 3139.0], [26.2, 3161.0], [26.3, 3166.0], [26.4, 3166.0], [26.5, 3323.0], [26.6, 3331.0], [26.7, 3331.0], [26.8, 3407.0], [26.9, 3407.0], [27.0, 3415.0], [27.1, 3417.0], [27.2, 3417.0], [27.3, 3420.0], [27.4, 3426.0], [27.5, 3426.0], [27.6, 3445.0], [27.7, 3445.0], [27.8, 3479.0], [27.9, 3485.0], [28.0, 3485.0], [28.1, 3502.0], [28.2, 3517.0], [28.3, 3517.0], [28.4, 3522.0], [28.5, 3522.0], [28.6, 3531.0], [28.7, 3552.0], [28.8, 3552.0], [28.9, 3566.0], [29.0, 3569.0], [29.1, 3569.0], [29.2, 3593.0], [29.3, 3609.0], [29.4, 3609.0], [29.5, 3622.0], [29.6, 3622.0], [29.7, 3673.0], [29.8, 3674.0], [29.9, 3674.0], [30.0, 3680.0], [30.1, 3705.0], [30.2, 3705.0], [30.3, 3724.0], [30.4, 3724.0], [30.5, 3733.0], [30.6, 3745.0], [30.7, 3745.0], [30.8, 3763.0], [30.9, 3765.0], [31.0, 3765.0], [31.1, 3765.0], [31.2, 3765.0], [31.3, 3770.0], [31.4, 3774.0], [31.5, 3774.0], [31.6, 3781.0], [31.7, 3790.0], [31.8, 3790.0], [31.9, 3794.0], [32.0, 3794.0], [32.1, 3794.0], [32.2, 3800.0], [32.3, 3800.0], [32.4, 3805.0], [32.5, 3809.0], [32.6, 3809.0], [32.7, 3826.0], [32.8, 3826.0], [32.9, 3827.0], [33.0, 3830.0], [33.1, 3830.0], [33.2, 3836.0], [33.3, 3846.0], [33.4, 3846.0], [33.5, 3853.0], [33.6, 3867.0], [33.7, 3867.0], [33.8, 3885.0], [33.9, 3885.0], [34.0, 3889.0], [34.1, 3899.0], [34.2, 3899.0], [34.3, 3904.0], [34.4, 3905.0], [34.5, 3905.0], [34.6, 3911.0], [34.7, 3911.0], [34.8, 3912.0], [34.9, 3913.0], [35.0, 3913.0], [35.1, 3934.0], [35.2, 3935.0], [35.3, 3935.0], [35.4, 3988.0], [35.5, 3988.0], [35.6, 3999.0], [35.7, 4109.0], [35.8, 4109.0], [35.9, 4110.0], [36.0, 4116.0], [36.1, 4116.0], [36.2, 4164.0], [36.3, 4164.0], [36.4, 4186.0], [36.5, 4195.0], [36.6, 4195.0], [36.7, 4204.0], [36.8, 4217.0], [36.9, 4217.0], [37.0, 4248.0], [37.1, 4248.0], [37.2, 4301.0], [37.3, 4321.0], [37.4, 4321.0], [37.5, 4324.0], [37.6, 4341.0], [37.7, 4341.0], [37.8, 4351.0], [37.9, 4355.0], [38.0, 4355.0], [38.1, 4364.0], [38.2, 4364.0], [38.3, 4463.0], [38.4, 4514.0], [38.5, 4514.0], [38.6, 4526.0], [38.7, 4549.0], [38.8, 4549.0], [38.9, 4559.0], [39.0, 4559.0], [39.1, 4599.0], [39.2, 4603.0], [39.3, 4603.0], [39.4, 4607.0], [39.5, 4612.0], [39.6, 4612.0], [39.7, 4623.0], [39.8, 4623.0], [39.9, 4654.0], [40.0, 4664.0], [40.1, 4664.0], [40.2, 4683.0], [40.3, 4757.0], [40.4, 4757.0], [40.5, 4768.0], [40.6, 4768.0], [40.7, 4775.0], [40.8, 4787.0], [40.9, 4787.0], [41.0, 4791.0], [41.1, 4810.0], [41.2, 4810.0], [41.3, 4837.0], [41.4, 4837.0], [41.5, 4846.0], [41.6, 4871.0], [41.7, 4871.0], [41.8, 4883.0], [41.9, 4884.0], [42.0, 4884.0], [42.1, 4884.0], [42.2, 4891.0], [42.3, 4891.0], [42.4, 4897.0], [42.5, 4897.0], [42.6, 4900.0], [42.7, 4901.0], [42.8, 4901.0], [42.9, 4902.0], [43.0, 4906.0], [43.1, 4906.0], [43.2, 4920.0], [43.3, 4920.0], [43.4, 4924.0], [43.5, 4973.0], [43.6, 4973.0], [43.7, 5007.0], [43.8, 5013.0], [43.9, 5013.0], [44.0, 5075.0], [44.1, 5075.0], [44.2, 5096.0], [44.3, 5096.0], [44.4, 5096.0], [44.5, 5106.0], [44.6, 5117.0], [44.7, 5117.0], [44.8, 5190.0], [44.9, 5190.0], [45.0, 5191.0], [45.1, 5197.0], [45.2, 5197.0], [45.3, 5210.0], [45.4, 5243.0], [45.5, 5243.0], [45.6, 5266.0], [45.7, 5266.0], [45.8, 5341.0], [45.9, 5358.0], [46.0, 5358.0], [46.1, 5392.0], [46.2, 5394.0], [46.3, 5394.0], [46.4, 5409.0], [46.5, 5414.0], [46.6, 5414.0], [46.7, 5444.0], [46.8, 5444.0], [46.9, 5447.0], [47.0, 5479.0], [47.1, 5479.0], [47.2, 5484.0], [47.3, 5500.0], [47.4, 5500.0], [47.5, 5656.0], [47.6, 5656.0], [47.7, 5660.0], [47.8, 5684.0], [47.9, 5684.0], [48.0, 5701.0], [48.1, 5740.0], [48.2, 5740.0], [48.3, 5819.0], [48.4, 5819.0], [48.5, 5837.0], [48.6, 5909.0], [48.7, 5909.0], [48.8, 5913.0], [48.9, 5937.0], [49.0, 5937.0], [49.1, 5970.0], [49.2, 5970.0], [49.3, 5995.0], [49.4, 6005.0], [49.5, 6005.0], [49.6, 6058.0], [49.7, 6067.0], [49.8, 6067.0], [49.9, 6076.0], [50.0, 6076.0], [50.1, 6083.0], [50.2, 6094.0], [50.3, 6094.0], [50.4, 6095.0], [50.5, 6105.0], [50.6, 6105.0], [50.7, 6107.0], [50.8, 6111.0], [50.9, 6111.0], [51.0, 6111.0], [51.1, 6111.0], [51.2, 6113.0], [51.3, 6113.0], [51.4, 6113.0], [51.5, 6116.0], [51.6, 6129.0], [51.7, 6129.0], [51.8, 6168.0], [51.9, 6168.0], [52.0, 6221.0], [52.1, 6223.0], [52.2, 6223.0], [52.3, 6238.0], [52.4, 6239.0], [52.5, 6239.0], [52.6, 6273.0], [52.7, 6273.0], [52.8, 6323.0], [52.9, 6358.0], [53.0, 6358.0], [53.1, 6369.0], [53.2, 6381.0], [53.3, 6381.0], [53.4, 6388.0], [53.5, 6388.0], [53.6, 6399.0], [53.7, 6415.0], [53.8, 6415.0], [53.9, 6442.0], [54.0, 6449.0], [54.1, 6449.0], [54.2, 6473.0], [54.3, 6484.0], [54.4, 6484.0], [54.5, 6487.0], [54.6, 6487.0], [54.7, 6536.0], [54.8, 6539.0], [54.9, 6539.0], [55.0, 6558.0], [55.1, 6564.0], [55.2, 6564.0], [55.3, 6567.0], [55.4, 6567.0], [55.5, 6569.0], [55.6, 6577.0], [55.7, 6577.0], [55.8, 6585.0], [55.9, 6659.0], [56.0, 6659.0], [56.1, 6677.0], [56.2, 6677.0], [56.3, 6680.0], [56.4, 6712.0], [56.5, 6712.0], [56.6, 6714.0], [56.7, 6752.0], [56.8, 6752.0], [56.9, 6764.0], [57.0, 6764.0], [57.1, 6804.0], [57.2, 6863.0], [57.3, 6863.0], [57.4, 6874.0], [57.5, 6879.0], [57.6, 6879.0], [57.7, 6954.0], [57.8, 6954.0], [57.9, 6974.0], [58.0, 6974.0], [58.1, 6974.0], [58.2, 6985.0], [58.3, 6993.0], [58.4, 6993.0], [58.5, 7030.0], [58.6, 7032.0], [58.7, 7032.0], [58.8, 7039.0], [58.9, 7039.0], [59.0, 7051.0], [59.1, 7130.0], [59.2, 7130.0], [59.3, 7152.0], [59.4, 7167.0], [59.5, 7167.0], [59.6, 7177.0], [59.7, 7177.0], [59.8, 7232.0], [59.9, 7319.0], [60.0, 7319.0], [60.1, 7373.0], [60.2, 7387.0], [60.3, 7387.0], [60.4, 7387.0], [60.5, 7387.0], [60.6, 7388.0], [60.7, 7421.0], [60.8, 7421.0], [60.9, 7429.0], [61.0, 7458.0], [61.1, 7458.0], [61.2, 7474.0], [61.3, 7474.0], [61.4, 7481.0], [61.5, 7507.0], [61.6, 7507.0], [61.7, 7591.0], [61.8, 7598.0], [61.9, 7598.0], [62.0, 7697.0], [62.1, 7697.0], [62.2, 7730.0], [62.3, 7748.0], [62.4, 7748.0], [62.5, 7866.0], [62.6, 7875.0], [62.7, 7875.0], [62.8, 7903.0], [62.9, 7950.0], [63.0, 7950.0], [63.1, 7964.0], [63.2, 7964.0], [63.3, 8020.0], [63.4, 8027.0], [63.5, 8027.0], [63.6, 8084.0], [63.7, 8157.0], [63.8, 8157.0], [63.9, 8172.0], [64.0, 8172.0], [64.1, 8188.0], [64.2, 8199.0], [64.3, 8199.0], [64.4, 8206.0], [64.5, 8208.0], [64.6, 8208.0], [64.7, 8209.0], [64.8, 8209.0], [64.9, 8241.0], [65.0, 8283.0], [65.1, 8283.0], [65.2, 8331.0], [65.3, 8353.0], [65.4, 8353.0], [65.5, 8357.0], [65.6, 8357.0], [65.7, 8360.0], [65.8, 8370.0], [65.9, 8370.0], [66.0, 8384.0], [66.1, 8385.0], [66.2, 8385.0], [66.3, 8432.0], [66.4, 8432.0], [66.5, 8456.0], [66.6, 8480.0], [66.7, 8480.0], [66.8, 8533.0], [66.9, 8564.0], [67.0, 8564.0], [67.1, 8589.0], [67.2, 8599.0], [67.3, 8599.0], [67.4, 8600.0], [67.5, 8600.0], [67.6, 8613.0], [67.7, 8640.0], [67.8, 8640.0], [67.9, 8648.0], [68.0, 8676.0], [68.1, 8676.0], [68.2, 8706.0], [68.3, 8706.0], [68.4, 8838.0], [68.5, 8881.0], [68.6, 8881.0], [68.7, 8884.0], [68.8, 8892.0], [68.9, 8892.0], [69.0, 8906.0], [69.1, 8906.0], [69.2, 8912.0], [69.3, 8930.0], [69.4, 8930.0], [69.5, 8934.0], [69.6, 8991.0], [69.7, 8991.0], [69.8, 9013.0], [69.9, 9013.0], [70.0, 9018.0], [70.1, 9031.0], [70.2, 9031.0], [70.3, 9045.0], [70.4, 9058.0], [70.5, 9058.0], [70.6, 9196.0], [70.7, 9196.0], [70.8, 9209.0], [70.9, 9224.0], [71.0, 9224.0], [71.1, 9226.0], [71.2, 9249.0], [71.3, 9249.0], [71.4, 9268.0], [71.5, 9309.0], [71.6, 9309.0], [71.7, 9344.0], [71.8, 9344.0], [71.9, 9356.0], [72.0, 9360.0], [72.1, 9360.0], [72.2, 9374.0], [72.3, 9465.0], [72.4, 9465.0], [72.5, 9468.0], [72.6, 9468.0], [72.7, 9516.0], [72.8, 9548.0], [72.9, 9548.0], [73.0, 9571.0], [73.1, 9573.0], [73.2, 9573.0], [73.3, 9638.0], [73.4, 9638.0], [73.5, 9653.0], [73.6, 9707.0], [73.7, 9707.0], [73.8, 9712.0], [73.9, 9723.0], [74.0, 9723.0], [74.1, 9817.0], [74.2, 9817.0], [74.3, 9818.0], [74.4, 9828.0], [74.5, 9828.0], [74.6, 9853.0], [74.7, 9856.0], [74.8, 9856.0], [74.9, 9861.0], [75.0, 9861.0], [75.1, 9865.0], [75.2, 9954.0], [75.3, 9954.0], [75.4, 9967.0], [75.5, 9978.0], [75.6, 9978.0], [75.7, 9991.0], [75.8, 10004.0], [75.9, 10004.0], [76.0, 10040.0], [76.1, 10040.0], [76.2, 10060.0], [76.3, 10071.0], [76.4, 10071.0], [76.5, 10096.0], [76.6, 10113.0], [76.7, 10113.0], [76.8, 10129.0], [76.9, 10129.0], [77.0, 10129.0], [77.1, 10134.0], [77.2, 10134.0], [77.3, 10135.0], [77.4, 10138.0], [77.5, 10138.0], [77.6, 10141.0], [77.7, 10141.0], [77.8, 10153.0], [77.9, 10182.0], [78.0, 10182.0], [78.1, 10230.0], [78.2, 10251.0], [78.3, 10251.0], [78.4, 10254.0], [78.5, 10254.0], [78.6, 10291.0], [78.7, 10312.0], [78.8, 10312.0], [78.9, 10329.0], [79.0, 10330.0], [79.1, 10330.0], [79.2, 10340.0], [79.3, 10345.0], [79.4, 10345.0], [79.5, 10347.0], [79.6, 10347.0], [79.7, 10379.0], [79.8, 10417.0], [79.9, 10417.0], [80.0, 10541.0], [80.1, 10546.0], [80.2, 10546.0], [80.3, 10575.0], [80.4, 10575.0], [80.5, 10590.0], [80.6, 10592.0], [80.7, 10592.0], [80.8, 10605.0], [80.9, 10618.0], [81.0, 10618.0], [81.1, 10621.0], [81.2, 10621.0], [81.3, 10623.0], [81.4, 10635.0], [81.5, 10635.0], [81.6, 10639.0], [81.7, 10645.0], [81.8, 10645.0], [81.9, 10671.0], [82.0, 10671.0], [82.1, 10673.0], [82.2, 10676.0], [82.3, 10676.0], [82.4, 10698.0], [82.5, 10715.0], [82.6, 10715.0], [82.7, 10734.0], [82.8, 10734.0], [82.9, 10836.0], [83.0, 10844.0], [83.1, 10844.0], [83.2, 10851.0], [83.3, 10868.0], [83.4, 10868.0], [83.5, 10901.0], [83.6, 10920.0], [83.7, 10920.0], [83.8, 10921.0], [83.9, 10921.0], [84.0, 10937.0], [84.1, 10937.0], [84.2, 10937.0], [84.3, 10963.0], [84.4, 10965.0], [84.5, 10965.0], [84.6, 10973.0], [84.7, 10973.0], [84.8, 11000.0], [84.9, 11014.0], [85.0, 11014.0], [85.1, 11041.0], [85.2, 11058.0], [85.3, 11058.0], [85.4, 11075.0], [85.5, 11075.0], [85.6, 11080.0], [85.7, 11145.0], [85.8, 11145.0], [85.9, 11153.0], [86.0, 11154.0], [86.1, 11154.0], [86.2, 11155.0], [86.3, 11155.0], [86.4, 11172.0], [86.5, 11190.0], [86.6, 11190.0], [86.7, 11194.0], [86.8, 11209.0], [86.9, 11209.0], [87.0, 11239.0], [87.1, 11239.0], [87.2, 11256.0], [87.3, 11264.0], [87.4, 11264.0], [87.5, 11277.0], [87.6, 11345.0], [87.7, 11345.0], [87.8, 11397.0], [87.9, 11406.0], [88.0, 11406.0], [88.1, 11471.0], [88.2, 11471.0], [88.3, 11471.0], [88.4, 11540.0], [88.5, 11540.0], [88.6, 11580.0], [88.7, 11648.0], [88.8, 11648.0], [88.9, 11683.0], [89.0, 11683.0], [89.1, 11728.0], [89.2, 11742.0], [89.3, 11742.0], [89.4, 11749.0], [89.5, 11750.0], [89.6, 11750.0], [89.7, 11792.0], [89.8, 11792.0], [89.9, 11814.0], [90.0, 11821.0], [90.1, 11821.0], [90.2, 11824.0], [90.3, 11886.0], [90.4, 11886.0], [90.5, 11922.0], [90.6, 11922.0], [90.7, 11942.0], [90.8, 11970.0], [90.9, 11970.0], [91.0, 11978.0], [91.1, 12007.0], [91.2, 12007.0], [91.3, 12119.0], [91.4, 12119.0], [91.5, 12120.0], [91.6, 12224.0], [91.7, 12224.0], [91.8, 12235.0], [91.9, 12361.0], [92.0, 12361.0], [92.1, 12361.0], [92.2, 12365.0], [92.3, 12365.0], [92.4, 12378.0], [92.5, 12378.0], [92.6, 12444.0], [92.7, 12474.0], [92.8, 12474.0], [92.9, 12493.0], [93.0, 12501.0], [93.1, 12501.0], [93.2, 12520.0], [93.3, 12520.0], [93.4, 12549.0], [93.5, 12602.0], [93.6, 12602.0], [93.7, 12619.0], [93.8, 12629.0], [93.9, 12629.0], [94.0, 12661.0], [94.1, 12661.0], [94.2, 12662.0], [94.3, 12716.0], [94.4, 12716.0], [94.5, 12746.0], [94.6, 12757.0], [94.7, 12757.0], [94.8, 12773.0], [94.9, 12773.0], [95.0, 12797.0], [95.1, 12808.0], [95.2, 12808.0], [95.3, 12820.0], [95.4, 12868.0], [95.5, 12868.0], [95.6, 12879.0], [95.7, 12879.0], [95.8, 12905.0], [95.9, 12921.0], [96.0, 12921.0], [96.1, 13081.0], [96.2, 13094.0], [96.3, 13094.0], [96.4, 13110.0], [96.5, 13139.0], [96.6, 13139.0], [96.7, 13149.0], [96.8, 13149.0], [96.9, 13244.0], [97.0, 13269.0], [97.1, 13269.0], [97.2, 13285.0], [97.3, 13341.0], [97.4, 13341.0], [97.5, 13491.0], [97.6, 13491.0], [97.7, 13498.0], [97.8, 13638.0], [97.9, 13638.0], [98.0, 13640.0], [98.1, 13768.0], [98.2, 13768.0], [98.3, 13939.0], [98.4, 13939.0], [98.5, 14088.0], [98.6, 14156.0], [98.7, 14156.0], [98.8, 14190.0], [98.9, 14921.0], [99.0, 14921.0], [99.1, 14975.0], [99.2, 14975.0], [99.3, 14998.0], [99.4, 16208.0], [99.5, 16208.0], [99.6, 16376.0], [99.7, 16422.0], [99.8, 16422.0], [99.9, 17357.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[0.0, 108.0], [0.1, 108.0], [0.2, 111.0], [0.3, 111.0], [0.4, 112.0], [0.5, 113.0], [0.6, 113.0], [0.7, 113.0], [0.8, 118.0], [0.9, 118.0], [1.0, 131.0], [1.1, 134.0], [1.2, 134.0], [1.3, 134.0], [1.4, 134.0], [1.5, 134.0], [1.6, 138.0], [1.7, 138.0], [1.8, 139.0], [1.9, 143.0], [2.0, 143.0], [2.1, 148.0], [2.2, 156.0], [2.3, 156.0], [2.4, 157.0], [2.5, 164.0], [2.6, 164.0], [2.7, 175.0], [2.8, 177.0], [2.9, 177.0], [3.0, 183.0], [3.1, 183.0], [3.2, 189.0], [3.3, 191.0], [3.4, 191.0], [3.5, 199.0], [3.6, 203.0], [3.7, 203.0], [3.8, 206.0], [3.9, 210.0], [4.0, 210.0], [4.1, 210.0], [4.2, 214.0], [4.3, 214.0], [4.4, 220.0], [4.5, 220.0], [4.6, 222.0], [4.7, 231.0], [4.8, 231.0], [4.9, 232.0], [5.0, 232.0], [5.1, 232.0], [5.2, 239.0], [5.3, 240.0], [5.4, 240.0], [5.5, 241.0], [5.6, 242.0], [5.7, 242.0], [5.8, 244.0], [5.9, 244.0], [6.0, 245.0], [6.1, 245.0], [6.2, 245.0], [6.3, 248.0], [6.4, 250.0], [6.5, 250.0], [6.6, 263.0], [6.7, 268.0], [6.8, 268.0], [6.9, 276.0], [7.0, 280.0], [7.1, 280.0], [7.2, 281.0], [7.3, 281.0], [7.4, 290.0], [7.5, 291.0], [7.6, 291.0], [7.7, 295.0], [7.8, 295.0], [7.9, 295.0], [8.0, 296.0], [8.1, 297.0], [8.2, 297.0], [8.3, 298.0], [8.4, 305.0], [8.5, 305.0], [8.6, 308.0], [8.7, 308.0], [8.8, 310.0], [8.9, 310.0], [9.0, 310.0], [9.1, 311.0], [9.2, 312.0], [9.3, 312.0], [9.4, 314.0], [9.5, 315.0], [9.6, 315.0], [9.7, 316.0], [9.8, 322.0], [9.9, 322.0], [10.0, 325.0], [10.1, 325.0], [10.2, 328.0], [10.3, 329.0], [10.4, 329.0], [10.5, 331.0], [10.6, 333.0], [10.7, 333.0], [10.8, 333.0], [10.9, 335.0], [11.0, 335.0], [11.1, 338.0], [11.2, 349.0], [11.3, 349.0], [11.4, 349.0], [11.5, 349.0], [11.6, 349.0], [11.7, 355.0], [11.8, 355.0], [11.9, 355.0], [12.0, 358.0], [12.1, 358.0], [12.2, 368.0], [12.3, 368.0], [12.4, 368.0], [12.5, 372.0], [12.6, 376.0], [12.7, 376.0], [12.8, 379.0], [12.9, 379.0], [13.0, 380.0], [13.1, 390.0], [13.2, 390.0], [13.3, 392.0], [13.4, 398.0], [13.5, 398.0], [13.6, 399.0], [13.7, 400.0], [13.8, 400.0], [13.9, 401.0], [14.0, 401.0], [14.1, 401.0], [14.2, 402.0], [14.3, 402.0], [14.4, 404.0], [14.5, 404.0], [14.6, 404.0], [14.7, 406.0], [14.8, 408.0], [14.9, 408.0], [15.0, 412.0], [15.1, 414.0], [15.2, 414.0], [15.3, 418.0], [15.4, 420.0], [15.5, 420.0], [15.6, 421.0], [15.7, 421.0], [15.8, 423.0], [15.9, 426.0], [16.0, 426.0], [16.1, 428.0], [16.2, 429.0], [16.3, 429.0], [16.4, 432.0], [16.5, 433.0], [16.6, 433.0], [16.7, 437.0], [16.8, 439.0], [16.9, 439.0], [17.0, 441.0], [17.1, 441.0], [17.2, 444.0], [17.3, 452.0], [17.4, 452.0], [17.5, 452.0], [17.6, 455.0], [17.7, 455.0], [17.8, 461.0], [17.9, 464.0], [18.0, 464.0], [18.1, 466.0], [18.2, 466.0], [18.3, 466.0], [18.4, 470.0], [18.5, 470.0], [18.6, 475.0], [18.7, 480.0], [18.8, 480.0], [18.9, 493.0], [19.0, 501.0], [19.1, 501.0], [19.2, 502.0], [19.3, 506.0], [19.4, 506.0], [19.5, 509.0], [19.6, 513.0], [19.7, 513.0], [19.8, 513.0], [19.9, 513.0], [20.0, 516.0], [20.1, 517.0], [20.2, 517.0], [20.3, 522.0], [20.4, 524.0], [20.5, 524.0], [20.6, 526.0], [20.7, 527.0], [20.8, 527.0], [20.9, 529.0], [21.0, 529.0], [21.1, 529.0], [21.2, 531.0], [21.3, 531.0], [21.4, 532.0], [21.5, 533.0], [21.6, 533.0], [21.7, 533.0], [21.8, 534.0], [21.9, 534.0], [22.0, 542.0], [22.1, 543.0], [22.2, 543.0], [22.3, 548.0], [22.4, 555.0], [22.5, 555.0], [22.6, 562.0], [22.7, 562.0], [22.8, 563.0], [22.9, 565.0], [23.0, 565.0], [23.1, 585.0], [23.2, 587.0], [23.3, 587.0], [23.4, 597.0], [23.5, 599.0], [23.6, 599.0], [23.7, 603.0], [23.8, 612.0], [23.9, 612.0], [24.0, 614.0], [24.1, 614.0], [24.2, 615.0], [24.3, 615.0], [24.4, 615.0], [24.5, 618.0], [24.6, 625.0], [24.7, 625.0], [24.8, 629.0], [24.9, 631.0], [25.0, 631.0], [25.1, 631.0], [25.2, 632.0], [25.3, 632.0], [25.4, 639.0], [25.5, 639.0], [25.6, 640.0], [25.7, 645.0], [25.8, 645.0], [25.9, 654.0], [26.0, 655.0], [26.1, 655.0], [26.2, 663.0], [26.3, 663.0], [26.4, 663.0], [26.5, 663.0], [26.6, 667.0], [26.7, 667.0], [26.8, 671.0], [26.9, 671.0], [27.0, 673.0], [27.1, 673.0], [27.2, 673.0], [27.3, 675.0], [27.4, 688.0], [27.5, 688.0], [27.6, 692.0], [27.7, 695.0], [27.8, 695.0], [27.9, 695.0], [28.0, 698.0], [28.1, 698.0], [28.2, 707.0], [28.3, 707.0], [28.4, 714.0], [28.5, 721.0], [28.6, 721.0], [28.7, 722.0], [28.8, 728.0], [28.9, 728.0], [29.0, 730.0], [29.1, 730.0], [29.2, 730.0], [29.3, 730.0], [29.4, 732.0], [29.5, 732.0], [29.6, 733.0], [29.7, 733.0], [29.8, 736.0], [29.9, 742.0], [30.0, 742.0], [30.1, 743.0], [30.2, 743.0], [30.3, 743.0], [30.4, 748.0], [30.5, 749.0], [30.6, 749.0], [30.7, 751.0], [30.8, 751.0], [30.9, 751.0], [31.0, 756.0], [31.1, 756.0], [31.2, 757.0], [31.3, 761.0], [31.4, 761.0], [31.5, 762.0], [31.6, 763.0], [31.7, 763.0], [31.8, 764.0], [31.9, 772.0], [32.0, 772.0], [32.1, 775.0], [32.2, 778.0], [32.3, 778.0], [32.4, 780.0], [32.5, 780.0], [32.6, 784.0], [32.7, 785.0], [32.8, 785.0], [32.9, 786.0], [33.0, 789.0], [33.1, 789.0], [33.2, 789.0], [33.3, 809.0], [33.4, 809.0], [33.5, 809.0], [33.6, 818.0], [33.7, 818.0], [33.8, 822.0], [33.9, 822.0], [34.0, 822.0], [34.1, 828.0], [34.2, 828.0], [34.3, 829.0], [34.4, 843.0], [34.5, 843.0], [34.6, 844.0], [34.7, 856.0], [34.8, 856.0], [34.9, 857.0], [35.0, 868.0], [35.1, 868.0], [35.2, 869.0], [35.3, 869.0], [35.4, 869.0], [35.5, 872.0], [35.6, 872.0], [35.7, 876.0], [35.8, 878.0], [35.9, 878.0], [36.0, 884.0], [36.1, 886.0], [36.2, 886.0], [36.3, 889.0], [36.4, 892.0], [36.5, 892.0], [36.6, 895.0], [36.7, 895.0], [36.8, 897.0], [36.9, 906.0], [37.0, 906.0], [37.1, 907.0], [37.2, 910.0], [37.3, 910.0], [37.4, 925.0], [37.5, 928.0], [37.6, 928.0], [37.7, 931.0], [37.8, 937.0], [37.9, 937.0], [38.0, 950.0], [38.1, 950.0], [38.2, 951.0], [38.3, 959.0], [38.4, 959.0], [38.5, 966.0], [38.6, 979.0], [38.7, 979.0], [38.8, 980.0], [38.9, 983.0], [39.0, 983.0], [39.1, 985.0], [39.2, 986.0], [39.3, 986.0], [39.4, 987.0], [39.5, 987.0], [39.6, 987.0], [39.7, 994.0], [39.8, 994.0], [39.9, 996.0], [40.0, 1005.0], [40.1, 1005.0], [40.2, 1006.0], [40.3, 1009.0], [40.4, 1009.0], [40.5, 1032.0], [40.6, 1035.0], [40.7, 1035.0], [40.8, 1039.0], [40.9, 1039.0], [41.0, 1044.0], [41.1, 1056.0], [41.2, 1056.0], [41.3, 1057.0], [41.4, 1058.0], [41.5, 1058.0], [41.6, 1072.0], [41.7, 1079.0], [41.8, 1079.0], [41.9, 1095.0], [42.0, 1095.0], [42.1, 1095.0], [42.2, 1096.0], [42.3, 1096.0], [42.4, 1104.0], [42.5, 1112.0], [42.6, 1112.0], [42.7, 1112.0], [42.8, 1116.0], [42.9, 1116.0], [43.0, 1130.0], [43.1, 1130.0], [43.2, 1130.0], [43.3, 1132.0], [43.4, 1136.0], [43.5, 1136.0], [43.6, 1143.0], [43.7, 1143.0], [43.8, 1150.0], [43.9, 1161.0], [44.0, 1161.0], [44.1, 1162.0], [44.2, 1165.0], [44.3, 1165.0], [44.4, 1174.0], [44.5, 1182.0], [44.6, 1182.0], [44.7, 1186.0], [44.8, 1190.0], [44.9, 1190.0], [45.0, 1192.0], [45.1, 1192.0], [45.2, 1195.0], [45.3, 1196.0], [45.4, 1196.0], [45.5, 1203.0], [45.6, 1203.0], [45.7, 1203.0], [45.8, 1220.0], [45.9, 1221.0], [46.0, 1221.0], [46.1, 1231.0], [46.2, 1234.0], [46.3, 1234.0], [46.4, 1235.0], [46.5, 1235.0], [46.6, 1237.0], [46.7, 1240.0], [46.8, 1240.0], [46.9, 1242.0], [47.0, 1243.0], [47.1, 1243.0], [47.2, 1243.0], [47.3, 1245.0], [47.4, 1245.0], [47.5, 1248.0], [47.6, 1250.0], [47.7, 1250.0], [47.8, 1254.0], [47.9, 1254.0], [48.0, 1259.0], [48.1, 1262.0], [48.2, 1262.0], [48.3, 1264.0], [48.4, 1265.0], [48.5, 1265.0], [48.6, 1265.0], [48.7, 1282.0], [48.8, 1282.0], [48.9, 1283.0], [49.0, 1285.0], [49.1, 1285.0], [49.2, 1287.0], [49.3, 1287.0], [49.4, 1290.0], [49.5, 1290.0], [49.6, 1290.0], [49.7, 1300.0], [49.8, 1304.0], [49.9, 1304.0], [50.0, 1306.0], [50.1, 1315.0], [50.2, 1315.0], [50.3, 1315.0], [50.4, 1316.0], [50.5, 1316.0], [50.6, 1336.0], [50.7, 1336.0], [50.8, 1336.0], [50.9, 1338.0], [51.0, 1338.0], [51.1, 1342.0], [51.2, 1355.0], [51.3, 1355.0], [51.4, 1365.0], [51.5, 1369.0], [51.6, 1369.0], [51.7, 1371.0], [51.8, 1373.0], [51.9, 1373.0], [52.0, 1376.0], [52.1, 1390.0], [52.2, 1390.0], [52.3, 1406.0], [52.4, 1406.0], [52.5, 1409.0], [52.6, 1416.0], [52.7, 1416.0], [52.8, 1416.0], [52.9, 1419.0], [53.0, 1419.0], [53.1, 1421.0], [53.2, 1422.0], [53.3, 1422.0], [53.4, 1429.0], [53.5, 1431.0], [53.6, 1431.0], [53.7, 1434.0], [53.8, 1434.0], [53.9, 1440.0], [54.0, 1440.0], [54.1, 1440.0], [54.2, 1441.0], [54.3, 1441.0], [54.4, 1441.0], [54.5, 1443.0], [54.6, 1443.0], [54.7, 1443.0], [54.8, 1446.0], [54.9, 1452.0], [55.0, 1452.0], [55.1, 1453.0], [55.2, 1453.0], [55.3, 1457.0], [55.4, 1460.0], [55.5, 1460.0], [55.6, 1462.0], [55.7, 1477.0], [55.8, 1477.0], [55.9, 1499.0], [56.0, 1502.0], [56.1, 1502.0], [56.2, 1505.0], [56.3, 1510.0], [56.4, 1510.0], [56.5, 1523.0], [56.6, 1523.0], [56.7, 1526.0], [56.8, 1527.0], [56.9, 1527.0], [57.0, 1534.0], [57.1, 1537.0], [57.2, 1537.0], [57.3, 1540.0], [57.4, 1549.0], [57.5, 1549.0], [57.6, 1553.0], [57.7, 1556.0], [57.8, 1556.0], [57.9, 1557.0], [58.0, 1557.0], [58.1, 1561.0], [58.2, 1562.0], [58.3, 1562.0], [58.4, 1563.0], [58.5, 1565.0], [58.6, 1565.0], [58.7, 1566.0], [58.8, 1567.0], [58.9, 1567.0], [59.0, 1567.0], [59.1, 1577.0], [59.2, 1577.0], [59.3, 1578.0], [59.4, 1578.0], [59.5, 1581.0], [59.6, 1591.0], [59.7, 1591.0], [59.8, 1596.0], [59.9, 1596.0], [60.0, 1596.0], [60.1, 1598.0], [60.2, 1608.0], [60.3, 1608.0], [60.4, 1611.0], [60.5, 1616.0], [60.6, 1616.0], [60.7, 1617.0], [60.8, 1617.0], [60.9, 1623.0], [61.0, 1634.0], [61.1, 1634.0], [61.2, 1636.0], [61.3, 1638.0], [61.4, 1638.0], [61.5, 1646.0], [61.6, 1650.0], [61.7, 1650.0], [61.8, 1652.0], [61.9, 1654.0], [62.0, 1654.0], [62.1, 1656.0], [62.2, 1656.0], [62.3, 1660.0], [62.4, 1663.0], [62.5, 1663.0], [62.6, 1665.0], [62.7, 1673.0], [62.8, 1673.0], [62.9, 1673.0], [63.0, 1685.0], [63.1, 1685.0], [63.2, 1686.0], [63.3, 1687.0], [63.4, 1687.0], [63.5, 1692.0], [63.6, 1692.0], [63.7, 1698.0], [63.8, 1718.0], [63.9, 1718.0], [64.0, 1729.0], [64.1, 1736.0], [64.2, 1736.0], [64.3, 1746.0], [64.4, 1753.0], [64.5, 1753.0], [64.6, 1755.0], [64.7, 1757.0], [64.8, 1757.0], [64.9, 1757.0], [65.0, 1757.0], [65.1, 1763.0], [65.2, 1764.0], [65.3, 1764.0], [65.4, 1770.0], [65.5, 1776.0], [65.6, 1776.0], [65.7, 1787.0], [65.8, 1821.0], [65.9, 1821.0], [66.0, 1829.0], [66.1, 1831.0], [66.2, 1831.0], [66.3, 1844.0], [66.4, 1844.0], [66.5, 1845.0], [66.6, 1848.0], [66.7, 1848.0], [66.8, 1853.0], [66.9, 1856.0], [67.0, 1856.0], [67.1, 1859.0], [67.2, 1861.0], [67.3, 1861.0], [67.4, 1879.0], [67.5, 1890.0], [67.6, 1890.0], [67.7, 1894.0], [67.8, 1894.0], [67.9, 1895.0], [68.0, 1931.0], [68.1, 1931.0], [68.2, 1954.0], [68.3, 1963.0], [68.4, 1963.0], [68.5, 1976.0], [68.6, 1979.0], [68.7, 1979.0], [68.8, 1984.0], [68.9, 1985.0], [69.0, 1985.0], [69.1, 1995.0], [69.2, 1995.0], [69.3, 2020.0], [69.4, 2032.0], [69.5, 2032.0], [69.6, 2044.0], [69.7, 2061.0], [69.8, 2061.0], [69.9, 2066.0], [70.0, 2066.0], [70.1, 2066.0], [70.2, 2070.0], [70.3, 2072.0], [70.4, 2072.0], [70.5, 2079.0], [70.6, 2079.0], [70.7, 2091.0], [70.8, 2105.0], [70.9, 2105.0], [71.0, 2120.0], [71.1, 2120.0], [71.2, 2120.0], [71.3, 2163.0], [71.4, 2163.0], [71.5, 2163.0], [71.6, 2214.0], [71.7, 2220.0], [71.8, 2220.0], [71.9, 2223.0], [72.0, 2223.0], [72.1, 2226.0], [72.2, 2227.0], [72.3, 2227.0], [72.4, 2264.0], [72.5, 2267.0], [72.6, 2267.0], [72.7, 2270.0], [72.8, 2271.0], [72.9, 2271.0], [73.0, 2297.0], [73.1, 2312.0], [73.2, 2312.0], [73.3, 2323.0], [73.4, 2323.0], [73.5, 2323.0], [73.6, 2331.0], [73.7, 2331.0], [73.8, 2349.0], [73.9, 2359.0], [74.0, 2359.0], [74.1, 2380.0], [74.2, 2390.0], [74.3, 2390.0], [74.4, 2402.0], [74.5, 2406.0], [74.6, 2406.0], [74.7, 2421.0], [74.8, 2421.0], [74.9, 2423.0], [75.0, 2425.0], [75.1, 2425.0], [75.2, 2431.0], [75.3, 2434.0], [75.4, 2434.0], [75.5, 2457.0], [75.6, 2461.0], [75.7, 2461.0], [75.8, 2462.0], [75.9, 2503.0], [76.0, 2503.0], [76.1, 2504.0], [76.2, 2504.0], [76.3, 2514.0], [76.4, 2515.0], [76.5, 2515.0], [76.6, 2525.0], [76.7, 2540.0], [76.8, 2540.0], [76.9, 2541.0], [77.0, 2559.0], [77.1, 2559.0], [77.2, 2569.0], [77.3, 2571.0], [77.4, 2571.0], [77.5, 2572.0], [77.6, 2572.0], [77.7, 2596.0], [77.8, 2605.0], [77.9, 2605.0], [78.0, 2615.0], [78.1, 2616.0], [78.2, 2616.0], [78.3, 2617.0], [78.4, 2626.0], [78.5, 2626.0], [78.6, 2628.0], [78.7, 2628.0], [78.8, 2628.0], [78.9, 2633.0], [79.0, 2633.0], [79.1, 2636.0], [79.2, 2639.0], [79.3, 2639.0], [79.4, 2654.0], [79.5, 2657.0], [79.6, 2657.0], [79.7, 2663.0], [79.8, 2664.0], [79.9, 2664.0], [80.0, 2671.0], [80.1, 2679.0], [80.2, 2679.0], [80.3, 2684.0], [80.4, 2684.0], [80.5, 2686.0], [80.6, 2693.0], [80.7, 2693.0], [80.8, 2702.0], [80.9, 2705.0], [81.0, 2705.0], [81.1, 2714.0], [81.2, 2715.0], [81.3, 2715.0], [81.4, 2727.0], [81.5, 2727.0], [81.6, 2727.0], [81.7, 2729.0], [81.8, 2729.0], [81.9, 2730.0], [82.0, 2739.0], [82.1, 2739.0], [82.2, 2740.0], [82.3, 2751.0], [82.4, 2751.0], [82.5, 2767.0], [82.6, 2776.0], [82.7, 2776.0], [82.8, 2783.0], [82.9, 2785.0], [83.0, 2785.0], [83.1, 2819.0], [83.2, 2819.0], [83.3, 2820.0], [83.4, 2836.0], [83.5, 2836.0], [83.6, 2840.0], [83.7, 2863.0], [83.8, 2863.0], [83.9, 2863.0], [84.0, 2864.0], [84.1, 2864.0], [84.2, 2869.0], [84.3, 2877.0], [84.4, 2877.0], [84.5, 2880.0], [84.6, 2880.0], [84.7, 2881.0], [84.8, 2891.0], [84.9, 2891.0], [85.0, 2891.0], [85.1, 2896.0], [85.2, 2896.0], [85.3, 2911.0], [85.4, 2923.0], [85.5, 2923.0], [85.6, 2945.0], [85.7, 2956.0], [85.8, 2956.0], [85.9, 2959.0], [86.0, 2959.0], [86.1, 2969.0], [86.2, 2970.0], [86.3, 2970.0], [86.4, 2984.0], [86.5, 2994.0], [86.6, 2994.0], [86.7, 3018.0], [86.8, 3021.0], [86.9, 3021.0], [87.0, 3029.0], [87.1, 3041.0], [87.2, 3041.0], [87.3, 3051.0], [87.4, 3051.0], [87.5, 3063.0], [87.6, 3070.0], [87.7, 3070.0], [87.8, 3076.0], [87.9, 3084.0], [88.0, 3084.0], [88.1, 3103.0], [88.2, 3104.0], [88.3, 3104.0], [88.4, 3106.0], [88.5, 3115.0], [88.6, 3115.0], [88.7, 3122.0], [88.8, 3122.0], [88.9, 3145.0], [89.0, 3185.0], [89.1, 3185.0], [89.2, 3192.0], [89.3, 3241.0], [89.4, 3241.0], [89.5, 3284.0], [89.6, 3287.0], [89.7, 3287.0], [89.8, 3318.0], [89.9, 3327.0], [90.0, 3327.0], [90.1, 3393.0], [90.2, 3393.0], [90.3, 3400.0], [90.4, 3402.0], [90.5, 3402.0], [90.6, 3410.0], [90.7, 3411.0], [90.8, 3411.0], [90.9, 3413.0], [91.0, 3454.0], [91.1, 3454.0], [91.2, 3483.0], [91.3, 3506.0], [91.4, 3506.0], [91.5, 3580.0], [91.6, 3580.0], [91.7, 3595.0], [91.8, 3615.0], [91.9, 3615.0], [92.0, 3659.0], [92.1, 3684.0], [92.2, 3684.0], [92.3, 3688.0], [92.4, 3757.0], [92.5, 3757.0], [92.6, 3769.0], [92.7, 3807.0], [92.8, 3807.0], [92.9, 3829.0], [93.0, 3829.0], [93.1, 3844.0], [93.2, 3855.0], [93.3, 3855.0], [93.4, 3893.0], [93.5, 3951.0], [93.6, 3951.0], [93.7, 3974.0], [93.8, 3977.0], [93.9, 3977.0], [94.0, 4010.0], [94.1, 4030.0], [94.2, 4030.0], [94.3, 4064.0], [94.4, 4064.0], [94.5, 4095.0], [94.6, 4103.0], [94.7, 4103.0], [94.8, 4130.0], [94.9, 4198.0], [95.0, 4198.0], [95.1, 4229.0], [95.2, 4245.0], [95.3, 4245.0], [95.4, 4286.0], [95.5, 4312.0], [95.6, 4312.0], [95.7, 4389.0], [95.8, 4389.0], [95.9, 4391.0], [96.0, 4398.0], [96.1, 4398.0], [96.2, 4407.0], [96.3, 4412.0], [96.4, 4412.0], [96.5, 4485.0], [96.6, 4634.0], [96.7, 4634.0], [96.8, 4816.0], [96.9, 5296.0], [97.0, 5296.0], [97.1, 5718.0], [97.2, 5718.0], [97.3, 5939.0], [97.4, 5962.0], [97.5, 5962.0], [97.6, 6585.0], [97.7, 7310.0], [97.8, 7310.0], [97.9, 7363.0], [98.0, 7470.0], [98.1, 7470.0], [98.2, 7513.0], [98.3, 7551.0], [98.4, 7551.0], [98.5, 7715.0], [98.6, 7715.0], [98.7, 7825.0], [98.8, 8450.0], [98.9, 8450.0], [99.0, 8616.0], [99.1, 8636.0], [99.2, 8636.0], [99.3, 8753.0], [99.4, 8836.0], [99.5, 8836.0], [99.6, 8936.0], [99.7, 10153.0], [99.8, 10153.0], [99.9, 10470.0], [100.0, 10470.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[0.0, 1140.0], [0.1, 1140.0], [0.2, 1167.0], [0.3, 1167.0], [0.4, 1203.0], [0.5, 1224.0], [0.6, 1224.0], [0.7, 1302.0], [0.8, 1302.0], [0.9, 1304.0], [1.0, 1324.0], [1.1, 1324.0], [1.2, 1340.0], [1.3, 1371.0], [1.4, 1371.0], [1.5, 1373.0], [1.6, 1373.0], [1.7, 1381.0], [1.8, 1395.0], [1.9, 1395.0], [2.0, 1405.0], [2.1, 1405.0], [2.2, 1491.0], [2.3, 1500.0], [2.4, 1500.0], [2.5, 1518.0], [2.6, 1972.0], [2.7, 1972.0], [2.8, 2344.0], [2.9, 2344.0], [3.0, 5444.0], [3.1, 5541.0], [3.2, 5541.0], [3.3, 5654.0], [3.4, 5654.0], [3.5, 5666.0], [3.6, 5687.0], [3.7, 5687.0], [3.8, 5753.0], [3.9, 5772.0], [4.0, 5772.0], [4.1, 5780.0], [4.2, 5780.0], [4.3, 5790.0], [4.4, 5812.0], [4.5, 5812.0], [4.6, 5817.0], [4.7, 5817.0], [4.8, 5840.0], [4.9, 5841.0], [5.0, 5841.0], [5.1, 5854.0], [5.2, 5895.0], [5.3, 5895.0], [5.4, 5918.0], [5.5, 5918.0], [5.6, 5922.0], [5.7, 5930.0], [5.8, 5930.0], [5.9, 5964.0], [6.0, 5964.0], [6.1, 5980.0], [6.2, 5989.0], [6.3, 5989.0], [6.4, 6005.0], [6.5, 6026.0], [6.6, 6026.0], [6.7, 6070.0], [6.8, 6070.0], [6.9, 6084.0], [7.0, 6163.0], [7.1, 6163.0], [7.2, 6172.0], [7.3, 6172.0], [7.4, 6172.0], [7.5, 6235.0], [7.6, 6235.0], [7.7, 6251.0], [7.8, 6252.0], [7.9, 6252.0], [8.0, 6271.0], [8.1, 6271.0], [8.2, 6317.0], [8.3, 6495.0], [8.4, 6495.0], [8.5, 6525.0], [8.6, 6525.0], [8.7, 6555.0], [8.8, 6634.0], [8.9, 6634.0], [9.0, 6700.0], [9.1, 6720.0], [9.2, 6720.0], [9.3, 6772.0], [9.4, 6772.0], [9.5, 6993.0], [9.6, 7148.0], [9.7, 7148.0], [9.8, 7175.0], [9.9, 7175.0], [10.0, 7202.0], [10.1, 7228.0], [10.2, 7228.0], [10.3, 7281.0], [10.4, 7306.0], [10.5, 7306.0], [10.6, 7344.0], [10.7, 7344.0], [10.8, 7361.0], [10.9, 7412.0], [11.0, 7412.0], [11.1, 7424.0], [11.2, 7424.0], [11.3, 7467.0], [11.4, 7580.0], [11.5, 7580.0], [11.6, 8088.0], [11.7, 8093.0], [11.8, 8093.0], [11.9, 8135.0], [12.0, 8135.0], [12.1, 8180.0], [12.2, 8342.0], [12.3, 8342.0], [12.4, 8508.0], [12.5, 8508.0], [12.6, 8667.0], [12.7, 8720.0], [12.8, 8720.0], [12.9, 8752.0], [13.0, 8802.0], [13.1, 8802.0], [13.2, 8845.0], [13.3, 8845.0], [13.4, 8894.0], [13.5, 9020.0], [13.6, 9020.0], [13.7, 9125.0], [13.8, 9127.0], [13.9, 9127.0], [14.0, 9215.0], [14.1, 9215.0], [14.2, 9232.0], [14.3, 9292.0], [14.4, 9292.0], [14.5, 9320.0], [14.6, 9320.0], [14.7, 9385.0], [14.8, 9484.0], [14.9, 9484.0], [15.0, 9497.0], [15.1, 9501.0], [15.2, 9501.0], [15.3, 9538.0], [15.4, 9538.0], [15.5, 9596.0], [15.6, 10047.0], [15.7, 10047.0], [15.8, 10147.0], [15.9, 10147.0], [16.0, 10153.0], [16.1, 10155.0], [16.2, 10155.0], [16.3, 10202.0], [16.4, 10345.0], [16.5, 10345.0], [16.6, 10710.0], [16.7, 10710.0], [16.8, 10798.0], [16.9, 10893.0], [17.0, 10893.0], [17.1, 11208.0], [17.2, 11208.0], [17.3, 11237.0], [17.4, 11290.0], [17.5, 11290.0], [17.6, 11324.0], [17.7, 11339.0], [17.8, 11339.0], [17.9, 11402.0], [18.0, 11402.0], [18.1, 11487.0], [18.2, 11489.0], [18.3, 11489.0], [18.4, 11533.0], [18.5, 11533.0], [18.6, 11581.0], [18.7, 11756.0], [18.8, 11756.0], [18.9, 11772.0], [19.0, 11778.0], [19.1, 11778.0], [19.2, 11787.0], [19.3, 11787.0], [19.4, 11871.0], [19.5, 11942.0], [19.6, 11942.0], [19.7, 11943.0], [19.8, 11943.0], [19.9, 12068.0], [20.0, 12107.0], [20.1, 12107.0], [20.2, 12161.0], [20.3, 12175.0], [20.4, 12175.0], [20.5, 12178.0], [20.6, 12178.0], [20.7, 12509.0], [20.8, 12585.0], [20.9, 12585.0], [21.0, 12952.0], [21.1, 12952.0], [21.2, 13083.0], [21.3, 13282.0], [21.4, 13282.0], [21.5, 13325.0], [21.6, 13575.0], [21.7, 13575.0], [21.8, 13642.0], [21.9, 13642.0], [22.0, 13660.0], [22.1, 13677.0], [22.2, 13677.0], [22.3, 13845.0], [22.4, 13845.0], [22.5, 13896.0], [22.6, 13905.0], [22.7, 13905.0], [22.8, 13917.0], [22.9, 13954.0], [23.0, 13954.0], [23.1, 13961.0], [23.2, 13961.0], [23.3, 13966.0], [23.4, 13977.0], [23.5, 13977.0], [23.6, 14054.0], [23.7, 14054.0], [23.8, 14087.0], [23.9, 14093.0], [24.0, 14093.0], [24.1, 14120.0], [24.2, 14123.0], [24.3, 14123.0], [24.4, 14144.0], [24.5, 14144.0], [24.6, 14152.0], [24.7, 14316.0], [24.8, 14316.0], [24.9, 14573.0], [25.0, 14573.0], [25.1, 14585.0], [25.2, 14779.0], [25.3, 14779.0], [25.4, 14804.0], [25.5, 14887.0], [25.6, 14887.0], [25.7, 15149.0], [25.8, 15149.0], [25.9, 15192.0], [26.0, 15214.0], [26.1, 15214.0], [26.2, 15464.0], [26.3, 15606.0], [26.4, 15606.0], [26.5, 15652.0], [26.6, 15652.0], [26.7, 15661.0], [26.8, 15681.0], [26.9, 15681.0], [27.0, 15687.0], [27.1, 15687.0], [27.2, 15704.0], [27.3, 15709.0], [27.4, 15709.0], [27.5, 15709.0], [27.6, 15746.0], [27.7, 15746.0], [27.8, 15832.0], [27.9, 15832.0], [28.0, 15832.0], [28.1, 15954.0], [28.2, 15954.0], [28.3, 16026.0], [28.4, 16026.0], [28.5, 16075.0], [28.6, 16153.0], [28.7, 16153.0], [28.8, 16246.0], [28.9, 16305.0], [29.0, 16305.0], [29.1, 16308.0], [29.2, 16308.0], [29.3, 16353.0], [29.4, 16502.0], [29.5, 16502.0], [29.6, 16641.0], [29.7, 16641.0], [29.8, 16739.0], [29.9, 16808.0], [30.0, 16808.0], [30.1, 16814.0], [30.2, 16921.0], [30.3, 16921.0], [30.4, 16940.0], [30.5, 16940.0], [30.6, 16950.0], [30.7, 17189.0], [30.8, 17189.0], [30.9, 17201.0], [31.0, 17201.0], [31.1, 17219.0], [31.2, 17263.0], [31.3, 17263.0], [31.4, 17282.0], [31.5, 17525.0], [31.6, 17525.0], [31.7, 17553.0], [31.8, 17553.0], [31.9, 17625.0], [32.0, 17819.0], [32.1, 17819.0], [32.2, 17958.0], [32.3, 17958.0], [32.4, 18226.0], [32.5, 18232.0], [32.6, 18232.0], [32.7, 18317.0], [32.8, 18561.0], [32.9, 18561.0], [33.0, 18566.0], [33.1, 18566.0], [33.2, 18582.0], [33.3, 18585.0], [33.4, 18585.0], [33.5, 18710.0], [33.6, 18710.0], [33.7, 18948.0], [33.8, 19074.0], [33.9, 19074.0], [34.0, 19124.0], [34.1, 19173.0], [34.2, 19173.0], [34.3, 19203.0], [34.4, 19203.0], [34.5, 19229.0], [34.6, 19339.0], [34.7, 19339.0], [34.8, 19350.0], [34.9, 19350.0], [35.0, 19354.0], [35.1, 19382.0], [35.2, 19382.0], [35.3, 19563.0], [35.4, 19637.0], [35.5, 19637.0], [35.6, 19652.0], [35.7, 19652.0], [35.8, 19712.0], [35.9, 19746.0], [36.0, 19746.0], [36.1, 19920.0], [36.2, 19920.0], [36.3, 20125.0], [36.4, 20130.0], [36.5, 20130.0], [36.6, 20184.0], [36.7, 20214.0], [36.8, 20214.0], [36.9, 20300.0], [37.0, 20300.0], [37.1, 20414.0], [37.2, 20440.0], [37.3, 20440.0], [37.4, 20507.0], [37.5, 20507.0], [37.6, 20788.0], [37.7, 20887.0], [37.8, 20887.0], [37.9, 20997.0], [38.0, 21014.0], [38.1, 21014.0], [38.2, 21091.0], [38.3, 21091.0], [38.4, 21107.0], [38.5, 21168.0], [38.6, 21168.0], [38.7, 21192.0], [38.8, 21204.0], [38.9, 21204.0], [39.0, 21240.0], [39.1, 21240.0], [39.2, 21255.0], [39.3, 21260.0], [39.4, 21260.0], [39.5, 21264.0], [39.6, 21264.0], [39.7, 21402.0], [39.8, 21484.0], [39.9, 21484.0], [40.0, 21484.0], [40.1, 21516.0], [40.2, 21516.0], [40.3, 21525.0], [40.4, 21525.0], [40.5, 21525.0], [40.6, 21669.0], [40.7, 21669.0], [40.8, 21726.0], [40.9, 21726.0], [41.0, 21817.0], [41.1, 21966.0], [41.2, 21966.0], [41.3, 22126.0], [41.4, 22328.0], [41.5, 22328.0], [41.6, 22336.0], [41.7, 22336.0], [41.8, 22341.0], [41.9, 22362.0], [42.0, 22362.0], [42.1, 22390.0], [42.2, 22390.0], [42.3, 22453.0], [42.4, 22467.0], [42.5, 22467.0], [42.6, 22531.0], [42.7, 22748.0], [42.8, 22748.0], [42.9, 22749.0], [43.0, 22749.0], [43.1, 22801.0], [43.2, 22844.0], [43.3, 22844.0], [43.4, 22854.0], [43.5, 22854.0], [43.6, 23069.0], [43.7, 23101.0], [43.8, 23101.0], [43.9, 23105.0], [44.0, 23135.0], [44.1, 23135.0], [44.2, 23214.0], [44.3, 23214.0], [44.4, 23234.0], [44.5, 23253.0], [44.6, 23253.0], [44.7, 23263.0], [44.8, 23263.0], [44.9, 23344.0], [45.0, 23694.0], [45.1, 23694.0], [45.2, 23759.0], [45.3, 23873.0], [45.4, 23873.0], [45.5, 23986.0], [45.6, 23986.0], [45.7, 24065.0], [45.8, 24246.0], [45.9, 24246.0], [46.0, 24268.0], [46.1, 24268.0], [46.2, 24310.0], [46.3, 24335.0], [46.4, 24335.0], [46.5, 24349.0], [46.6, 24418.0], [46.7, 24418.0], [46.8, 24423.0], [46.9, 24423.0], [47.0, 24459.0], [47.1, 24478.0], [47.2, 24478.0], [47.3, 24526.0], [47.4, 24526.0], [47.5, 24575.0], [47.6, 24828.0], [47.7, 24828.0], [47.8, 24873.0], [47.9, 24885.0], [48.0, 24885.0], [48.1, 24957.0], [48.2, 24957.0], [48.3, 25005.0], [48.4, 25016.0], [48.5, 25016.0], [48.6, 25023.0], [48.7, 25023.0], [48.8, 25055.0], [48.9, 25107.0], [49.0, 25107.0], [49.1, 25274.0], [49.2, 25318.0], [49.3, 25318.0], [49.4, 25360.0], [49.5, 25360.0], [49.6, 25392.0], [49.7, 25398.0], [49.8, 25398.0], [49.9, 25538.0], [50.0, 25538.0], [50.1, 25675.0], [50.2, 25710.0], [50.3, 25710.0], [50.4, 25715.0], [50.5, 25724.0], [50.6, 25724.0], [50.7, 25797.0], [50.8, 25797.0], [50.9, 25811.0], [51.0, 25833.0], [51.1, 25833.0], [51.2, 25861.0], [51.3, 25876.0], [51.4, 25876.0], [51.5, 25937.0], [51.6, 25937.0], [51.7, 25966.0], [51.8, 25973.0], [51.9, 25973.0], [52.0, 25985.0], [52.1, 25985.0], [52.2, 26076.0], [52.3, 26133.0], [52.4, 26133.0], [52.5, 26134.0], [52.6, 26149.0], [52.7, 26149.0], [52.8, 26164.0], [52.9, 26164.0], [53.0, 26221.0], [53.1, 26246.0], [53.2, 26246.0], [53.3, 26333.0], [53.4, 26333.0], [53.5, 26338.0], [53.6, 26379.0], [53.7, 26379.0], [53.8, 26419.0], [53.9, 26429.0], [54.0, 26429.0], [54.1, 26442.0], [54.2, 26442.0], [54.3, 26556.0], [54.4, 26558.0], [54.5, 26558.0], [54.6, 26563.0], [54.7, 26563.0], [54.8, 26626.0], [54.9, 26627.0], [55.0, 26627.0], [55.1, 26700.0], [55.2, 26712.0], [55.3, 26712.0], [55.4, 26714.0], [55.5, 26714.0], [55.6, 26731.0], [55.7, 26737.0], [55.8, 26737.0], [55.9, 26819.0], [56.0, 26819.0], [56.1, 26915.0], [56.2, 26992.0], [56.3, 26992.0], [56.4, 26993.0], [56.5, 27042.0], [56.6, 27042.0], [56.7, 27239.0], [56.8, 27239.0], [56.9, 27419.0], [57.0, 27447.0], [57.1, 27447.0], [57.2, 27449.0], [57.3, 27449.0], [57.4, 27641.0], [57.5, 27762.0], [57.6, 27762.0], [57.7, 27895.0], [57.8, 27948.0], [57.9, 27948.0], [58.0, 28032.0], [58.1, 28032.0], [58.2, 28293.0], [58.3, 28376.0], [58.4, 28376.0], [58.5, 28601.0], [58.6, 28601.0], [58.7, 28618.0], [58.8, 28675.0], [58.9, 28675.0], [59.0, 28797.0], [59.1, 28798.0], [59.2, 28798.0], [59.3, 28805.0], [59.4, 28805.0], [59.5, 28838.0], [59.6, 28872.0], [59.7, 28872.0], [59.8, 28884.0], [59.9, 28884.0], [60.0, 28888.0], [60.1, 28908.0], [60.2, 28908.0], [60.3, 28912.0], [60.4, 28914.0], [60.5, 28914.0], [60.6, 28920.0], [60.7, 28920.0], [60.8, 28934.0], [60.9, 28979.0], [61.0, 28979.0], [61.1, 28979.0], [61.2, 28979.0], [61.3, 28990.0], [61.4, 29052.0], [61.5, 29052.0], [61.6, 29161.0], [61.7, 29340.0], [61.8, 29340.0], [61.9, 29364.0], [62.0, 29364.0], [62.1, 29391.0], [62.2, 29447.0], [62.3, 29447.0], [62.4, 29452.0], [62.5, 29452.0], [62.6, 29493.0], [62.7, 29496.0], [62.8, 29496.0], [62.9, 29788.0], [63.0, 29884.0], [63.1, 29884.0], [63.2, 29897.0], [63.3, 29897.0], [63.4, 29902.0], [63.5, 29963.0], [63.6, 29963.0], [63.7, 30044.0], [63.8, 30061.0], [63.9, 30061.0], [64.0, 30178.0], [64.1, 30178.0], [64.2, 30325.0], [64.3, 30329.0], [64.4, 30329.0], [64.5, 30519.0], [64.6, 30519.0], [64.7, 30523.0], [64.8, 30526.0], [64.9, 30526.0], [65.0, 30552.0], [65.1, 30554.0], [65.2, 30554.0], [65.3, 30635.0], [65.4, 30635.0], [65.5, 30865.0], [65.6, 31033.0], [65.7, 31033.0], [65.8, 31066.0], [65.9, 31066.0], [66.0, 31088.0], [66.1, 31106.0], [66.2, 31106.0], [66.3, 31112.0], [66.4, 31147.0], [66.5, 31147.0], [66.6, 31235.0], [66.7, 31235.0], [66.8, 31243.0], [66.9, 31256.0], [67.0, 31256.0], [67.1, 31312.0], [67.2, 31312.0], [67.3, 31345.0], [67.4, 31348.0], [67.5, 31348.0], [67.6, 31572.0], [67.7, 31662.0], [67.8, 31662.0], [67.9, 31705.0], [68.0, 31705.0], [68.1, 31716.0], [68.2, 32243.0], [68.3, 32243.0], [68.4, 32255.0], [68.5, 32255.0], [68.6, 32502.0], [68.7, 32531.0], [68.8, 32531.0], [68.9, 32673.0], [69.0, 32719.0], [69.1, 32719.0], [69.2, 32803.0], [69.3, 32803.0], [69.4, 32830.0], [69.5, 32845.0], [69.6, 32845.0], [69.7, 32892.0], [69.8, 32892.0], [69.9, 33025.0], [70.0, 33133.0], [70.1, 33133.0], [70.2, 33171.0], [70.3, 33330.0], [70.4, 33330.0], [70.5, 33389.0], [70.6, 33389.0], [70.7, 33407.0], [70.8, 33487.0], [70.9, 33487.0], [71.0, 33515.0], [71.1, 33515.0], [71.2, 33570.0], [71.3, 33617.0], [71.4, 33617.0], [71.5, 33675.0], [71.6, 33776.0], [71.7, 33776.0], [71.8, 33785.0], [71.9, 33785.0], [72.0, 33804.0], [72.1, 33878.0], [72.2, 33878.0], [72.3, 33886.0], [72.4, 33886.0], [72.5, 33904.0], [72.6, 33919.0], [72.7, 33919.0], [72.8, 34021.0], [72.9, 34119.0], [73.0, 34119.0], [73.1, 34178.0], [73.2, 34178.0], [73.3, 34179.0], [73.4, 34326.0], [73.5, 34326.0], [73.6, 34371.0], [73.7, 34371.0], [73.8, 34400.0], [73.9, 34490.0], [74.0, 34490.0], [74.1, 34688.0], [74.2, 34932.0], [74.3, 34932.0], [74.4, 34942.0], [74.5, 34942.0], [74.6, 34985.0], [74.7, 35002.0], [74.8, 35002.0], [74.9, 35033.0], [75.0, 35033.0], [75.1, 35089.0], [75.2, 35108.0], [75.3, 35108.0], [75.4, 35130.0], [75.5, 35150.0], [75.6, 35150.0], [75.7, 35188.0], [75.8, 35188.0], [75.9, 35304.0], [76.0, 35552.0], [76.1, 35552.0], [76.2, 35615.0], [76.3, 35811.0], [76.4, 35811.0], [76.5, 35845.0], [76.6, 35845.0], [76.7, 35885.0], [76.8, 35897.0], [76.9, 35897.0], [77.0, 36049.0], [77.1, 36049.0], [77.2, 36132.0], [77.3, 36138.0], [77.4, 36138.0], [77.5, 36139.0], [77.6, 36246.0], [77.7, 36246.0], [77.8, 36359.0], [77.9, 36359.0], [78.0, 36377.0], [78.1, 36605.0], [78.2, 36605.0], [78.3, 36629.0], [78.4, 36629.0], [78.5, 36692.0], [78.6, 36700.0], [78.7, 36700.0], [78.8, 36755.0], [78.9, 36793.0], [79.0, 36793.0], [79.1, 36852.0], [79.2, 36852.0], [79.3, 37101.0], [79.4, 37151.0], [79.5, 37151.0], [79.6, 37172.0], [79.7, 37172.0], [79.8, 37201.0], [79.9, 37212.0], [80.0, 37212.0], [80.1, 37244.0], [80.2, 37255.0], [80.3, 37255.0], [80.4, 37319.0], [80.5, 37319.0], [80.6, 37321.0], [80.7, 37794.0], [80.8, 37794.0], [80.9, 37857.0], [81.0, 37857.0], [81.1, 37863.0], [81.2, 37865.0], [81.3, 37865.0], [81.4, 37946.0], [81.5, 38066.0], [81.6, 38066.0], [81.7, 38078.0], [81.8, 38078.0], [81.9, 38111.0], [82.0, 38148.0], [82.1, 38148.0], [82.2, 38168.0], [82.3, 38168.0], [82.4, 38202.0], [82.5, 38207.0], [82.6, 38207.0], [82.7, 38217.0], [82.8, 38253.0], [82.9, 38253.0], [83.0, 38410.0], [83.1, 38410.0], [83.2, 38410.0], [83.3, 38434.0], [83.4, 38434.0], [83.5, 38442.0], [83.6, 38442.0], [83.7, 38486.0], [83.8, 38526.0], [83.9, 38526.0], [84.0, 38592.0], [84.1, 38831.0], [84.2, 38831.0], [84.3, 38855.0], [84.4, 38855.0], [84.5, 38876.0], [84.6, 38876.0], [84.7, 38876.0], [84.8, 38885.0], [84.9, 38885.0], [85.0, 38981.0], [85.1, 39031.0], [85.2, 39031.0], [85.3, 39104.0], [85.4, 39213.0], [85.5, 39213.0], [85.6, 39254.0], [85.7, 39254.0], [85.8, 39291.0], [85.9, 39326.0], [86.0, 39326.0], [86.1, 39425.0], [86.2, 39425.0], [86.3, 39429.0], [86.4, 39431.0], [86.5, 39431.0], [86.6, 39616.0], [86.7, 39839.0], [86.8, 39839.0], [86.9, 39843.0], [87.0, 39843.0], [87.1, 39961.0], [87.2, 39990.0], [87.3, 39990.0], [87.4, 40032.0], [87.5, 40032.0], [87.6, 40045.0], [87.7, 40109.0], [87.8, 40109.0], [87.9, 40193.0], [88.0, 40213.0], [88.1, 40213.0], [88.2, 40221.0], [88.3, 40221.0], [88.4, 40222.0], [88.5, 40364.0], [88.6, 40364.0], [88.7, 40410.0], [88.8, 40530.0], [88.9, 40530.0], [89.0, 40564.0], [89.1, 40564.0], [89.2, 40610.0], [89.3, 40634.0], [89.4, 40634.0], [89.5, 40641.0], [89.6, 40641.0], [89.7, 40667.0], [89.8, 40880.0], [89.9, 40880.0], [90.0, 40979.0], [90.1, 41014.0], [90.2, 41014.0], [90.3, 41030.0], [90.4, 41030.0], [90.5, 41139.0], [90.6, 41199.0], [90.7, 41199.0], [90.8, 41277.0], [90.9, 41277.0], [91.0, 41472.0], [91.1, 41474.0], [91.2, 41474.0], [91.3, 41544.0], [91.4, 41633.0], [91.5, 41633.0], [91.6, 41701.0], [91.7, 41701.0], [91.8, 41706.0], [91.9, 41746.0], [92.0, 41746.0], [92.1, 41779.0], [92.2, 41779.0], [92.3, 41811.0], [92.4, 41815.0], [92.5, 41815.0], [92.6, 41820.0], [92.7, 41882.0], [92.8, 41882.0], [92.9, 41907.0], [93.0, 41907.0], [93.1, 41913.0], [93.2, 42020.0], [93.3, 42020.0], [93.4, 42109.0], [93.5, 42109.0], [93.6, 42121.0], [93.7, 42126.0], [93.8, 42126.0], [93.9, 42158.0], [94.0, 42281.0], [94.1, 42281.0], [94.2, 42375.0], [94.3, 42375.0], [94.4, 42407.0], [94.5, 42451.0], [94.6, 42451.0], [94.7, 42455.0], [94.8, 42455.0], [94.9, 42623.0], [95.0, 42711.0], [95.1, 42711.0], [95.2, 42724.0], [95.3, 42810.0], [95.4, 42810.0], [95.5, 42810.0], [95.6, 42810.0], [95.7, 42943.0], [95.8, 43079.0], [95.9, 43079.0], [96.0, 43262.0], [96.1, 43262.0], [96.2, 43316.0], [96.3, 43487.0], [96.4, 43487.0], [96.5, 43580.0], [96.6, 43810.0], [96.7, 43810.0], [96.8, 43954.0], [96.9, 43954.0], [97.0, 43968.0], [97.1, 44051.0], [97.2, 44051.0], [97.3, 44156.0], [97.4, 44156.0], [97.5, 44322.0], [97.6, 44422.0], [97.7, 44422.0], [97.8, 44429.0], [97.9, 44437.0], [98.0, 44437.0], [98.1, 44481.0], [98.2, 44481.0], [98.3, 44876.0], [98.4, 45049.0], [98.5, 45049.0], [98.6, 45472.0], [98.7, 45472.0], [98.8, 45656.0], [98.9, 45810.0], [99.0, 45810.0], [99.1, 45855.0], [99.2, 45899.0], [99.3, 45899.0], [99.4, 45899.0], [99.5, 45899.0], [99.6, 46496.0], [99.7, 47696.0], [99.8, 47696.0], [99.9, 49129.0], [100.0, 49129.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 87.0], [7.5, 88.0], [7.6, 88.0], [7.7, 89.0], [7.8, 89.0], [7.9, 89.0], [8.0, 90.0], [8.1, 90.0], [8.2, 91.0], [8.3, 94.0], [8.4, 94.0], [8.5, 96.0], [8.6, 96.0], [8.7, 96.0], [8.8, 98.0], [8.9, 101.0], [9.0, 101.0], [9.1, 102.0], [9.2, 102.0], [9.3, 102.0], [9.4, 103.0], [9.5, 103.0], [9.6, 103.0], [9.7, 104.0], [9.8, 104.0], [9.9, 105.0], [10.0, 106.0], [10.1, 106.0], [10.2, 107.0], [10.3, 107.0], [10.4, 107.0], [10.5, 107.0], [10.6, 107.0], [10.7, 107.0], [10.8, 108.0], [10.9, 108.0], [11.0, 108.0], [11.1, 108.0], [11.2, 108.0], [11.3, 108.0], [11.4, 109.0], [11.5, 109.0], [11.6, 109.0], [11.7, 109.0], [11.8, 109.0], [11.9, 109.0], [12.0, 109.0], [12.1, 110.0], [12.2, 112.0], [12.3, 112.0], [12.4, 112.0], [12.5, 112.0], [12.6, 112.0], [12.7, 113.0], [12.8, 113.0], [12.9, 113.0], [13.0, 113.0], [13.1, 113.0], [13.2, 113.0], [13.3, 113.0], [13.4, 113.0], [13.5, 114.0], [13.6, 114.0], [13.7, 114.0], [13.8, 115.0], [13.9, 115.0], [14.0, 115.0], [14.1, 115.0], [14.2, 115.0], [14.3, 115.0], [14.4, 115.0], [14.5, 115.0], [14.6, 116.0], [14.7, 116.0], [14.8, 116.0], [14.9, 116.0], [15.0, 117.0], [15.1, 117.0], [15.2, 117.0], [15.3, 117.0], [15.4, 117.0], [15.5, 117.0], [15.6, 117.0], [15.7, 118.0], [15.8, 118.0], [15.9, 118.0], [16.0, 118.0], [16.1, 118.0], [16.2, 118.0], [16.3, 118.0], [16.4, 118.0], [16.5, 118.0], [16.6, 118.0], [16.7, 119.0], [16.8, 119.0], [16.9, 119.0], [17.0, 119.0], [17.1, 119.0], [17.2, 119.0], [17.3, 119.0], [17.4, 120.0], [17.5, 120.0], [17.6, 120.0], [17.7, 120.0], [17.8, 120.0], [17.9, 120.0], [18.0, 120.0], [18.1, 120.0], [18.2, 120.0], [18.3, 120.0], [18.4, 120.0], [18.5, 121.0], [18.6, 121.0], [18.7, 121.0], [18.8, 121.0], [18.9, 122.0], [19.0, 122.0], [19.1, 122.0], [19.2, 122.0], [19.3, 122.0], [19.4, 122.0], [19.5, 122.0], [19.6, 122.0], [19.7, 122.0], [19.8, 122.0], [19.9, 122.0], [20.0, 122.0], [20.1, 122.0], [20.2, 123.0], [20.3, 123.0], [20.4, 123.0], [20.5, 123.0], [20.6, 123.0], [20.7, 123.0], [20.8, 123.0], [20.9, 123.0], [21.0, 123.0], [21.1, 123.0], [21.2, 123.0], [21.3, 123.0], [21.4, 124.0], [21.5, 124.0], [21.6, 124.0], [21.7, 124.0], [21.8, 124.0], [21.9, 124.0], [22.0, 124.0], [22.1, 124.0], [22.2, 124.0], [22.3, 124.0], [22.4, 124.0], [22.5, 124.0], [22.6, 124.0], [22.7, 125.0], [22.8, 125.0], [22.9, 125.0], [23.0, 125.0], [23.1, 125.0], [23.2, 125.0], [23.3, 125.0], [23.4, 125.0], [23.5, 125.0], [23.6, 125.0], [23.7, 125.0], [23.8, 125.0], [23.9, 125.0], [24.0, 125.0], [24.1, 125.0], [24.2, 125.0], [24.3, 125.0], [24.4, 125.0], [24.5, 126.0], [24.6, 126.0], [24.7, 126.0], [24.8, 126.0], [24.9, 126.0], [25.0, 126.0], [25.1, 126.0], [25.2, 127.0], [25.3, 127.0], [25.4, 127.0], [25.5, 127.0], [25.6, 127.0], [25.7, 127.0], [25.8, 127.0], [25.9, 127.0], [26.0, 127.0], [26.1, 127.0], [26.2, 127.0], [26.3, 127.0], [26.4, 128.0], [26.5, 128.0], [26.6, 128.0], [26.7, 128.0], [26.8, 128.0], [26.9, 128.0], [27.0, 129.0], [27.1, 129.0], [27.2, 129.0], [27.3, 129.0], [27.4, 129.0], [27.5, 129.0], [27.6, 129.0], [27.7, 129.0], [27.8, 129.0], [27.9, 129.0], [28.0, 129.0], [28.1, 129.0], [28.2, 129.0], [28.3, 130.0], [28.4, 130.0], [28.5, 130.0], [28.6, 130.0], [28.7, 130.0], [28.8, 130.0], [28.9, 130.0], [29.0, 130.0], [29.1, 130.0], [29.2, 130.0], [29.3, 130.0], [29.4, 131.0], [29.5, 131.0], [29.6, 131.0], [29.7, 131.0], [29.8, 131.0], [29.9, 131.0], [30.0, 131.0], [30.1, 131.0], [30.2, 132.0], [30.3, 132.0], [30.4, 132.0], [30.5, 133.0], [30.6, 133.0], [30.7, 133.0], [30.8, 133.0], [30.9, 133.0], [31.0, 133.0], [31.1, 133.0], [31.2, 133.0], [31.3, 133.0], [31.4, 133.0], [31.5, 133.0], [31.6, 133.0], [31.7, 134.0], [31.8, 134.0], [31.9, 134.0], [32.0, 134.0], [32.1, 134.0], [32.2, 134.0], [32.3, 134.0], [32.4, 134.0], [32.5, 134.0], [32.6, 134.0], [32.7, 135.0], [32.8, 135.0], [32.9, 135.0], [33.0, 135.0], [33.1, 135.0], [33.2, 135.0], [33.3, 135.0], [33.4, 136.0], [33.5, 136.0], [33.6, 136.0], [33.7, 136.0], [33.8, 136.0], [33.9, 136.0], [34.0, 136.0], [34.1, 136.0], [34.2, 137.0], [34.3, 137.0], [34.4, 137.0], [34.5, 138.0], [34.6, 138.0], [34.7, 138.0], [34.8, 138.0], [34.9, 138.0], [35.0, 139.0], [35.1, 139.0], [35.2, 139.0], [35.3, 139.0], [35.4, 139.0], [35.5, 139.0], [35.6, 140.0], [35.7, 140.0], [35.8, 140.0], [35.9, 140.0], [36.0, 140.0], [36.1, 141.0], [36.2, 141.0], [36.3, 141.0], [36.4, 141.0], [36.5, 141.0], [36.6, 141.0], [36.7, 141.0], [36.8, 141.0], [36.9, 141.0], [37.0, 142.0], [37.1, 142.0], [37.2, 142.0], [37.3, 143.0], [37.4, 143.0], [37.5, 143.0], [37.6, 144.0], [37.7, 144.0], [37.8, 144.0], [37.9, 144.0], [38.0, 144.0], [38.1, 144.0], [38.2, 144.0], [38.3, 145.0], [38.4, 145.0], [38.5, 145.0], [38.6, 145.0], [38.7, 145.0], [38.8, 145.0], [38.9, 145.0], [39.0, 145.0], [39.1, 146.0], [39.2, 146.0], [39.3, 146.0], [39.4, 146.0], [39.5, 146.0], [39.6, 146.0], [39.7, 146.0], [39.8, 146.0], [39.9, 146.0], [40.0, 147.0], [40.1, 147.0], [40.2, 147.0], [40.3, 147.0], [40.4, 147.0], [40.5, 149.0], [40.6, 149.0], [40.7, 149.0], [40.8, 149.0], [40.9, 150.0], [41.0, 150.0], [41.1, 150.0], [41.2, 152.0], [41.3, 152.0], [41.4, 152.0], [41.5, 152.0], [41.6, 152.0], [41.7, 152.0], [41.8, 152.0], [41.9, 152.0], [42.0, 153.0], [42.1, 153.0], [42.2, 153.0], [42.3, 153.0], [42.4, 153.0], [42.5, 153.0], [42.6, 154.0], [42.7, 154.0], [42.8, 154.0], [42.9, 154.0], [43.0, 155.0], [43.1, 155.0], [43.2, 155.0], [43.3, 155.0], [43.4, 156.0], [43.5, 156.0], [43.6, 156.0], [43.7, 158.0], [43.8, 158.0], [43.9, 158.0], [44.0, 158.0], [44.1, 158.0], [44.2, 158.0], [44.3, 158.0], [44.4, 159.0], [44.5, 159.0], [44.6, 159.0], [44.7, 159.0], [44.8, 159.0], [44.9, 159.0], [45.0, 160.0], [45.1, 160.0], [45.2, 160.0], [45.3, 161.0], [45.4, 161.0], [45.5, 161.0], [45.6, 162.0], [45.7, 162.0], [45.8, 162.0], [45.9, 162.0], [46.0, 162.0], [46.1, 163.0], [46.2, 163.0], [46.3, 163.0], [46.4, 163.0], [46.5, 165.0], [46.6, 165.0], [46.7, 166.0], [46.8, 166.0], [46.9, 166.0], [47.0, 167.0], [47.1, 167.0], [47.2, 168.0], [47.3, 168.0], [47.4, 168.0], [47.5, 168.0], [47.6, 169.0], [47.7, 169.0], [47.8, 170.0], [47.9, 171.0], [48.0, 171.0], [48.1, 171.0], [48.2, 171.0], [48.3, 171.0], [48.4, 172.0], [48.5, 172.0], [48.6, 175.0], [48.7, 176.0], [48.8, 176.0], [48.9, 176.0], [49.0, 178.0], [49.1, 178.0], [49.2, 179.0], [49.3, 179.0], [49.4, 179.0], [49.5, 180.0], [49.6, 180.0], [49.7, 180.0], [49.8, 181.0], [49.9, 181.0], [50.0, 181.0], [50.1, 181.0], [50.2, 181.0], [50.3, 182.0], [50.4, 182.0], [50.5, 182.0], [50.6, 182.0], [50.7, 182.0], [50.8, 183.0], [50.9, 183.0], [51.0, 183.0], [51.1, 183.0], [51.2, 183.0], [51.3, 183.0], [51.4, 184.0], [51.5, 184.0], [51.6, 184.0], [51.7, 186.0], [51.8, 186.0], [51.9, 186.0], [52.0, 187.0], [52.1, 187.0], [52.2, 187.0], [52.3, 188.0], [52.4, 188.0], [52.5, 188.0], [52.6, 188.0], [52.7, 188.0], [52.8, 188.0], [52.9, 188.0], [53.0, 188.0], [53.1, 190.0], [53.2, 190.0], [53.3, 190.0], [53.4, 191.0], [53.5, 191.0], [53.6, 191.0], [53.7, 192.0], [53.8, 192.0], [53.9, 192.0], [54.0, 192.0], [54.1, 192.0], [54.2, 193.0], [54.3, 194.0], [54.4, 194.0], [54.5, 194.0], [54.6, 194.0], [54.7, 194.0], [54.8, 195.0], [54.9, 195.0], [55.0, 196.0], [55.1, 196.0], [55.2, 196.0], [55.3, 197.0], [55.4, 199.0], [55.5, 199.0], [55.6, 200.0], [55.7, 200.0], [55.8, 200.0], [55.9, 200.0], [56.0, 200.0], [56.1, 200.0], [56.2, 201.0], [56.3, 201.0], [56.4, 202.0], [56.5, 204.0], [56.6, 204.0], [56.7, 206.0], [56.8, 207.0], [56.9, 207.0], [57.0, 207.0], [57.1, 208.0], [57.2, 208.0], [57.3, 208.0], [57.4, 208.0], [57.5, 208.0], [57.6, 209.0], [57.7, 209.0], [57.8, 210.0], [57.9, 210.0], [58.0, 210.0], [58.1, 211.0], [58.2, 212.0], [58.3, 212.0], [58.4, 213.0], [58.5, 213.0], [58.6, 213.0], [58.7, 214.0], [58.8, 214.0], [58.9, 214.0], [59.0, 214.0], [59.1, 214.0], [59.2, 215.0], [59.3, 215.0], [59.4, 215.0], [59.5, 215.0], [59.6, 216.0], [59.7, 216.0], [59.8, 216.0], [59.9, 216.0], [60.0, 218.0], [60.1, 218.0], [60.2, 218.0], [60.3, 218.0], [60.4, 219.0], [60.5, 219.0], [60.6, 219.0], [60.7, 219.0], [60.8, 219.0], [60.9, 219.0], [61.0, 220.0], [61.1, 220.0], [61.2, 220.0], [61.3, 220.0], [61.4, 220.0], [61.5, 221.0], [61.6, 221.0], [61.7, 221.0], [61.8, 222.0], [61.9, 222.0], [62.0, 222.0], [62.1, 223.0], [62.2, 223.0], [62.3, 225.0], [62.4, 225.0], [62.5, 226.0], [62.6, 227.0], [62.7, 227.0], [62.8, 228.0], [62.9, 228.0], [63.0, 228.0], [63.1, 229.0], [63.2, 229.0], [63.3, 229.0], [63.4, 230.0], [63.5, 234.0], [63.6, 234.0], [63.7, 237.0], [63.8, 237.0], [63.9, 237.0], [64.0, 238.0], [64.1, 238.0], [64.2, 238.0], [64.3, 239.0], [64.4, 239.0], [64.5, 239.0], [64.6, 240.0], [64.7, 240.0], [64.8, 240.0], [64.9, 240.0], [65.0, 240.0], [65.1, 243.0], [65.2, 243.0], [65.3, 243.0], [65.4, 244.0], [65.5, 244.0], [65.6, 244.0], [65.7, 245.0], [65.8, 245.0], [65.9, 245.0], [66.0, 245.0], [66.1, 245.0], [66.2, 247.0], [66.3, 247.0], [66.4, 248.0], [66.5, 250.0], [66.6, 250.0], [66.7, 250.0], [66.8, 250.0], [66.9, 250.0], [67.0, 250.0], [67.1, 251.0], [67.2, 251.0], [67.3, 253.0], [67.4, 253.0], [67.5, 253.0], [67.6, 254.0], [67.7, 254.0], [67.8, 255.0], [67.9, 256.0], [68.0, 256.0], [68.1, 258.0], [68.2, 258.0], [68.3, 258.0], [68.4, 259.0], [68.5, 260.0], [68.6, 260.0], [68.7, 261.0], [68.8, 262.0], [68.9, 262.0], [69.0, 263.0], [69.1, 263.0], [69.2, 264.0], [69.3, 267.0], [69.4, 267.0], [69.5, 267.0], [69.6, 268.0], [69.7, 268.0], [69.8, 270.0], [69.9, 271.0], [70.0, 271.0], [70.1, 273.0], [70.2, 273.0], [70.3, 276.0], [70.4, 277.0], [70.5, 277.0], [70.6, 280.0], [70.7, 280.0], [70.8, 280.0], [70.9, 281.0], [71.0, 281.0], [71.1, 281.0], [71.2, 282.0], [71.3, 288.0], [71.4, 288.0], [71.5, 290.0], [71.6, 290.0], [71.7, 291.0], [71.8, 291.0], [71.9, 291.0], [72.0, 292.0], [72.1, 293.0], [72.2, 293.0], [72.3, 293.0], [72.4, 293.0], [72.5, 293.0], [72.6, 295.0], [72.7, 296.0], [72.8, 296.0], [72.9, 296.0], [73.0, 296.0], [73.1, 297.0], [73.2, 297.0], [73.3, 297.0], [73.4, 297.0], [73.5, 297.0], [73.6, 297.0], [73.7, 298.0], [73.8, 298.0], [73.9, 298.0], [74.0, 298.0], [74.1, 298.0], [74.2, 299.0], [74.3, 299.0], [74.4, 299.0], [74.5, 301.0], [74.6, 301.0], [74.7, 301.0], [74.8, 302.0], [74.9, 303.0], [75.0, 303.0], [75.1, 303.0], [75.2, 303.0], [75.3, 303.0], [75.4, 303.0], [75.5, 303.0], [75.6, 304.0], [75.7, 304.0], [75.8, 304.0], [75.9, 304.0], [76.0, 304.0], [76.1, 304.0], [76.2, 305.0], [76.3, 307.0], [76.4, 307.0], [76.5, 309.0], [76.6, 310.0], [76.7, 310.0], [76.8, 310.0], [76.9, 310.0], [77.0, 311.0], [77.1, 312.0], [77.2, 312.0], [77.3, 312.0], [77.4, 313.0], [77.5, 313.0], [77.6, 314.0], [77.7, 315.0], [77.8, 315.0], [77.9, 318.0], [78.0, 318.0], [78.1, 318.0], [78.2, 319.0], [78.3, 319.0], [78.4, 319.0], [78.5, 320.0], [78.6, 320.0], [78.7, 321.0], [78.8, 321.0], [78.9, 321.0], [79.0, 322.0], [79.1, 324.0], [79.2, 324.0], [79.3, 324.0], [79.4, 324.0], [79.5, 325.0], [79.6, 325.0], [79.7, 325.0], [79.8, 326.0], [79.9, 327.0], [80.0, 327.0], [80.1, 328.0], [80.2, 331.0], [80.3, 331.0], [80.4, 331.0], [80.5, 333.0], [80.6, 333.0], [80.7, 336.0], [80.8, 336.0], [80.9, 336.0], [81.0, 340.0], [81.1, 340.0], [81.2, 343.0], [81.3, 346.0], [81.4, 346.0], [81.5, 347.0], [81.6, 350.0], [81.7, 350.0], [81.8, 354.0], [81.9, 354.0], [82.0, 356.0], [82.1, 358.0], [82.2, 358.0], [82.3, 360.0], [82.4, 361.0], [82.5, 361.0], [82.6, 361.0], [82.7, 363.0], [82.8, 363.0], [82.9, 364.0], [83.0, 365.0], [83.1, 365.0], [83.2, 370.0], [83.3, 370.0], [83.4, 374.0], [83.5, 379.0], [83.6, 379.0], [83.7, 380.0], [83.8, 380.0], [83.9, 380.0], [84.0, 387.0], [84.1, 388.0], [84.2, 388.0], [84.3, 389.0], [84.4, 396.0], [84.5, 396.0], [84.6, 401.0], [84.7, 401.0], [84.8, 405.0], [84.9, 407.0], [85.0, 407.0], [85.1, 413.0], [85.2, 424.0], [85.3, 424.0], [85.4, 432.0], [85.5, 433.0], [85.6, 433.0], [85.7, 447.0], [85.8, 447.0], [85.9, 452.0], [86.0, 490.0], [86.1, 490.0], [86.2, 491.0], [86.3, 521.0], [86.4, 521.0], [86.5, 537.0], [86.6, 551.0], [86.7, 551.0], [86.8, 552.0], [86.9, 581.0], [87.0, 581.0], [87.1, 586.0], [87.2, 586.0], [87.3, 616.0], [87.4, 623.0], [87.5, 623.0], [87.6, 666.0], [87.7, 689.0], [87.8, 689.0], [87.9, 709.0], [88.0, 719.0], [88.1, 719.0], [88.2, 754.0], [88.3, 764.0], [88.4, 764.0], [88.5, 799.0], [88.6, 799.0], [88.7, 818.0], [88.8, 821.0], [88.9, 821.0], [89.0, 824.0], [89.1, 825.0], [89.2, 825.0], [89.3, 860.0], [89.4, 863.0], [89.5, 863.0], [89.6, 883.0], [89.7, 883.0], [89.8, 911.0], [89.9, 913.0], [90.0, 913.0], [90.1, 916.0], [90.2, 931.0], [90.3, 931.0], [90.4, 956.0], [90.5, 974.0], [90.6, 974.0], [90.7, 983.0], [90.8, 985.0], [90.9, 985.0], [91.0, 1009.0], [91.1, 1009.0], [91.2, 1038.0], [91.3, 1101.0], [91.4, 1101.0], [91.5, 1106.0], [91.6, 1138.0], [91.7, 1138.0], [91.8, 1179.0], [91.9, 1184.0], [92.0, 1184.0], [92.1, 1200.0], [92.2, 1238.0], [92.3, 1238.0], [92.4, 1241.0], [92.5, 1241.0], [92.6, 1276.0], [92.7, 1279.0], [92.8, 1279.0], [92.9, 1280.0], [93.0, 1295.0], [93.1, 1295.0], [93.2, 1302.0], [93.3, 1373.0], [93.4, 1373.0], [93.5, 1417.0], [93.6, 1417.0], [93.7, 1437.0], [93.8, 1446.0], [93.9, 1446.0], [94.0, 1498.0], [94.1, 1542.0], [94.2, 1542.0], [94.3, 1633.0], [94.4, 1819.0], [94.5, 1819.0], [94.6, 1863.0], [94.7, 1878.0], [94.8, 1878.0], [94.9, 2150.0], [95.0, 2150.0], [95.1, 2195.0], [95.2, 2249.0], [95.3, 2249.0], [95.4, 2314.0], [95.5, 2410.0], [95.6, 2410.0], [95.7, 2593.0], [95.8, 3001.0], [95.9, 3001.0], [96.0, 3379.0], [96.1, 3739.0], [96.2, 3739.0], [96.3, 3889.0], [96.4, 3889.0], [96.5, 4262.0], [96.6, 4268.0], [96.7, 4268.0], [96.8, 4287.0], [96.9, 4321.0], [97.0, 4321.0], [97.1, 4321.0], [97.2, 4402.0], [97.3, 4402.0], [97.4, 4473.0], [97.5, 4473.0], [97.6, 4566.0], [97.7, 4681.0], [97.8, 4681.0], [97.9, 5077.0], [98.0, 5537.0], [98.1, 5537.0], [98.2, 5722.0], [98.3, 5792.0], [98.4, 5792.0], [98.5, 6220.0], [98.6, 6830.0], [98.7, 6830.0], [98.8, 7827.0], [98.9, 7827.0], [99.0, 8955.0], [99.1, 9413.0], [99.2, 9413.0], [99.3, 10158.0], [99.4, 10254.0], [99.5, 10254.0], [99.6, 10539.0], [99.7, 12131.0], [99.8, 12131.0], [99.9, 12344.0], [100.0, 12344.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 299.0, "series": [{"data": [[1000.0, 1.0], [1100.0, 10.0], [1200.0, 20.0], [1300.0, 13.0], [1400.0, 10.0], [1500.0, 14.0], [1600.0, 4.0], [1700.0, 8.0], [1800.0, 7.0], [1900.0, 5.0], [2000.0, 10.0], [2100.0, 13.0], [2200.0, 6.0], [2300.0, 7.0], [2400.0, 8.0], [2500.0, 1.0], [2600.0, 3.0], [2700.0, 1.0], [2800.0, 3.0], [2900.0, 6.0], [3000.0, 9.0], [3100.0, 7.0], [3300.0, 2.0], [3400.0, 8.0], [3500.0, 8.0], [3600.0, 5.0], [3700.0, 13.0], [3800.0, 13.0], [3900.0, 9.0], [4100.0, 6.0], [4300.0, 7.0], [4200.0, 3.0], [4500.0, 5.0], [4600.0, 7.0], [4400.0, 1.0], [4800.0, 9.0], [4700.0, 5.0], [4900.0, 7.0], [5000.0, 5.0], [5100.0, 5.0], [5200.0, 3.0], [5300.0, 4.0], [5600.0, 3.0], [5400.0, 6.0], [5500.0, 1.0], [5700.0, 2.0], [5800.0, 2.0], [6000.0, 7.0], [6100.0, 9.0], [5900.0, 5.0], [6300.0, 6.0], [6200.0, 5.0], [6500.0, 8.0], [6400.0, 6.0], [6600.0, 3.0], [6800.0, 4.0], [6700.0, 4.0], [6900.0, 5.0], [7100.0, 4.0], [7000.0, 4.0], [7300.0, 5.0], [7400.0, 5.0], [7200.0, 1.0], [7600.0, 1.0], [7500.0, 3.0], [7900.0, 3.0], [7800.0, 2.0], [7700.0, 2.0], [8100.0, 4.0], [8000.0, 3.0], [8400.0, 3.0], [8300.0, 7.0], [8500.0, 4.0], [8200.0, 5.0], [8600.0, 5.0], [8700.0, 1.0], [9000.0, 5.0], [8900.0, 5.0], [9200.0, 5.0], [8800.0, 4.0], [9100.0, 1.0], [9500.0, 4.0], [9300.0, 5.0], [9400.0, 2.0], [9600.0, 2.0], [9700.0, 3.0], [9800.0, 7.0], [10000.0, 5.0], [10100.0, 9.0], [9900.0, 4.0], [10200.0, 4.0], [10500.0, 5.0], [10300.0, 7.0], [10600.0, 11.0], [10700.0, 2.0], [10400.0, 1.0], [10800.0, 4.0], [10900.0, 8.0], [11100.0, 7.0], [11200.0, 5.0], [11000.0, 6.0], [11300.0, 2.0], [11700.0, 5.0], [11600.0, 2.0], [11400.0, 3.0], [11500.0, 2.0], [12100.0, 2.0], [12000.0, 1.0], [11900.0, 4.0], [12200.0, 2.0], [11800.0, 4.0], [12700.0, 5.0], [12500.0, 3.0], [12600.0, 5.0], [12300.0, 4.0], [12400.0, 3.0], [12900.0, 2.0], [12800.0, 4.0], [13100.0, 3.0], [13000.0, 2.0], [13300.0, 1.0], [13200.0, 3.0], [13600.0, 2.0], [13400.0, 2.0], [13700.0, 1.0], [13900.0, 1.0], [14100.0, 2.0], [14000.0, 1.0], [14900.0, 3.0], [16300.0, 1.0], [16200.0, 1.0], [17300.0, 1.0], [16400.0, 1.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[600.0, 29.0], [700.0, 33.0], [800.0, 23.0], [900.0, 20.0], [1000.0, 15.0], [1100.0, 20.0], [1200.0, 27.0], [1300.0, 17.0], [1400.0, 24.0], [1500.0, 27.0], [1600.0, 23.0], [1700.0, 13.0], [1800.0, 14.0], [1900.0, 8.0], [2000.0, 10.0], [2100.0, 5.0], [2200.0, 10.0], [2300.0, 8.0], [2400.0, 10.0], [2500.0, 12.0], [2600.0, 19.0], [2700.0, 15.0], [2800.0, 14.0], [2900.0, 9.0], [3000.0, 9.0], [3100.0, 8.0], [3200.0, 3.0], [3300.0, 3.0], [3400.0, 7.0], [3500.0, 3.0], [3600.0, 4.0], [3700.0, 2.0], [3800.0, 5.0], [3900.0, 3.0], [4000.0, 4.0], [4200.0, 3.0], [4300.0, 4.0], [4100.0, 3.0], [4400.0, 3.0], [4600.0, 1.0], [4800.0, 1.0], [5200.0, 1.0], [5700.0, 1.0], [5900.0, 2.0], [6500.0, 1.0], [7400.0, 1.0], [7300.0, 2.0], [7500.0, 2.0], [7800.0, 1.0], [7700.0, 1.0], [8600.0, 2.0], [8700.0, 1.0], [8400.0, 1.0], [8900.0, 1.0], [8800.0, 1.0], [10100.0, 1.0], [10400.0, 1.0], [100.0, 23.0], [200.0, 31.0], [300.0, 34.0], [400.0, 34.0], [500.0, 30.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[33700.0, 2.0], [34100.0, 3.0], [33300.0, 2.0], [34900.0, 3.0], [35300.0, 1.0], [36100.0, 3.0], [38100.0, 3.0], [37700.0, 1.0], [38500.0, 2.0], [38900.0, 1.0], [37300.0, 2.0], [39300.0, 1.0], [40100.0, 2.0], [40500.0, 2.0], [40900.0, 1.0], [41700.0, 4.0], [42100.0, 4.0], [42900.0, 1.0], [43300.0, 1.0], [44100.0, 1.0], [1100.0, 2.0], [1200.0, 2.0], [1300.0, 8.0], [1400.0, 2.0], [1500.0, 2.0], [1900.0, 1.0], [2300.0, 1.0], [5400.0, 1.0], [5500.0, 1.0], [5600.0, 3.0], [5700.0, 4.0], [5800.0, 6.0], [5900.0, 6.0], [6000.0, 4.0], [6100.0, 3.0], [6200.0, 4.0], [6300.0, 1.0], [6500.0, 2.0], [6600.0, 1.0], [6400.0, 1.0], [6700.0, 3.0], [6900.0, 1.0], [7100.0, 2.0], [7200.0, 3.0], [7400.0, 3.0], [7300.0, 3.0], [7500.0, 1.0], [8000.0, 2.0], [8100.0, 2.0], [8700.0, 2.0], [8600.0, 1.0], [8500.0, 1.0], [8300.0, 1.0], [9000.0, 1.0], [9100.0, 2.0], [8800.0, 3.0], [9200.0, 3.0], [9400.0, 2.0], [9500.0, 3.0], [9300.0, 2.0], [10100.0, 3.0], [10200.0, 1.0], [10000.0, 1.0], [10300.0, 1.0], [10700.0, 2.0], [11200.0, 3.0], [10800.0, 1.0], [11300.0, 2.0], [11500.0, 2.0], [11400.0, 3.0], [11700.0, 4.0], [12100.0, 4.0], [11900.0, 2.0], [11800.0, 1.0], [12000.0, 1.0], [12500.0, 2.0], [13000.0, 1.0], [12900.0, 1.0], [13200.0, 1.0], [13300.0, 1.0], [13600.0, 3.0], [13800.0, 2.0], [13500.0, 1.0], [13900.0, 6.0], [14100.0, 4.0], [14000.0, 3.0], [14300.0, 1.0], [14800.0, 2.0], [14500.0, 2.0], [14700.0, 1.0], [15100.0, 2.0], [15200.0, 1.0], [15400.0, 1.0], [15600.0, 5.0], [15700.0, 4.0], [15800.0, 2.0], [16000.0, 2.0], [15900.0, 1.0], [16300.0, 3.0], [16100.0, 1.0], [16200.0, 1.0], [16600.0, 1.0], [16800.0, 2.0], [17200.0, 4.0], [17600.0, 1.0], [18200.0, 2.0], [17800.0, 1.0], [19200.0, 2.0], [19000.0, 1.0], [19600.0, 2.0], [20400.0, 2.0], [20200.0, 1.0], [21000.0, 2.0], [21200.0, 5.0], [20800.0, 1.0], [21400.0, 3.0], [22400.0, 2.0], [21800.0, 1.0], [21600.0, 1.0], [22800.0, 3.0], [23000.0, 1.0], [23200.0, 4.0], [24200.0, 2.0], [24000.0, 1.0], [24400.0, 4.0], [23600.0, 1.0], [23800.0, 1.0], [24800.0, 3.0], [25000.0, 4.0], [25200.0, 1.0], [26400.0, 3.0], [26000.0, 1.0], [26600.0, 2.0], [26200.0, 2.0], [25800.0, 4.0], [25600.0, 1.0], [26800.0, 1.0], [27000.0, 1.0], [27200.0, 1.0], [27600.0, 1.0], [27400.0, 3.0], [28600.0, 3.0], [28200.0, 1.0], [28000.0, 1.0], [27800.0, 1.0], [29400.0, 4.0], [28800.0, 5.0], [29000.0, 1.0], [29800.0, 2.0], [30600.0, 1.0], [30000.0, 2.0], [30800.0, 1.0], [31200.0, 3.0], [31600.0, 1.0], [31000.0, 3.0], [32200.0, 2.0], [32600.0, 1.0], [34400.0, 2.0], [32800.0, 4.0], [33600.0, 2.0], [34000.0, 1.0], [36000.0, 1.0], [36800.0, 1.0], [35600.0, 1.0], [37200.0, 4.0], [38800.0, 5.0], [38400.0, 5.0], [38000.0, 2.0], [39200.0, 3.0], [40000.0, 2.0], [39600.0, 1.0], [40400.0, 1.0], [40800.0, 1.0], [41600.0, 1.0], [42400.0, 3.0], [41200.0, 1.0], [42000.0, 1.0], [42800.0, 2.0], [44400.0, 4.0], [44000.0, 1.0], [44800.0, 1.0], [43200.0, 1.0], [45600.0, 1.0], [46400.0, 1.0], [47600.0, 1.0], [33100.0, 2.0], [33900.0, 2.0], [34300.0, 2.0], [33500.0, 2.0], [36300.0, 2.0], [36700.0, 3.0], [35100.0, 4.0], [35500.0, 1.0], [37100.0, 3.0], [37900.0, 1.0], [39900.0, 2.0], [40300.0, 1.0], [39100.0, 1.0], [41100.0, 2.0], [41500.0, 1.0], [42300.0, 1.0], [42700.0, 2.0], [41900.0, 2.0], [44300.0, 1.0], [43900.0, 2.0], [43500.0, 1.0], [49100.0, 1.0], [16900.0, 3.0], [16500.0, 1.0], [16700.0, 1.0], [17100.0, 1.0], [17500.0, 2.0], [18300.0, 1.0], [17900.0, 1.0], [18900.0, 1.0], [19300.0, 4.0], [19100.0, 2.0], [18500.0, 4.0], [18700.0, 1.0], [19700.0, 2.0], [19500.0, 1.0], [20100.0, 3.0], [19900.0, 1.0], [20300.0, 1.0], [20700.0, 1.0], [20900.0, 1.0], [21100.0, 3.0], [21500.0, 3.0], [20500.0, 1.0], [22100.0, 1.0], [22300.0, 5.0], [21900.0, 1.0], [21700.0, 1.0], [22500.0, 1.0], [23100.0, 3.0], [22700.0, 2.0], [23300.0, 1.0], [23700.0, 1.0], [24500.0, 2.0], [23900.0, 1.0], [24300.0, 3.0], [25500.0, 1.0], [25300.0, 4.0], [25100.0, 1.0], [24900.0, 1.0], [25700.0, 4.0], [26500.0, 3.0], [26100.0, 4.0], [25900.0, 4.0], [26300.0, 3.0], [26900.0, 3.0], [26700.0, 5.0], [27700.0, 1.0], [27900.0, 1.0], [28300.0, 1.0], [28700.0, 2.0], [29300.0, 3.0], [29100.0, 1.0], [28900.0, 8.0], [30300.0, 2.0], [30100.0, 1.0], [30500.0, 5.0], [29900.0, 2.0], [29700.0, 1.0], [31700.0, 2.0], [31500.0, 1.0], [31300.0, 3.0], [31100.0, 3.0], [32500.0, 2.0], [32700.0, 1.0], [33400.0, 2.0], [33000.0, 1.0], [33800.0, 3.0], [34600.0, 1.0], [35800.0, 4.0], [36600.0, 3.0], [35000.0, 3.0], [36200.0, 1.0], [38200.0, 4.0], [37800.0, 3.0], [39400.0, 3.0], [40200.0, 3.0], [40600.0, 4.0], [39800.0, 2.0], [39000.0, 1.0], [41800.0, 4.0], [41000.0, 2.0], [43000.0, 1.0], [42600.0, 1.0], [41400.0, 2.0], [42200.0, 1.0], [43400.0, 1.0], [43800.0, 1.0], [45000.0, 1.0], [45800.0, 4.0], [45400.0, 1.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[0.0, 57.0], [8900.0, 1.0], [600.0, 4.0], [9400.0, 1.0], [10100.0, 1.0], [10200.0, 1.0], [10500.0, 1.0], [700.0, 5.0], [12100.0, 1.0], [12300.0, 1.0], [800.0, 7.0], [900.0, 8.0], [1000.0, 2.0], [1100.0, 5.0], [1200.0, 7.0], [1300.0, 2.0], [1400.0, 4.0], [1500.0, 1.0], [100.0, 299.0], [1600.0, 1.0], [1800.0, 3.0], [2100.0, 2.0], [2300.0, 1.0], [2200.0, 1.0], [2400.0, 1.0], [2500.0, 1.0], [3000.0, 1.0], [200.0, 121.0], [3300.0, 1.0], [3700.0, 1.0], [3800.0, 1.0], [4300.0, 2.0], [4200.0, 3.0], [4600.0, 1.0], [4400.0, 2.0], [4500.0, 1.0], [300.0, 65.0], [5000.0, 1.0], [5500.0, 1.0], [5700.0, 2.0], [6200.0, 1.0], [400.0, 11.0], [6800.0, 1.0], [7800.0, 1.0], [500.0, 6.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 49100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 114.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1478.0, "series": [{"data": [[0.0, 628.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 308.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1478.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 114.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.6666666666666667, "minX": 1.71869784E12, "maxY": 60.0, "series": [{"data": [[1.7186979E12, 6.116129032258069], [1.71869838E12, 60.0], [1.7186982E12, 41.3162393162393], [1.71869784E12, 1.6666666666666667], [1.71869802E12, 19.807086614173233], [1.7186985E12, 12.869565217391305], [1.71869832E12, 55.99245283018865], [1.71869814E12, 34.34926470588234], [1.71869796E12, 12.64888888888889], [1.71869844E12, 57.85333333333334], [1.71869826E12, 48.69456066945607], [1.71869808E12, 27.24041811846689]], "isOverall": false, "label": "MixedTest", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7186985E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 38718.5, "series": [{"data": [[2.0, 1266.0], [3.0, 1377.0], [4.0, 1242.3333333333333], [5.0, 1159.75], [6.0, 1214.2857142857144], [7.0, 1293.0000000000002], [8.0, 1295.8], [9.0, 1336.7142857142858], [10.0, 1569.7142857142856], [11.0, 1551.6363636363637], [12.0, 1816.4], [13.0, 1996.375], [14.0, 1965.0], [15.0, 1981.2], [16.0, 2228.2], [17.0, 2282.0], [18.0, 2423.7], [19.0, 2704.4], [20.0, 3134.6], [21.0, 2898.3750000000005], [22.0, 3306.6666666666665], [23.0, 3581.3333333333335], [24.0, 3461.125], [25.0, 3928.2000000000003], [26.0, 4278.857142857143], [27.0, 4459.625], [28.0, 4109.125000000001], [29.0, 4197.214285714285], [30.0, 4529.411764705882], [31.0, 4705.083333333333], [32.0, 5064.222222222223], [33.0, 5195.900000000001], [34.0, 5390.0], [35.0, 6070.555555555556], [36.0, 5507.666666666666], [37.0, 6187.5], [38.0, 6922.999999999999], [39.0, 7981.8], [40.0, 7006.916666666666], [41.0, 6399.375], [42.0, 8034.533333333333], [43.0, 8669.333333333332], [44.0, 7547.0], [45.0, 10015.749999999998], [46.0, 10444.625], [47.0, 6529.636363636363], [48.0, 7102.611111111111], [49.0, 9987.0], [50.0, 12714.75], [51.0, 12691.57142857143], [52.0, 9931.5], [53.0, 10219.545454545454], [54.0, 11303.888888888889], [55.0, 9008.066666666666], [56.0, 9400.2], [57.0, 12734.25], [58.0, 9892.800000000001], [59.0, 9865.5], [60.0, 9984.712121212118]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[37.990445859872636, 6453.238853503188]], "isOverall": false, "label": "Directors by name-Aggregated", "isController": false}, {"data": [[2.0, 445.6666666666667], [3.0, 261.0], [4.0, 299.0], [5.0, 261.85714285714283], [6.0, 461.50000000000006], [7.0, 453.33333333333337], [8.0, 530.75], [9.0, 355.0], [10.0, 528.375], [11.0, 521.1428571428572], [12.0, 601.6666666666667], [13.0, 597.1666666666666], [14.0, 576.2222222222222], [15.0, 423.22222222222223], [16.0, 642.25], [17.0, 499.6666666666667], [18.0, 584.4615384615383], [19.0, 731.625], [20.0, 690.3750000000001], [21.0, 908.5833333333334], [22.0, 866.2222222222222], [23.0, 805.6], [24.0, 895.8571428571428], [25.0, 861.1428571428572], [26.0, 1102.857142857143], [27.0, 1008.4999999999999], [28.0, 1152.846153846154], [29.0, 1349.125], [30.0, 943.9333333333334], [31.0, 1437.625], [32.0, 1464.2727272727273], [33.0, 1890.0], [34.0, 1423.235294117647], [35.0, 1425.625], [36.0, 1373.6], [37.0, 1649.9230769230771], [38.0, 2068.0], [39.0, 1774.625], [40.0, 1958.888888888889], [41.0, 1599.4285714285716], [42.0, 1491.0], [43.0, 1743.7142857142856], [44.0, 2164.0], [45.0, 2554.714285714286], [46.0, 2414.3333333333326], [47.0, 2328.142857142857], [48.0, 2707.375], [49.0, 1999.0], [50.0, 3260.8], [51.0, 2019.4285714285718], [52.0, 2173.4], [53.0, 2738.3333333333335], [54.0, 2097.4], [55.0, 2593.0000000000005], [56.0, 3358.0833333333335], [57.0, 3532.4615384615386], [58.0, 1802.25], [59.0, 2809.142857142857], [60.0, 2685.0081300813013], [1.0, 1753.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[37.797822706065325, 1700.5085536547429]], "isOverall": false, "label": "TitleBasics by primary_title-Aggregated", "isController": false}, {"data": [[2.0, 15344.5], [3.0, 9856.666666666668], [4.0, 9055.6], [5.0, 8400.5], [6.0, 9748.75], [7.0, 9824.4], [8.0, 5990.333333333333], [9.0, 9479.181818181818], [10.0, 9156.25], [11.0, 6878.333333333333], [12.0, 7986.555555555556], [13.0, 13052.692307692307], [14.0, 12585.666666666668], [15.0, 9170.875000000002], [16.0, 10454.125], [17.0, 11432.333333333334], [18.0, 11753.3], [19.0, 20129.18181818182], [20.0, 13830.636363636364], [21.0, 13787.57142857143], [22.0, 14241.875], [23.0, 21196.076923076926], [24.0, 15983.5], [25.0, 16529.777777777777], [26.0, 16397.555555555555], [27.0, 24417.909090909092], [28.0, 18075.42857142857], [29.0, 23208.25], [30.0, 19418.0], [31.0, 20079.6], [32.0, 21593.714285714283], [33.0, 20914.363636363636], [34.0, 28722.1], [35.0, 25930.181818181816], [36.0, 26664.333333333336], [37.0, 25880.555555555555], [38.0, 26611.8], [39.0, 25452.300000000003], [40.0, 24234.625000000004], [41.0, 26553.75], [42.0, 26133.8], [43.0, 28588.5], [44.0, 27864.272727272728], [45.0, 32228.3], [46.0, 26272.285714285717], [47.0, 30000.0], [48.0, 32294.714285714286], [49.0, 35866.28571428572], [50.0, 31481.499999999996], [51.0, 35277.166666666664], [52.0, 29078.69230769231], [53.0, 38718.5], [54.0, 30426.727272727272], [55.0, 32689.333333333325], [56.0, 37923.0], [57.0, 33177.22222222222], [58.0, 35686.0], [59.0, 38101.75], [60.0, 34927.10077519379], [1.0, 17819.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[37.89935064935065, 24706.35551948054]], "isOverall": false, "label": "Actors by name-Aggregated", "isController": false}, {"data": [[2.0, 267.6666666666667], [3.0, 302.0], [4.0, 87.0], [5.0, 217.33333333333331], [6.0, 111.75], [7.0, 110.71428571428571], [8.0, 381.72727272727275], [9.0, 188.16666666666666], [10.0, 150.0], [11.0, 200.11111111111111], [12.0, 0.0], [13.0, 219.7142857142857], [14.0, 299.875], [15.0, 276.62500000000006], [16.0, 109.0], [17.0, 158.42857142857142], [18.0, 168.8], [19.0, 153.7142857142857], [20.0, 135.33333333333334], [21.0, 190.22222222222226], [22.0, 510.6666666666667], [23.0, 118.0], [24.0, 336.2], [25.0, 744.0999999999999], [26.0, 203.72727272727272], [27.0, 155.0], [28.0, 368.4285714285714], [29.0, 434.1333333333333], [30.0, 332.76470588235287], [31.0, 640.0], [32.0, 161.44444444444443], [33.0, 212.0], [34.0, 117.28571428571429], [35.0, 770.2222222222222], [36.0, 550.5333333333333], [37.0, 426.9], [38.0, 219.33333333333331], [39.0, 334.0], [40.0, 248.46153846153845], [41.0, 934.1428571428573], [42.0, 737.3333333333334], [43.0, 290.5], [44.0, 191.25], [45.0, 860.75], [46.0, 292.8888888888889], [47.0, 368.20000000000005], [48.0, 123.5], [49.0, 1369.6999999999998], [50.0, 387.0], [51.0, 746.9], [52.0, 229.75], [53.0, 401.875], [54.0, 483.6923076923077], [55.0, 2287.875], [56.0, 793.4444444444445], [57.0, 925.5555555555555], [58.0, 1337.0], [59.0, 153.375], [60.0, 828.6225165562911]], "isOverall": false, "label": "TitleBasics by params", "isController": false}, {"data": [[38.28237129485179, 531.0608424336971]], "isOverall": false, "label": "TitleBasics by params-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 60.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 8.116666666666667, "minX": 1.71869784E12, "maxY": 367756.48333333334, "series": [{"data": [[1.7186979E12, 10465.383333333333], [1.71869838E12, 17216.116666666665], [1.7186982E12, 13354.483333333334], [1.71869784E12, 294.3833333333333], [1.71869802E12, 15825.65], [1.7186985E12, 412.6166666666667], [1.71869832E12, 17487.216666666667], [1.71869814E12, 16448.966666666667], [1.71869796E12, 13901.083333333334], [1.71869844E12, 367756.48333333334], [1.71869826E12, 13871.083333333334], [1.71869808E12, 19412.966666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7186979E12, 424.5], [1.71869838E12, 741.5833333333334], [1.7186982E12, 635.95], [1.71869784E12, 8.116666666666667], [1.71869802E12, 692.3], [1.7186985E12, 60.516666666666666], [1.71869832E12, 723.0333333333333], [1.71869814E12, 731.2333333333333], [1.71869796E12, 616.1333333333333], [1.71869844E12, 818.5666666666667], [1.71869826E12, 656.5833333333334], [1.71869808E12, 793.4]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7186985E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 210.49999999999997, "minX": 1.71869784E12, "maxY": 40385.07692307694, "series": [{"data": [[1.7186979E12, 1259.756756756757], [1.71869838E12, 10703.735294117645], [1.7186982E12, 7476.681818181818], [1.71869802E12, 2870.9833333333336], [1.71869832E12, 10187.275862068967], [1.71869814E12, 5376.942857142856], [1.71869796E12, 1830.9354838709683], [1.71869844E12, 9283.594936708861], [1.71869826E12, 8884.543859649124], [1.71869808E12, 4110.704225352113]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.7186979E12, 390.5428571428572], [1.71869838E12, 2749.2857142857147], [1.7186982E12, 1851.4406779661012], [1.71869784E12, 896.3333333333333], [1.71869802E12, 729.1714285714285], [1.71869832E12, 2699.909090909091], [1.71869814E12, 1514.158536585366], [1.71869796E12, 531.8545454545454], [1.71869844E12, 2625.8412698412694], [1.71869826E12, 2393.9464285714284], [1.71869808E12, 1034.8999999999999]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.7186979E12, 5996.4], [1.71869838E12, 40385.07692307694], [1.7186982E12, 26307.533333333336], [1.71869802E12, 13121.951612903227], [1.7186985E12, 26948.043478260868], [1.71869832E12, 35569.10526315789], [1.71869814E12, 22631.125000000004], [1.71869796E12, 8179.703703703703], [1.71869844E12, 30984.666666666682], [1.71869826E12, 30392.614285714284], [1.71869808E12, 17735.310344827587]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.7186979E12, 241.3396226415094], [1.71869838E12, 663.4933333333332], [1.7186982E12, 508.6530612244898], [1.71869802E12, 210.49999999999997], [1.71869832E12, 873.1506849315068], [1.71869814E12, 420.85937500000006], [1.71869796E12, 217.83333333333334], [1.71869844E12, 997.4805194805193], [1.71869826E12, 560.6428571428572], [1.71869808E12, 374.8974358974359]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7186985E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 208.0806451612903, "minX": 1.71869784E12, "maxY": 40384.969230769224, "series": [{"data": [[1.7186979E12, 1259.756756756757], [1.71869838E12, 10703.735294117645], [1.7186982E12, 7476.681818181818], [1.71869802E12, 2870.9666666666667], [1.71869832E12, 10187.275862068967], [1.71869814E12, 5376.942857142856], [1.71869796E12, 1830.9354838709683], [1.71869844E12, 9189.658227848102], [1.71869826E12, 8884.543859649124], [1.71869808E12, 4110.704225352113]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.7186979E12, 385.40000000000003], [1.71869838E12, 2748.714285714286], [1.7186982E12, 1850.694915254237], [1.71869784E12, 896.3333333333333], [1.71869802E12, 728.2714285714287], [1.71869832E12, 2699.168831168833], [1.71869814E12, 1513.1707317073162], [1.71869796E12, 530.9454545454544], [1.71869844E12, 2520.111111111111], [1.71869826E12, 2393.1607142857147], [1.71869808E12, 1034.0000000000007]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.7186979E12, 5996.366666666666], [1.71869838E12, 40384.969230769224], [1.7186982E12, 26307.51666666667], [1.71869802E12, 13121.951612903227], [1.7186985E12, 26948.043478260868], [1.71869832E12, 35569.087719298244], [1.71869814E12, 22631.10714285715], [1.71869796E12, 8179.61111111111], [1.71869844E12, 30902.814814814825], [1.71869826E12, 30392.585714285717], [1.71869808E12, 17735.241379310337]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.7186979E12, 238.9056603773585], [1.71869838E12, 661.5200000000001], [1.7186982E12, 506.9591836734694], [1.71869802E12, 208.0806451612903], [1.71869832E12, 871.6301369863017], [1.71869814E12, 419.17187499999994], [1.71869796E12, 215.88888888888889], [1.71869844E12, 926.6493506493506], [1.71869826E12, 558.3928571428572], [1.71869808E12, 373.08974358974376]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7186985E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.5161290322580645, "minX": 1.71869784E12, "maxY": 28.0, "series": [{"data": [[1.7186979E12, 0.9459459459459458], [1.71869838E12, 4.352941176470587], [1.7186982E12, 4.651515151515152], [1.71869802E12, 3.3666666666666676], [1.71869832E12, 9.5], [1.71869814E12, 3.785714285714286], [1.71869796E12, 0.5161290322580645], [1.71869844E12, 5.189873417721518], [1.71869826E12, 4.0175438596491215], [1.71869808E12, 3.774647887323945]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.7186979E12, 1.8571428571428572], [1.71869838E12, 4.920634920634922], [1.7186982E12, 3.915254237288136], [1.71869784E12, 28.0], [1.71869802E12, 2.5571428571428587], [1.71869832E12, 3.4935064935064934], [1.71869814E12, 3.5243902439024386], [1.71869796E12, 1.7999999999999998], [1.71869844E12, 8.174603174603178], [1.71869826E12, 6.55357142857143], [1.71869808E12, 2.4625]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.7186979E12, 3.4666666666666672], [1.71869838E12, 7.446153846153844], [1.7186982E12, 3.8500000000000014], [1.71869802E12, 2.1935483870967736], [1.7186985E12, 5.956521739130436], [1.71869832E12, 6.333333333333332], [1.71869814E12, 3.999999999999999], [1.71869796E12, 2.425925925925926], [1.71869844E12, 6.913580246913581], [1.71869826E12, 6.657142857142856], [1.71869808E12, 2.327586206896551]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.7186979E12, 0.6603773584905662], [1.71869838E12, 6.386666666666667], [1.7186982E12, 6.897959183673469], [1.71869802E12, 4.403225806451612], [1.71869832E12, 6.73972602739726], [1.71869814E12, 5.5625], [1.71869796E12, 3.4999999999999996], [1.71869844E12, 4.636363636363638], [1.71869826E12, 7.124999999999997], [1.71869808E12, 3.705128205128205]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7186985E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 87.0, "minX": 1.71869784E12, "maxY": 49129.0, "series": [{"data": [[1.7186979E12, 9020.0], [1.71869838E12, 45899.0], [1.7186982E12, 33133.0], [1.71869784E12, 1753.0], [1.71869802E12, 15709.0], [1.7186985E12, 38442.0], [1.71869832E12, 45855.0], [1.71869814E12, 26819.0], [1.71869796E12, 10345.0], [1.71869844E12, 49129.0], [1.71869826E12, 39326.0], [1.71869808E12, 20440.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7186979E12, 87.0], [1.71869838E12, 108.0], [1.7186982E12, 106.0], [1.71869784E12, 203.0], [1.71869802E12, 112.0], [1.7186985E12, 17819.0], [1.71869832E12, 109.0], [1.71869814E12, 115.0], [1.71869796E12, 90.0], [1.71869844E12, 120.0], [1.71869826E12, 109.0], [1.71869808E12, 103.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7186979E12, 5913.400000000001], [1.71869838E12, 41570.700000000004], [1.7186982E12, 26984.3], [1.71869784E12, 1753.0], [1.71869802E12, 13905.0], [1.7186985E12, 34859.80000000001], [1.71869832E12, 37244.0], [1.71869814E12, 22461.4], [1.71869796E12, 8742.400000000001], [1.71869844E12, 41830.200000000004], [1.71869826E12, 31938.800000000017], [1.71869808E12, 17403.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7186979E12, 7580.639999999972], [1.71869838E12, 44778.54999999998], [1.7186982E12, 31125.82], [1.71869784E12, 1753.0], [1.71869802E12, 15666.5], [1.7186985E12, 38442.0], [1.71869832E12, 41910.99999999999], [1.71869814E12, 26296.240000000005], [1.71869796E12, 10191.19], [1.71869844E12, 47360.0], [1.71869826E12, 37835.100000000006], [1.71869808E12, 20243.999999999996]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7186979E12, 639.0], [1.71869838E12, 8503.5], [1.7186982E12, 6098.0], [1.71869784E12, 733.0], [1.71869802E12, 1196.0], [1.7186985E12, 26737.0], [1.71869832E12, 4412.0], [1.71869814E12, 2540.0], [1.71869796E12, 1479.5], [1.71869844E12, 9707.0], [1.71869826E12, 5819.0], [1.71869808E12, 1442.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.7186979E12, 6043.6], [1.71869838E12, 42453.6], [1.7186982E12, 28330.35], [1.71869784E12, 1753.0], [1.71869802E12, 14234.0], [1.7186985E12, 38193.799999999996], [1.71869832E12, 38831.0], [1.71869814E12, 24512.6], [1.71869796E12, 9469.15], [1.71869844E12, 43904.799999999996], [1.71869826E12, 34201.1], [1.71869808E12, 19353.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7186985E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 36138.5, "series": [{"data": [[2.0, 1284.0], [8.0, 2630.0], [9.0, 7738.5], [10.0, 5303.5], [11.0, 9154.0], [3.0, 1836.0], [12.0, 3413.5], [13.0, 36138.5], [14.0, 5549.0], [15.0, 24322.5], [1.0, 1462.0], [4.0, 1744.5], [16.0, 7429.0], [18.0, 28908.0], [19.0, 34277.5], [5.0, 2225.0], [6.0, 2953.5], [7.0, 3128.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [8.0, 1439.0], [9.0, 1405.0], [11.0, 0.0], [3.0, 0.0], [13.0, 1276.0], [14.0, 671.0], [4.0, 1263.5], [16.0, 0.0], [1.0, 1244.0], [18.0, 1190.0], [19.0, 0.0], [5.0, 570.0], [6.0, 1281.0], [7.0, 1182.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 19.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 36138.5, "series": [{"data": [[2.0, 1284.0], [8.0, 2630.0], [9.0, 7738.5], [10.0, 5303.5], [11.0, 9154.0], [3.0, 1836.0], [12.0, 3413.5], [13.0, 36138.5], [14.0, 5549.0], [15.0, 24321.5], [1.0, 1461.0], [4.0, 1744.5], [16.0, 7429.0], [18.0, 28908.0], [19.0, 34277.5], [5.0, 2225.0], [6.0, 2952.5], [7.0, 3128.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [8.0, 1016.0], [9.0, 1100.0], [11.0, 0.0], [3.0, 0.0], [13.0, 956.0], [14.0, 491.0], [4.0, 917.0], [16.0, 0.0], [1.0, 1013.0], [18.0, 950.0], [19.0, 0.0], [5.0, 455.0], [6.0, 1000.5], [7.0, 910.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 19.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.71869784E12, "maxY": 4.95, "series": [{"data": [[1.7186979E12, 2.7], [1.71869838E12, 4.5], [1.7186982E12, 4.033333333333333], [1.71869784E12, 0.08333333333333333], [1.71869802E12, 4.35], [1.71869832E12, 4.516666666666667], [1.71869814E12, 4.633333333333334], [1.71869796E12, 3.8333333333333335], [1.71869844E12, 4.433333333333334], [1.71869826E12, 4.1], [1.71869808E12, 4.95]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71869844E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.71869784E12, "maxY": 4.733333333333333, "series": [{"data": [[1.7186979E12, 2.5166666666666666], [1.71869838E12, 4.433333333333334], [1.7186982E12, 3.8333333333333335], [1.71869784E12, 0.05], [1.71869802E12, 4.15], [1.7186985E12, 0.38333333333333336], [1.71869832E12, 4.316666666666666], [1.71869814E12, 4.383333333333334], [1.71869796E12, 3.7], [1.71869844E12, 3.783333333333333], [1.71869826E12, 3.95], [1.71869808E12, 4.733333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71869844E12, 1.1166666666666667]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.7186979E12, 0.06666666666666667], [1.71869838E12, 0.08333333333333333], [1.7186982E12, 0.06666666666666667], [1.71869802E12, 0.08333333333333333], [1.71869832E12, 0.1], [1.71869814E12, 0.15], [1.71869796E12, 0.05], [1.71869844E12, 0.1], [1.71869826E12, 0.03333333333333333], [1.71869808E12, 0.05]], "isOverall": false, "label": "Non HTTP response code: java.net.URISyntaxException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7186985E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.71869784E12, "maxY": 1.3666666666666667, "series": [{"data": [[1.7186979E12, 0.5833333333333334], [1.71869838E12, 1.05], [1.7186982E12, 0.9833333333333333], [1.71869784E12, 0.05], [1.71869802E12, 1.1666666666666667], [1.71869832E12, 1.2833333333333334], [1.71869814E12, 1.3666666666666667], [1.71869796E12, 0.9166666666666666], [1.71869844E12, 0.7833333333333333], [1.71869826E12, 0.9333333333333333], [1.71869808E12, 1.3333333333333333]], "isOverall": false, "label": "TitleBasics by primary_title-success", "isController": false}, {"data": [[1.71869844E12, 0.26666666666666666]], "isOverall": false, "label": "TitleBasics by primary_title-failure", "isController": false}, {"data": [[1.71869844E12, 0.3]], "isOverall": false, "label": "Actors by name-failure", "isController": false}, {"data": [[1.7186979E12, 0.5], [1.71869838E12, 1.0833333333333333], [1.7186982E12, 1.0], [1.71869802E12, 1.0333333333333334], [1.7186985E12, 0.38333333333333336], [1.71869832E12, 0.95], [1.71869814E12, 0.9333333333333333], [1.71869796E12, 0.9], [1.71869844E12, 1.05], [1.71869826E12, 1.1666666666666667], [1.71869808E12, 0.9666666666666667]], "isOverall": false, "label": "Actors by name-success", "isController": false}, {"data": [[1.7186979E12, 0.06666666666666667], [1.71869838E12, 0.08333333333333333], [1.7186982E12, 0.06666666666666667], [1.71869802E12, 0.08333333333333333], [1.71869832E12, 0.1], [1.71869814E12, 0.15], [1.71869796E12, 0.05], [1.71869844E12, 0.36666666666666664], [1.71869826E12, 0.03333333333333333], [1.71869808E12, 0.05]], "isOverall": false, "label": "TitleBasics by params-failure", "isController": false}, {"data": [[1.71869844E12, 0.2833333333333333]], "isOverall": false, "label": "Directors by name-failure", "isController": false}, {"data": [[1.7186979E12, 0.6166666666666667], [1.71869838E12, 1.1333333333333333], [1.7186982E12, 1.1], [1.71869802E12, 1.0], [1.71869832E12, 0.9666666666666667], [1.71869814E12, 1.1666666666666667], [1.71869796E12, 1.0333333333333334], [1.71869844E12, 1.0333333333333334], [1.71869826E12, 0.95], [1.71869808E12, 1.1833333333333333]], "isOverall": false, "label": "Directors by name-success", "isController": false}, {"data": [[1.7186979E12, 0.8166666666666667], [1.71869838E12, 1.1666666666666667], [1.7186982E12, 0.75], [1.71869802E12, 0.95], [1.71869832E12, 1.1166666666666667], [1.71869814E12, 0.9166666666666666], [1.71869796E12, 0.85], [1.71869844E12, 0.9166666666666666], [1.71869826E12, 0.9], [1.71869808E12, 1.25]], "isOverall": false, "label": "TitleBasics by params-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7186985E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.71869784E12, "maxY": 4.733333333333333, "series": [{"data": [[1.7186979E12, 2.5166666666666666], [1.71869838E12, 4.433333333333334], [1.7186982E12, 3.8333333333333335], [1.71869784E12, 0.05], [1.71869802E12, 4.15], [1.7186985E12, 0.38333333333333336], [1.71869832E12, 4.316666666666666], [1.71869814E12, 4.383333333333334], [1.71869796E12, 3.7], [1.71869844E12, 3.783333333333333], [1.71869826E12, 3.95], [1.71869808E12, 4.733333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.7186979E12, 0.06666666666666667], [1.71869838E12, 0.08333333333333333], [1.7186982E12, 0.06666666666666667], [1.71869802E12, 0.08333333333333333], [1.71869832E12, 0.1], [1.71869814E12, 0.15], [1.71869796E12, 0.05], [1.71869844E12, 1.2166666666666666], [1.71869826E12, 0.03333333333333333], [1.71869808E12, 0.05]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7186985E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}


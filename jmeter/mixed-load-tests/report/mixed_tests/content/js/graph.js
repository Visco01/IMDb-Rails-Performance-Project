/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 38928.0, "series": [{"data": [[0.0, 1136.0], [0.1, 1136.0], [0.2, 1136.0], [0.3, 1594.0], [0.4, 1594.0], [0.5, 1594.0], [0.6, 2577.0], [0.7, 2577.0], [0.8, 2577.0], [0.9, 3337.0], [1.0, 3337.0], [1.1, 3337.0], [1.2, 3834.0], [1.3, 3834.0], [1.4, 3834.0], [1.5, 3921.0], [1.6, 3921.0], [1.7, 3985.0], [1.8, 3985.0], [1.9, 3985.0], [2.0, 4700.0], [2.1, 4700.0], [2.2, 4700.0], [2.3, 4815.0], [2.4, 4815.0], [2.5, 4815.0], [2.6, 4893.0], [2.7, 4893.0], [2.8, 4893.0], [2.9, 4945.0], [3.0, 4945.0], [3.1, 4954.0], [3.2, 4954.0], [3.3, 4954.0], [3.4, 5160.0], [3.5, 5160.0], [3.6, 5160.0], [3.7, 5255.0], [3.8, 5255.0], [3.9, 5255.0], [4.0, 5356.0], [4.1, 5356.0], [4.2, 5356.0], [4.3, 5377.0], [4.4, 5377.0], [4.5, 5388.0], [4.6, 5388.0], [4.7, 5388.0], [4.8, 5390.0], [4.9, 5390.0], [5.0, 5390.0], [5.1, 5461.0], [5.2, 5461.0], [5.3, 5461.0], [5.4, 5488.0], [5.5, 5488.0], [5.6, 5488.0], [5.7, 5507.0], [5.8, 5507.0], [5.9, 5522.0], [6.0, 5522.0], [6.1, 5522.0], [6.2, 5537.0], [6.3, 5537.0], [6.4, 5537.0], [6.5, 5550.0], [6.6, 5550.0], [6.7, 5550.0], [6.8, 5554.0], [6.9, 5554.0], [7.0, 5554.0], [7.1, 5557.0], [7.2, 5557.0], [7.3, 5562.0], [7.4, 5562.0], [7.5, 5562.0], [7.6, 5581.0], [7.7, 5581.0], [7.8, 5581.0], [7.9, 5589.0], [8.0, 5589.0], [8.1, 5589.0], [8.2, 5599.0], [8.3, 5599.0], [8.4, 5599.0], [8.5, 5600.0], [8.6, 5600.0], [8.7, 5657.0], [8.8, 5657.0], [8.9, 5657.0], [9.0, 5668.0], [9.1, 5668.0], [9.2, 5668.0], [9.3, 5669.0], [9.4, 5669.0], [9.5, 5669.0], [9.6, 5669.0], [9.7, 5669.0], [9.8, 5669.0], [9.9, 5681.0], [10.0, 5681.0], [10.1, 5718.0], [10.2, 5718.0], [10.3, 5718.0], [10.4, 5732.0], [10.5, 5732.0], [10.6, 5732.0], [10.7, 5761.0], [10.8, 5761.0], [10.9, 5761.0], [11.0, 5763.0], [11.1, 5763.0], [11.2, 5763.0], [11.3, 5764.0], [11.4, 5764.0], [11.5, 5766.0], [11.6, 5766.0], [11.7, 5766.0], [11.8, 5768.0], [11.9, 5768.0], [12.0, 5768.0], [12.1, 5780.0], [12.2, 5780.0], [12.3, 5780.0], [12.4, 5782.0], [12.5, 5782.0], [12.6, 5782.0], [12.7, 5810.0], [12.8, 5810.0], [12.9, 5859.0], [13.0, 5859.0], [13.1, 5859.0], [13.2, 5869.0], [13.3, 5869.0], [13.4, 5869.0], [13.5, 5873.0], [13.6, 5873.0], [13.7, 5873.0], [13.8, 5919.0], [13.9, 5919.0], [14.0, 5919.0], [14.1, 5931.0], [14.2, 5931.0], [14.3, 5932.0], [14.4, 5932.0], [14.5, 5932.0], [14.6, 5938.0], [14.7, 5938.0], [14.8, 5938.0], [14.9, 5941.0], [15.0, 5941.0], [15.1, 5941.0], [15.2, 5952.0], [15.3, 5952.0], [15.4, 5952.0], [15.5, 5955.0], [15.6, 5955.0], [15.7, 5959.0], [15.8, 5959.0], [15.9, 5959.0], [16.0, 5962.0], [16.1, 5962.0], [16.2, 5962.0], [16.3, 5968.0], [16.4, 5968.0], [16.5, 5968.0], [16.6, 5969.0], [16.7, 5969.0], [16.8, 5969.0], [16.9, 5974.0], [17.0, 5974.0], [17.1, 5990.0], [17.2, 5990.0], [17.3, 5990.0], [17.4, 5991.0], [17.5, 5991.0], [17.6, 5991.0], [17.7, 5992.0], [17.8, 5992.0], [17.9, 5992.0], [18.0, 5993.0], [18.1, 5993.0], [18.2, 5993.0], [18.3, 5996.0], [18.4, 5996.0], [18.5, 6037.0], [18.6, 6037.0], [18.7, 6037.0], [18.8, 6039.0], [18.9, 6039.0], [19.0, 6039.0], [19.1, 6096.0], [19.2, 6096.0], [19.3, 6096.0], [19.4, 6100.0], [19.5, 6100.0], [19.6, 6100.0], [19.7, 6102.0], [19.8, 6102.0], [19.9, 6154.0], [20.0, 6154.0], [20.1, 6154.0], [20.2, 6161.0], [20.3, 6161.0], [20.4, 6161.0], [20.5, 6161.0], [20.6, 6161.0], [20.7, 6161.0], [20.8, 6170.0], [20.9, 6170.0], [21.0, 6170.0], [21.1, 6172.0], [21.2, 6172.0], [21.3, 6176.0], [21.4, 6176.0], [21.5, 6176.0], [21.6, 6182.0], [21.7, 6182.0], [21.8, 6182.0], [21.9, 6183.0], [22.0, 6183.0], [22.1, 6183.0], [22.2, 6185.0], [22.3, 6185.0], [22.4, 6185.0], [22.5, 6219.0], [22.6, 6219.0], [22.7, 6220.0], [22.8, 6220.0], [22.9, 6220.0], [23.0, 6236.0], [23.1, 6236.0], [23.2, 6236.0], [23.3, 6256.0], [23.4, 6256.0], [23.5, 6256.0], [23.6, 6256.0], [23.7, 6256.0], [23.8, 6256.0], [23.9, 6257.0], [24.0, 6257.0], [24.1, 6266.0], [24.2, 6266.0], [24.3, 6266.0], [24.4, 6267.0], [24.5, 6267.0], [24.6, 6267.0], [24.7, 6267.0], [24.8, 6267.0], [24.9, 6267.0], [25.0, 6270.0], [25.1, 6270.0], [25.2, 6270.0], [25.3, 6312.0], [25.4, 6312.0], [25.5, 6326.0], [25.6, 6326.0], [25.7, 6326.0], [25.8, 6327.0], [25.9, 6327.0], [26.0, 6327.0], [26.1, 6329.0], [26.2, 6329.0], [26.3, 6329.0], [26.4, 6340.0], [26.5, 6340.0], [26.6, 6340.0], [26.7, 6341.0], [26.8, 6341.0], [26.9, 6351.0], [27.0, 6351.0], [27.1, 6351.0], [27.2, 6354.0], [27.3, 6354.0], [27.4, 6354.0], [27.5, 6357.0], [27.6, 6357.0], [27.7, 6357.0], [27.8, 6359.0], [27.9, 6359.0], [28.0, 6359.0], [28.1, 6366.0], [28.2, 6366.0], [28.3, 6383.0], [28.4, 6383.0], [28.5, 6383.0], [28.6, 6384.0], [28.7, 6384.0], [28.8, 6384.0], [28.9, 6391.0], [29.0, 6391.0], [29.1, 6391.0], [29.2, 6394.0], [29.3, 6394.0], [29.4, 6394.0], [29.5, 6409.0], [29.6, 6409.0], [29.7, 6416.0], [29.8, 6416.0], [29.9, 6416.0], [30.0, 6423.0], [30.1, 6423.0], [30.2, 6423.0], [30.3, 6457.0], [30.4, 6457.0], [30.5, 6457.0], [30.6, 6458.0], [30.7, 6458.0], [30.8, 6458.0], [30.9, 6461.0], [31.0, 6461.0], [31.1, 6465.0], [31.2, 6465.0], [31.3, 6465.0], [31.4, 6471.0], [31.5, 6471.0], [31.6, 6471.0], [31.7, 6476.0], [31.8, 6476.0], [31.9, 6476.0], [32.0, 6482.0], [32.1, 6482.0], [32.2, 6482.0], [32.3, 6490.0], [32.4, 6490.0], [32.5, 6492.0], [32.6, 6492.0], [32.7, 6492.0], [32.8, 6495.0], [32.9, 6495.0], [33.0, 6495.0], [33.1, 6498.0], [33.2, 6498.0], [33.3, 6498.0], [33.4, 6506.0], [33.5, 6506.0], [33.6, 6506.0], [33.7, 6524.0], [33.8, 6524.0], [33.9, 6526.0], [34.0, 6526.0], [34.1, 6526.0], [34.2, 6528.0], [34.3, 6528.0], [34.4, 6528.0], [34.5, 6545.0], [34.6, 6545.0], [34.7, 6545.0], [34.8, 6558.0], [34.9, 6558.0], [35.0, 6558.0], [35.1, 6578.0], [35.2, 6578.0], [35.3, 6578.0], [35.4, 6578.0], [35.5, 6578.0], [35.6, 6578.0], [35.7, 6578.0], [35.8, 6578.0], [35.9, 6581.0], [36.0, 6581.0], [36.1, 6581.0], [36.2, 6583.0], [36.3, 6583.0], [36.4, 6583.0], [36.5, 6584.0], [36.6, 6584.0], [36.7, 6584.0], [36.8, 6584.0], [36.9, 6584.0], [37.0, 6585.0], [37.1, 6585.0], [37.2, 6585.0], [37.3, 6588.0], [37.4, 6588.0], [37.5, 6588.0], [37.6, 6588.0], [37.7, 6588.0], [37.8, 6588.0], [37.9, 6590.0], [38.0, 6590.0], [38.1, 6590.0], [38.2, 6590.0], [38.3, 6590.0], [38.4, 6593.0], [38.5, 6593.0], [38.6, 6593.0], [38.7, 6600.0], [38.8, 6600.0], [38.9, 6600.0], [39.0, 6604.0], [39.1, 6604.0], [39.2, 6604.0], [39.3, 6608.0], [39.4, 6608.0], [39.5, 6614.0], [39.6, 6614.0], [39.7, 6614.0], [39.8, 6622.0], [39.9, 6622.0], [40.0, 6622.0], [40.1, 6629.0], [40.2, 6629.0], [40.3, 6629.0], [40.4, 6637.0], [40.5, 6637.0], [40.6, 6637.0], [40.7, 6655.0], [40.8, 6655.0], [40.9, 6667.0], [41.0, 6667.0], [41.1, 6667.0], [41.2, 6670.0], [41.3, 6670.0], [41.4, 6670.0], [41.5, 6671.0], [41.6, 6671.0], [41.7, 6671.0], [41.8, 6679.0], [41.9, 6679.0], [42.0, 6679.0], [42.1, 6680.0], [42.2, 6680.0], [42.3, 6684.0], [42.4, 6684.0], [42.5, 6684.0], [42.6, 6685.0], [42.7, 6685.0], [42.8, 6685.0], [42.9, 6687.0], [43.0, 6687.0], [43.1, 6687.0], [43.2, 6690.0], [43.3, 6690.0], [43.4, 6690.0], [43.5, 6690.0], [43.6, 6690.0], [43.7, 6692.0], [43.8, 6692.0], [43.9, 6692.0], [44.0, 6698.0], [44.1, 6698.0], [44.2, 6698.0], [44.3, 6704.0], [44.4, 6704.0], [44.5, 6704.0], [44.6, 6708.0], [44.7, 6708.0], [44.8, 6708.0], [44.9, 6710.0], [45.0, 6710.0], [45.1, 6713.0], [45.2, 6713.0], [45.3, 6713.0], [45.4, 6714.0], [45.5, 6714.0], [45.6, 6714.0], [45.7, 6719.0], [45.8, 6719.0], [45.9, 6719.0], [46.0, 6725.0], [46.1, 6725.0], [46.2, 6725.0], [46.3, 6726.0], [46.4, 6726.0], [46.5, 6731.0], [46.6, 6731.0], [46.7, 6731.0], [46.8, 6734.0], [46.9, 6734.0], [47.0, 6734.0], [47.1, 6738.0], [47.2, 6738.0], [47.3, 6738.0], [47.4, 6745.0], [47.5, 6745.0], [47.6, 6745.0], [47.7, 6753.0], [47.8, 6753.0], [47.9, 6758.0], [48.0, 6758.0], [48.1, 6758.0], [48.2, 6758.0], [48.3, 6758.0], [48.4, 6758.0], [48.5, 6764.0], [48.6, 6764.0], [48.7, 6764.0], [48.8, 6765.0], [48.9, 6765.0], [49.0, 6765.0], [49.1, 6775.0], [49.2, 6775.0], [49.3, 6778.0], [49.4, 6778.0], [49.5, 6778.0], [49.6, 6779.0], [49.7, 6779.0], [49.8, 6779.0], [49.9, 6783.0], [50.0, 6783.0], [50.1, 6783.0], [50.2, 6788.0], [50.3, 6788.0], [50.4, 6788.0], [50.5, 6789.0], [50.6, 6789.0], [50.7, 6789.0], [50.8, 6793.0], [50.9, 6793.0], [51.0, 6793.0], [51.1, 6793.0], [51.2, 6793.0], [51.3, 6794.0], [51.4, 6794.0], [51.5, 6794.0], [51.6, 6795.0], [51.7, 6795.0], [51.8, 6795.0], [51.9, 6795.0], [52.0, 6795.0], [52.1, 6795.0], [52.2, 6798.0], [52.3, 6798.0], [52.4, 6799.0], [52.5, 6799.0], [52.6, 6799.0], [52.7, 6803.0], [52.8, 6803.0], [52.9, 6803.0], [53.0, 6805.0], [53.1, 6805.0], [53.2, 6805.0], [53.3, 6809.0], [53.4, 6809.0], [53.5, 6809.0], [53.6, 6810.0], [53.7, 6810.0], [53.8, 6814.0], [53.9, 6814.0], [54.0, 6814.0], [54.1, 6822.0], [54.2, 6822.0], [54.3, 6822.0], [54.4, 6827.0], [54.5, 6827.0], [54.6, 6827.0], [54.7, 6858.0], [54.8, 6858.0], [54.9, 6858.0], [55.0, 6862.0], [55.1, 6862.0], [55.2, 6876.0], [55.3, 6876.0], [55.4, 6876.0], [55.5, 6879.0], [55.6, 6879.0], [55.7, 6879.0], [55.8, 6879.0], [55.9, 6879.0], [56.0, 6879.0], [56.1, 6882.0], [56.2, 6882.0], [56.3, 6882.0], [56.4, 6888.0], [56.5, 6888.0], [56.6, 6888.0], [56.7, 6888.0], [56.8, 6888.0], [56.9, 6891.0], [57.0, 6891.0], [57.1, 6891.0], [57.2, 6892.0], [57.3, 6892.0], [57.4, 6892.0], [57.5, 6892.0], [57.6, 6892.0], [57.7, 6892.0], [57.8, 6896.0], [57.9, 6896.0], [58.0, 6897.0], [58.1, 6897.0], [58.2, 6897.0], [58.3, 6899.0], [58.4, 6899.0], [58.5, 6899.0], [58.6, 6900.0], [58.7, 6900.0], [58.8, 6900.0], [58.9, 6902.0], [59.0, 6902.0], [59.1, 6902.0], [59.2, 6903.0], [59.3, 6903.0], [59.4, 6905.0], [59.5, 6905.0], [59.6, 6905.0], [59.7, 6908.0], [59.8, 6908.0], [59.9, 6908.0], [60.0, 6910.0], [60.1, 6910.0], [60.2, 6910.0], [60.3, 6925.0], [60.4, 6925.0], [60.5, 6925.0], [60.6, 6950.0], [60.7, 6950.0], [60.8, 6966.0], [60.9, 6966.0], [61.0, 6966.0], [61.1, 6988.0], [61.2, 6988.0], [61.3, 6988.0], [61.4, 6989.0], [61.5, 6989.0], [61.6, 6989.0], [61.7, 6989.0], [61.8, 6989.0], [61.9, 6989.0], [62.0, 6995.0], [62.1, 6995.0], [62.2, 6999.0], [62.3, 6999.0], [62.4, 6999.0], [62.5, 7001.0], [62.6, 7001.0], [62.7, 7001.0], [62.8, 7002.0], [62.9, 7002.0], [63.0, 7002.0], [63.1, 7004.0], [63.2, 7004.0], [63.3, 7004.0], [63.4, 7011.0], [63.5, 7011.0], [63.6, 7014.0], [63.7, 7014.0], [63.8, 7014.0], [63.9, 7015.0], [64.0, 7015.0], [64.1, 7015.0], [64.2, 7015.0], [64.3, 7015.0], [64.4, 7015.0], [64.5, 7019.0], [64.6, 7019.0], [64.7, 7019.0], [64.8, 7021.0], [64.9, 7021.0], [65.0, 7030.0], [65.1, 7030.0], [65.2, 7030.0], [65.3, 7043.0], [65.4, 7043.0], [65.5, 7043.0], [65.6, 7051.0], [65.7, 7051.0], [65.8, 7051.0], [65.9, 7059.0], [66.0, 7059.0], [66.1, 7059.0], [66.2, 7075.0], [66.3, 7075.0], [66.4, 7076.0], [66.5, 7076.0], [66.6, 7076.0], [66.7, 7077.0], [66.8, 7077.0], [66.9, 7077.0], [67.0, 7082.0], [67.1, 7082.0], [67.2, 7082.0], [67.3, 7085.0], [67.4, 7085.0], [67.5, 7085.0], [67.6, 7092.0], [67.7, 7092.0], [67.8, 7093.0], [67.9, 7093.0], [68.0, 7093.0], [68.1, 7093.0], [68.2, 7093.0], [68.3, 7093.0], [68.4, 7094.0], [68.5, 7094.0], [68.6, 7094.0], [68.7, 7095.0], [68.8, 7095.0], [68.9, 7095.0], [69.0, 7098.0], [69.1, 7098.0], [69.2, 7102.0], [69.3, 7102.0], [69.4, 7102.0], [69.5, 7104.0], [69.6, 7104.0], [69.7, 7104.0], [69.8, 7107.0], [69.9, 7107.0], [70.0, 7107.0], [70.1, 7109.0], [70.2, 7109.0], [70.3, 7109.0], [70.4, 7111.0], [70.5, 7111.0], [70.6, 7112.0], [70.7, 7112.0], [70.8, 7112.0], [70.9, 7130.0], [71.0, 7130.0], [71.1, 7130.0], [71.2, 7147.0], [71.3, 7147.0], [71.4, 7147.0], [71.5, 7147.0], [71.6, 7147.0], [71.7, 7147.0], [71.8, 7161.0], [71.9, 7161.0], [72.0, 7164.0], [72.1, 7164.0], [72.2, 7164.0], [72.3, 7166.0], [72.4, 7166.0], [72.5, 7166.0], [72.6, 7167.0], [72.7, 7167.0], [72.8, 7167.0], [72.9, 7167.0], [73.0, 7167.0], [73.1, 7167.0], [73.2, 7173.0], [73.3, 7173.0], [73.4, 7179.0], [73.5, 7179.0], [73.6, 7179.0], [73.7, 7182.0], [73.8, 7182.0], [73.9, 7182.0], [74.0, 7183.0], [74.1, 7183.0], [74.2, 7183.0], [74.3, 7183.0], [74.4, 7183.0], [74.5, 7183.0], [74.6, 7188.0], [74.7, 7188.0], [74.8, 7190.0], [74.9, 7190.0], [75.0, 7190.0], [75.1, 7190.0], [75.2, 7190.0], [75.3, 7190.0], [75.4, 7191.0], [75.5, 7191.0], [75.6, 7191.0], [75.7, 7192.0], [75.8, 7192.0], [75.9, 7192.0], [76.0, 7195.0], [76.1, 7195.0], [76.2, 7201.0], [76.3, 7201.0], [76.4, 7201.0], [76.5, 7203.0], [76.6, 7203.0], [76.7, 7203.0], [76.8, 7204.0], [76.9, 7204.0], [77.0, 7204.0], [77.1, 7205.0], [77.2, 7205.0], [77.3, 7205.0], [77.4, 7207.0], [77.5, 7207.0], [77.6, 7208.0], [77.7, 7208.0], [77.8, 7208.0], [77.9, 7216.0], [78.0, 7216.0], [78.1, 7216.0], [78.2, 7225.0], [78.3, 7225.0], [78.4, 7225.0], [78.5, 7249.0], [78.6, 7249.0], [78.7, 7249.0], [78.8, 7249.0], [78.9, 7249.0], [79.0, 7255.0], [79.1, 7255.0], [79.2, 7255.0], [79.3, 7273.0], [79.4, 7273.0], [79.5, 7273.0], [79.6, 7273.0], [79.7, 7273.0], [79.8, 7273.0], [79.9, 7273.0], [80.0, 7273.0], [80.1, 7273.0], [80.2, 7282.0], [80.3, 7282.0], [80.4, 7285.0], [80.5, 7285.0], [80.6, 7285.0], [80.7, 7298.0], [80.8, 7298.0], [80.9, 7298.0], [81.0, 7302.0], [81.1, 7302.0], [81.2, 7302.0], [81.3, 7309.0], [81.4, 7309.0], [81.5, 7309.0], [81.6, 7317.0], [81.7, 7317.0], [81.8, 7319.0], [81.9, 7319.0], [82.0, 7319.0], [82.1, 7323.0], [82.2, 7323.0], [82.3, 7323.0], [82.4, 7323.0], [82.5, 7323.0], [82.6, 7323.0], [82.7, 7335.0], [82.8, 7335.0], [82.9, 7335.0], [83.0, 7357.0], [83.1, 7357.0], [83.2, 7365.0], [83.3, 7365.0], [83.4, 7365.0], [83.5, 7392.0], [83.6, 7392.0], [83.7, 7392.0], [83.8, 7393.0], [83.9, 7393.0], [84.0, 7393.0], [84.1, 7397.0], [84.2, 7397.0], [84.3, 7397.0], [84.4, 7398.0], [84.5, 7398.0], [84.6, 7398.0], [84.7, 7398.0], [84.8, 7398.0], [84.9, 7400.0], [85.0, 7400.0], [85.1, 7400.0], [85.2, 7401.0], [85.3, 7401.0], [85.4, 7401.0], [85.5, 7402.0], [85.6, 7402.0], [85.7, 7402.0], [85.8, 7405.0], [85.9, 7405.0], [86.0, 7407.0], [86.1, 7407.0], [86.2, 7407.0], [86.3, 7410.0], [86.4, 7410.0], [86.5, 7410.0], [86.6, 7413.0], [86.7, 7413.0], [86.8, 7413.0], [86.9, 7416.0], [87.0, 7416.0], [87.1, 7416.0], [87.2, 7417.0], [87.3, 7417.0], [87.4, 7418.0], [87.5, 7418.0], [87.6, 7418.0], [87.7, 7426.0], [87.8, 7426.0], [87.9, 7426.0], [88.0, 7464.0], [88.1, 7464.0], [88.2, 7464.0], [88.3, 7469.0], [88.4, 7469.0], [88.5, 7469.0], [88.6, 7479.0], [88.7, 7479.0], [88.8, 7482.0], [88.9, 7482.0], [89.0, 7482.0], [89.1, 7498.0], [89.2, 7498.0], [89.3, 7498.0], [89.4, 7503.0], [89.5, 7503.0], [89.6, 7503.0], [89.7, 7509.0], [89.8, 7509.0], [89.9, 7509.0], [90.0, 7511.0], [90.1, 7511.0], [90.2, 7514.0], [90.3, 7514.0], [90.4, 7514.0], [90.5, 7515.0], [90.6, 7515.0], [90.7, 7515.0], [90.8, 7522.0], [90.9, 7522.0], [91.0, 7522.0], [91.1, 7523.0], [91.2, 7523.0], [91.3, 7523.0], [91.4, 7528.0], [91.5, 7528.0], [91.6, 7533.0], [91.7, 7533.0], [91.8, 7533.0], [91.9, 7545.0], [92.0, 7545.0], [92.1, 7545.0], [92.2, 7597.0], [92.3, 7597.0], [92.4, 7597.0], [92.5, 7600.0], [92.6, 7600.0], [92.7, 7600.0], [92.8, 7607.0], [92.9, 7607.0], [93.0, 7612.0], [93.1, 7612.0], [93.2, 7612.0], [93.3, 7619.0], [93.4, 7619.0], [93.5, 7619.0], [93.6, 7620.0], [93.7, 7620.0], [93.8, 7620.0], [93.9, 7620.0], [94.0, 7620.0], [94.1, 7620.0], [94.2, 7624.0], [94.3, 7624.0], [94.4, 7655.0], [94.5, 7655.0], [94.6, 7655.0], [94.7, 7688.0], [94.8, 7688.0], [94.9, 7688.0], [95.0, 7713.0], [95.1, 7713.0], [95.2, 7713.0], [95.3, 7718.0], [95.4, 7718.0], [95.5, 7718.0], [95.6, 7721.0], [95.7, 7721.0], [95.8, 7725.0], [95.9, 7725.0], [96.0, 7725.0], [96.1, 7726.0], [96.2, 7726.0], [96.3, 7726.0], [96.4, 7754.0], [96.5, 7754.0], [96.6, 7754.0], [96.7, 7769.0], [96.8, 7769.0], [96.9, 7769.0], [97.0, 7780.0], [97.1, 7780.0], [97.2, 7794.0], [97.3, 7794.0], [97.4, 7794.0], [97.5, 7796.0], [97.6, 7796.0], [97.7, 7796.0], [97.8, 7812.0], [97.9, 7812.0], [98.0, 7812.0], [98.1, 7829.0], [98.2, 7829.0], [98.3, 7829.0], [98.4, 7893.0], [98.5, 7893.0], [98.6, 7905.0], [98.7, 7905.0], [98.8, 7905.0], [98.9, 7922.0], [99.0, 7922.0], [99.1, 7922.0], [99.2, 8101.0], [99.3, 8101.0], [99.4, 8101.0], [99.5, 8110.0], [99.6, 8110.0], [99.7, 8110.0], [99.8, 8132.0], [99.9, 8132.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[0.0, 104.0], [0.1, 104.0], [0.2, 104.0], [0.3, 188.0], [0.4, 188.0], [0.5, 188.0], [0.6, 260.0], [0.7, 260.0], [0.8, 260.0], [0.9, 271.0], [1.0, 271.0], [1.1, 271.0], [1.2, 272.0], [1.3, 272.0], [1.4, 272.0], [1.5, 294.0], [1.6, 294.0], [1.7, 294.0], [1.8, 299.0], [1.9, 299.0], [2.0, 299.0], [2.1, 303.0], [2.2, 303.0], [2.3, 303.0], [2.4, 308.0], [2.5, 308.0], [2.6, 308.0], [2.7, 331.0], [2.8, 331.0], [2.9, 331.0], [3.0, 360.0], [3.1, 360.0], [3.2, 360.0], [3.3, 377.0], [3.4, 377.0], [3.5, 377.0], [3.6, 405.0], [3.7, 405.0], [3.8, 405.0], [3.9, 407.0], [4.0, 407.0], [4.1, 407.0], [4.2, 409.0], [4.3, 409.0], [4.4, 409.0], [4.5, 414.0], [4.6, 414.0], [4.7, 414.0], [4.8, 418.0], [4.9, 418.0], [5.0, 418.0], [5.1, 420.0], [5.2, 420.0], [5.3, 420.0], [5.4, 427.0], [5.5, 427.0], [5.6, 427.0], [5.7, 432.0], [5.8, 432.0], [5.9, 432.0], [6.0, 436.0], [6.1, 436.0], [6.2, 436.0], [6.3, 441.0], [6.4, 441.0], [6.5, 441.0], [6.6, 463.0], [6.7, 463.0], [6.8, 463.0], [6.9, 515.0], [7.0, 515.0], [7.1, 515.0], [7.2, 518.0], [7.3, 518.0], [7.4, 518.0], [7.5, 529.0], [7.6, 529.0], [7.7, 529.0], [7.8, 556.0], [7.9, 556.0], [8.0, 556.0], [8.1, 574.0], [8.2, 574.0], [8.3, 574.0], [8.4, 595.0], [8.5, 595.0], [8.6, 595.0], [8.7, 609.0], [8.8, 609.0], [8.9, 609.0], [9.0, 635.0], [9.1, 635.0], [9.2, 635.0], [9.3, 641.0], [9.4, 641.0], [9.5, 641.0], [9.6, 650.0], [9.7, 650.0], [9.8, 650.0], [9.9, 651.0], [10.0, 651.0], [10.1, 651.0], [10.2, 674.0], [10.3, 674.0], [10.4, 674.0], [10.5, 674.0], [10.6, 674.0], [10.7, 674.0], [10.8, 682.0], [10.9, 682.0], [11.0, 682.0], [11.1, 696.0], [11.2, 696.0], [11.3, 696.0], [11.4, 708.0], [11.5, 708.0], [11.6, 708.0], [11.7, 728.0], [11.8, 728.0], [11.9, 728.0], [12.0, 743.0], [12.1, 743.0], [12.2, 743.0], [12.3, 765.0], [12.4, 765.0], [12.5, 765.0], [12.6, 796.0], [12.7, 796.0], [12.8, 796.0], [12.9, 817.0], [13.0, 817.0], [13.1, 817.0], [13.2, 845.0], [13.3, 845.0], [13.4, 845.0], [13.5, 846.0], [13.6, 846.0], [13.7, 846.0], [13.8, 858.0], [13.9, 858.0], [14.0, 858.0], [14.1, 936.0], [14.2, 936.0], [14.3, 936.0], [14.4, 937.0], [14.5, 937.0], [14.6, 937.0], [14.7, 1005.0], [14.8, 1005.0], [14.9, 1005.0], [15.0, 1039.0], [15.1, 1039.0], [15.2, 1039.0], [15.3, 1044.0], [15.4, 1044.0], [15.5, 1044.0], [15.6, 1045.0], [15.7, 1045.0], [15.8, 1045.0], [15.9, 1050.0], [16.0, 1050.0], [16.1, 1050.0], [16.2, 1055.0], [16.3, 1055.0], [16.4, 1055.0], [16.5, 1081.0], [16.6, 1081.0], [16.7, 1081.0], [16.8, 1097.0], [16.9, 1097.0], [17.0, 1097.0], [17.1, 1101.0], [17.2, 1101.0], [17.3, 1101.0], [17.4, 1107.0], [17.5, 1107.0], [17.6, 1107.0], [17.7, 1120.0], [17.8, 1120.0], [17.9, 1120.0], [18.0, 1121.0], [18.1, 1121.0], [18.2, 1121.0], [18.3, 1157.0], [18.4, 1157.0], [18.5, 1157.0], [18.6, 1167.0], [18.7, 1167.0], [18.8, 1167.0], [18.9, 1210.0], [19.0, 1210.0], [19.1, 1210.0], [19.2, 1214.0], [19.3, 1214.0], [19.4, 1214.0], [19.5, 1248.0], [19.6, 1248.0], [19.7, 1248.0], [19.8, 1252.0], [19.9, 1252.0], [20.0, 1255.0], [20.1, 1255.0], [20.2, 1255.0], [20.3, 1321.0], [20.4, 1321.0], [20.5, 1321.0], [20.6, 1326.0], [20.7, 1326.0], [20.8, 1326.0], [20.9, 1331.0], [21.0, 1331.0], [21.1, 1331.0], [21.2, 1362.0], [21.3, 1362.0], [21.4, 1362.0], [21.5, 1449.0], [21.6, 1449.0], [21.7, 1449.0], [21.8, 1458.0], [21.9, 1458.0], [22.0, 1458.0], [22.1, 1464.0], [22.2, 1464.0], [22.3, 1464.0], [22.4, 1485.0], [22.5, 1485.0], [22.6, 1485.0], [22.7, 1505.0], [22.8, 1505.0], [22.9, 1505.0], [23.0, 1509.0], [23.1, 1509.0], [23.2, 1509.0], [23.3, 1511.0], [23.4, 1511.0], [23.5, 1511.0], [23.6, 1527.0], [23.7, 1527.0], [23.8, 1527.0], [23.9, 1586.0], [24.0, 1586.0], [24.1, 1586.0], [24.2, 1599.0], [24.3, 1599.0], [24.4, 1599.0], [24.5, 1604.0], [24.6, 1604.0], [24.7, 1604.0], [24.8, 1652.0], [24.9, 1652.0], [25.0, 1652.0], [25.1, 1681.0], [25.2, 1681.0], [25.3, 1681.0], [25.4, 1687.0], [25.5, 1687.0], [25.6, 1687.0], [25.7, 1743.0], [25.8, 1743.0], [25.9, 1743.0], [26.0, 1766.0], [26.1, 1766.0], [26.2, 1766.0], [26.3, 1778.0], [26.4, 1778.0], [26.5, 1778.0], [26.6, 1785.0], [26.7, 1785.0], [26.8, 1785.0], [26.9, 1801.0], [27.0, 1801.0], [27.1, 1801.0], [27.2, 1826.0], [27.3, 1826.0], [27.4, 1826.0], [27.5, 1857.0], [27.6, 1857.0], [27.7, 1857.0], [27.8, 1876.0], [27.9, 1876.0], [28.0, 1876.0], [28.1, 1907.0], [28.2, 1907.0], [28.3, 1907.0], [28.4, 1934.0], [28.5, 1934.0], [28.6, 1934.0], [28.7, 1935.0], [28.8, 1935.0], [28.9, 1935.0], [29.0, 1941.0], [29.1, 1941.0], [29.2, 1941.0], [29.3, 1975.0], [29.4, 1975.0], [29.5, 1975.0], [29.6, 1975.0], [29.7, 1975.0], [29.8, 1975.0], [29.9, 1982.0], [30.0, 1982.0], [30.1, 1982.0], [30.2, 2015.0], [30.3, 2015.0], [30.4, 2015.0], [30.5, 2023.0], [30.6, 2023.0], [30.7, 2023.0], [30.8, 2032.0], [30.9, 2032.0], [31.0, 2032.0], [31.1, 2034.0], [31.2, 2034.0], [31.3, 2034.0], [31.4, 2067.0], [31.5, 2067.0], [31.6, 2067.0], [31.7, 2078.0], [31.8, 2078.0], [31.9, 2078.0], [32.0, 2091.0], [32.1, 2091.0], [32.2, 2091.0], [32.3, 2098.0], [32.4, 2098.0], [32.5, 2098.0], [32.6, 2133.0], [32.7, 2133.0], [32.8, 2133.0], [32.9, 2159.0], [33.0, 2159.0], [33.1, 2159.0], [33.2, 2161.0], [33.3, 2161.0], [33.4, 2161.0], [33.5, 2163.0], [33.6, 2163.0], [33.7, 2163.0], [33.8, 2164.0], [33.9, 2164.0], [34.0, 2164.0], [34.1, 2169.0], [34.2, 2169.0], [34.3, 2169.0], [34.4, 2181.0], [34.5, 2181.0], [34.6, 2181.0], [34.7, 2202.0], [34.8, 2202.0], [34.9, 2202.0], [35.0, 2209.0], [35.1, 2209.0], [35.2, 2209.0], [35.3, 2217.0], [35.4, 2217.0], [35.5, 2217.0], [35.6, 2236.0], [35.7, 2236.0], [35.8, 2236.0], [35.9, 2240.0], [36.0, 2240.0], [36.1, 2240.0], [36.2, 2243.0], [36.3, 2243.0], [36.4, 2243.0], [36.5, 2250.0], [36.6, 2250.0], [36.7, 2250.0], [36.8, 2276.0], [36.9, 2276.0], [37.0, 2276.0], [37.1, 2278.0], [37.2, 2278.0], [37.3, 2278.0], [37.4, 2280.0], [37.5, 2280.0], [37.6, 2280.0], [37.7, 2281.0], [37.8, 2281.0], [37.9, 2281.0], [38.0, 2290.0], [38.1, 2290.0], [38.2, 2290.0], [38.3, 2292.0], [38.4, 2292.0], [38.5, 2292.0], [38.6, 2296.0], [38.7, 2296.0], [38.8, 2296.0], [38.9, 2298.0], [39.0, 2298.0], [39.1, 2298.0], [39.2, 2300.0], [39.3, 2300.0], [39.4, 2300.0], [39.5, 2318.0], [39.6, 2318.0], [39.7, 2318.0], [39.8, 2324.0], [39.9, 2324.0], [40.0, 2326.0], [40.1, 2326.0], [40.2, 2326.0], [40.3, 2350.0], [40.4, 2350.0], [40.5, 2350.0], [40.6, 2352.0], [40.7, 2352.0], [40.8, 2352.0], [40.9, 2369.0], [41.0, 2369.0], [41.1, 2369.0], [41.2, 2371.0], [41.3, 2371.0], [41.4, 2371.0], [41.5, 2377.0], [41.6, 2377.0], [41.7, 2377.0], [41.8, 2377.0], [41.9, 2377.0], [42.0, 2377.0], [42.1, 2380.0], [42.2, 2380.0], [42.3, 2380.0], [42.4, 2381.0], [42.5, 2381.0], [42.6, 2381.0], [42.7, 2381.0], [42.8, 2381.0], [42.9, 2381.0], [43.0, 2386.0], [43.1, 2386.0], [43.2, 2386.0], [43.3, 2388.0], [43.4, 2388.0], [43.5, 2388.0], [43.6, 2389.0], [43.7, 2389.0], [43.8, 2389.0], [43.9, 2393.0], [44.0, 2393.0], [44.1, 2393.0], [44.2, 2403.0], [44.3, 2403.0], [44.4, 2403.0], [44.5, 2406.0], [44.6, 2406.0], [44.7, 2406.0], [44.8, 2408.0], [44.9, 2408.0], [45.0, 2408.0], [45.1, 2410.0], [45.2, 2410.0], [45.3, 2410.0], [45.4, 2414.0], [45.5, 2414.0], [45.6, 2414.0], [45.7, 2420.0], [45.8, 2420.0], [45.9, 2420.0], [46.0, 2421.0], [46.1, 2421.0], [46.2, 2421.0], [46.3, 2432.0], [46.4, 2432.0], [46.5, 2432.0], [46.6, 2435.0], [46.7, 2435.0], [46.8, 2435.0], [46.9, 2439.0], [47.0, 2439.0], [47.1, 2439.0], [47.2, 2442.0], [47.3, 2442.0], [47.4, 2442.0], [47.5, 2446.0], [47.6, 2446.0], [47.7, 2446.0], [47.8, 2455.0], [47.9, 2455.0], [48.0, 2455.0], [48.1, 2456.0], [48.2, 2456.0], [48.3, 2456.0], [48.4, 2469.0], [48.5, 2469.0], [48.6, 2469.0], [48.7, 2470.0], [48.8, 2470.0], [48.9, 2470.0], [49.0, 2475.0], [49.1, 2475.0], [49.2, 2475.0], [49.3, 2475.0], [49.4, 2475.0], [49.5, 2475.0], [49.6, 2477.0], [49.7, 2477.0], [49.8, 2477.0], [49.9, 2480.0], [50.0, 2480.0], [50.1, 2480.0], [50.2, 2482.0], [50.3, 2482.0], [50.4, 2482.0], [50.5, 2483.0], [50.6, 2483.0], [50.7, 2483.0], [50.8, 2484.0], [50.9, 2484.0], [51.0, 2484.0], [51.1, 2485.0], [51.2, 2485.0], [51.3, 2485.0], [51.4, 2486.0], [51.5, 2486.0], [51.6, 2486.0], [51.7, 2488.0], [51.8, 2488.0], [51.9, 2488.0], [52.0, 2489.0], [52.1, 2489.0], [52.2, 2489.0], [52.3, 2493.0], [52.4, 2493.0], [52.5, 2493.0], [52.6, 2494.0], [52.7, 2494.0], [52.8, 2494.0], [52.9, 2496.0], [53.0, 2496.0], [53.1, 2496.0], [53.2, 2496.0], [53.3, 2496.0], [53.4, 2496.0], [53.5, 2506.0], [53.6, 2506.0], [53.7, 2506.0], [53.8, 2509.0], [53.9, 2509.0], [54.0, 2509.0], [54.1, 2512.0], [54.2, 2512.0], [54.3, 2512.0], [54.4, 2514.0], [54.5, 2514.0], [54.6, 2514.0], [54.7, 2520.0], [54.8, 2520.0], [54.9, 2520.0], [55.0, 2524.0], [55.1, 2524.0], [55.2, 2524.0], [55.3, 2527.0], [55.4, 2527.0], [55.5, 2527.0], [55.6, 2528.0], [55.7, 2528.0], [55.8, 2528.0], [55.9, 2534.0], [56.0, 2534.0], [56.1, 2534.0], [56.2, 2538.0], [56.3, 2538.0], [56.4, 2538.0], [56.5, 2545.0], [56.6, 2545.0], [56.7, 2545.0], [56.8, 2550.0], [56.9, 2550.0], [57.0, 2550.0], [57.1, 2551.0], [57.2, 2551.0], [57.3, 2551.0], [57.4, 2557.0], [57.5, 2557.0], [57.6, 2557.0], [57.7, 2564.0], [57.8, 2564.0], [57.9, 2564.0], [58.0, 2565.0], [58.1, 2565.0], [58.2, 2565.0], [58.3, 2568.0], [58.4, 2568.0], [58.5, 2568.0], [58.6, 2569.0], [58.7, 2569.0], [58.8, 2569.0], [58.9, 2571.0], [59.0, 2571.0], [59.1, 2571.0], [59.2, 2573.0], [59.3, 2573.0], [59.4, 2573.0], [59.5, 2576.0], [59.6, 2576.0], [59.7, 2576.0], [59.8, 2579.0], [59.9, 2579.0], [60.0, 2581.0], [60.1, 2581.0], [60.2, 2581.0], [60.3, 2583.0], [60.4, 2583.0], [60.5, 2583.0], [60.6, 2585.0], [60.7, 2585.0], [60.8, 2585.0], [60.9, 2585.0], [61.0, 2585.0], [61.1, 2585.0], [61.2, 2588.0], [61.3, 2588.0], [61.4, 2588.0], [61.5, 2590.0], [61.6, 2590.0], [61.7, 2590.0], [61.8, 2594.0], [61.9, 2594.0], [62.0, 2594.0], [62.1, 2594.0], [62.2, 2594.0], [62.3, 2594.0], [62.4, 2597.0], [62.5, 2597.0], [62.6, 2597.0], [62.7, 2599.0], [62.8, 2599.0], [62.9, 2599.0], [63.0, 2601.0], [63.1, 2601.0], [63.2, 2601.0], [63.3, 2605.0], [63.4, 2605.0], [63.5, 2605.0], [63.6, 2607.0], [63.7, 2607.0], [63.8, 2607.0], [63.9, 2614.0], [64.0, 2614.0], [64.1, 2614.0], [64.2, 2617.0], [64.3, 2617.0], [64.4, 2617.0], [64.5, 2617.0], [64.6, 2617.0], [64.7, 2617.0], [64.8, 2617.0], [64.9, 2617.0], [65.0, 2617.0], [65.1, 2618.0], [65.2, 2618.0], [65.3, 2618.0], [65.4, 2633.0], [65.5, 2633.0], [65.6, 2633.0], [65.7, 2656.0], [65.8, 2656.0], [65.9, 2656.0], [66.0, 2664.0], [66.1, 2664.0], [66.2, 2664.0], [66.3, 2669.0], [66.4, 2669.0], [66.5, 2669.0], [66.6, 2671.0], [66.7, 2671.0], [66.8, 2671.0], [66.9, 2674.0], [67.0, 2674.0], [67.1, 2674.0], [67.2, 2685.0], [67.3, 2685.0], [67.4, 2685.0], [67.5, 2685.0], [67.6, 2685.0], [67.7, 2685.0], [67.8, 2687.0], [67.9, 2687.0], [68.0, 2687.0], [68.1, 2687.0], [68.2, 2687.0], [68.3, 2687.0], [68.4, 2688.0], [68.5, 2688.0], [68.6, 2688.0], [68.7, 2689.0], [68.8, 2689.0], [68.9, 2689.0], [69.0, 2690.0], [69.1, 2690.0], [69.2, 2690.0], [69.3, 2690.0], [69.4, 2690.0], [69.5, 2690.0], [69.6, 2692.0], [69.7, 2692.0], [69.8, 2692.0], [69.9, 2693.0], [70.0, 2693.0], [70.1, 2693.0], [70.2, 2695.0], [70.3, 2695.0], [70.4, 2695.0], [70.5, 2695.0], [70.6, 2695.0], [70.7, 2695.0], [70.8, 2697.0], [70.9, 2697.0], [71.0, 2697.0], [71.1, 2697.0], [71.2, 2697.0], [71.3, 2697.0], [71.4, 2699.0], [71.5, 2699.0], [71.6, 2699.0], [71.7, 2702.0], [71.8, 2702.0], [71.9, 2702.0], [72.0, 2703.0], [72.1, 2703.0], [72.2, 2703.0], [72.3, 2706.0], [72.4, 2706.0], [72.5, 2706.0], [72.6, 2710.0], [72.7, 2710.0], [72.8, 2710.0], [72.9, 2710.0], [73.0, 2710.0], [73.1, 2710.0], [73.2, 2714.0], [73.3, 2714.0], [73.4, 2714.0], [73.5, 2716.0], [73.6, 2716.0], [73.7, 2716.0], [73.8, 2720.0], [73.9, 2720.0], [74.0, 2720.0], [74.1, 2732.0], [74.2, 2732.0], [74.3, 2732.0], [74.4, 2740.0], [74.5, 2740.0], [74.6, 2740.0], [74.7, 2742.0], [74.8, 2742.0], [74.9, 2742.0], [75.0, 2752.0], [75.1, 2752.0], [75.2, 2752.0], [75.3, 2754.0], [75.4, 2754.0], [75.5, 2754.0], [75.6, 2756.0], [75.7, 2756.0], [75.8, 2756.0], [75.9, 2757.0], [76.0, 2757.0], [76.1, 2757.0], [76.2, 2757.0], [76.3, 2757.0], [76.4, 2757.0], [76.5, 2761.0], [76.6, 2761.0], [76.7, 2761.0], [76.8, 2766.0], [76.9, 2766.0], [77.0, 2766.0], [77.1, 2767.0], [77.2, 2767.0], [77.3, 2767.0], [77.4, 2776.0], [77.5, 2776.0], [77.6, 2776.0], [77.7, 2777.0], [77.8, 2777.0], [77.9, 2777.0], [78.0, 2777.0], [78.1, 2777.0], [78.2, 2777.0], [78.3, 2779.0], [78.4, 2779.0], [78.5, 2779.0], [78.6, 2779.0], [78.7, 2779.0], [78.8, 2779.0], [78.9, 2786.0], [79.0, 2786.0], [79.1, 2786.0], [79.2, 2787.0], [79.3, 2787.0], [79.4, 2787.0], [79.5, 2787.0], [79.6, 2787.0], [79.7, 2787.0], [79.8, 2789.0], [79.9, 2789.0], [80.0, 2790.0], [80.1, 2790.0], [80.2, 2790.0], [80.3, 2791.0], [80.4, 2791.0], [80.5, 2791.0], [80.6, 2793.0], [80.7, 2793.0], [80.8, 2793.0], [80.9, 2796.0], [81.0, 2796.0], [81.1, 2796.0], [81.2, 2797.0], [81.3, 2797.0], [81.4, 2797.0], [81.5, 2798.0], [81.6, 2798.0], [81.7, 2798.0], [81.8, 2802.0], [81.9, 2802.0], [82.0, 2802.0], [82.1, 2802.0], [82.2, 2802.0], [82.3, 2802.0], [82.4, 2805.0], [82.5, 2805.0], [82.6, 2805.0], [82.7, 2806.0], [82.8, 2806.0], [82.9, 2806.0], [83.0, 2811.0], [83.1, 2811.0], [83.2, 2811.0], [83.3, 2812.0], [83.4, 2812.0], [83.5, 2812.0], [83.6, 2813.0], [83.7, 2813.0], [83.8, 2813.0], [83.9, 2815.0], [84.0, 2815.0], [84.1, 2815.0], [84.2, 2818.0], [84.3, 2818.0], [84.4, 2818.0], [84.5, 2818.0], [84.6, 2818.0], [84.7, 2818.0], [84.8, 2819.0], [84.9, 2819.0], [85.0, 2819.0], [85.1, 2822.0], [85.2, 2822.0], [85.3, 2822.0], [85.4, 2829.0], [85.5, 2829.0], [85.6, 2829.0], [85.7, 2838.0], [85.8, 2838.0], [85.9, 2838.0], [86.0, 2839.0], [86.1, 2839.0], [86.2, 2839.0], [86.3, 2853.0], [86.4, 2853.0], [86.5, 2853.0], [86.6, 2871.0], [86.7, 2871.0], [86.8, 2871.0], [86.9, 2874.0], [87.0, 2874.0], [87.1, 2874.0], [87.2, 2879.0], [87.3, 2879.0], [87.4, 2879.0], [87.5, 2879.0], [87.6, 2879.0], [87.7, 2879.0], [87.8, 2880.0], [87.9, 2880.0], [88.0, 2880.0], [88.1, 2882.0], [88.2, 2882.0], [88.3, 2882.0], [88.4, 2883.0], [88.5, 2883.0], [88.6, 2883.0], [88.7, 2885.0], [88.8, 2885.0], [88.9, 2885.0], [89.0, 2888.0], [89.1, 2888.0], [89.2, 2888.0], [89.3, 2889.0], [89.4, 2889.0], [89.5, 2889.0], [89.6, 2891.0], [89.7, 2891.0], [89.8, 2891.0], [89.9, 2892.0], [90.0, 2892.0], [90.1, 2892.0], [90.2, 2896.0], [90.3, 2896.0], [90.4, 2896.0], [90.5, 2896.0], [90.6, 2896.0], [90.7, 2896.0], [90.8, 2896.0], [90.9, 2896.0], [91.0, 2896.0], [91.1, 2897.0], [91.2, 2897.0], [91.3, 2897.0], [91.4, 2897.0], [91.5, 2897.0], [91.6, 2897.0], [91.7, 2899.0], [91.8, 2899.0], [91.9, 2899.0], [92.0, 2899.0], [92.1, 2899.0], [92.2, 2899.0], [92.3, 2903.0], [92.4, 2903.0], [92.5, 2903.0], [92.6, 2905.0], [92.7, 2905.0], [92.8, 2905.0], [92.9, 2905.0], [93.0, 2905.0], [93.1, 2905.0], [93.2, 2907.0], [93.3, 2907.0], [93.4, 2907.0], [93.5, 2908.0], [93.6, 2908.0], [93.7, 2908.0], [93.8, 2909.0], [93.9, 2909.0], [94.0, 2909.0], [94.1, 2920.0], [94.2, 2920.0], [94.3, 2920.0], [94.4, 2932.0], [94.5, 2932.0], [94.6, 2932.0], [94.7, 2939.0], [94.8, 2939.0], [94.9, 2939.0], [95.0, 2982.0], [95.1, 2982.0], [95.2, 2982.0], [95.3, 2984.0], [95.4, 2984.0], [95.5, 2984.0], [95.6, 2987.0], [95.7, 2987.0], [95.8, 2987.0], [95.9, 3010.0], [96.0, 3010.0], [96.1, 3010.0], [96.2, 3012.0], [96.3, 3012.0], [96.4, 3012.0], [96.5, 3062.0], [96.6, 3062.0], [96.7, 3062.0], [96.8, 3075.0], [96.9, 3075.0], [97.0, 3075.0], [97.1, 3087.0], [97.2, 3087.0], [97.3, 3087.0], [97.4, 3100.0], [97.5, 3100.0], [97.6, 3100.0], [97.7, 3105.0], [97.8, 3105.0], [97.9, 3105.0], [98.0, 3107.0], [98.1, 3107.0], [98.2, 3107.0], [98.3, 3108.0], [98.4, 3108.0], [98.5, 3108.0], [98.6, 3125.0], [98.7, 3125.0], [98.8, 3125.0], [98.9, 3140.0], [99.0, 3140.0], [99.1, 3140.0], [99.2, 3174.0], [99.3, 3174.0], [99.4, 3174.0], [99.5, 3480.0], [99.6, 3480.0], [99.7, 3480.0], [99.8, 3724.0], [99.9, 3724.0], [100.0, 3724.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[0.0, 11496.0], [0.1, 11496.0], [0.2, 11496.0], [0.3, 18700.0], [0.4, 18700.0], [0.5, 18700.0], [0.6, 22327.0], [0.7, 22327.0], [0.8, 22774.0], [0.9, 22774.0], [1.0, 22774.0], [1.1, 25832.0], [1.2, 25832.0], [1.3, 25832.0], [1.4, 26142.0], [1.5, 26142.0], [1.6, 28660.0], [1.7, 28660.0], [1.8, 28660.0], [1.9, 29316.0], [2.0, 29316.0], [2.1, 29316.0], [2.2, 29578.0], [2.3, 29578.0], [2.4, 29791.0], [2.5, 29791.0], [2.6, 29791.0], [2.7, 30031.0], [2.8, 30031.0], [2.9, 30031.0], [3.0, 30122.0], [3.1, 30122.0], [3.2, 30874.0], [3.3, 30874.0], [3.4, 30874.0], [3.5, 31042.0], [3.6, 31042.0], [3.7, 31042.0], [3.8, 31157.0], [3.9, 31157.0], [4.0, 31158.0], [4.1, 31158.0], [4.2, 31158.0], [4.3, 31268.0], [4.4, 31268.0], [4.5, 31268.0], [4.6, 31286.0], [4.7, 31286.0], [4.8, 31354.0], [4.9, 31354.0], [5.0, 31354.0], [5.1, 31358.0], [5.2, 31358.0], [5.3, 31358.0], [5.4, 31365.0], [5.5, 31365.0], [5.6, 31379.0], [5.7, 31379.0], [5.8, 31379.0], [5.9, 31517.0], [6.0, 31517.0], [6.1, 31517.0], [6.2, 31563.0], [6.3, 31563.0], [6.4, 31563.0], [6.5, 31563.0], [6.6, 31563.0], [6.7, 31646.0], [6.8, 31646.0], [6.9, 31646.0], [7.0, 31652.0], [7.1, 31652.0], [7.2, 31768.0], [7.3, 31768.0], [7.4, 31768.0], [7.5, 31770.0], [7.6, 31770.0], [7.7, 31770.0], [7.8, 31820.0], [7.9, 31820.0], [8.0, 31901.0], [8.1, 31901.0], [8.2, 31901.0], [8.3, 31910.0], [8.4, 31910.0], [8.5, 31910.0], [8.6, 31919.0], [8.7, 31919.0], [8.8, 31980.0], [8.9, 31980.0], [9.0, 31980.0], [9.1, 32031.0], [9.2, 32031.0], [9.3, 32031.0], [9.4, 32075.0], [9.5, 32075.0], [9.6, 32267.0], [9.7, 32267.0], [9.8, 32267.0], [9.9, 32274.0], [10.0, 32274.0], [10.1, 32274.0], [10.2, 32287.0], [10.3, 32287.0], [10.4, 32389.0], [10.5, 32389.0], [10.6, 32389.0], [10.7, 32394.0], [10.8, 32394.0], [10.9, 32394.0], [11.0, 32484.0], [11.1, 32484.0], [11.2, 32587.0], [11.3, 32587.0], [11.4, 32587.0], [11.5, 32596.0], [11.6, 32596.0], [11.7, 32596.0], [11.8, 32620.0], [11.9, 32620.0], [12.0, 32628.0], [12.1, 32628.0], [12.2, 32628.0], [12.3, 32693.0], [12.4, 32693.0], [12.5, 32696.0], [12.6, 32696.0], [12.7, 32696.0], [12.8, 32697.0], [12.9, 32697.0], [13.0, 32697.0], [13.1, 32714.0], [13.2, 32714.0], [13.3, 32757.0], [13.4, 32757.0], [13.5, 32757.0], [13.6, 32773.0], [13.7, 32773.0], [13.8, 32773.0], [13.9, 32786.0], [14.0, 32786.0], [14.1, 32798.0], [14.2, 32798.0], [14.3, 32798.0], [14.4, 32802.0], [14.5, 32802.0], [14.6, 32802.0], [14.7, 32851.0], [14.8, 32851.0], [14.9, 32890.0], [15.0, 32890.0], [15.1, 32890.0], [15.2, 32898.0], [15.3, 32898.0], [15.4, 32898.0], [15.5, 32901.0], [15.6, 32901.0], [15.7, 32980.0], [15.8, 32980.0], [15.9, 32980.0], [16.0, 32983.0], [16.1, 32983.0], [16.2, 32983.0], [16.3, 33003.0], [16.4, 33003.0], [16.5, 33060.0], [16.6, 33060.0], [16.7, 33060.0], [16.8, 33077.0], [16.9, 33077.0], [17.0, 33077.0], [17.1, 33094.0], [17.2, 33094.0], [17.3, 33096.0], [17.4, 33096.0], [17.5, 33096.0], [17.6, 33104.0], [17.7, 33104.0], [17.8, 33104.0], [17.9, 33114.0], [18.0, 33114.0], [18.1, 33132.0], [18.2, 33132.0], [18.3, 33132.0], [18.4, 33180.0], [18.5, 33180.0], [18.6, 33180.0], [18.7, 33191.0], [18.8, 33191.0], [18.9, 33242.0], [19.0, 33242.0], [19.1, 33242.0], [19.2, 33250.0], [19.3, 33250.0], [19.4, 33250.0], [19.5, 33253.0], [19.6, 33253.0], [19.7, 33256.0], [19.8, 33256.0], [19.9, 33256.0], [20.0, 33293.0], [20.1, 33293.0], [20.2, 33293.0], [20.3, 33340.0], [20.4, 33340.0], [20.5, 33409.0], [20.6, 33409.0], [20.7, 33409.0], [20.8, 33422.0], [20.9, 33422.0], [21.0, 33422.0], [21.1, 33434.0], [21.2, 33434.0], [21.3, 33445.0], [21.4, 33445.0], [21.5, 33445.0], [21.6, 33503.0], [21.7, 33503.0], [21.8, 33503.0], [21.9, 33549.0], [22.0, 33549.0], [22.1, 33554.0], [22.2, 33554.0], [22.3, 33554.0], [22.4, 33594.0], [22.5, 33594.0], [22.6, 33594.0], [22.7, 33600.0], [22.8, 33600.0], [22.9, 33605.0], [23.0, 33605.0], [23.1, 33605.0], [23.2, 33611.0], [23.3, 33611.0], [23.4, 33611.0], [23.5, 33617.0], [23.6, 33617.0], [23.7, 33683.0], [23.8, 33683.0], [23.9, 33683.0], [24.0, 33687.0], [24.1, 33687.0], [24.2, 33687.0], [24.3, 33691.0], [24.4, 33691.0], [24.5, 33716.0], [24.6, 33716.0], [24.7, 33716.0], [24.8, 33721.0], [24.9, 33721.0], [25.0, 33727.0], [25.1, 33727.0], [25.2, 33727.0], [25.3, 33737.0], [25.4, 33737.0], [25.5, 33737.0], [25.6, 33769.0], [25.7, 33769.0], [25.8, 33782.0], [25.9, 33782.0], [26.0, 33782.0], [26.1, 33808.0], [26.2, 33808.0], [26.3, 33808.0], [26.4, 33809.0], [26.5, 33809.0], [26.6, 33809.0], [26.7, 33809.0], [26.8, 33809.0], [26.9, 33810.0], [27.0, 33810.0], [27.1, 33810.0], [27.2, 33830.0], [27.3, 33830.0], [27.4, 33848.0], [27.5, 33848.0], [27.6, 33848.0], [27.7, 33862.0], [27.8, 33862.0], [27.9, 33862.0], [28.0, 33879.0], [28.1, 33879.0], [28.2, 33908.0], [28.3, 33908.0], [28.4, 33908.0], [28.5, 33920.0], [28.6, 33920.0], [28.7, 33920.0], [28.8, 33923.0], [28.9, 33923.0], [29.0, 33929.0], [29.1, 33929.0], [29.2, 33929.0], [29.3, 33930.0], [29.4, 33930.0], [29.5, 33930.0], [29.6, 33998.0], [29.7, 33998.0], [29.8, 34015.0], [29.9, 34015.0], [30.0, 34015.0], [30.1, 34017.0], [30.2, 34017.0], [30.3, 34017.0], [30.4, 34027.0], [30.5, 34027.0], [30.6, 34028.0], [30.7, 34028.0], [30.8, 34028.0], [30.9, 34036.0], [31.0, 34036.0], [31.1, 34036.0], [31.2, 34041.0], [31.3, 34041.0], [31.4, 34045.0], [31.5, 34045.0], [31.6, 34045.0], [31.7, 34045.0], [31.8, 34045.0], [31.9, 34045.0], [32.0, 34049.0], [32.1, 34049.0], [32.2, 34052.0], [32.3, 34052.0], [32.4, 34052.0], [32.5, 34055.0], [32.6, 34055.0], [32.7, 34055.0], [32.8, 34060.0], [32.9, 34060.0], [33.0, 34087.0], [33.1, 34087.0], [33.2, 34087.0], [33.3, 34098.0], [33.4, 34098.0], [33.5, 34098.0], [33.6, 34105.0], [33.7, 34105.0], [33.8, 34172.0], [33.9, 34172.0], [34.0, 34172.0], [34.1, 34177.0], [34.2, 34177.0], [34.3, 34177.0], [34.4, 34195.0], [34.5, 34195.0], [34.6, 34215.0], [34.7, 34215.0], [34.8, 34215.0], [34.9, 34224.0], [35.0, 34224.0], [35.1, 34224.0], [35.2, 34233.0], [35.3, 34233.0], [35.4, 34233.0], [35.5, 34233.0], [35.6, 34233.0], [35.7, 34247.0], [35.8, 34247.0], [35.9, 34247.0], [36.0, 34248.0], [36.1, 34248.0], [36.2, 34270.0], [36.3, 34270.0], [36.4, 34270.0], [36.5, 34281.0], [36.6, 34281.0], [36.7, 34281.0], [36.8, 34290.0], [36.9, 34290.0], [37.0, 34303.0], [37.1, 34303.0], [37.2, 34303.0], [37.3, 34311.0], [37.4, 34311.0], [37.5, 34311.0], [37.6, 34326.0], [37.7, 34326.0], [37.8, 34328.0], [37.9, 34328.0], [38.0, 34328.0], [38.1, 34331.0], [38.2, 34331.0], [38.3, 34336.0], [38.4, 34336.0], [38.5, 34336.0], [38.6, 34344.0], [38.7, 34344.0], [38.8, 34344.0], [38.9, 34345.0], [39.0, 34345.0], [39.1, 34369.0], [39.2, 34369.0], [39.3, 34369.0], [39.4, 34392.0], [39.5, 34392.0], [39.6, 34392.0], [39.7, 34397.0], [39.8, 34397.0], [39.9, 34404.0], [40.0, 34404.0], [40.1, 34404.0], [40.2, 34407.0], [40.3, 34407.0], [40.4, 34407.0], [40.5, 34408.0], [40.6, 34408.0], [40.7, 34414.0], [40.8, 34414.0], [40.9, 34414.0], [41.0, 34437.0], [41.1, 34437.0], [41.2, 34437.0], [41.3, 34437.0], [41.4, 34437.0], [41.5, 34440.0], [41.6, 34440.0], [41.7, 34440.0], [41.8, 34442.0], [41.9, 34442.0], [42.0, 34442.0], [42.1, 34442.0], [42.2, 34442.0], [42.3, 34460.0], [42.4, 34460.0], [42.5, 34460.0], [42.6, 34465.0], [42.7, 34465.0], [42.8, 34465.0], [42.9, 34477.0], [43.0, 34477.0], [43.1, 34496.0], [43.2, 34496.0], [43.3, 34496.0], [43.4, 34511.0], [43.5, 34511.0], [43.6, 34511.0], [43.7, 34515.0], [43.8, 34515.0], [43.9, 34521.0], [44.0, 34521.0], [44.1, 34521.0], [44.2, 34526.0], [44.3, 34526.0], [44.4, 34526.0], [44.5, 34533.0], [44.6, 34533.0], [44.7, 34547.0], [44.8, 34547.0], [44.9, 34547.0], [45.0, 34553.0], [45.1, 34553.0], [45.2, 34553.0], [45.3, 34562.0], [45.4, 34562.0], [45.5, 34564.0], [45.6, 34564.0], [45.7, 34564.0], [45.8, 34565.0], [45.9, 34565.0], [46.0, 34565.0], [46.1, 34586.0], [46.2, 34586.0], [46.3, 34639.0], [46.4, 34639.0], [46.5, 34639.0], [46.6, 34677.0], [46.7, 34677.0], [46.8, 34677.0], [46.9, 34685.0], [47.0, 34685.0], [47.1, 34721.0], [47.2, 34721.0], [47.3, 34721.0], [47.4, 34734.0], [47.5, 34734.0], [47.6, 34734.0], [47.7, 34738.0], [47.8, 34738.0], [47.9, 34741.0], [48.0, 34741.0], [48.1, 34741.0], [48.2, 34749.0], [48.3, 34749.0], [48.4, 34749.0], [48.5, 34780.0], [48.6, 34780.0], [48.7, 34833.0], [48.8, 34833.0], [48.9, 34833.0], [49.0, 34837.0], [49.1, 34837.0], [49.2, 34837.0], [49.3, 34839.0], [49.4, 34839.0], [49.5, 34844.0], [49.6, 34844.0], [49.7, 34844.0], [49.8, 34845.0], [49.9, 34845.0], [50.0, 34845.0], [50.1, 34847.0], [50.2, 34847.0], [50.3, 34855.0], [50.4, 34855.0], [50.5, 34855.0], [50.6, 34870.0], [50.7, 34870.0], [50.8, 34901.0], [50.9, 34901.0], [51.0, 34901.0], [51.1, 34932.0], [51.2, 34932.0], [51.3, 34932.0], [51.4, 34935.0], [51.5, 34935.0], [51.6, 34945.0], [51.7, 34945.0], [51.8, 34945.0], [51.9, 34950.0], [52.0, 34950.0], [52.1, 34950.0], [52.2, 34970.0], [52.3, 34970.0], [52.4, 34987.0], [52.5, 34987.0], [52.6, 34987.0], [52.7, 35001.0], [52.8, 35001.0], [52.9, 35001.0], [53.0, 35046.0], [53.1, 35046.0], [53.2, 35046.0], [53.3, 35046.0], [53.4, 35046.0], [53.5, 35049.0], [53.6, 35049.0], [53.7, 35049.0], [53.8, 35068.0], [53.9, 35068.0], [54.0, 35108.0], [54.1, 35108.0], [54.2, 35108.0], [54.3, 35111.0], [54.4, 35111.0], [54.5, 35111.0], [54.6, 35125.0], [54.7, 35125.0], [54.8, 35132.0], [54.9, 35132.0], [55.0, 35132.0], [55.1, 35137.0], [55.2, 35137.0], [55.3, 35137.0], [55.4, 35138.0], [55.5, 35138.0], [55.6, 35149.0], [55.7, 35149.0], [55.8, 35149.0], [55.9, 35158.0], [56.0, 35158.0], [56.1, 35158.0], [56.2, 35182.0], [56.3, 35182.0], [56.4, 35189.0], [56.5, 35189.0], [56.6, 35189.0], [56.7, 35205.0], [56.8, 35205.0], [56.9, 35205.0], [57.0, 35208.0], [57.1, 35208.0], [57.2, 35216.0], [57.3, 35216.0], [57.4, 35216.0], [57.5, 35219.0], [57.6, 35219.0], [57.7, 35219.0], [57.8, 35247.0], [57.9, 35247.0], [58.0, 35248.0], [58.1, 35248.0], [58.2, 35248.0], [58.3, 35253.0], [58.4, 35253.0], [58.5, 35253.0], [58.6, 35254.0], [58.7, 35254.0], [58.8, 35260.0], [58.9, 35260.0], [59.0, 35260.0], [59.1, 35262.0], [59.2, 35262.0], [59.3, 35262.0], [59.4, 35267.0], [59.5, 35267.0], [59.6, 35274.0], [59.7, 35274.0], [59.8, 35274.0], [59.9, 35286.0], [60.0, 35286.0], [60.1, 35286.0], [60.2, 35308.0], [60.3, 35308.0], [60.4, 35311.0], [60.5, 35311.0], [60.6, 35311.0], [60.7, 35346.0], [60.8, 35346.0], [60.9, 35346.0], [61.0, 35347.0], [61.1, 35347.0], [61.2, 35362.0], [61.3, 35362.0], [61.4, 35362.0], [61.5, 35367.0], [61.6, 35367.0], [61.7, 35367.0], [61.8, 35374.0], [61.9, 35374.0], [62.0, 35384.0], [62.1, 35384.0], [62.2, 35384.0], [62.3, 35401.0], [62.4, 35401.0], [62.5, 35401.0], [62.6, 35414.0], [62.7, 35414.0], [62.8, 35430.0], [62.9, 35430.0], [63.0, 35430.0], [63.1, 35437.0], [63.2, 35437.0], [63.3, 35445.0], [63.4, 35445.0], [63.5, 35445.0], [63.6, 35446.0], [63.7, 35446.0], [63.8, 35446.0], [63.9, 35448.0], [64.0, 35448.0], [64.1, 35465.0], [64.2, 35465.0], [64.3, 35465.0], [64.4, 35473.0], [64.5, 35473.0], [64.6, 35473.0], [64.7, 35485.0], [64.8, 35485.0], [64.9, 35565.0], [65.0, 35565.0], [65.1, 35565.0], [65.2, 35565.0], [65.3, 35565.0], [65.4, 35565.0], [65.5, 35568.0], [65.6, 35568.0], [65.7, 35589.0], [65.8, 35589.0], [65.9, 35589.0], [66.0, 35610.0], [66.1, 35610.0], [66.2, 35610.0], [66.3, 35629.0], [66.4, 35629.0], [66.5, 35641.0], [66.6, 35641.0], [66.7, 35641.0], [66.8, 35662.0], [66.9, 35662.0], [67.0, 35662.0], [67.1, 35669.0], [67.2, 35669.0], [67.3, 35669.0], [67.4, 35669.0], [67.5, 35669.0], [67.6, 35681.0], [67.7, 35681.0], [67.8, 35681.0], [67.9, 35695.0], [68.0, 35695.0], [68.1, 35712.0], [68.2, 35712.0], [68.3, 35712.0], [68.4, 35730.0], [68.5, 35730.0], [68.6, 35730.0], [68.7, 35758.0], [68.8, 35758.0], [68.9, 35771.0], [69.0, 35771.0], [69.1, 35771.0], [69.2, 35777.0], [69.3, 35777.0], [69.4, 35777.0], [69.5, 35843.0], [69.6, 35843.0], [69.7, 35860.0], [69.8, 35860.0], [69.9, 35860.0], [70.0, 35863.0], [70.1, 35863.0], [70.2, 35863.0], [70.3, 35871.0], [70.4, 35871.0], [70.5, 35875.0], [70.6, 35875.0], [70.7, 35875.0], [70.8, 35911.0], [70.9, 35911.0], [71.0, 35911.0], [71.1, 35915.0], [71.2, 35915.0], [71.3, 35928.0], [71.4, 35928.0], [71.5, 35928.0], [71.6, 35944.0], [71.7, 35944.0], [71.8, 35944.0], [71.9, 35944.0], [72.0, 35944.0], [72.1, 35945.0], [72.2, 35945.0], [72.3, 35945.0], [72.4, 35995.0], [72.5, 35995.0], [72.6, 35995.0], [72.7, 36012.0], [72.8, 36012.0], [72.9, 36012.0], [73.0, 36012.0], [73.1, 36012.0], [73.2, 36033.0], [73.3, 36033.0], [73.4, 36033.0], [73.5, 36049.0], [73.6, 36049.0], [73.7, 36055.0], [73.8, 36055.0], [73.9, 36055.0], [74.0, 36068.0], [74.1, 36068.0], [74.2, 36068.0], [74.3, 36068.0], [74.4, 36068.0], [74.5, 36074.0], [74.6, 36074.0], [74.7, 36074.0], [74.8, 36076.0], [74.9, 36076.0], [75.0, 36076.0], [75.1, 36085.0], [75.2, 36085.0], [75.3, 36091.0], [75.4, 36091.0], [75.5, 36091.0], [75.6, 36125.0], [75.7, 36125.0], [75.8, 36149.0], [75.9, 36149.0], [76.0, 36149.0], [76.1, 36152.0], [76.2, 36152.0], [76.3, 36152.0], [76.4, 36155.0], [76.5, 36155.0], [76.6, 36174.0], [76.7, 36174.0], [76.8, 36174.0], [76.9, 36184.0], [77.0, 36184.0], [77.1, 36184.0], [77.2, 36188.0], [77.3, 36188.0], [77.4, 36229.0], [77.5, 36229.0], [77.6, 36229.0], [77.7, 36271.0], [77.8, 36271.0], [77.9, 36271.0], [78.0, 36281.0], [78.1, 36281.0], [78.2, 36281.0], [78.3, 36281.0], [78.4, 36281.0], [78.5, 36282.0], [78.6, 36282.0], [78.7, 36282.0], [78.8, 36284.0], [78.9, 36284.0], [79.0, 36285.0], [79.1, 36285.0], [79.2, 36285.0], [79.3, 36302.0], [79.4, 36302.0], [79.5, 36302.0], [79.6, 36326.0], [79.7, 36326.0], [79.8, 36356.0], [79.9, 36356.0], [80.0, 36356.0], [80.1, 36369.0], [80.2, 36369.0], [80.3, 36369.0], [80.4, 36457.0], [80.5, 36457.0], [80.6, 36482.0], [80.7, 36482.0], [80.8, 36482.0], [80.9, 36489.0], [81.0, 36489.0], [81.1, 36489.0], [81.2, 36493.0], [81.3, 36493.0], [81.4, 36495.0], [81.5, 36495.0], [81.6, 36495.0], [81.7, 36498.0], [81.8, 36498.0], [81.9, 36498.0], [82.0, 36501.0], [82.1, 36501.0], [82.2, 36504.0], [82.3, 36504.0], [82.4, 36504.0], [82.5, 36543.0], [82.6, 36543.0], [82.7, 36543.0], [82.8, 36554.0], [82.9, 36554.0], [83.0, 36558.0], [83.1, 36558.0], [83.2, 36558.0], [83.3, 36585.0], [83.4, 36585.0], [83.5, 36585.0], [83.6, 36586.0], [83.7, 36586.0], [83.8, 36588.0], [83.9, 36588.0], [84.0, 36588.0], [84.1, 36593.0], [84.2, 36593.0], [84.3, 36593.0], [84.4, 36604.0], [84.5, 36604.0], [84.6, 36605.0], [84.7, 36605.0], [84.8, 36605.0], [84.9, 36622.0], [85.0, 36622.0], [85.1, 36622.0], [85.2, 36625.0], [85.3, 36625.0], [85.4, 36653.0], [85.5, 36653.0], [85.6, 36653.0], [85.7, 36667.0], [85.8, 36667.0], [85.9, 36667.0], [86.0, 36668.0], [86.1, 36668.0], [86.2, 36689.0], [86.3, 36689.0], [86.4, 36689.0], [86.5, 36690.0], [86.6, 36690.0], [86.7, 36690.0], [86.8, 36704.0], [86.9, 36704.0], [87.0, 36705.0], [87.1, 36705.0], [87.2, 36705.0], [87.3, 36772.0], [87.4, 36772.0], [87.5, 36772.0], [87.6, 36778.0], [87.7, 36778.0], [87.8, 36798.0], [87.9, 36798.0], [88.0, 36798.0], [88.1, 36821.0], [88.2, 36821.0], [88.3, 36826.0], [88.4, 36826.0], [88.5, 36826.0], [88.6, 36894.0], [88.7, 36894.0], [88.8, 36894.0], [88.9, 36896.0], [89.0, 36896.0], [89.1, 36911.0], [89.2, 36911.0], [89.3, 36911.0], [89.4, 36922.0], [89.5, 36922.0], [89.6, 36922.0], [89.7, 36933.0], [89.8, 36933.0], [89.9, 36959.0], [90.0, 36959.0], [90.1, 36959.0], [90.2, 36961.0], [90.3, 36961.0], [90.4, 36961.0], [90.5, 37096.0], [90.6, 37096.0], [90.7, 37111.0], [90.8, 37111.0], [90.9, 37111.0], [91.0, 37136.0], [91.1, 37136.0], [91.2, 37136.0], [91.3, 37137.0], [91.4, 37137.0], [91.5, 37166.0], [91.6, 37166.0], [91.7, 37166.0], [91.8, 37169.0], [91.9, 37169.0], [92.0, 37169.0], [92.1, 37226.0], [92.2, 37226.0], [92.3, 37288.0], [92.4, 37288.0], [92.5, 37288.0], [92.6, 37293.0], [92.7, 37293.0], [92.8, 37293.0], [92.9, 37320.0], [93.0, 37320.0], [93.1, 37340.0], [93.2, 37340.0], [93.3, 37340.0], [93.4, 37388.0], [93.5, 37388.0], [93.6, 37388.0], [93.7, 37391.0], [93.8, 37391.0], [93.9, 37411.0], [94.0, 37411.0], [94.1, 37411.0], [94.2, 37416.0], [94.3, 37416.0], [94.4, 37416.0], [94.5, 37503.0], [94.6, 37503.0], [94.7, 37584.0], [94.8, 37584.0], [94.9, 37584.0], [95.0, 37594.0], [95.1, 37594.0], [95.2, 37594.0], [95.3, 37625.0], [95.4, 37625.0], [95.5, 37684.0], [95.6, 37684.0], [95.7, 37684.0], [95.8, 37724.0], [95.9, 37724.0], [96.0, 37724.0], [96.1, 37753.0], [96.2, 37753.0], [96.3, 37803.0], [96.4, 37803.0], [96.5, 37803.0], [96.6, 37887.0], [96.7, 37887.0], [96.8, 37887.0], [96.9, 37897.0], [97.0, 37897.0], [97.1, 37903.0], [97.2, 37903.0], [97.3, 37903.0], [97.4, 37915.0], [97.5, 37915.0], [97.6, 37915.0], [97.7, 38050.0], [97.8, 38050.0], [97.9, 38119.0], [98.0, 38119.0], [98.1, 38119.0], [98.2, 38270.0], [98.3, 38270.0], [98.4, 38270.0], [98.5, 38315.0], [98.6, 38315.0], [98.7, 38531.0], [98.8, 38531.0], [98.9, 38531.0], [99.0, 38647.0], [99.1, 38647.0], [99.2, 38647.0], [99.3, 38668.0], [99.4, 38668.0], [99.5, 38732.0], [99.6, 38732.0], [99.7, 38732.0], [99.8, 38928.0], [99.9, 38928.0], [100.0, 38928.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 86.0], [7.1, 86.0], [7.2, 86.0], [7.3, 88.0], [7.4, 88.0], [7.5, 88.0], [7.6, 93.0], [7.7, 93.0], [7.8, 93.0], [7.9, 96.0], [8.0, 96.0], [8.1, 96.0], [8.2, 97.0], [8.3, 97.0], [8.4, 97.0], [8.5, 99.0], [8.6, 99.0], [8.7, 99.0], [8.8, 99.0], [8.9, 99.0], [9.0, 109.0], [9.1, 109.0], [9.2, 109.0], [9.3, 110.0], [9.4, 110.0], [9.5, 110.0], [9.6, 127.0], [9.7, 127.0], [9.8, 127.0], [9.9, 132.0], [10.0, 132.0], [10.1, 132.0], [10.2, 135.0], [10.3, 135.0], [10.4, 135.0], [10.5, 139.0], [10.6, 139.0], [10.7, 139.0], [10.8, 139.0], [10.9, 139.0], [11.0, 139.0], [11.1, 141.0], [11.2, 141.0], [11.3, 141.0], [11.4, 143.0], [11.5, 143.0], [11.6, 144.0], [11.7, 144.0], [11.8, 144.0], [11.9, 146.0], [12.0, 146.0], [12.1, 146.0], [12.2, 151.0], [12.3, 151.0], [12.4, 151.0], [12.5, 154.0], [12.6, 154.0], [12.7, 154.0], [12.8, 156.0], [12.9, 156.0], [13.0, 156.0], [13.1, 160.0], [13.2, 160.0], [13.3, 160.0], [13.4, 166.0], [13.5, 166.0], [13.6, 166.0], [13.7, 167.0], [13.8, 167.0], [13.9, 167.0], [14.0, 168.0], [14.1, 168.0], [14.2, 168.0], [14.3, 171.0], [14.4, 171.0], [14.5, 174.0], [14.6, 174.0], [14.7, 174.0], [14.8, 174.0], [14.9, 174.0], [15.0, 174.0], [15.1, 176.0], [15.2, 176.0], [15.3, 176.0], [15.4, 176.0], [15.5, 176.0], [15.6, 176.0], [15.7, 182.0], [15.8, 182.0], [15.9, 182.0], [16.0, 183.0], [16.1, 183.0], [16.2, 183.0], [16.3, 185.0], [16.4, 185.0], [16.5, 185.0], [16.6, 186.0], [16.7, 186.0], [16.8, 186.0], [16.9, 187.0], [17.0, 187.0], [17.1, 187.0], [17.2, 189.0], [17.3, 189.0], [17.4, 192.0], [17.5, 192.0], [17.6, 192.0], [17.7, 194.0], [17.8, 194.0], [17.9, 194.0], [18.0, 197.0], [18.1, 197.0], [18.2, 197.0], [18.3, 197.0], [18.4, 197.0], [18.5, 197.0], [18.6, 200.0], [18.7, 200.0], [18.8, 200.0], [18.9, 201.0], [19.0, 201.0], [19.1, 201.0], [19.2, 203.0], [19.3, 203.0], [19.4, 203.0], [19.5, 203.0], [19.6, 203.0], [19.7, 203.0], [19.8, 203.0], [19.9, 203.0], [20.0, 203.0], [20.1, 203.0], [20.2, 203.0], [20.3, 205.0], [20.4, 205.0], [20.5, 205.0], [20.6, 208.0], [20.7, 208.0], [20.8, 208.0], [20.9, 211.0], [21.0, 211.0], [21.1, 211.0], [21.2, 211.0], [21.3, 211.0], [21.4, 211.0], [21.5, 212.0], [21.6, 212.0], [21.7, 212.0], [21.8, 213.0], [21.9, 213.0], [22.0, 213.0], [22.1, 213.0], [22.2, 213.0], [22.3, 213.0], [22.4, 214.0], [22.5, 214.0], [22.6, 214.0], [22.7, 215.0], [22.8, 215.0], [22.9, 219.0], [23.0, 219.0], [23.1, 219.0], [23.2, 221.0], [23.3, 221.0], [23.4, 221.0], [23.5, 221.0], [23.6, 221.0], [23.7, 221.0], [23.8, 222.0], [23.9, 222.0], [24.0, 222.0], [24.1, 222.0], [24.2, 222.0], [24.3, 222.0], [24.4, 224.0], [24.5, 224.0], [24.6, 224.0], [24.7, 224.0], [24.8, 224.0], [24.9, 224.0], [25.0, 226.0], [25.1, 226.0], [25.2, 226.0], [25.3, 226.0], [25.4, 226.0], [25.5, 226.0], [25.6, 226.0], [25.7, 226.0], [25.8, 227.0], [25.9, 227.0], [26.0, 227.0], [26.1, 227.0], [26.2, 227.0], [26.3, 227.0], [26.4, 227.0], [26.5, 227.0], [26.6, 227.0], [26.7, 228.0], [26.8, 228.0], [26.9, 228.0], [27.0, 229.0], [27.1, 229.0], [27.2, 229.0], [27.3, 230.0], [27.4, 230.0], [27.5, 230.0], [27.6, 230.0], [27.7, 230.0], [27.8, 230.0], [27.9, 230.0], [28.0, 230.0], [28.1, 230.0], [28.2, 231.0], [28.3, 231.0], [28.4, 231.0], [28.5, 231.0], [28.6, 231.0], [28.7, 233.0], [28.8, 233.0], [28.9, 233.0], [29.0, 235.0], [29.1, 235.0], [29.2, 235.0], [29.3, 235.0], [29.4, 235.0], [29.5, 235.0], [29.6, 236.0], [29.7, 236.0], [29.8, 236.0], [29.9, 239.0], [30.0, 239.0], [30.1, 239.0], [30.2, 239.0], [30.3, 239.0], [30.4, 239.0], [30.5, 240.0], [30.6, 240.0], [30.7, 240.0], [30.8, 240.0], [30.9, 240.0], [31.0, 240.0], [31.1, 241.0], [31.2, 241.0], [31.3, 241.0], [31.4, 242.0], [31.5, 242.0], [31.6, 243.0], [31.7, 243.0], [31.8, 243.0], [31.9, 243.0], [32.0, 243.0], [32.1, 243.0], [32.2, 244.0], [32.3, 244.0], [32.4, 244.0], [32.5, 244.0], [32.6, 244.0], [32.7, 244.0], [32.8, 244.0], [32.9, 244.0], [33.0, 244.0], [33.1, 244.0], [33.2, 244.0], [33.3, 244.0], [33.4, 246.0], [33.5, 246.0], [33.6, 246.0], [33.7, 246.0], [33.8, 246.0], [33.9, 246.0], [34.0, 248.0], [34.1, 248.0], [34.2, 248.0], [34.3, 252.0], [34.4, 252.0], [34.5, 252.0], [34.6, 252.0], [34.7, 252.0], [34.8, 253.0], [34.9, 253.0], [35.0, 253.0], [35.1, 254.0], [35.2, 254.0], [35.3, 254.0], [35.4, 255.0], [35.5, 255.0], [35.6, 255.0], [35.7, 255.0], [35.8, 255.0], [35.9, 255.0], [36.0, 257.0], [36.1, 257.0], [36.2, 257.0], [36.3, 257.0], [36.4, 257.0], [36.5, 257.0], [36.6, 258.0], [36.7, 258.0], [36.8, 258.0], [36.9, 259.0], [37.0, 259.0], [37.1, 259.0], [37.2, 259.0], [37.3, 259.0], [37.4, 260.0], [37.5, 260.0], [37.6, 260.0], [37.7, 265.0], [37.8, 265.0], [37.9, 265.0], [38.0, 267.0], [38.1, 267.0], [38.2, 267.0], [38.3, 268.0], [38.4, 268.0], [38.5, 268.0], [38.6, 273.0], [38.7, 273.0], [38.8, 273.0], [38.9, 273.0], [39.0, 273.0], [39.1, 273.0], [39.2, 274.0], [39.3, 274.0], [39.4, 274.0], [39.5, 274.0], [39.6, 274.0], [39.7, 274.0], [39.8, 279.0], [39.9, 279.0], [40.0, 279.0], [40.1, 279.0], [40.2, 279.0], [40.3, 280.0], [40.4, 280.0], [40.5, 280.0], [40.6, 281.0], [40.7, 281.0], [40.8, 281.0], [40.9, 282.0], [41.0, 282.0], [41.1, 282.0], [41.2, 282.0], [41.3, 282.0], [41.4, 282.0], [41.5, 285.0], [41.6, 285.0], [41.7, 285.0], [41.8, 286.0], [41.9, 286.0], [42.0, 286.0], [42.1, 290.0], [42.2, 290.0], [42.3, 290.0], [42.4, 292.0], [42.5, 292.0], [42.6, 292.0], [42.7, 292.0], [42.8, 292.0], [42.9, 293.0], [43.0, 293.0], [43.1, 293.0], [43.2, 296.0], [43.3, 296.0], [43.4, 296.0], [43.5, 296.0], [43.6, 296.0], [43.7, 296.0], [43.8, 298.0], [43.9, 298.0], [44.0, 298.0], [44.1, 298.0], [44.2, 298.0], [44.3, 298.0], [44.4, 304.0], [44.5, 304.0], [44.6, 304.0], [44.7, 309.0], [44.8, 309.0], [44.9, 309.0], [45.0, 309.0], [45.1, 309.0], [45.2, 309.0], [45.3, 310.0], [45.4, 310.0], [45.5, 310.0], [45.6, 310.0], [45.7, 310.0], [45.8, 314.0], [45.9, 314.0], [46.0, 314.0], [46.1, 316.0], [46.2, 316.0], [46.3, 316.0], [46.4, 317.0], [46.5, 317.0], [46.6, 317.0], [46.7, 318.0], [46.8, 318.0], [46.9, 318.0], [47.0, 319.0], [47.1, 319.0], [47.2, 319.0], [47.3, 319.0], [47.4, 319.0], [47.5, 319.0], [47.6, 319.0], [47.7, 319.0], [47.8, 319.0], [47.9, 319.0], [48.0, 319.0], [48.1, 319.0], [48.2, 321.0], [48.3, 321.0], [48.4, 321.0], [48.5, 322.0], [48.6, 322.0], [48.7, 326.0], [48.8, 326.0], [48.9, 326.0], [49.0, 326.0], [49.1, 326.0], [49.2, 326.0], [49.3, 326.0], [49.4, 326.0], [49.5, 326.0], [49.6, 327.0], [49.7, 327.0], [49.8, 327.0], [49.9, 328.0], [50.0, 328.0], [50.1, 328.0], [50.2, 328.0], [50.3, 328.0], [50.4, 328.0], [50.5, 328.0], [50.6, 328.0], [50.7, 328.0], [50.8, 330.0], [50.9, 330.0], [51.0, 330.0], [51.1, 330.0], [51.2, 330.0], [51.3, 330.0], [51.4, 331.0], [51.5, 331.0], [51.6, 331.0], [51.7, 331.0], [51.8, 331.0], [51.9, 332.0], [52.0, 332.0], [52.1, 332.0], [52.2, 333.0], [52.3, 333.0], [52.4, 333.0], [52.5, 333.0], [52.6, 333.0], [52.7, 333.0], [52.8, 333.0], [52.9, 333.0], [53.0, 333.0], [53.1, 334.0], [53.2, 334.0], [53.3, 334.0], [53.4, 334.0], [53.5, 334.0], [53.6, 334.0], [53.7, 335.0], [53.8, 335.0], [53.9, 335.0], [54.0, 335.0], [54.1, 335.0], [54.2, 335.0], [54.3, 335.0], [54.4, 335.0], [54.5, 336.0], [54.6, 336.0], [54.7, 336.0], [54.8, 336.0], [54.9, 336.0], [55.0, 336.0], [55.1, 336.0], [55.2, 336.0], [55.3, 336.0], [55.4, 337.0], [55.5, 337.0], [55.6, 337.0], [55.7, 337.0], [55.8, 337.0], [55.9, 337.0], [56.0, 337.0], [56.1, 337.0], [56.2, 337.0], [56.3, 338.0], [56.4, 338.0], [56.5, 338.0], [56.6, 339.0], [56.7, 339.0], [56.8, 339.0], [56.9, 339.0], [57.0, 339.0], [57.1, 339.0], [57.2, 339.0], [57.3, 339.0], [57.4, 339.0], [57.5, 339.0], [57.6, 339.0], [57.7, 340.0], [57.8, 340.0], [57.9, 340.0], [58.0, 340.0], [58.1, 340.0], [58.2, 340.0], [58.3, 340.0], [58.4, 340.0], [58.5, 340.0], [58.6, 341.0], [58.7, 341.0], [58.8, 341.0], [58.9, 341.0], [59.0, 341.0], [59.1, 341.0], [59.2, 341.0], [59.3, 341.0], [59.4, 341.0], [59.5, 342.0], [59.6, 342.0], [59.7, 342.0], [59.8, 343.0], [59.9, 343.0], [60.0, 343.0], [60.1, 343.0], [60.2, 343.0], [60.3, 344.0], [60.4, 344.0], [60.5, 344.0], [60.6, 344.0], [60.7, 344.0], [60.8, 344.0], [60.9, 345.0], [61.0, 345.0], [61.1, 345.0], [61.2, 345.0], [61.3, 345.0], [61.4, 345.0], [61.5, 345.0], [61.6, 345.0], [61.7, 345.0], [61.8, 345.0], [61.9, 345.0], [62.0, 345.0], [62.1, 346.0], [62.2, 346.0], [62.3, 346.0], [62.4, 346.0], [62.5, 346.0], [62.6, 346.0], [62.7, 346.0], [62.8, 346.0], [62.9, 346.0], [63.0, 346.0], [63.1, 346.0], [63.2, 347.0], [63.3, 347.0], [63.4, 347.0], [63.5, 347.0], [63.6, 347.0], [63.7, 347.0], [63.8, 349.0], [63.9, 349.0], [64.0, 349.0], [64.1, 349.0], [64.2, 349.0], [64.3, 349.0], [64.4, 351.0], [64.5, 351.0], [64.6, 351.0], [64.7, 353.0], [64.8, 353.0], [64.9, 353.0], [65.0, 356.0], [65.1, 356.0], [65.2, 356.0], [65.3, 357.0], [65.4, 357.0], [65.5, 357.0], [65.6, 358.0], [65.7, 358.0], [65.8, 358.0], [65.9, 358.0], [66.0, 358.0], [66.1, 360.0], [66.2, 360.0], [66.3, 360.0], [66.4, 362.0], [66.5, 362.0], [66.6, 362.0], [66.7, 367.0], [66.8, 367.0], [66.9, 367.0], [67.0, 368.0], [67.1, 368.0], [67.2, 368.0], [67.3, 368.0], [67.4, 368.0], [67.5, 368.0], [67.6, 368.0], [67.7, 368.0], [67.8, 368.0], [67.9, 372.0], [68.0, 372.0], [68.1, 372.0], [68.2, 374.0], [68.3, 374.0], [68.4, 374.0], [68.5, 375.0], [68.6, 375.0], [68.7, 377.0], [68.8, 377.0], [68.9, 377.0], [69.0, 379.0], [69.1, 379.0], [69.2, 379.0], [69.3, 382.0], [69.4, 382.0], [69.5, 382.0], [69.6, 383.0], [69.7, 383.0], [69.8, 383.0], [69.9, 387.0], [70.0, 387.0], [70.1, 387.0], [70.2, 388.0], [70.3, 388.0], [70.4, 388.0], [70.5, 388.0], [70.6, 388.0], [70.7, 388.0], [70.8, 390.0], [70.9, 390.0], [71.0, 390.0], [71.1, 390.0], [71.2, 390.0], [71.3, 390.0], [71.4, 392.0], [71.5, 392.0], [71.6, 396.0], [71.7, 396.0], [71.8, 396.0], [71.9, 401.0], [72.0, 401.0], [72.1, 401.0], [72.2, 402.0], [72.3, 402.0], [72.4, 402.0], [72.5, 404.0], [72.6, 404.0], [72.7, 404.0], [72.8, 410.0], [72.9, 410.0], [73.0, 410.0], [73.1, 412.0], [73.2, 412.0], [73.3, 412.0], [73.4, 413.0], [73.5, 413.0], [73.6, 413.0], [73.7, 416.0], [73.8, 416.0], [73.9, 416.0], [74.0, 422.0], [74.1, 422.0], [74.2, 422.0], [74.3, 423.0], [74.4, 423.0], [74.5, 423.0], [74.6, 423.0], [74.7, 423.0], [74.8, 426.0], [74.9, 426.0], [75.0, 426.0], [75.1, 428.0], [75.2, 428.0], [75.3, 428.0], [75.4, 428.0], [75.5, 428.0], [75.6, 428.0], [75.7, 430.0], [75.8, 430.0], [75.9, 430.0], [76.0, 433.0], [76.1, 433.0], [76.2, 433.0], [76.3, 433.0], [76.4, 433.0], [76.5, 433.0], [76.6, 433.0], [76.7, 433.0], [76.8, 433.0], [76.9, 435.0], [77.0, 435.0], [77.1, 435.0], [77.2, 437.0], [77.3, 437.0], [77.4, 438.0], [77.5, 438.0], [77.6, 438.0], [77.7, 438.0], [77.8, 438.0], [77.9, 438.0], [78.0, 439.0], [78.1, 439.0], [78.2, 439.0], [78.3, 439.0], [78.4, 439.0], [78.5, 439.0], [78.6, 439.0], [78.7, 439.0], [78.8, 439.0], [78.9, 441.0], [79.0, 441.0], [79.1, 441.0], [79.2, 441.0], [79.3, 441.0], [79.4, 441.0], [79.5, 443.0], [79.6, 443.0], [79.7, 443.0], [79.8, 445.0], [79.9, 445.0], [80.0, 445.0], [80.1, 445.0], [80.2, 445.0], [80.3, 446.0], [80.4, 446.0], [80.5, 446.0], [80.6, 446.0], [80.7, 446.0], [80.8, 446.0], [80.9, 447.0], [81.0, 447.0], [81.1, 447.0], [81.2, 448.0], [81.3, 448.0], [81.4, 448.0], [81.5, 448.0], [81.6, 448.0], [81.7, 448.0], [81.8, 449.0], [81.9, 449.0], [82.0, 449.0], [82.1, 450.0], [82.2, 450.0], [82.3, 450.0], [82.4, 463.0], [82.5, 463.0], [82.6, 463.0], [82.7, 466.0], [82.8, 466.0], [82.9, 473.0], [83.0, 473.0], [83.1, 473.0], [83.2, 479.0], [83.3, 479.0], [83.4, 479.0], [83.5, 492.0], [83.6, 492.0], [83.7, 492.0], [83.8, 509.0], [83.9, 509.0], [84.0, 509.0], [84.1, 523.0], [84.2, 523.0], [84.3, 523.0], [84.4, 523.0], [84.5, 523.0], [84.6, 523.0], [84.7, 525.0], [84.8, 525.0], [84.9, 525.0], [85.0, 536.0], [85.1, 536.0], [85.2, 536.0], [85.3, 538.0], [85.4, 538.0], [85.5, 538.0], [85.6, 538.0], [85.7, 538.0], [85.8, 559.0], [85.9, 559.0], [86.0, 559.0], [86.1, 575.0], [86.2, 575.0], [86.3, 575.0], [86.4, 587.0], [86.5, 587.0], [86.6, 587.0], [86.7, 591.0], [86.8, 591.0], [86.9, 591.0], [87.0, 600.0], [87.1, 600.0], [87.2, 600.0], [87.3, 621.0], [87.4, 621.0], [87.5, 621.0], [87.6, 643.0], [87.7, 643.0], [87.8, 643.0], [87.9, 646.0], [88.0, 646.0], [88.1, 646.0], [88.2, 647.0], [88.3, 647.0], [88.4, 647.0], [88.5, 652.0], [88.6, 652.0], [88.7, 656.0], [88.8, 656.0], [88.9, 656.0], [89.0, 679.0], [89.1, 679.0], [89.2, 679.0], [89.3, 716.0], [89.4, 716.0], [89.5, 716.0], [89.6, 720.0], [89.7, 720.0], [89.8, 720.0], [89.9, 728.0], [90.0, 728.0], [90.1, 728.0], [90.2, 751.0], [90.3, 751.0], [90.4, 751.0], [90.5, 752.0], [90.6, 752.0], [90.7, 752.0], [90.8, 763.0], [90.9, 763.0], [91.0, 763.0], [91.1, 840.0], [91.2, 840.0], [91.3, 840.0], [91.4, 862.0], [91.5, 862.0], [91.6, 879.0], [91.7, 879.0], [91.8, 879.0], [91.9, 930.0], [92.0, 930.0], [92.1, 930.0], [92.2, 935.0], [92.3, 935.0], [92.4, 935.0], [92.5, 985.0], [92.6, 985.0], [92.7, 985.0], [92.8, 1161.0], [92.9, 1161.0], [93.0, 1161.0], [93.1, 1255.0], [93.2, 1255.0], [93.3, 1255.0], [93.4, 2503.0], [93.5, 2503.0], [93.6, 2503.0], [93.7, 2526.0], [93.8, 2526.0], [93.9, 2526.0], [94.0, 2571.0], [94.1, 2571.0], [94.2, 2571.0], [94.3, 2693.0], [94.4, 2693.0], [94.5, 2756.0], [94.6, 2756.0], [94.7, 2756.0], [94.8, 2778.0], [94.9, 2778.0], [95.0, 2778.0], [95.1, 2886.0], [95.2, 2886.0], [95.3, 2886.0], [95.4, 2923.0], [95.5, 2923.0], [95.6, 2923.0], [95.7, 2996.0], [95.8, 2996.0], [95.9, 2996.0], [96.0, 3070.0], [96.1, 3070.0], [96.2, 3070.0], [96.3, 3070.0], [96.4, 3070.0], [96.5, 3070.0], [96.6, 3089.0], [96.7, 3089.0], [96.8, 3089.0], [96.9, 3298.0], [97.0, 3298.0], [97.1, 3298.0], [97.2, 5221.0], [97.3, 5221.0], [97.4, 6038.0], [97.5, 6038.0], [97.6, 6038.0], [97.7, 6076.0], [97.8, 6076.0], [97.9, 6076.0], [98.0, 6132.0], [98.1, 6132.0], [98.2, 6132.0], [98.3, 6584.0], [98.4, 6584.0], [98.5, 6584.0], [98.6, 6712.0], [98.7, 6712.0], [98.8, 6712.0], [98.9, 6729.0], [99.0, 6729.0], [99.1, 6729.0], [99.2, 6991.0], [99.3, 6991.0], [99.4, 6991.0], [99.5, 7510.0], [99.6, 7510.0], [99.7, 7510.0], [99.8, 7702.0], [99.9, 7702.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 95.0, "series": [{"data": [[1100.0, 1.0], [1500.0, 1.0], [2500.0, 1.0], [3300.0, 1.0], [3800.0, 1.0], [3900.0, 2.0], [4800.0, 2.0], [4700.0, 1.0], [4900.0, 2.0], [5100.0, 1.0], [5300.0, 4.0], [5200.0, 1.0], [5400.0, 2.0], [5600.0, 6.0], [5500.0, 10.0], [5700.0, 9.0], [5800.0, 4.0], [6100.0, 11.0], [5900.0, 17.0], [6000.0, 3.0], [6200.0, 10.0], [6300.0, 15.0], [6500.0, 19.0], [6400.0, 14.0], [6600.0, 20.0], [6900.0, 14.0], [6700.0, 30.0], [6800.0, 21.0], [7000.0, 24.0], [7100.0, 25.0], [7400.0, 16.0], [7200.0, 17.0], [7300.0, 14.0], [7600.0, 9.0], [7500.0, 11.0], [7700.0, 10.0], [7800.0, 3.0], [7900.0, 2.0], [8100.0, 3.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[600.0, 9.0], [700.0, 5.0], [800.0, 4.0], [900.0, 2.0], [1000.0, 8.0], [1100.0, 6.0], [1200.0, 5.0], [1300.0, 4.0], [1400.0, 4.0], [1500.0, 6.0], [100.0, 2.0], [1600.0, 4.0], [1700.0, 4.0], [1800.0, 4.0], [1900.0, 7.0], [2000.0, 8.0], [2100.0, 7.0], [2200.0, 15.0], [2300.0, 17.0], [2400.0, 31.0], [2500.0, 32.0], [2600.0, 29.0], [2700.0, 34.0], [2800.0, 35.0], [2900.0, 12.0], [3000.0, 5.0], [3100.0, 7.0], [200.0, 5.0], [3400.0, 1.0], [3700.0, 1.0], [300.0, 5.0], [400.0, 11.0], [500.0, 6.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[11400.0, 1.0], [18700.0, 1.0], [22300.0, 1.0], [22700.0, 1.0], [26100.0, 1.0], [25800.0, 1.0], [28600.0, 1.0], [29500.0, 1.0], [29300.0, 1.0], [29700.0, 1.0], [30000.0, 1.0], [30100.0, 1.0], [31300.0, 4.0], [31500.0, 3.0], [30800.0, 1.0], [31700.0, 2.0], [31100.0, 2.0], [31000.0, 1.0], [31200.0, 2.0], [31600.0, 2.0], [31900.0, 4.0], [32200.0, 3.0], [32600.0, 5.0], [31800.0, 1.0], [32300.0, 2.0], [32700.0, 5.0], [32000.0, 2.0], [32400.0, 1.0], [32500.0, 2.0], [33800.0, 8.0], [33700.0, 6.0], [32800.0, 4.0], [33100.0, 5.0], [33000.0, 5.0], [33200.0, 5.0], [32900.0, 3.0], [33900.0, 6.0], [33500.0, 4.0], [33300.0, 1.0], [33400.0, 4.0], [33600.0, 7.0], [34000.0, 14.0], [34300.0, 11.0], [34200.0, 9.0], [34100.0, 4.0], [34400.0, 13.0], [34600.0, 3.0], [34500.0, 11.0], [34700.0, 6.0], [34800.0, 8.0], [35100.0, 10.0], [35400.0, 10.0], [35500.0, 4.0], [35200.0, 13.0], [35000.0, 5.0], [34900.0, 7.0], [35700.0, 5.0], [35800.0, 5.0], [36600.0, 9.0], [36300.0, 4.0], [36100.0, 7.0], [36200.0, 7.0], [35600.0, 8.0], [35900.0, 7.0], [36800.0, 4.0], [36700.0, 5.0], [36000.0, 11.0], [36500.0, 9.0], [36400.0, 6.0], [35300.0, 8.0], [37100.0, 5.0], [37500.0, 3.0], [37600.0, 2.0], [37300.0, 4.0], [36900.0, 5.0], [37000.0, 1.0], [37700.0, 2.0], [37800.0, 3.0], [37400.0, 2.0], [37200.0, 3.0], [38500.0, 1.0], [38600.0, 2.0], [37900.0, 2.0], [38200.0, 1.0], [38100.0, 1.0], [38000.0, 1.0], [38300.0, 1.0], [38900.0, 1.0], [38700.0, 1.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[0.0, 31.0], [600.0, 8.0], [700.0, 6.0], [800.0, 3.0], [900.0, 3.0], [1100.0, 1.0], [1200.0, 1.0], [100.0, 33.0], [2500.0, 3.0], [2600.0, 1.0], [2800.0, 1.0], [2700.0, 2.0], [2900.0, 2.0], [3000.0, 3.0], [200.0, 89.0], [3200.0, 1.0], [300.0, 95.0], [5200.0, 1.0], [6100.0, 1.0], [6000.0, 2.0], [400.0, 41.0], [6500.0, 1.0], [6700.0, 2.0], [6900.0, 1.0], [7500.0, 1.0], [7700.0, 1.0], [500.0, 11.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 38900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 24.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1014.0, "series": [{"data": [[0.0, 288.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 87.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1014.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 24.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 13.679487179487179, "minX": 1.71896358E12, "maxY": 15.0, "series": [{"data": [[1.71896376E12, 15.0], [1.71896478E12, 13.679487179487179], [1.71896382E12, 15.0], [1.71896472E12, 15.0], [1.71896412E12, 15.0], [1.71896442E12, 15.0], [1.7189637E12, 15.0], [1.71896436E12, 15.0], [1.718964E12, 15.0], [1.71896406E12, 15.0], [1.71896466E12, 15.0], [1.71896394E12, 15.0], [1.7189646E12, 15.0], [1.7189643E12, 15.0], [1.71896424E12, 15.0], [1.71896364E12, 15.0], [1.71896418E12, 15.0], [1.71896454E12, 15.0], [1.71896358E12, 14.06060606060606], [1.71896448E12, 15.0], [1.71896388E12, 15.0]], "isOverall": false, "label": "MixedTest", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71896478E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 97.0, "minX": 1.0, "maxY": 34796.25205479455, "series": [{"data": [[9.0, 3148.0], [12.0, 6827.0], [13.0, 1594.0], [15.0, 6688.212464589234]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[14.952380952380947, 6654.498599439776]], "isOverall": false, "label": "Directors by name-Aggregated", "isController": false}, {"data": [[11.0, 1481.5], [14.0, 1005.0], [15.0, 2147.3554216867456]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[14.973134328358212, 2139.97014925373]], "isOverall": false, "label": "TitleBasics by primary_title-Aggregated", "isController": false}, {"data": [[8.0, 32798.0], [4.0, 25987.0], [2.0, 18700.0], [1.0, 11496.0], [10.0, 33683.0], [6.0, 31457.0], [13.0, 32274.0], [14.0, 34336.0], [7.0, 33691.0], [15.0, 34796.25205479455]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[14.760638297872342, 34607.70744680854]], "isOverall": false, "label": "Actors by name-Aggregated", "isController": false}, {"data": [[9.0, 99.0], [5.0, 226.0], [13.0, 97.0], [15.0, 597.2192982456145]], "isOverall": false, "label": "TitleBasics by params", "isController": false}, {"data": [[14.947826086956526, 593.2492753623186]], "isOverall": false, "label": "TitleBasics by params-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 15.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 94.43333333333334, "minX": 1.71896358E12, "maxY": 5329.383333333333, "series": [{"data": [[1.71896376E12, 4647.666666666667], [1.71896478E12, 4476.983333333334], [1.71896382E12, 4270.683333333333], [1.71896472E12, 3719.2], [1.71896412E12, 3718.866666666667], [1.71896442E12, 3240.7166666666667], [1.7189637E12, 3924.7833333333333], [1.71896436E12, 3519.5333333333333], [1.718964E12, 2930.15], [1.71896406E12, 3781.483333333333], [1.71896466E12, 3843.85], [1.71896394E12, 4015.25], [1.7189646E12, 4404.1], [1.7189643E12, 5181.2], [1.71896424E12, 4337.216666666666], [1.71896364E12, 4937.566666666667], [1.71896418E12, 3455.3333333333335], [1.71896454E12, 3879.15], [1.71896358E12, 2867.5333333333333], [1.71896448E12, 4014.0], [1.71896388E12, 5329.383333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71896376E12, 211.2], [1.71896478E12, 215.65], [1.71896382E12, 195.65], [1.71896472E12, 164.18333333333334], [1.71896412E12, 170.36666666666667], [1.71896442E12, 155.46666666666667], [1.7189637E12, 194.6], [1.71896436E12, 152.41666666666666], [1.718964E12, 153.7], [1.71896406E12, 180.15], [1.71896466E12, 203.56666666666666], [1.71896394E12, 180.51666666666668], [1.7189646E12, 201.35], [1.7189643E12, 194.96666666666667], [1.71896424E12, 174.31666666666666], [1.71896364E12, 205.16666666666666], [1.71896418E12, 163.6], [1.71896454E12, 188.66666666666666], [1.71896358E12, 94.43333333333334], [1.71896448E12, 207.1], [1.71896388E12, 249.95]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71896478E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 221.1, "minX": 1.71896358E12, "maxY": 36884.0, "series": [{"data": [[1.71896376E12, 6583.761904761905], [1.71896478E12, 6376.833333333332], [1.71896382E12, 6662.545454545454], [1.71896472E12, 6825.363636363636], [1.71896412E12, 7098.583333333332], [1.71896442E12, 6749.538461538462], [1.7189637E12, 6435.050000000002], [1.71896436E12, 6764.636363636363], [1.718964E12, 6900.5], [1.71896406E12, 6929.941176470588], [1.71896466E12, 6619.48], [1.71896394E12, 6644.21052631579], [1.7189646E12, 6913.555555555556], [1.7189643E12, 6814.25], [1.71896424E12, 7062.818181818182], [1.71896364E12, 6535.476190476191], [1.71896418E12, 7153.7692307692305], [1.71896454E12, 6769.960000000001], [1.71896358E12, 4149.444444444444], [1.71896448E12, 6647.666666666666], [1.71896388E12, 6624.346153846154]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.71896376E12, 2270.263157894737], [1.71896478E12, 1849.0555555555554], [1.71896382E12, 1794.7692307692307], [1.71896472E12, 2489.1250000000005], [1.71896412E12, 2169.928571428571], [1.71896442E12, 2460.0], [1.7189637E12, 2391.0625000000005], [1.71896436E12, 2532.538461538462], [1.718964E12, 1725.2], [1.71896406E12, 2019.6086956521735], [1.71896466E12, 1816.6956521739132], [1.71896394E12, 1999.4285714285713], [1.7189646E12, 2243.100000000001], [1.7189643E12, 1892.5333333333335], [1.71896424E12, 2112.5625], [1.71896364E12, 1662.0000000000002], [1.71896418E12, 2397.4117647058824], [1.71896454E12, 2319.4615384615386], [1.71896358E12, 1693.6153846153845], [1.71896448E12, 2593.45], [1.71896388E12, 2294.24]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.71896376E12, 34315.78947368421], [1.71896478E12, 31475.695652173905], [1.71896382E12, 33767.5], [1.71896472E12, 36884.0], [1.71896412E12, 35963.95], [1.71896442E12, 35618.8], [1.7189637E12, 34604.277777777774], [1.71896436E12, 34825.777777777774], [1.718964E12, 35065.19047619047], [1.71896406E12, 35202.44444444445], [1.71896466E12, 33871.375], [1.71896394E12, 34355.31578947368], [1.7189646E12, 34113.58823529412], [1.7189643E12, 34314.666666666664], [1.71896424E12, 34942.61111111112], [1.71896364E12, 31695.125], [1.71896418E12, 35719.05263157895], [1.71896454E12, 35183.41176470588], [1.71896448E12, 36371.36363636364], [1.71896388E12, 33619.444444444445]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.71896376E12, 452.2857142857143], [1.71896478E12, 448.84210526315786], [1.71896382E12, 316.3809523809524], [1.71896472E12, 719.7142857142857], [1.71896412E12, 630.0], [1.71896442E12, 843.7857142857142], [1.7189637E12, 642.4705882352941], [1.71896436E12, 338.0], [1.718964E12, 930.6666666666667], [1.71896406E12, 221.1], [1.71896466E12, 540.4166666666666], [1.71896394E12, 668.05], [1.7189646E12, 477.95238095238096], [1.7189643E12, 1031.4347826086957], [1.71896424E12, 645.0], [1.71896364E12, 566.8636363636364], [1.71896418E12, 988.3], [1.71896454E12, 492.9333333333333], [1.71896358E12, 262.8181818181818], [1.71896448E12, 581.0769230769231], [1.71896388E12, 618.4090909090909]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71896478E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 219.5, "minX": 1.71896358E12, "maxY": 36884.0, "series": [{"data": [[1.71896376E12, 6583.714285714285], [1.71896478E12, 6376.833333333332], [1.71896382E12, 6662.545454545454], [1.71896472E12, 6825.363636363636], [1.71896412E12, 7098.583333333332], [1.71896442E12, 6749.538461538462], [1.7189637E12, 6435.000000000002], [1.71896436E12, 6764.636363636363], [1.718964E12, 6900.5], [1.71896406E12, 6929.941176470588], [1.71896466E12, 6619.48], [1.71896394E12, 6644.21052631579], [1.7189646E12, 6913.555555555556], [1.7189643E12, 6814.25], [1.71896424E12, 7062.818181818182], [1.71896364E12, 6535.476190476191], [1.71896418E12, 7153.7692307692305], [1.71896454E12, 6769.960000000001], [1.71896358E12, 4149.444444444444], [1.71896448E12, 6647.666666666666], [1.71896388E12, 6624.346153846154]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.71896376E12, 2269.894736842105], [1.71896478E12, 1848.8333333333333], [1.71896382E12, 1794.3846153846152], [1.71896472E12, 2489.0], [1.71896412E12, 2169.6428571428573], [1.71896442E12, 2459.2222222222226], [1.7189637E12, 2390.8125], [1.71896436E12, 2531.846153846154], [1.718964E12, 1725.0], [1.71896406E12, 2000.5217391304348], [1.71896466E12, 1816.5652173913043], [1.71896394E12, 1998.5714285714287], [1.7189646E12, 2243.0000000000005], [1.7189643E12, 1892.0666666666668], [1.71896424E12, 2112.4375], [1.71896364E12, 1661.3999999999999], [1.71896418E12, 2397.294117647059], [1.71896454E12, 2319.0000000000005], [1.71896358E12, 1693.3076923076922], [1.71896448E12, 2593.0999999999995], [1.71896388E12, 2294.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.71896376E12, 34315.78947368421], [1.71896478E12, 31475.695652173905], [1.71896382E12, 33767.5], [1.71896472E12, 36884.0], [1.71896412E12, 35963.95], [1.71896442E12, 35618.8], [1.7189637E12, 34604.277777777774], [1.71896436E12, 34825.777777777774], [1.718964E12, 35065.19047619047], [1.71896406E12, 35202.38888888889], [1.71896466E12, 33871.375], [1.71896394E12, 34355.31578947368], [1.7189646E12, 34113.58823529412], [1.7189643E12, 34314.666666666664], [1.71896424E12, 34942.61111111112], [1.71896364E12, 31695.125], [1.71896418E12, 35719.05263157895], [1.71896454E12, 35183.41176470588], [1.71896448E12, 36371.36363636364], [1.71896388E12, 33619.444444444445]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.71896376E12, 451.76190476190476], [1.71896478E12, 447.2631578947368], [1.71896382E12, 315.76190476190476], [1.71896472E12, 719.0714285714286], [1.71896412E12, 628.9411764705883], [1.71896442E12, 843.0], [1.7189637E12, 642.1764705882354], [1.71896436E12, 337.8571428571429], [1.718964E12, 929.8333333333334], [1.71896406E12, 219.5], [1.71896466E12, 538.9999999999999], [1.71896394E12, 667.3000000000001], [1.7189646E12, 477.4285714285714], [1.7189643E12, 1030.9565217391303], [1.71896424E12, 644.7058823529412], [1.71896364E12, 566.2727272727274], [1.71896418E12, 987.9000000000001], [1.71896454E12, 491.6000000000001], [1.71896358E12, 261.6363636363636], [1.71896448E12, 580.6923076923077], [1.71896388E12, 617.5]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71896478E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 1.608695652173913, "minX": 1.71896358E12, "maxY": 30.444444444444443, "series": [{"data": [[1.71896376E12, 9.285714285714286], [1.71896478E12, 4.055555555555555], [1.71896382E12, 9.318181818181818], [1.71896472E12, 3.3636363636363633], [1.71896412E12, 6.166666666666666], [1.71896442E12, 5.692307692307692], [1.7189637E12, 8.55], [1.71896436E12, 3.3636363636363633], [1.718964E12, 7.833333333333333], [1.71896406E12, 4.352941176470589], [1.71896466E12, 5.920000000000001], [1.71896394E12, 9.631578947368421], [1.7189646E12, 6.277777777777778], [1.7189643E12, 3.6666666666666665], [1.71896424E12, 7.363636363636363], [1.71896364E12, 3.5238095238095237], [1.71896418E12, 17.615384615384613], [1.71896454E12, 3.0000000000000004], [1.71896358E12, 30.444444444444443], [1.71896448E12, 5.238095238095237], [1.71896388E12, 5.26923076923077]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.71896376E12, 8.368421052631579], [1.71896478E12, 6.0], [1.71896382E12, 6.153846153846153], [1.71896472E12, 2.3124999999999996], [1.71896412E12, 5.357142857142858], [1.71896442E12, 4.111111111111111], [1.7189637E12, 4.9375], [1.71896436E12, 11.23076923076923], [1.718964E12, 3.6999999999999997], [1.71896406E12, 3.2173913043478253], [1.71896466E12, 1.608695652173913], [1.71896394E12, 5.285714285714286], [1.7189646E12, 7.250000000000003], [1.7189643E12, 2.3333333333333335], [1.71896424E12, 9.312500000000002], [1.71896364E12, 6.4], [1.71896418E12, 2.1764705882352935], [1.71896454E12, 5.461538461538462], [1.71896358E12, 13.307692307692308], [1.71896448E12, 10.950000000000001], [1.71896388E12, 8.48]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.71896376E12, 6.526315789473684], [1.71896478E12, 7.956521739130436], [1.71896382E12, 6.5], [1.71896472E12, 8.444444444444445], [1.71896412E12, 14.75], [1.71896442E12, 8.7], [1.7189637E12, 7.722222222222221], [1.71896436E12, 8.166666666666666], [1.718964E12, 9.619047619047617], [1.71896406E12, 17.38888888888889], [1.71896466E12, 9.875], [1.71896394E12, 6.052631578947369], [1.7189646E12, 4.235294117647059], [1.7189643E12, 3.4285714285714293], [1.71896424E12, 12.0], [1.71896364E12, 18.5625], [1.71896418E12, 10.789473684210527], [1.71896454E12, 13.823529411764707], [1.71896448E12, 8.318181818181818], [1.71896388E12, 10.944444444444446]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.71896376E12, 7.904761904761903], [1.71896478E12, 3.7894736842105265], [1.71896382E12, 1.7619047619047614], [1.71896472E12, 13.571428571428573], [1.71896412E12, 12.294117647058824], [1.71896442E12, 17.357142857142858], [1.7189637E12, 2.1764705882352935], [1.71896436E12, 5.142857142857142], [1.718964E12, 27.583333333333332], [1.71896406E12, 16.300000000000004], [1.71896466E12, 6.166666666666666], [1.71896394E12, 1.8499999999999999], [1.7189646E12, 6.904761904761905], [1.7189643E12, 9.652173913043477], [1.71896424E12, 6.647058823529412], [1.71896364E12, 7.2727272727272725], [1.71896418E12, 7.3999999999999995], [1.71896454E12, 5.133333333333334], [1.71896358E12, 10.727272727272727], [1.71896448E12, 15.153846153846153], [1.71896388E12, 3.2727272727272725]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71896478E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 86.0, "minX": 1.71896358E12, "maxY": 38928.0, "series": [{"data": [[1.71896376E12, 36625.0], [1.71896478E12, 37584.0], [1.71896382E12, 36668.0], [1.71896472E12, 38732.0], [1.71896412E12, 37897.0], [1.71896442E12, 38647.0], [1.7189637E12, 37594.0], [1.71896436E12, 37288.0], [1.718964E12, 36894.0], [1.71896406E12, 37753.0], [1.71896466E12, 36585.0], [1.71896394E12, 37391.0], [1.7189646E12, 36188.0], [1.7189643E12, 37136.0], [1.71896424E12, 38531.0], [1.71896364E12, 35473.0], [1.71896418E12, 37340.0], [1.71896454E12, 37903.0], [1.71896358E12, 6966.0], [1.71896448E12, 38928.0], [1.71896388E12, 36593.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71896376E12, 189.0], [1.71896478E12, 99.0], [1.71896382E12, 151.0], [1.71896472E12, 88.0], [1.71896412E12, 139.0], [1.71896442E12, 156.0], [1.7189637E12, 143.0], [1.71896436E12, 154.0], [1.718964E12, 104.0], [1.71896406E12, 139.0], [1.71896466E12, 171.0], [1.71896394E12, 109.0], [1.7189646E12, 110.0], [1.7189643E12, 186.0], [1.71896424E12, 168.0], [1.71896364E12, 93.0], [1.71896418E12, 132.0], [1.71896454E12, 86.0], [1.71896358E12, 97.0], [1.71896448E12, 146.0], [1.71896388E12, 96.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71896376E12, 34422.4], [1.71896478E12, 34331.5], [1.71896382E12, 34419.3], [1.71896472E12, 37887.0], [1.71896412E12, 36760.2], [1.71896442E12, 36346.700000000004], [1.7189637E12, 35005.4], [1.71896436E12, 35900.6], [1.718964E12, 36189.0], [1.71896406E12, 35649.4], [1.71896466E12, 34162.0], [1.71896394E12, 35007.0], [1.7189646E12, 34395.6], [1.7189643E12, 35268.5], [1.71896424E12, 36194.100000000006], [1.71896364E12, 33048.5], [1.71896418E12, 36554.0], [1.71896454E12, 35216.0], [1.71896358E12, 5544.400000000001], [1.71896448E12, 36868.8], [1.71896388E12, 34177.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71896376E12, 36625.0], [1.71896478E12, 37584.0], [1.71896382E12, 36668.0], [1.71896472E12, 38732.0], [1.71896412E12, 37897.0], [1.71896442E12, 38647.0], [1.7189637E12, 37594.0], [1.71896436E12, 37288.0], [1.718964E12, 36894.0], [1.71896406E12, 37753.0], [1.71896466E12, 36585.0], [1.71896394E12, 37391.0], [1.7189646E12, 36188.0], [1.7189643E12, 37136.0], [1.71896424E12, 38531.0], [1.71896364E12, 35473.0], [1.71896418E12, 37340.0], [1.71896454E12, 37903.0], [1.71896358E12, 6966.0], [1.71896448E12, 38928.0], [1.71896388E12, 36593.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71896376E12, 5737.5], [1.71896478E12, 4572.5], [1.71896382E12, 6299.5], [1.71896472E12, 3089.0], [1.71896412E12, 6583.0], [1.71896442E12, 6704.5], [1.7189637E12, 5824.5], [1.71896436E12, 6172.0], [1.718964E12, 7001.0], [1.71896406E12, 6181.5], [1.71896466E12, 5919.0], [1.71896394E12, 6458.0], [1.7189646E12, 2865.5], [1.7189643E12, 5445.0], [1.71896424E12, 3120.0], [1.71896364E12, 4117.5], [1.71896418E12, 6991.0], [1.71896454E12, 6185.0], [1.71896358E12, 1136.0], [1.71896448E12, 6326.0], [1.71896388E12, 4815.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.71896376E12, 35671.299999999996], [1.71896478E12, 35595.95], [1.71896382E12, 35766.55], [1.71896472E12, 38270.0], [1.71896412E12, 37413.2], [1.71896442E12, 37668.5], [1.7189637E12, 36495.950000000004], [1.71896436E12, 36809.799999999996], [1.718964E12, 36525.2], [1.71896406E12, 36477.65], [1.71896466E12, 34860.4], [1.71896394E12, 35698.7], [1.7189646E12, 35206.05], [1.7189643E12, 35890.6], [1.71896424E12, 36884.75], [1.71896364E12, 34230.5], [1.71896418E12, 37169.0], [1.71896454E12, 36292.0], [1.71896358E12, 6468.999999999998], [1.71896448E12, 37371.200000000004], [1.71896388E12, 35483.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71896478E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 7009.0, "series": [{"data": [[1.0, 5931.0], [2.0, 5948.0], [4.0, 6484.5], [5.0, 5377.0], [3.0, 3141.0], [6.0, 6779.0], [7.0, 7009.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 0.0], [2.0, 0.0], [4.0, 0.0], [5.0, 0.0], [6.0, 0.0], [3.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 7.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 7009.0, "series": [{"data": [[1.0, 5931.0], [2.0, 5948.0], [4.0, 6484.5], [5.0, 5377.0], [3.0, 3097.5], [6.0, 6779.0], [7.0, 7009.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 0.0], [2.0, 0.0], [4.0, 0.0], [5.0, 0.0], [6.0, 0.0], [3.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 7.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.7666666666666667, "minX": 1.71896358E12, "maxY": 1.5333333333333334, "series": [{"data": [[1.71896376E12, 1.3333333333333333], [1.71896478E12, 1.0666666666666667], [1.71896382E12, 1.2166666666666666], [1.71896472E12, 0.9833333333333333], [1.71896412E12, 1.0333333333333334], [1.71896442E12, 0.9333333333333333], [1.7189637E12, 1.2], [1.71896436E12, 0.9666666666666667], [1.718964E12, 0.8666666666666667], [1.71896406E12, 1.1833333333333333], [1.71896466E12, 1.25], [1.71896394E12, 1.0833333333333333], [1.7189646E12, 1.3666666666666667], [1.7189643E12, 1.1666666666666667], [1.71896424E12, 1.0333333333333334], [1.71896364E12, 1.2333333333333334], [1.71896418E12, 1.0], [1.71896454E12, 1.1333333333333333], [1.71896358E12, 0.7666666666666667], [1.71896448E12, 1.2], [1.71896388E12, 1.5333333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71896478E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71896358E12, "maxY": 1.4833333333333334, "series": [{"data": [[1.71896376E12, 1.2666666666666666], [1.71896478E12, 1.3], [1.71896382E12, 1.1666666666666667], [1.71896472E12, 0.9833333333333333], [1.71896412E12, 1.0166666666666666], [1.71896442E12, 0.9333333333333333], [1.7189637E12, 1.1666666666666667], [1.71896436E12, 0.9166666666666666], [1.718964E12, 0.9166666666666666], [1.71896406E12, 1.1], [1.71896466E12, 1.25], [1.71896394E12, 1.0833333333333333], [1.7189646E12, 1.2], [1.7189643E12, 1.1666666666666667], [1.71896424E12, 1.0333333333333334], [1.71896364E12, 1.2333333333333334], [1.71896418E12, 0.9833333333333333], [1.71896454E12, 1.15], [1.71896358E12, 0.55], [1.71896448E12, 1.25], [1.71896388E12, 1.4833333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.7189646E12, 0.06666666666666667], [1.71896376E12, 0.06666666666666667], [1.7189643E12, 0.016666666666666666], [1.71896382E12, 0.06666666666666667], [1.71896412E12, 0.03333333333333333], [1.7189637E12, 0.016666666666666666], [1.71896436E12, 0.016666666666666666], [1.71896454E12, 0.016666666666666666], [1.71896406E12, 0.03333333333333333], [1.71896448E12, 0.016666666666666666], [1.71896388E12, 0.03333333333333333], [1.71896466E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: java.net.URISyntaxException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71896478E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71896358E12, "maxY": 0.43333333333333335, "series": [{"data": [[1.71896376E12, 0.31666666666666665], [1.71896478E12, 0.3], [1.71896382E12, 0.21666666666666667], [1.71896472E12, 0.26666666666666666], [1.71896412E12, 0.23333333333333334], [1.71896442E12, 0.15], [1.7189637E12, 0.26666666666666666], [1.71896436E12, 0.21666666666666667], [1.718964E12, 0.16666666666666666], [1.71896406E12, 0.38333333333333336], [1.71896466E12, 0.38333333333333336], [1.71896394E12, 0.11666666666666667], [1.7189646E12, 0.3333333333333333], [1.7189643E12, 0.25], [1.71896424E12, 0.26666666666666666], [1.71896364E12, 0.25], [1.71896418E12, 0.2833333333333333], [1.71896454E12, 0.21666666666666667], [1.71896358E12, 0.21666666666666667], [1.71896448E12, 0.3333333333333333], [1.71896388E12, 0.4166666666666667]], "isOverall": false, "label": "TitleBasics by primary_title-success", "isController": false}, {"data": [[1.71896376E12, 0.31666666666666665], [1.71896478E12, 0.38333333333333336], [1.71896382E12, 0.3], [1.71896472E12, 0.3], [1.71896412E12, 0.3333333333333333], [1.71896442E12, 0.3333333333333333], [1.7189637E12, 0.3], [1.71896436E12, 0.3], [1.718964E12, 0.35], [1.71896406E12, 0.3], [1.71896466E12, 0.26666666666666666], [1.71896394E12, 0.31666666666666665], [1.7189646E12, 0.2833333333333333], [1.7189643E12, 0.35], [1.71896424E12, 0.3], [1.71896364E12, 0.26666666666666666], [1.71896418E12, 0.31666666666666665], [1.71896454E12, 0.2833333333333333], [1.71896448E12, 0.36666666666666664], [1.71896388E12, 0.3]], "isOverall": false, "label": "Actors by name-success", "isController": false}, {"data": [[1.7189646E12, 0.06666666666666667], [1.71896376E12, 0.06666666666666667], [1.7189643E12, 0.016666666666666666], [1.71896382E12, 0.06666666666666667], [1.71896412E12, 0.03333333333333333], [1.7189637E12, 0.016666666666666666], [1.71896436E12, 0.016666666666666666], [1.71896454E12, 0.016666666666666666], [1.71896406E12, 0.03333333333333333], [1.71896448E12, 0.016666666666666666], [1.71896388E12, 0.03333333333333333], [1.71896466E12, 0.016666666666666666]], "isOverall": false, "label": "TitleBasics by params-failure", "isController": false}, {"data": [[1.71896376E12, 0.2833333333333333], [1.71896478E12, 0.31666666666666665], [1.71896382E12, 0.2833333333333333], [1.71896472E12, 0.23333333333333334], [1.71896412E12, 0.25], [1.71896442E12, 0.23333333333333334], [1.7189637E12, 0.26666666666666666], [1.71896436E12, 0.21666666666666667], [1.718964E12, 0.2], [1.71896406E12, 0.13333333333333333], [1.71896466E12, 0.18333333333333332], [1.71896394E12, 0.3333333333333333], [1.7189646E12, 0.2833333333333333], [1.7189643E12, 0.36666666666666664], [1.71896424E12, 0.2833333333333333], [1.71896364E12, 0.36666666666666664], [1.71896418E12, 0.16666666666666666], [1.71896454E12, 0.23333333333333334], [1.71896358E12, 0.18333333333333332], [1.71896448E12, 0.2], [1.71896388E12, 0.3333333333333333]], "isOverall": false, "label": "TitleBasics by params-success", "isController": false}, {"data": [[1.71896376E12, 0.35], [1.71896478E12, 0.3], [1.71896382E12, 0.36666666666666664], [1.71896472E12, 0.18333333333333332], [1.71896412E12, 0.2], [1.71896442E12, 0.21666666666666667], [1.7189637E12, 0.3333333333333333], [1.71896436E12, 0.18333333333333332], [1.718964E12, 0.2], [1.71896406E12, 0.2833333333333333], [1.71896466E12, 0.4166666666666667], [1.71896394E12, 0.31666666666666665], [1.7189646E12, 0.3], [1.7189643E12, 0.2], [1.71896424E12, 0.18333333333333332], [1.71896364E12, 0.35], [1.71896418E12, 0.21666666666666667], [1.71896454E12, 0.4166666666666667], [1.71896358E12, 0.15], [1.71896448E12, 0.35], [1.71896388E12, 0.43333333333333335]], "isOverall": false, "label": "Directors by name-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71896478E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71896358E12, "maxY": 1.4833333333333334, "series": [{"data": [[1.71896376E12, 1.2666666666666666], [1.71896478E12, 1.3], [1.71896382E12, 1.1666666666666667], [1.71896472E12, 0.9833333333333333], [1.71896412E12, 1.0166666666666666], [1.71896442E12, 0.9333333333333333], [1.7189637E12, 1.1666666666666667], [1.71896436E12, 0.9166666666666666], [1.718964E12, 0.9166666666666666], [1.71896406E12, 1.1], [1.71896466E12, 1.25], [1.71896394E12, 1.0833333333333333], [1.7189646E12, 1.2], [1.7189643E12, 1.1666666666666667], [1.71896424E12, 1.0333333333333334], [1.71896364E12, 1.2333333333333334], [1.71896418E12, 0.9833333333333333], [1.71896454E12, 1.15], [1.71896358E12, 0.55], [1.71896448E12, 1.25], [1.71896388E12, 1.4833333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.7189646E12, 0.06666666666666667], [1.71896376E12, 0.06666666666666667], [1.7189643E12, 0.016666666666666666], [1.71896382E12, 0.06666666666666667], [1.71896412E12, 0.03333333333333333], [1.7189637E12, 0.016666666666666666], [1.71896436E12, 0.016666666666666666], [1.71896454E12, 0.016666666666666666], [1.71896406E12, 0.03333333333333333], [1.71896448E12, 0.016666666666666666], [1.71896388E12, 0.03333333333333333], [1.71896466E12, 0.016666666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71896478E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}


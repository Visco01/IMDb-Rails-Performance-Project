/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 164053.0, "series": [{"data": [[0.0, 1082.0], [0.1, 1082.0], [0.2, 1082.0], [0.3, 1082.0], [0.4, 1082.0], [0.5, 1082.0], [0.6, 1082.0], [0.7, 1133.0], [0.8, 1133.0], [0.9, 1133.0], [1.0, 1133.0], [1.1, 1133.0], [1.2, 1133.0], [1.3, 1133.0], [1.4, 1133.0], [1.5, 1133.0], [1.6, 1133.0], [1.7, 1133.0], [1.8, 1133.0], [1.9, 1196.0], [2.0, 1196.0], [2.1, 1196.0], [2.2, 1196.0], [2.3, 1196.0], [2.4, 1196.0], [2.5, 1201.0], [2.6, 1201.0], [2.7, 1201.0], [2.8, 1201.0], [2.9, 1201.0], [3.0, 1201.0], [3.1, 1225.0], [3.2, 1225.0], [3.3, 1225.0], [3.4, 1225.0], [3.5, 1225.0], [3.6, 1225.0], [3.7, 1234.0], [3.8, 1234.0], [3.9, 1234.0], [4.0, 1234.0], [4.1, 1234.0], [4.2, 1234.0], [4.3, 1247.0], [4.4, 1247.0], [4.5, 1247.0], [4.6, 1247.0], [4.7, 1247.0], [4.8, 1247.0], [4.9, 1247.0], [5.0, 1285.0], [5.1, 1285.0], [5.2, 1285.0], [5.3, 1285.0], [5.4, 1285.0], [5.5, 1285.0], [5.6, 1319.0], [5.7, 1319.0], [5.8, 1319.0], [5.9, 1319.0], [6.0, 1319.0], [6.1, 1319.0], [6.2, 1443.0], [6.3, 1443.0], [6.4, 1443.0], [6.5, 1443.0], [6.6, 1443.0], [6.7, 1443.0], [6.8, 1848.0], [6.9, 1848.0], [7.0, 1848.0], [7.1, 1848.0], [7.2, 1848.0], [7.3, 1848.0], [7.4, 1903.0], [7.5, 1903.0], [7.6, 1903.0], [7.7, 1903.0], [7.8, 1903.0], [7.9, 1903.0], [8.0, 1992.0], [8.1, 1992.0], [8.2, 1992.0], [8.3, 1992.0], [8.4, 1992.0], [8.5, 1992.0], [8.6, 2022.0], [8.7, 2022.0], [8.8, 2022.0], [8.9, 2022.0], [9.0, 2022.0], [9.1, 2022.0], [9.2, 2022.0], [9.3, 2194.0], [9.4, 2194.0], [9.5, 2194.0], [9.6, 2194.0], [9.7, 2194.0], [9.8, 2194.0], [9.9, 3055.0], [10.0, 3055.0], [10.1, 3055.0], [10.2, 3055.0], [10.3, 3055.0], [10.4, 3055.0], [10.5, 3873.0], [10.6, 3873.0], [10.7, 3873.0], [10.8, 3873.0], [10.9, 3873.0], [11.0, 3873.0], [11.1, 3884.0], [11.2, 3884.0], [11.3, 3884.0], [11.4, 3884.0], [11.5, 3884.0], [11.6, 3884.0], [11.7, 4429.0], [11.8, 4429.0], [11.9, 4429.0], [12.0, 4429.0], [12.1, 4429.0], [12.2, 4429.0], [12.3, 4913.0], [12.4, 4913.0], [12.5, 4913.0], [12.6, 4913.0], [12.7, 4913.0], [12.8, 4913.0], [12.9, 5540.0], [13.0, 5540.0], [13.1, 5540.0], [13.2, 5540.0], [13.3, 5540.0], [13.4, 5540.0], [13.5, 6156.0], [13.6, 6156.0], [13.7, 6156.0], [13.8, 6156.0], [13.9, 6156.0], [14.0, 6156.0], [14.1, 6156.0], [14.2, 6549.0], [14.3, 6549.0], [14.4, 6549.0], [14.5, 6549.0], [14.6, 6549.0], [14.7, 6549.0], [14.8, 6631.0], [14.9, 6631.0], [15.0, 6631.0], [15.1, 6631.0], [15.2, 6631.0], [15.3, 6631.0], [15.4, 6774.0], [15.5, 6774.0], [15.6, 6774.0], [15.7, 6774.0], [15.8, 6774.0], [15.9, 6774.0], [16.0, 6777.0], [16.1, 6777.0], [16.2, 6777.0], [16.3, 6777.0], [16.4, 6777.0], [16.5, 6777.0], [16.6, 6831.0], [16.7, 6831.0], [16.8, 6831.0], [16.9, 6831.0], [17.0, 6831.0], [17.1, 6831.0], [17.2, 7167.0], [17.3, 7167.0], [17.4, 7167.0], [17.5, 7167.0], [17.6, 7167.0], [17.7, 7167.0], [17.8, 8200.0], [17.9, 8200.0], [18.0, 8200.0], [18.1, 8200.0], [18.2, 8200.0], [18.3, 8200.0], [18.4, 8200.0], [18.5, 8275.0], [18.6, 8275.0], [18.7, 8275.0], [18.8, 8275.0], [18.9, 8275.0], [19.0, 8275.0], [19.1, 8365.0], [19.2, 8365.0], [19.3, 8365.0], [19.4, 8365.0], [19.5, 8365.0], [19.6, 8365.0], [19.7, 8619.0], [19.8, 8619.0], [19.9, 8619.0], [20.0, 8619.0], [20.1, 8619.0], [20.2, 8619.0], [20.3, 8822.0], [20.4, 8822.0], [20.5, 8822.0], [20.6, 8822.0], [20.7, 8822.0], [20.8, 8822.0], [20.9, 9270.0], [21.0, 9270.0], [21.1, 9270.0], [21.2, 9270.0], [21.3, 9270.0], [21.4, 9270.0], [21.5, 9631.0], [21.6, 9631.0], [21.7, 9631.0], [21.8, 9631.0], [21.9, 9631.0], [22.0, 9631.0], [22.1, 9976.0], [22.2, 9976.0], [22.3, 9976.0], [22.4, 9976.0], [22.5, 9976.0], [22.6, 9976.0], [22.7, 10343.0], [22.8, 10343.0], [22.9, 10343.0], [23.0, 10343.0], [23.1, 10343.0], [23.2, 10343.0], [23.3, 10343.0], [23.4, 11224.0], [23.5, 11224.0], [23.6, 11224.0], [23.7, 11224.0], [23.8, 11224.0], [23.9, 11224.0], [24.0, 11377.0], [24.1, 11377.0], [24.2, 11377.0], [24.3, 11377.0], [24.4, 11377.0], [24.5, 11377.0], [24.6, 11482.0], [24.7, 11482.0], [24.8, 11482.0], [24.9, 11482.0], [25.0, 11482.0], [25.1, 11482.0], [25.2, 13942.0], [25.3, 13942.0], [25.4, 13942.0], [25.5, 13942.0], [25.6, 13942.0], [25.7, 13942.0], [25.8, 14327.0], [25.9, 14327.0], [26.0, 14327.0], [26.1, 14327.0], [26.2, 14327.0], [26.3, 14327.0], [26.4, 14370.0], [26.5, 14370.0], [26.6, 14370.0], [26.7, 14370.0], [26.8, 14370.0], [26.9, 14370.0], [27.0, 14374.0], [27.1, 14374.0], [27.2, 14374.0], [27.3, 14374.0], [27.4, 14374.0], [27.5, 14374.0], [27.6, 14374.0], [27.7, 14582.0], [27.8, 14582.0], [27.9, 14582.0], [28.0, 14582.0], [28.1, 14582.0], [28.2, 14582.0], [28.3, 14716.0], [28.4, 14716.0], [28.5, 14716.0], [28.6, 14716.0], [28.7, 14716.0], [28.8, 14716.0], [28.9, 14771.0], [29.0, 14771.0], [29.1, 14771.0], [29.2, 14771.0], [29.3, 14771.0], [29.4, 14771.0], [29.5, 14906.0], [29.6, 14906.0], [29.7, 14906.0], [29.8, 14906.0], [29.9, 14906.0], [30.0, 14906.0], [30.1, 15061.0], [30.2, 15061.0], [30.3, 15061.0], [30.4, 15061.0], [30.5, 15061.0], [30.6, 15061.0], [30.7, 15083.0], [30.8, 15083.0], [30.9, 15083.0], [31.0, 15083.0], [31.1, 15083.0], [31.2, 15083.0], [31.3, 15257.0], [31.4, 15257.0], [31.5, 15257.0], [31.6, 15257.0], [31.7, 15257.0], [31.8, 15257.0], [31.9, 15257.0], [32.0, 15763.0], [32.1, 15763.0], [32.2, 15763.0], [32.3, 15763.0], [32.4, 15763.0], [32.5, 15763.0], [32.6, 16186.0], [32.7, 16186.0], [32.8, 16186.0], [32.9, 16186.0], [33.0, 16186.0], [33.1, 16186.0], [33.2, 16686.0], [33.3, 16686.0], [33.4, 16686.0], [33.5, 16686.0], [33.6, 16686.0], [33.7, 16686.0], [33.8, 16724.0], [33.9, 16724.0], [34.0, 16724.0], [34.1, 16724.0], [34.2, 16724.0], [34.3, 16724.0], [34.4, 16959.0], [34.5, 16959.0], [34.6, 16959.0], [34.7, 16959.0], [34.8, 16959.0], [34.9, 16959.0], [35.0, 17006.0], [35.1, 17006.0], [35.2, 17006.0], [35.3, 17006.0], [35.4, 17006.0], [35.5, 17006.0], [35.6, 17012.0], [35.7, 17012.0], [35.8, 17012.0], [35.9, 17012.0], [36.0, 17012.0], [36.1, 17012.0], [36.2, 17422.0], [36.3, 17422.0], [36.4, 17422.0], [36.5, 17422.0], [36.6, 17422.0], [36.7, 17422.0], [36.8, 17422.0], [36.9, 17814.0], [37.0, 17814.0], [37.1, 17814.0], [37.2, 17814.0], [37.3, 17814.0], [37.4, 17814.0], [37.5, 17841.0], [37.6, 17841.0], [37.7, 17841.0], [37.8, 17841.0], [37.9, 17841.0], [38.0, 17841.0], [38.1, 17852.0], [38.2, 17852.0], [38.3, 17852.0], [38.4, 17852.0], [38.5, 17852.0], [38.6, 17852.0], [38.7, 17922.0], [38.8, 17922.0], [38.9, 17922.0], [39.0, 17922.0], [39.1, 17922.0], [39.2, 17922.0], [39.3, 18152.0], [39.4, 18152.0], [39.5, 18152.0], [39.6, 18152.0], [39.7, 18152.0], [39.8, 18152.0], [39.9, 18497.0], [40.0, 18497.0], [40.1, 18497.0], [40.2, 18497.0], [40.3, 18497.0], [40.4, 18497.0], [40.5, 19173.0], [40.6, 19173.0], [40.7, 19173.0], [40.8, 19173.0], [40.9, 19173.0], [41.0, 19173.0], [41.1, 19173.0], [41.2, 19410.0], [41.3, 19410.0], [41.4, 19410.0], [41.5, 19410.0], [41.6, 19410.0], [41.7, 19410.0], [41.8, 19432.0], [41.9, 19432.0], [42.0, 19432.0], [42.1, 19432.0], [42.2, 19432.0], [42.3, 19432.0], [42.4, 19454.0], [42.5, 19454.0], [42.6, 19454.0], [42.7, 19454.0], [42.8, 19454.0], [42.9, 19454.0], [43.0, 19732.0], [43.1, 19732.0], [43.2, 19732.0], [43.3, 19732.0], [43.4, 19732.0], [43.5, 19732.0], [43.6, 20258.0], [43.7, 20258.0], [43.8, 20258.0], [43.9, 20258.0], [44.0, 20258.0], [44.1, 20258.0], [44.2, 20790.0], [44.3, 20790.0], [44.4, 20790.0], [44.5, 20790.0], [44.6, 20790.0], [44.7, 20790.0], [44.8, 21561.0], [44.9, 21561.0], [45.0, 21561.0], [45.1, 21561.0], [45.2, 21561.0], [45.3, 21561.0], [45.4, 21617.0], [45.5, 21617.0], [45.6, 21617.0], [45.7, 21617.0], [45.8, 21617.0], [45.9, 21617.0], [46.0, 21617.0], [46.1, 22124.0], [46.2, 22124.0], [46.3, 22124.0], [46.4, 22124.0], [46.5, 22124.0], [46.6, 22124.0], [46.7, 23532.0], [46.8, 23532.0], [46.9, 23532.0], [47.0, 23532.0], [47.1, 23532.0], [47.2, 23532.0], [47.3, 23603.0], [47.4, 23603.0], [47.5, 23603.0], [47.6, 23603.0], [47.7, 23603.0], [47.8, 23603.0], [47.9, 23887.0], [48.0, 23887.0], [48.1, 23887.0], [48.2, 23887.0], [48.3, 23887.0], [48.4, 23887.0], [48.5, 24087.0], [48.6, 24087.0], [48.7, 24087.0], [48.8, 24087.0], [48.9, 24087.0], [49.0, 24087.0], [49.1, 24173.0], [49.2, 24173.0], [49.3, 24173.0], [49.4, 24173.0], [49.5, 24173.0], [49.6, 24173.0], [49.7, 24883.0], [49.8, 24883.0], [49.9, 24883.0], [50.0, 24883.0], [50.1, 24883.0], [50.2, 24883.0], [50.3, 24883.0], [50.4, 24962.0], [50.5, 24962.0], [50.6, 24962.0], [50.7, 24962.0], [50.8, 24962.0], [50.9, 24962.0], [51.0, 25195.0], [51.1, 25195.0], [51.2, 25195.0], [51.3, 25195.0], [51.4, 25195.0], [51.5, 25195.0], [51.6, 25531.0], [51.7, 25531.0], [51.8, 25531.0], [51.9, 25531.0], [52.0, 25531.0], [52.1, 25531.0], [52.2, 25538.0], [52.3, 25538.0], [52.4, 25538.0], [52.5, 25538.0], [52.6, 25538.0], [52.7, 25538.0], [52.8, 25825.0], [52.9, 25825.0], [53.0, 25825.0], [53.1, 25825.0], [53.2, 25825.0], [53.3, 25825.0], [53.4, 25923.0], [53.5, 25923.0], [53.6, 25923.0], [53.7, 25923.0], [53.8, 25923.0], [53.9, 25923.0], [54.0, 26053.0], [54.1, 26053.0], [54.2, 26053.0], [54.3, 26053.0], [54.4, 26053.0], [54.5, 26053.0], [54.6, 26053.0], [54.7, 26078.0], [54.8, 26078.0], [54.9, 26078.0], [55.0, 26078.0], [55.1, 26078.0], [55.2, 26078.0], [55.3, 26092.0], [55.4, 26092.0], [55.5, 26092.0], [55.6, 26092.0], [55.7, 26092.0], [55.8, 26092.0], [55.9, 26451.0], [56.0, 26451.0], [56.1, 26451.0], [56.2, 26451.0], [56.3, 26451.0], [56.4, 26451.0], [56.5, 27039.0], [56.6, 27039.0], [56.7, 27039.0], [56.8, 27039.0], [56.9, 27039.0], [57.0, 27039.0], [57.1, 27087.0], [57.2, 27087.0], [57.3, 27087.0], [57.4, 27087.0], [57.5, 27087.0], [57.6, 27087.0], [57.7, 27280.0], [57.8, 27280.0], [57.9, 27280.0], [58.0, 27280.0], [58.1, 27280.0], [58.2, 27280.0], [58.3, 27396.0], [58.4, 27396.0], [58.5, 27396.0], [58.6, 27396.0], [58.7, 27396.0], [58.8, 27396.0], [58.9, 27440.0], [59.0, 27440.0], [59.1, 27440.0], [59.2, 27440.0], [59.3, 27440.0], [59.4, 27440.0], [59.5, 27440.0], [59.6, 27652.0], [59.7, 27652.0], [59.8, 27652.0], [59.9, 27652.0], [60.0, 27652.0], [60.1, 27652.0], [60.2, 27927.0], [60.3, 27927.0], [60.4, 27927.0], [60.5, 27927.0], [60.6, 27927.0], [60.7, 27927.0], [60.8, 27973.0], [60.9, 27973.0], [61.0, 27973.0], [61.1, 27973.0], [61.2, 27973.0], [61.3, 27973.0], [61.4, 28886.0], [61.5, 28886.0], [61.6, 28886.0], [61.7, 28886.0], [61.8, 28886.0], [61.9, 28886.0], [62.0, 28995.0], [62.1, 28995.0], [62.2, 28995.0], [62.3, 28995.0], [62.4, 28995.0], [62.5, 28995.0], [62.6, 29195.0], [62.7, 29195.0], [62.8, 29195.0], [62.9, 29195.0], [63.0, 29195.0], [63.1, 29195.0], [63.2, 29201.0], [63.3, 29201.0], [63.4, 29201.0], [63.5, 29201.0], [63.6, 29201.0], [63.7, 29201.0], [63.8, 29201.0], [63.9, 29222.0], [64.0, 29222.0], [64.1, 29222.0], [64.2, 29222.0], [64.3, 29222.0], [64.4, 29222.0], [64.5, 30025.0], [64.6, 30025.0], [64.7, 30025.0], [64.8, 30025.0], [64.9, 30025.0], [65.0, 30025.0], [65.1, 30087.0], [65.2, 30087.0], [65.3, 30087.0], [65.4, 30087.0], [65.5, 30087.0], [65.6, 30087.0], [65.7, 30215.0], [65.8, 30215.0], [65.9, 30215.0], [66.0, 30215.0], [66.1, 30215.0], [66.2, 30215.0], [66.3, 30311.0], [66.4, 30311.0], [66.5, 30311.0], [66.6, 30311.0], [66.7, 30311.0], [66.8, 30311.0], [66.9, 30314.0], [67.0, 30314.0], [67.1, 30314.0], [67.2, 30314.0], [67.3, 30314.0], [67.4, 30314.0], [67.5, 30660.0], [67.6, 30660.0], [67.7, 30660.0], [67.8, 30660.0], [67.9, 30660.0], [68.0, 30660.0], [68.1, 31147.0], [68.2, 31147.0], [68.3, 31147.0], [68.4, 31147.0], [68.5, 31147.0], [68.6, 31147.0], [68.7, 31147.0], [68.8, 31556.0], [68.9, 31556.0], [69.0, 31556.0], [69.1, 31556.0], [69.2, 31556.0], [69.3, 31556.0], [69.4, 31723.0], [69.5, 31723.0], [69.6, 31723.0], [69.7, 31723.0], [69.8, 31723.0], [69.9, 31723.0], [70.0, 32257.0], [70.1, 32257.0], [70.2, 32257.0], [70.3, 32257.0], [70.4, 32257.0], [70.5, 32257.0], [70.6, 32344.0], [70.7, 32344.0], [70.8, 32344.0], [70.9, 32344.0], [71.0, 32344.0], [71.1, 32344.0], [71.2, 32630.0], [71.3, 32630.0], [71.4, 32630.0], [71.5, 32630.0], [71.6, 32630.0], [71.7, 32630.0], [71.8, 33196.0], [71.9, 33196.0], [72.0, 33196.0], [72.1, 33196.0], [72.2, 33196.0], [72.3, 33196.0], [72.4, 33668.0], [72.5, 33668.0], [72.6, 33668.0], [72.7, 33668.0], [72.8, 33668.0], [72.9, 33668.0], [73.0, 33668.0], [73.1, 33805.0], [73.2, 33805.0], [73.3, 33805.0], [73.4, 33805.0], [73.5, 33805.0], [73.6, 33805.0], [73.7, 34003.0], [73.8, 34003.0], [73.9, 34003.0], [74.0, 34003.0], [74.1, 34003.0], [74.2, 34003.0], [74.3, 34171.0], [74.4, 34171.0], [74.5, 34171.0], [74.6, 34171.0], [74.7, 34171.0], [74.8, 34171.0], [74.9, 34534.0], [75.0, 34534.0], [75.1, 34534.0], [75.2, 34534.0], [75.3, 34534.0], [75.4, 34534.0], [75.5, 34701.0], [75.6, 34701.0], [75.7, 34701.0], [75.8, 34701.0], [75.9, 34701.0], [76.0, 34701.0], [76.1, 34868.0], [76.2, 34868.0], [76.3, 34868.0], [76.4, 34868.0], [76.5, 34868.0], [76.6, 34868.0], [76.7, 35296.0], [76.8, 35296.0], [76.9, 35296.0], [77.0, 35296.0], [77.1, 35296.0], [77.2, 35296.0], [77.3, 35296.0], [77.4, 35748.0], [77.5, 35748.0], [77.6, 35748.0], [77.7, 35748.0], [77.8, 35748.0], [77.9, 35748.0], [78.0, 36866.0], [78.1, 36866.0], [78.2, 36866.0], [78.3, 36866.0], [78.4, 36866.0], [78.5, 36866.0], [78.6, 37152.0], [78.7, 37152.0], [78.8, 37152.0], [78.9, 37152.0], [79.0, 37152.0], [79.1, 37152.0], [79.2, 37287.0], [79.3, 37287.0], [79.4, 37287.0], [79.5, 37287.0], [79.6, 37287.0], [79.7, 37287.0], [79.8, 37380.0], [79.9, 37380.0], [80.0, 37380.0], [80.1, 37380.0], [80.2, 37380.0], [80.3, 37380.0], [80.4, 37721.0], [80.5, 37721.0], [80.6, 37721.0], [80.7, 37721.0], [80.8, 37721.0], [80.9, 37721.0], [81.0, 37805.0], [81.1, 37805.0], [81.2, 37805.0], [81.3, 37805.0], [81.4, 37805.0], [81.5, 37805.0], [81.6, 38293.0], [81.7, 38293.0], [81.8, 38293.0], [81.9, 38293.0], [82.0, 38293.0], [82.1, 38293.0], [82.2, 38293.0], [82.3, 38830.0], [82.4, 38830.0], [82.5, 38830.0], [82.6, 38830.0], [82.7, 38830.0], [82.8, 38830.0], [82.9, 39444.0], [83.0, 39444.0], [83.1, 39444.0], [83.2, 39444.0], [83.3, 39444.0], [83.4, 39444.0], [83.5, 40037.0], [83.6, 40037.0], [83.7, 40037.0], [83.8, 40037.0], [83.9, 40037.0], [84.0, 40037.0], [84.1, 41285.0], [84.2, 41285.0], [84.3, 41285.0], [84.4, 41285.0], [84.5, 41285.0], [84.6, 41285.0], [84.7, 41289.0], [84.8, 41289.0], [84.9, 41289.0], [85.0, 41289.0], [85.1, 41289.0], [85.2, 41289.0], [85.3, 42894.0], [85.4, 42894.0], [85.5, 42894.0], [85.6, 42894.0], [85.7, 42894.0], [85.8, 42894.0], [85.9, 43069.0], [86.0, 43069.0], [86.1, 43069.0], [86.2, 43069.0], [86.3, 43069.0], [86.4, 43069.0], [86.5, 43069.0], [86.6, 43428.0], [86.7, 43428.0], [86.8, 43428.0], [86.9, 43428.0], [87.0, 43428.0], [87.1, 43428.0], [87.2, 46388.0], [87.3, 46388.0], [87.4, 46388.0], [87.5, 46388.0], [87.6, 46388.0], [87.7, 46388.0], [87.8, 47709.0], [87.9, 47709.0], [88.0, 47709.0], [88.1, 47709.0], [88.2, 47709.0], [88.3, 47709.0], [88.4, 47714.0], [88.5, 47714.0], [88.6, 47714.0], [88.7, 47714.0], [88.8, 47714.0], [88.9, 47714.0], [89.0, 48126.0], [89.1, 48126.0], [89.2, 48126.0], [89.3, 48126.0], [89.4, 48126.0], [89.5, 48126.0], [89.6, 48673.0], [89.7, 48673.0], [89.8, 48673.0], [89.9, 48673.0], [90.0, 48673.0], [90.1, 48673.0], [90.2, 48790.0], [90.3, 48790.0], [90.4, 48790.0], [90.5, 48790.0], [90.6, 48790.0], [90.7, 48790.0], [90.8, 49354.0], [90.9, 49354.0], [91.0, 49354.0], [91.1, 49354.0], [91.2, 49354.0], [91.3, 49354.0], [91.4, 49354.0], [91.5, 50879.0], [91.6, 50879.0], [91.7, 50879.0], [91.8, 50879.0], [91.9, 50879.0], [92.0, 50879.0], [92.1, 50996.0], [92.2, 50996.0], [92.3, 50996.0], [92.4, 50996.0], [92.5, 50996.0], [92.6, 50996.0], [92.7, 51003.0], [92.8, 51003.0], [92.9, 51003.0], [93.0, 51003.0], [93.1, 51003.0], [93.2, 51003.0], [93.3, 51263.0], [93.4, 51263.0], [93.5, 51263.0], [93.6, 51263.0], [93.7, 51263.0], [93.8, 51263.0], [93.9, 53148.0], [94.0, 53148.0], [94.1, 53148.0], [94.2, 53148.0], [94.3, 53148.0], [94.4, 53148.0], [94.5, 54310.0], [94.6, 54310.0], [94.7, 54310.0], [94.8, 54310.0], [94.9, 54310.0], [95.0, 54310.0], [95.1, 55909.0], [95.2, 55909.0], [95.3, 55909.0], [95.4, 55909.0], [95.5, 55909.0], [95.6, 55909.0], [95.7, 55909.0], [95.8, 58586.0], [95.9, 58586.0], [96.0, 58586.0], [96.1, 58586.0], [96.2, 58586.0], [96.3, 58586.0], [96.4, 58595.0], [96.5, 58595.0], [96.6, 58595.0], [96.7, 58595.0], [96.8, 58595.0], [96.9, 58595.0], [97.0, 58796.0], [97.1, 58796.0], [97.2, 58796.0], [97.3, 58796.0], [97.4, 58796.0], [97.5, 58796.0], [97.6, 59661.0], [97.7, 59661.0], [97.8, 59661.0], [97.9, 59661.0], [98.0, 59661.0], [98.1, 59661.0], [98.2, 61142.0], [98.3, 61142.0], [98.4, 61142.0], [98.5, 61142.0], [98.6, 61142.0], [98.7, 61142.0], [98.8, 61227.0], [98.9, 61227.0], [99.0, 61227.0], [99.1, 61227.0], [99.2, 61227.0], [99.3, 61227.0], [99.4, 67767.0], [99.5, 67767.0], [99.6, 67767.0], [99.7, 67767.0], [99.8, 67767.0], [99.9, 67767.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[0.0, 104.0], [0.1, 104.0], [0.2, 104.0], [0.3, 104.0], [0.4, 104.0], [0.5, 104.0], [0.6, 156.0], [0.7, 156.0], [0.8, 156.0], [0.9, 156.0], [1.0, 156.0], [1.1, 192.0], [1.2, 192.0], [1.3, 192.0], [1.4, 192.0], [1.5, 192.0], [1.6, 192.0], [1.7, 211.0], [1.8, 211.0], [1.9, 211.0], [2.0, 211.0], [2.1, 211.0], [2.2, 218.0], [2.3, 218.0], [2.4, 218.0], [2.5, 218.0], [2.6, 218.0], [2.7, 218.0], [2.8, 237.0], [2.9, 237.0], [3.0, 237.0], [3.1, 237.0], [3.2, 237.0], [3.3, 246.0], [3.4, 246.0], [3.5, 246.0], [3.6, 246.0], [3.7, 246.0], [3.8, 246.0], [3.9, 313.0], [4.0, 313.0], [4.1, 313.0], [4.2, 313.0], [4.3, 313.0], [4.4, 320.0], [4.5, 320.0], [4.6, 320.0], [4.7, 320.0], [4.8, 320.0], [4.9, 320.0], [5.0, 329.0], [5.1, 329.0], [5.2, 329.0], [5.3, 329.0], [5.4, 329.0], [5.5, 340.0], [5.6, 340.0], [5.7, 340.0], [5.8, 340.0], [5.9, 340.0], [6.0, 340.0], [6.1, 384.0], [6.2, 384.0], [6.3, 384.0], [6.4, 384.0], [6.5, 384.0], [6.6, 395.0], [6.7, 395.0], [6.8, 395.0], [6.9, 395.0], [7.0, 395.0], [7.1, 395.0], [7.2, 415.0], [7.3, 415.0], [7.4, 415.0], [7.5, 415.0], [7.6, 415.0], [7.7, 424.0], [7.8, 424.0], [7.9, 424.0], [8.0, 424.0], [8.1, 424.0], [8.2, 440.0], [8.3, 440.0], [8.4, 440.0], [8.5, 440.0], [8.6, 440.0], [8.7, 440.0], [8.8, 451.0], [8.9, 451.0], [9.0, 451.0], [9.1, 451.0], [9.2, 451.0], [9.3, 474.0], [9.4, 474.0], [9.5, 474.0], [9.6, 474.0], [9.7, 474.0], [9.8, 474.0], [9.9, 479.0], [10.0, 479.0], [10.1, 479.0], [10.2, 479.0], [10.3, 479.0], [10.4, 527.0], [10.5, 527.0], [10.6, 527.0], [10.7, 527.0], [10.8, 527.0], [10.9, 527.0], [11.0, 531.0], [11.1, 531.0], [11.2, 531.0], [11.3, 531.0], [11.4, 531.0], [11.5, 551.0], [11.6, 551.0], [11.7, 551.0], [11.8, 551.0], [11.9, 551.0], [12.0, 551.0], [12.1, 554.0], [12.2, 554.0], [12.3, 554.0], [12.4, 554.0], [12.5, 554.0], [12.6, 572.0], [12.7, 572.0], [12.8, 572.0], [12.9, 572.0], [13.0, 572.0], [13.1, 572.0], [13.2, 572.0], [13.3, 572.0], [13.4, 572.0], [13.5, 572.0], [13.6, 572.0], [13.7, 583.0], [13.8, 583.0], [13.9, 583.0], [14.0, 583.0], [14.1, 583.0], [14.2, 583.0], [14.3, 605.0], [14.4, 605.0], [14.5, 605.0], [14.6, 605.0], [14.7, 605.0], [14.8, 611.0], [14.9, 611.0], [15.0, 611.0], [15.1, 611.0], [15.2, 611.0], [15.3, 611.0], [15.4, 615.0], [15.5, 615.0], [15.6, 615.0], [15.7, 615.0], [15.8, 615.0], [15.9, 618.0], [16.0, 618.0], [16.1, 618.0], [16.2, 618.0], [16.3, 618.0], [16.4, 621.0], [16.5, 621.0], [16.6, 621.0], [16.7, 621.0], [16.8, 621.0], [16.9, 621.0], [17.0, 627.0], [17.1, 627.0], [17.2, 627.0], [17.3, 627.0], [17.4, 627.0], [17.5, 684.0], [17.6, 684.0], [17.7, 684.0], [17.8, 684.0], [17.9, 684.0], [18.0, 684.0], [18.1, 731.0], [18.2, 731.0], [18.3, 731.0], [18.4, 731.0], [18.5, 731.0], [18.6, 740.0], [18.7, 740.0], [18.8, 740.0], [18.9, 740.0], [19.0, 740.0], [19.1, 740.0], [19.2, 756.0], [19.3, 756.0], [19.4, 756.0], [19.5, 756.0], [19.6, 756.0], [19.7, 774.0], [19.8, 774.0], [19.9, 774.0], [20.0, 774.0], [20.1, 774.0], [20.2, 774.0], [20.3, 819.0], [20.4, 819.0], [20.5, 819.0], [20.6, 819.0], [20.7, 819.0], [20.8, 822.0], [20.9, 822.0], [21.0, 822.0], [21.1, 822.0], [21.2, 822.0], [21.3, 822.0], [21.4, 825.0], [21.5, 825.0], [21.6, 825.0], [21.7, 825.0], [21.8, 825.0], [21.9, 837.0], [22.0, 837.0], [22.1, 837.0], [22.2, 837.0], [22.3, 837.0], [22.4, 837.0], [22.5, 839.0], [22.6, 839.0], [22.7, 839.0], [22.8, 839.0], [22.9, 839.0], [23.0, 866.0], [23.1, 866.0], [23.2, 866.0], [23.3, 866.0], [23.4, 866.0], [23.5, 923.0], [23.6, 923.0], [23.7, 923.0], [23.8, 923.0], [23.9, 923.0], [24.0, 923.0], [24.1, 926.0], [24.2, 926.0], [24.3, 926.0], [24.4, 926.0], [24.5, 926.0], [24.6, 927.0], [24.7, 927.0], [24.8, 927.0], [24.9, 927.0], [25.0, 927.0], [25.1, 927.0], [25.2, 960.0], [25.3, 960.0], [25.4, 960.0], [25.5, 960.0], [25.6, 960.0], [25.7, 962.0], [25.8, 962.0], [25.9, 962.0], [26.0, 962.0], [26.1, 962.0], [26.2, 962.0], [26.3, 992.0], [26.4, 992.0], [26.5, 992.0], [26.6, 992.0], [26.7, 992.0], [26.8, 1005.0], [26.9, 1005.0], [27.0, 1005.0], [27.1, 1005.0], [27.2, 1005.0], [27.3, 1005.0], [27.4, 1006.0], [27.5, 1006.0], [27.6, 1006.0], [27.7, 1006.0], [27.8, 1006.0], [27.9, 1017.0], [28.0, 1017.0], [28.1, 1017.0], [28.2, 1017.0], [28.3, 1017.0], [28.4, 1017.0], [28.5, 1023.0], [28.6, 1023.0], [28.7, 1023.0], [28.8, 1023.0], [28.9, 1023.0], [29.0, 1065.0], [29.1, 1065.0], [29.2, 1065.0], [29.3, 1065.0], [29.4, 1065.0], [29.5, 1065.0], [29.6, 1067.0], [29.7, 1067.0], [29.8, 1067.0], [29.9, 1067.0], [30.0, 1067.0], [30.1, 1087.0], [30.2, 1087.0], [30.3, 1087.0], [30.4, 1087.0], [30.5, 1087.0], [30.6, 1087.0], [30.7, 1112.0], [30.8, 1112.0], [30.9, 1112.0], [31.0, 1112.0], [31.1, 1112.0], [31.2, 1129.0], [31.3, 1129.0], [31.4, 1129.0], [31.5, 1129.0], [31.6, 1129.0], [31.7, 1157.0], [31.8, 1157.0], [31.9, 1157.0], [32.0, 1157.0], [32.1, 1157.0], [32.2, 1157.0], [32.3, 1224.0], [32.4, 1224.0], [32.5, 1224.0], [32.6, 1224.0], [32.7, 1224.0], [32.8, 1258.0], [32.9, 1258.0], [33.0, 1258.0], [33.1, 1258.0], [33.2, 1258.0], [33.3, 1258.0], [33.4, 1289.0], [33.5, 1289.0], [33.6, 1289.0], [33.7, 1289.0], [33.8, 1289.0], [33.9, 1345.0], [34.0, 1345.0], [34.1, 1345.0], [34.2, 1345.0], [34.3, 1345.0], [34.4, 1345.0], [34.5, 1353.0], [34.6, 1353.0], [34.7, 1353.0], [34.8, 1353.0], [34.9, 1353.0], [35.0, 1449.0], [35.1, 1449.0], [35.2, 1449.0], [35.3, 1449.0], [35.4, 1449.0], [35.5, 1449.0], [35.6, 1462.0], [35.7, 1462.0], [35.8, 1462.0], [35.9, 1462.0], [36.0, 1462.0], [36.1, 1488.0], [36.2, 1488.0], [36.3, 1488.0], [36.4, 1488.0], [36.5, 1488.0], [36.6, 1488.0], [36.7, 1642.0], [36.8, 1642.0], [36.9, 1642.0], [37.0, 1642.0], [37.1, 1642.0], [37.2, 1666.0], [37.3, 1666.0], [37.4, 1666.0], [37.5, 1666.0], [37.6, 1666.0], [37.7, 1666.0], [37.8, 1743.0], [37.9, 1743.0], [38.0, 1743.0], [38.1, 1743.0], [38.2, 1743.0], [38.3, 1747.0], [38.4, 1747.0], [38.5, 1747.0], [38.6, 1747.0], [38.7, 1747.0], [38.8, 1822.0], [38.9, 1822.0], [39.0, 1822.0], [39.1, 1822.0], [39.2, 1822.0], [39.3, 1822.0], [39.4, 1832.0], [39.5, 1832.0], [39.6, 1832.0], [39.7, 1832.0], [39.8, 1832.0], [39.9, 1846.0], [40.0, 1846.0], [40.1, 1846.0], [40.2, 1846.0], [40.3, 1846.0], [40.4, 1846.0], [40.5, 1870.0], [40.6, 1870.0], [40.7, 1870.0], [40.8, 1870.0], [40.9, 1870.0], [41.0, 1893.0], [41.1, 1893.0], [41.2, 1893.0], [41.3, 1893.0], [41.4, 1893.0], [41.5, 1893.0], [41.6, 1947.0], [41.7, 1947.0], [41.8, 1947.0], [41.9, 1947.0], [42.0, 1947.0], [42.1, 1953.0], [42.2, 1953.0], [42.3, 1953.0], [42.4, 1953.0], [42.5, 1953.0], [42.6, 1953.0], [42.7, 1970.0], [42.8, 1970.0], [42.9, 1970.0], [43.0, 1970.0], [43.1, 1970.0], [43.2, 2002.0], [43.3, 2002.0], [43.4, 2002.0], [43.5, 2002.0], [43.6, 2002.0], [43.7, 2002.0], [43.8, 2032.0], [43.9, 2032.0], [44.0, 2032.0], [44.1, 2032.0], [44.2, 2032.0], [44.3, 2384.0], [44.4, 2384.0], [44.5, 2384.0], [44.6, 2384.0], [44.7, 2384.0], [44.8, 2384.0], [44.9, 2420.0], [45.0, 2420.0], [45.1, 2420.0], [45.2, 2420.0], [45.3, 2420.0], [45.4, 2451.0], [45.5, 2451.0], [45.6, 2451.0], [45.7, 2451.0], [45.8, 2451.0], [45.9, 2451.0], [46.0, 2563.0], [46.1, 2563.0], [46.2, 2563.0], [46.3, 2563.0], [46.4, 2563.0], [46.5, 2568.0], [46.6, 2568.0], [46.7, 2568.0], [46.8, 2568.0], [46.9, 2568.0], [47.0, 2596.0], [47.1, 2596.0], [47.2, 2596.0], [47.3, 2596.0], [47.4, 2596.0], [47.5, 2596.0], [47.6, 2627.0], [47.7, 2627.0], [47.8, 2627.0], [47.9, 2627.0], [48.0, 2627.0], [48.1, 2637.0], [48.2, 2637.0], [48.3, 2637.0], [48.4, 2637.0], [48.5, 2637.0], [48.6, 2637.0], [48.7, 2637.0], [48.8, 2637.0], [48.9, 2637.0], [49.0, 2637.0], [49.1, 2637.0], [49.2, 2757.0], [49.3, 2757.0], [49.4, 2757.0], [49.5, 2757.0], [49.6, 2757.0], [49.7, 2757.0], [49.8, 2768.0], [49.9, 2768.0], [50.0, 2768.0], [50.1, 2768.0], [50.2, 2768.0], [50.3, 2856.0], [50.4, 2856.0], [50.5, 2856.0], [50.6, 2856.0], [50.7, 2856.0], [50.8, 2856.0], [50.9, 2879.0], [51.0, 2879.0], [51.1, 2879.0], [51.2, 2879.0], [51.3, 2879.0], [51.4, 2893.0], [51.5, 2893.0], [51.6, 2893.0], [51.7, 2893.0], [51.8, 2893.0], [51.9, 2893.0], [52.0, 2897.0], [52.1, 2897.0], [52.2, 2897.0], [52.3, 2897.0], [52.4, 2897.0], [52.5, 2919.0], [52.6, 2919.0], [52.7, 2919.0], [52.8, 2919.0], [52.9, 2919.0], [53.0, 2919.0], [53.1, 3069.0], [53.2, 3069.0], [53.3, 3069.0], [53.4, 3069.0], [53.5, 3069.0], [53.6, 3080.0], [53.7, 3080.0], [53.8, 3080.0], [53.9, 3080.0], [54.0, 3080.0], [54.1, 3255.0], [54.2, 3255.0], [54.3, 3255.0], [54.4, 3255.0], [54.5, 3255.0], [54.6, 3255.0], [54.7, 3693.0], [54.8, 3693.0], [54.9, 3693.0], [55.0, 3693.0], [55.1, 3693.0], [55.2, 3856.0], [55.3, 3856.0], [55.4, 3856.0], [55.5, 3856.0], [55.6, 3856.0], [55.7, 3856.0], [55.8, 4094.0], [55.9, 4094.0], [56.0, 4094.0], [56.1, 4094.0], [56.2, 4094.0], [56.3, 4104.0], [56.4, 4104.0], [56.5, 4104.0], [56.6, 4104.0], [56.7, 4104.0], [56.8, 4104.0], [56.9, 4124.0], [57.0, 4124.0], [57.1, 4124.0], [57.2, 4124.0], [57.3, 4124.0], [57.4, 4189.0], [57.5, 4189.0], [57.6, 4189.0], [57.7, 4189.0], [57.8, 4189.0], [57.9, 4189.0], [58.0, 4318.0], [58.1, 4318.0], [58.2, 4318.0], [58.3, 4318.0], [58.4, 4318.0], [58.5, 4338.0], [58.6, 4338.0], [58.7, 4338.0], [58.8, 4338.0], [58.9, 4338.0], [59.0, 4338.0], [59.1, 4406.0], [59.2, 4406.0], [59.3, 4406.0], [59.4, 4406.0], [59.5, 4406.0], [59.6, 4411.0], [59.7, 4411.0], [59.8, 4411.0], [59.9, 4411.0], [60.0, 4411.0], [60.1, 4411.0], [60.2, 4509.0], [60.3, 4509.0], [60.4, 4509.0], [60.5, 4509.0], [60.6, 4509.0], [60.7, 4716.0], [60.8, 4716.0], [60.9, 4716.0], [61.0, 4716.0], [61.1, 4716.0], [61.2, 4716.0], [61.3, 4805.0], [61.4, 4805.0], [61.5, 4805.0], [61.6, 4805.0], [61.7, 4805.0], [61.8, 4828.0], [61.9, 4828.0], [62.0, 4828.0], [62.1, 4828.0], [62.2, 4828.0], [62.3, 4845.0], [62.4, 4845.0], [62.5, 4845.0], [62.6, 4845.0], [62.7, 4845.0], [62.8, 4845.0], [62.9, 4907.0], [63.0, 4907.0], [63.1, 4907.0], [63.2, 4907.0], [63.3, 4907.0], [63.4, 4947.0], [63.5, 4947.0], [63.6, 4947.0], [63.7, 4947.0], [63.8, 4947.0], [63.9, 4947.0], [64.0, 5020.0], [64.1, 5020.0], [64.2, 5020.0], [64.3, 5020.0], [64.4, 5020.0], [64.5, 5035.0], [64.6, 5035.0], [64.7, 5035.0], [64.8, 5035.0], [64.9, 5035.0], [65.0, 5035.0], [65.1, 5147.0], [65.2, 5147.0], [65.3, 5147.0], [65.4, 5147.0], [65.5, 5147.0], [65.6, 5335.0], [65.7, 5335.0], [65.8, 5335.0], [65.9, 5335.0], [66.0, 5335.0], [66.1, 5335.0], [66.2, 5428.0], [66.3, 5428.0], [66.4, 5428.0], [66.5, 5428.0], [66.6, 5428.0], [66.7, 5484.0], [66.8, 5484.0], [66.9, 5484.0], [67.0, 5484.0], [67.1, 5484.0], [67.2, 5484.0], [67.3, 5509.0], [67.4, 5509.0], [67.5, 5509.0], [67.6, 5509.0], [67.7, 5509.0], [67.8, 5553.0], [67.9, 5553.0], [68.0, 5553.0], [68.1, 5553.0], [68.2, 5553.0], [68.3, 5553.0], [68.4, 5557.0], [68.5, 5557.0], [68.6, 5557.0], [68.7, 5557.0], [68.8, 5557.0], [68.9, 5611.0], [69.0, 5611.0], [69.1, 5611.0], [69.2, 5611.0], [69.3, 5611.0], [69.4, 5740.0], [69.5, 5740.0], [69.6, 5740.0], [69.7, 5740.0], [69.8, 5740.0], [69.9, 5740.0], [70.0, 5742.0], [70.1, 5742.0], [70.2, 5742.0], [70.3, 5742.0], [70.4, 5742.0], [70.5, 5841.0], [70.6, 5841.0], [70.7, 5841.0], [70.8, 5841.0], [70.9, 5841.0], [71.0, 5841.0], [71.1, 5951.0], [71.2, 5951.0], [71.3, 5951.0], [71.4, 5951.0], [71.5, 5951.0], [71.6, 5972.0], [71.7, 5972.0], [71.8, 5972.0], [71.9, 5972.0], [72.0, 5972.0], [72.1, 5972.0], [72.2, 6365.0], [72.3, 6365.0], [72.4, 6365.0], [72.5, 6365.0], [72.6, 6365.0], [72.7, 6366.0], [72.8, 6366.0], [72.9, 6366.0], [73.0, 6366.0], [73.1, 6366.0], [73.2, 6366.0], [73.3, 6526.0], [73.4, 6526.0], [73.5, 6526.0], [73.6, 6526.0], [73.7, 6526.0], [73.8, 6549.0], [73.9, 6549.0], [74.0, 6549.0], [74.1, 6549.0], [74.2, 6549.0], [74.3, 6549.0], [74.4, 6626.0], [74.5, 6626.0], [74.6, 6626.0], [74.7, 6626.0], [74.8, 6626.0], [74.9, 6668.0], [75.0, 6668.0], [75.1, 6668.0], [75.2, 6668.0], [75.3, 6668.0], [75.4, 6668.0], [75.5, 6753.0], [75.6, 6753.0], [75.7, 6753.0], [75.8, 6753.0], [75.9, 6753.0], [76.0, 6763.0], [76.1, 6763.0], [76.2, 6763.0], [76.3, 6763.0], [76.4, 6763.0], [76.5, 6763.0], [76.6, 6970.0], [76.7, 6970.0], [76.8, 6970.0], [76.9, 6970.0], [77.0, 6970.0], [77.1, 7103.0], [77.2, 7103.0], [77.3, 7103.0], [77.4, 7103.0], [77.5, 7103.0], [77.6, 7108.0], [77.7, 7108.0], [77.8, 7108.0], [77.9, 7108.0], [78.0, 7108.0], [78.1, 7108.0], [78.2, 7168.0], [78.3, 7168.0], [78.4, 7168.0], [78.5, 7168.0], [78.6, 7168.0], [78.7, 7186.0], [78.8, 7186.0], [78.9, 7186.0], [79.0, 7186.0], [79.1, 7186.0], [79.2, 7186.0], [79.3, 8080.0], [79.4, 8080.0], [79.5, 8080.0], [79.6, 8080.0], [79.7, 8080.0], [79.8, 8153.0], [79.9, 8153.0], [80.0, 8153.0], [80.1, 8153.0], [80.2, 8153.0], [80.3, 8153.0], [80.4, 8196.0], [80.5, 8196.0], [80.6, 8196.0], [80.7, 8196.0], [80.8, 8196.0], [80.9, 8265.0], [81.0, 8265.0], [81.1, 8265.0], [81.2, 8265.0], [81.3, 8265.0], [81.4, 8265.0], [81.5, 8302.0], [81.6, 8302.0], [81.7, 8302.0], [81.8, 8302.0], [81.9, 8302.0], [82.0, 8611.0], [82.1, 8611.0], [82.2, 8611.0], [82.3, 8611.0], [82.4, 8611.0], [82.5, 8611.0], [82.6, 9659.0], [82.7, 9659.0], [82.8, 9659.0], [82.9, 9659.0], [83.0, 9659.0], [83.1, 9737.0], [83.2, 9737.0], [83.3, 9737.0], [83.4, 9737.0], [83.5, 9737.0], [83.6, 9737.0], [83.7, 9829.0], [83.8, 9829.0], [83.9, 9829.0], [84.0, 9829.0], [84.1, 9829.0], [84.2, 9974.0], [84.3, 9974.0], [84.4, 9974.0], [84.5, 9974.0], [84.6, 9974.0], [84.7, 10047.0], [84.8, 10047.0], [84.9, 10047.0], [85.0, 10047.0], [85.1, 10047.0], [85.2, 10047.0], [85.3, 10048.0], [85.4, 10048.0], [85.5, 10048.0], [85.6, 10048.0], [85.7, 10048.0], [85.8, 10165.0], [85.9, 10165.0], [86.0, 10165.0], [86.1, 10165.0], [86.2, 10165.0], [86.3, 10165.0], [86.4, 10372.0], [86.5, 10372.0], [86.6, 10372.0], [86.7, 10372.0], [86.8, 10372.0], [86.9, 10387.0], [87.0, 10387.0], [87.1, 10387.0], [87.2, 10387.0], [87.3, 10387.0], [87.4, 10387.0], [87.5, 10570.0], [87.6, 10570.0], [87.7, 10570.0], [87.8, 10570.0], [87.9, 10570.0], [88.0, 10653.0], [88.1, 10653.0], [88.2, 10653.0], [88.3, 10653.0], [88.4, 10653.0], [88.5, 10653.0], [88.6, 10678.0], [88.7, 10678.0], [88.8, 10678.0], [88.9, 10678.0], [89.0, 10678.0], [89.1, 10772.0], [89.2, 10772.0], [89.3, 10772.0], [89.4, 10772.0], [89.5, 10772.0], [89.6, 10772.0], [89.7, 11109.0], [89.8, 11109.0], [89.9, 11109.0], [90.0, 11109.0], [90.1, 11109.0], [90.2, 11230.0], [90.3, 11230.0], [90.4, 11230.0], [90.5, 11230.0], [90.6, 11230.0], [90.7, 11230.0], [90.8, 11422.0], [90.9, 11422.0], [91.0, 11422.0], [91.1, 11422.0], [91.2, 11422.0], [91.3, 11788.0], [91.4, 11788.0], [91.5, 11788.0], [91.6, 11788.0], [91.7, 11788.0], [91.8, 11788.0], [91.9, 11866.0], [92.0, 11866.0], [92.1, 11866.0], [92.2, 11866.0], [92.3, 11866.0], [92.4, 12197.0], [92.5, 12197.0], [92.6, 12197.0], [92.7, 12197.0], [92.8, 12197.0], [92.9, 12907.0], [93.0, 12907.0], [93.1, 12907.0], [93.2, 12907.0], [93.3, 12907.0], [93.4, 12907.0], [93.5, 13332.0], [93.6, 13332.0], [93.7, 13332.0], [93.8, 13332.0], [93.9, 13332.0], [94.0, 13518.0], [94.1, 13518.0], [94.2, 13518.0], [94.3, 13518.0], [94.4, 13518.0], [94.5, 13518.0], [94.6, 14151.0], [94.7, 14151.0], [94.8, 14151.0], [94.9, 14151.0], [95.0, 14151.0], [95.1, 14338.0], [95.2, 14338.0], [95.3, 14338.0], [95.4, 14338.0], [95.5, 14338.0], [95.6, 14338.0], [95.7, 14773.0], [95.8, 14773.0], [95.9, 14773.0], [96.0, 14773.0], [96.1, 14773.0], [96.2, 16364.0], [96.3, 16364.0], [96.4, 16364.0], [96.5, 16364.0], [96.6, 16364.0], [96.7, 16364.0], [96.8, 16571.0], [96.9, 16571.0], [97.0, 16571.0], [97.1, 16571.0], [97.2, 16571.0], [97.3, 16928.0], [97.4, 16928.0], [97.5, 16928.0], [97.6, 16928.0], [97.7, 16928.0], [97.8, 16928.0], [97.9, 16991.0], [98.0, 16991.0], [98.1, 16991.0], [98.2, 16991.0], [98.3, 16991.0], [98.4, 17103.0], [98.5, 17103.0], [98.6, 17103.0], [98.7, 17103.0], [98.8, 17103.0], [98.9, 17103.0], [99.0, 17441.0], [99.1, 17441.0], [99.2, 17441.0], [99.3, 17441.0], [99.4, 17441.0], [99.5, 30626.0], [99.6, 30626.0], [99.7, 30626.0], [99.8, 30626.0], [99.9, 30626.0], [100.0, 30626.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[0.0, 5481.0], [0.1, 5481.0], [0.2, 5481.0], [0.3, 5481.0], [0.4, 5481.0], [0.5, 5533.0], [0.6, 5533.0], [0.7, 5533.0], [0.8, 5533.0], [0.9, 5533.0], [1.0, 5552.0], [1.1, 5552.0], [1.2, 5552.0], [1.3, 5552.0], [1.4, 5552.0], [1.5, 5652.0], [1.6, 5652.0], [1.7, 5652.0], [1.8, 5652.0], [1.9, 5652.0], [2.0, 5747.0], [2.1, 5747.0], [2.2, 5747.0], [2.3, 5747.0], [2.4, 5750.0], [2.5, 5750.0], [2.6, 5750.0], [2.7, 5750.0], [2.8, 5750.0], [2.9, 5903.0], [3.0, 5903.0], [3.1, 5903.0], [3.2, 5903.0], [3.3, 5903.0], [3.4, 5970.0], [3.5, 5970.0], [3.6, 5970.0], [3.7, 5970.0], [3.8, 5970.0], [3.9, 6034.0], [4.0, 6034.0], [4.1, 6034.0], [4.2, 6034.0], [4.3, 6034.0], [4.4, 6827.0], [4.5, 6827.0], [4.6, 6827.0], [4.7, 6827.0], [4.8, 6850.0], [4.9, 6850.0], [5.0, 6850.0], [5.1, 6850.0], [5.2, 6850.0], [5.3, 6869.0], [5.4, 6869.0], [5.5, 6869.0], [5.6, 6869.0], [5.7, 6869.0], [5.8, 7041.0], [5.9, 7041.0], [6.0, 7041.0], [6.1, 7041.0], [6.2, 7041.0], [6.3, 7478.0], [6.4, 7478.0], [6.5, 7478.0], [6.6, 7478.0], [6.7, 8197.0], [6.8, 8197.0], [6.9, 8197.0], [7.0, 8197.0], [7.1, 8197.0], [7.2, 8299.0], [7.3, 8299.0], [7.4, 8299.0], [7.5, 8299.0], [7.6, 8299.0], [7.7, 8340.0], [7.8, 8340.0], [7.9, 8340.0], [8.0, 8340.0], [8.1, 8340.0], [8.2, 8873.0], [8.3, 8873.0], [8.4, 8873.0], [8.5, 8873.0], [8.6, 8873.0], [8.7, 8986.0], [8.8, 8986.0], [8.9, 8986.0], [9.0, 8986.0], [9.1, 10016.0], [9.2, 10016.0], [9.3, 10016.0], [9.4, 10016.0], [9.5, 10016.0], [9.6, 10815.0], [9.7, 10815.0], [9.8, 10815.0], [9.9, 10815.0], [10.0, 10815.0], [10.1, 10875.0], [10.2, 10875.0], [10.3, 10875.0], [10.4, 10875.0], [10.5, 10875.0], [10.6, 10939.0], [10.7, 10939.0], [10.8, 10939.0], [10.9, 10939.0], [11.0, 10939.0], [11.1, 11018.0], [11.2, 11018.0], [11.3, 11018.0], [11.4, 11018.0], [11.5, 11056.0], [11.6, 11056.0], [11.7, 11056.0], [11.8, 11056.0], [11.9, 11056.0], [12.0, 12157.0], [12.1, 12157.0], [12.2, 12157.0], [12.3, 12157.0], [12.4, 12157.0], [12.5, 12717.0], [12.6, 12717.0], [12.7, 12717.0], [12.8, 12717.0], [12.9, 12717.0], [13.0, 12812.0], [13.1, 12812.0], [13.2, 12812.0], [13.3, 12812.0], [13.4, 14070.0], [13.5, 14070.0], [13.6, 14070.0], [13.7, 14070.0], [13.8, 14070.0], [13.9, 14435.0], [14.0, 14435.0], [14.1, 14435.0], [14.2, 14435.0], [14.3, 14435.0], [14.4, 15110.0], [14.5, 15110.0], [14.6, 15110.0], [14.7, 15110.0], [14.8, 15110.0], [14.9, 17047.0], [15.0, 17047.0], [15.1, 17047.0], [15.2, 17047.0], [15.3, 17047.0], [15.4, 17212.0], [15.5, 17212.0], [15.6, 17212.0], [15.7, 17212.0], [15.8, 18302.0], [15.9, 18302.0], [16.0, 18302.0], [16.1, 18302.0], [16.2, 18302.0], [16.3, 20187.0], [16.4, 20187.0], [16.5, 20187.0], [16.6, 20187.0], [16.7, 20187.0], [16.8, 20202.0], [16.9, 20202.0], [17.0, 20202.0], [17.1, 20202.0], [17.2, 20202.0], [17.3, 21578.0], [17.4, 21578.0], [17.5, 21578.0], [17.6, 21578.0], [17.7, 21578.0], [17.8, 22743.0], [17.9, 22743.0], [18.0, 22743.0], [18.1, 22743.0], [18.2, 23181.0], [18.3, 23181.0], [18.4, 23181.0], [18.5, 23181.0], [18.6, 23181.0], [18.7, 24563.0], [18.8, 24563.0], [18.9, 24563.0], [19.0, 24563.0], [19.1, 24563.0], [19.2, 30011.0], [19.3, 30011.0], [19.4, 30011.0], [19.5, 30011.0], [19.6, 30011.0], [19.7, 30799.0], [19.8, 30799.0], [19.9, 30799.0], [20.0, 30799.0], [20.1, 31289.0], [20.2, 31289.0], [20.3, 31289.0], [20.4, 31289.0], [20.5, 31289.0], [20.6, 34074.0], [20.7, 34074.0], [20.8, 34074.0], [20.9, 34074.0], [21.0, 34074.0], [21.1, 35439.0], [21.2, 35439.0], [21.3, 35439.0], [21.4, 35439.0], [21.5, 35439.0], [21.6, 39848.0], [21.7, 39848.0], [21.8, 39848.0], [21.9, 39848.0], [22.0, 39848.0], [22.1, 40144.0], [22.2, 40144.0], [22.3, 40144.0], [22.4, 40144.0], [22.5, 42194.0], [22.6, 42194.0], [22.7, 42194.0], [22.8, 42194.0], [22.9, 42194.0], [23.0, 42486.0], [23.1, 42486.0], [23.2, 42486.0], [23.3, 42486.0], [23.4, 42486.0], [23.5, 42607.0], [23.6, 42607.0], [23.7, 42607.0], [23.8, 42607.0], [23.9, 42607.0], [24.0, 42794.0], [24.1, 42794.0], [24.2, 42794.0], [24.3, 42794.0], [24.4, 42794.0], [24.5, 43405.0], [24.6, 43405.0], [24.7, 43405.0], [24.8, 43405.0], [24.9, 45753.0], [25.0, 45753.0], [25.1, 45753.0], [25.2, 45753.0], [25.3, 45753.0], [25.4, 47295.0], [25.5, 47295.0], [25.6, 47295.0], [25.7, 47295.0], [25.8, 47295.0], [25.9, 49205.0], [26.0, 49205.0], [26.1, 49205.0], [26.2, 49205.0], [26.3, 49205.0], [26.4, 49593.0], [26.5, 49593.0], [26.6, 49593.0], [26.7, 49593.0], [26.8, 50686.0], [26.9, 50686.0], [27.0, 50686.0], [27.1, 50686.0], [27.2, 50686.0], [27.3, 51223.0], [27.4, 51223.0], [27.5, 51223.0], [27.6, 51223.0], [27.7, 51223.0], [27.8, 55210.0], [27.9, 55210.0], [28.0, 55210.0], [28.1, 55210.0], [28.2, 55210.0], [28.3, 56653.0], [28.4, 56653.0], [28.5, 56653.0], [28.6, 56653.0], [28.7, 56653.0], [28.8, 57712.0], [28.9, 57712.0], [29.0, 57712.0], [29.1, 57712.0], [29.2, 58282.0], [29.3, 58282.0], [29.4, 58282.0], [29.5, 58282.0], [29.6, 58282.0], [29.7, 58371.0], [29.8, 58371.0], [29.9, 58371.0], [30.0, 58371.0], [30.1, 58371.0], [30.2, 59006.0], [30.3, 59006.0], [30.4, 59006.0], [30.5, 59006.0], [30.6, 59006.0], [30.7, 59190.0], [30.8, 59190.0], [30.9, 59190.0], [31.0, 59190.0], [31.1, 59190.0], [31.2, 59198.0], [31.3, 59198.0], [31.4, 59198.0], [31.5, 59198.0], [31.6, 59308.0], [31.7, 59308.0], [31.8, 59308.0], [31.9, 59308.0], [32.0, 59308.0], [32.1, 59833.0], [32.2, 59833.0], [32.3, 59833.0], [32.4, 59833.0], [32.5, 59833.0], [32.6, 60627.0], [32.7, 60627.0], [32.8, 60627.0], [32.9, 60627.0], [33.0, 60627.0], [33.1, 61966.0], [33.2, 61966.0], [33.3, 61966.0], [33.4, 61966.0], [33.5, 62299.0], [33.6, 62299.0], [33.7, 62299.0], [33.8, 62299.0], [33.9, 62299.0], [34.0, 62547.0], [34.1, 62547.0], [34.2, 62547.0], [34.3, 62547.0], [34.4, 62547.0], [34.5, 63691.0], [34.6, 63691.0], [34.7, 63691.0], [34.8, 63691.0], [34.9, 63691.0], [35.0, 64314.0], [35.1, 64314.0], [35.2, 64314.0], [35.3, 64314.0], [35.4, 64314.0], [35.5, 64505.0], [35.6, 64505.0], [35.7, 64505.0], [35.8, 64505.0], [35.9, 64621.0], [36.0, 64621.0], [36.1, 64621.0], [36.2, 64621.0], [36.3, 64621.0], [36.4, 65208.0], [36.5, 65208.0], [36.6, 65208.0], [36.7, 65208.0], [36.8, 65208.0], [36.9, 65632.0], [37.0, 65632.0], [37.1, 65632.0], [37.2, 65632.0], [37.3, 65632.0], [37.4, 66476.0], [37.5, 66476.0], [37.6, 66476.0], [37.7, 66476.0], [37.8, 67780.0], [37.9, 67780.0], [38.0, 67780.0], [38.1, 67780.0], [38.2, 67780.0], [38.3, 68095.0], [38.4, 68095.0], [38.5, 68095.0], [38.6, 68095.0], [38.7, 68095.0], [38.8, 69655.0], [38.9, 69655.0], [39.0, 69655.0], [39.1, 69655.0], [39.2, 69655.0], [39.3, 72836.0], [39.4, 72836.0], [39.5, 72836.0], [39.6, 72836.0], [39.7, 72836.0], [39.8, 74866.0], [39.9, 74866.0], [40.0, 74866.0], [40.1, 74866.0], [40.2, 75061.0], [40.3, 75061.0], [40.4, 75061.0], [40.5, 75061.0], [40.6, 75061.0], [40.7, 75112.0], [40.8, 75112.0], [40.9, 75112.0], [41.0, 75112.0], [41.1, 75112.0], [41.2, 76871.0], [41.3, 76871.0], [41.4, 76871.0], [41.5, 76871.0], [41.6, 76871.0], [41.7, 77523.0], [41.8, 77523.0], [41.9, 77523.0], [42.0, 77523.0], [42.1, 77523.0], [42.2, 78655.0], [42.3, 78655.0], [42.4, 78655.0], [42.5, 78655.0], [42.6, 79176.0], [42.7, 79176.0], [42.8, 79176.0], [42.9, 79176.0], [43.0, 79176.0], [43.1, 81227.0], [43.2, 81227.0], [43.3, 81227.0], [43.4, 81227.0], [43.5, 81227.0], [43.6, 83440.0], [43.7, 83440.0], [43.8, 83440.0], [43.9, 83440.0], [44.0, 83440.0], [44.1, 85281.0], [44.2, 85281.0], [44.3, 85281.0], [44.4, 85281.0], [44.5, 86385.0], [44.6, 86385.0], [44.7, 86385.0], [44.8, 86385.0], [44.9, 86385.0], [45.0, 86508.0], [45.1, 86508.0], [45.2, 86508.0], [45.3, 86508.0], [45.4, 86508.0], [45.5, 87031.0], [45.6, 87031.0], [45.7, 87031.0], [45.8, 87031.0], [45.9, 87031.0], [46.0, 87759.0], [46.1, 87759.0], [46.2, 87759.0], [46.3, 87759.0], [46.4, 87759.0], [46.5, 87947.0], [46.6, 87947.0], [46.7, 87947.0], [46.8, 87947.0], [46.9, 88272.0], [47.0, 88272.0], [47.1, 88272.0], [47.2, 88272.0], [47.3, 88272.0], [47.4, 88478.0], [47.5, 88478.0], [47.6, 88478.0], [47.7, 88478.0], [47.8, 88478.0], [47.9, 88496.0], [48.0, 88496.0], [48.1, 88496.0], [48.2, 88496.0], [48.3, 88496.0], [48.4, 88700.0], [48.5, 88700.0], [48.6, 88700.0], [48.7, 88700.0], [48.8, 88700.0], [48.9, 89631.0], [49.0, 89631.0], [49.1, 89631.0], [49.2, 89631.0], [49.3, 89726.0], [49.4, 89726.0], [49.5, 89726.0], [49.6, 89726.0], [49.7, 89726.0], [49.8, 89822.0], [49.9, 89822.0], [50.0, 89822.0], [50.1, 89822.0], [50.2, 89822.0], [50.3, 92066.0], [50.4, 92066.0], [50.5, 92066.0], [50.6, 92066.0], [50.7, 92066.0], [50.8, 92913.0], [50.9, 92913.0], [51.0, 92913.0], [51.1, 92913.0], [51.2, 92986.0], [51.3, 92986.0], [51.4, 92986.0], [51.5, 92986.0], [51.6, 92986.0], [51.7, 93786.0], [51.8, 93786.0], [51.9, 93786.0], [52.0, 93786.0], [52.1, 93786.0], [52.2, 94027.0], [52.3, 94027.0], [52.4, 94027.0], [52.5, 94027.0], [52.6, 94027.0], [52.7, 94902.0], [52.8, 94902.0], [52.9, 94902.0], [53.0, 94902.0], [53.1, 94902.0], [53.2, 95025.0], [53.3, 95025.0], [53.4, 95025.0], [53.5, 95025.0], [53.6, 95105.0], [53.7, 95105.0], [53.8, 95105.0], [53.9, 95105.0], [54.0, 95105.0], [54.1, 95236.0], [54.2, 95236.0], [54.3, 95236.0], [54.4, 95236.0], [54.5, 95236.0], [54.6, 95455.0], [54.7, 95455.0], [54.8, 95455.0], [54.9, 95455.0], [55.0, 95455.0], [55.1, 95757.0], [55.2, 95757.0], [55.3, 95757.0], [55.4, 95757.0], [55.5, 95757.0], [55.6, 95853.0], [55.7, 95853.0], [55.8, 95853.0], [55.9, 95853.0], [56.0, 95866.0], [56.1, 95866.0], [56.2, 95866.0], [56.3, 95866.0], [56.4, 95866.0], [56.5, 97979.0], [56.6, 97979.0], [56.7, 97979.0], [56.8, 97979.0], [56.9, 97979.0], [57.0, 98022.0], [57.1, 98022.0], [57.2, 98022.0], [57.3, 98022.0], [57.4, 98022.0], [57.5, 98909.0], [57.6, 98909.0], [57.7, 98909.0], [57.8, 98909.0], [57.9, 99515.0], [58.0, 99515.0], [58.1, 99515.0], [58.2, 99515.0], [58.3, 99515.0], [58.4, 99654.0], [58.5, 99654.0], [58.6, 99654.0], [58.7, 99654.0], [58.8, 99654.0], [58.9, 100422.0], [59.0, 100422.0], [59.1, 100422.0], [59.2, 100422.0], [59.3, 100422.0], [59.4, 103011.0], [59.5, 103011.0], [59.6, 103011.0], [59.7, 103011.0], [59.8, 103011.0], [59.9, 103322.0], [60.0, 103322.0], [60.1, 103322.0], [60.2, 103322.0], [60.3, 103573.0], [60.4, 103573.0], [60.5, 103573.0], [60.6, 103573.0], [60.7, 103573.0], [60.8, 105475.0], [60.9, 105475.0], [61.0, 105475.0], [61.1, 105475.0], [61.2, 105475.0], [61.3, 105642.0], [61.4, 105642.0], [61.5, 105642.0], [61.6, 105642.0], [61.7, 105642.0], [61.8, 107393.0], [61.9, 107393.0], [62.0, 107393.0], [62.1, 107393.0], [62.2, 107393.0], [62.3, 108047.0], [62.4, 108047.0], [62.5, 108047.0], [62.6, 108047.0], [62.7, 110724.0], [62.8, 110724.0], [62.9, 110724.0], [63.0, 110724.0], [63.1, 110724.0], [63.2, 111338.0], [63.3, 111338.0], [63.4, 111338.0], [63.5, 111338.0], [63.6, 111338.0], [63.7, 111415.0], [63.8, 111415.0], [63.9, 111415.0], [64.0, 111415.0], [64.1, 111415.0], [64.2, 112137.0], [64.3, 112137.0], [64.4, 112137.0], [64.5, 112137.0], [64.6, 112671.0], [64.7, 112671.0], [64.8, 112671.0], [64.9, 112671.0], [65.0, 112671.0], [65.1, 113391.0], [65.2, 113391.0], [65.3, 113391.0], [65.4, 113391.0], [65.5, 113391.0], [65.6, 115124.0], [65.7, 115124.0], [65.8, 115124.0], [65.9, 115124.0], [66.0, 115124.0], [66.1, 115126.0], [66.2, 115126.0], [66.3, 115126.0], [66.4, 115126.0], [66.5, 115126.0], [66.6, 115189.0], [66.7, 115189.0], [66.8, 115189.0], [66.9, 115189.0], [67.0, 116114.0], [67.1, 116114.0], [67.2, 116114.0], [67.3, 116114.0], [67.4, 116114.0], [67.5, 117041.0], [67.6, 117041.0], [67.7, 117041.0], [67.8, 117041.0], [67.9, 117041.0], [68.0, 117063.0], [68.1, 117063.0], [68.2, 117063.0], [68.3, 117063.0], [68.4, 117063.0], [68.5, 117308.0], [68.6, 117308.0], [68.7, 117308.0], [68.8, 117308.0], [68.9, 117519.0], [69.0, 117519.0], [69.1, 117519.0], [69.2, 117519.0], [69.3, 117519.0], [69.4, 118855.0], [69.5, 118855.0], [69.6, 118855.0], [69.7, 118855.0], [69.8, 118855.0], [69.9, 119110.0], [70.0, 119110.0], [70.1, 119110.0], [70.2, 119110.0], [70.3, 119110.0], [70.4, 119214.0], [70.5, 119214.0], [70.6, 119214.0], [70.7, 119214.0], [70.8, 119214.0], [70.9, 119281.0], [71.0, 119281.0], [71.1, 119281.0], [71.2, 119281.0], [71.3, 119523.0], [71.4, 119523.0], [71.5, 119523.0], [71.6, 119523.0], [71.7, 119523.0], [71.8, 119673.0], [71.9, 119673.0], [72.0, 119673.0], [72.1, 119673.0], [72.2, 119673.0], [72.3, 119907.0], [72.4, 119907.0], [72.5, 119907.0], [72.6, 119907.0], [72.7, 119907.0], [72.8, 120741.0], [72.9, 120741.0], [73.0, 120741.0], [73.1, 120741.0], [73.2, 120741.0], [73.3, 121983.0], [73.4, 121983.0], [73.5, 121983.0], [73.6, 121983.0], [73.7, 122278.0], [73.8, 122278.0], [73.9, 122278.0], [74.0, 122278.0], [74.1, 122278.0], [74.2, 123016.0], [74.3, 123016.0], [74.4, 123016.0], [74.5, 123016.0], [74.6, 123016.0], [74.7, 123103.0], [74.8, 123103.0], [74.9, 123103.0], [75.0, 123103.0], [75.1, 123103.0], [75.2, 123303.0], [75.3, 123303.0], [75.4, 123303.0], [75.5, 123303.0], [75.6, 124316.0], [75.7, 124316.0], [75.8, 124316.0], [75.9, 124316.0], [76.0, 124316.0], [76.1, 125610.0], [76.2, 125610.0], [76.3, 125610.0], [76.4, 125610.0], [76.5, 125610.0], [76.6, 126278.0], [76.7, 126278.0], [76.8, 126278.0], [76.9, 126278.0], [77.0, 126278.0], [77.1, 126498.0], [77.2, 126498.0], [77.3, 126498.0], [77.4, 126498.0], [77.5, 126498.0], [77.6, 127058.0], [77.7, 127058.0], [77.8, 127058.0], [77.9, 127058.0], [78.0, 129116.0], [78.1, 129116.0], [78.2, 129116.0], [78.3, 129116.0], [78.4, 129116.0], [78.5, 129686.0], [78.6, 129686.0], [78.7, 129686.0], [78.8, 129686.0], [78.9, 129686.0], [79.0, 129706.0], [79.1, 129706.0], [79.2, 129706.0], [79.3, 129706.0], [79.4, 129706.0], [79.5, 130015.0], [79.6, 130015.0], [79.7, 130015.0], [79.8, 130015.0], [79.9, 130015.0], [80.0, 131253.0], [80.1, 131253.0], [80.2, 131253.0], [80.3, 131253.0], [80.4, 131460.0], [80.5, 131460.0], [80.6, 131460.0], [80.7, 131460.0], [80.8, 131460.0], [80.9, 132321.0], [81.0, 132321.0], [81.1, 132321.0], [81.2, 132321.0], [81.3, 132321.0], [81.4, 132946.0], [81.5, 132946.0], [81.6, 132946.0], [81.7, 132946.0], [81.8, 132946.0], [81.9, 133116.0], [82.0, 133116.0], [82.1, 133116.0], [82.2, 133116.0], [82.3, 133138.0], [82.4, 133138.0], [82.5, 133138.0], [82.6, 133138.0], [82.7, 133138.0], [82.8, 133248.0], [82.9, 133248.0], [83.0, 133248.0], [83.1, 133248.0], [83.2, 133248.0], [83.3, 134417.0], [83.4, 134417.0], [83.5, 134417.0], [83.6, 134417.0], [83.7, 134417.0], [83.8, 135110.0], [83.9, 135110.0], [84.0, 135110.0], [84.1, 135110.0], [84.2, 135110.0], [84.3, 135170.0], [84.4, 135170.0], [84.5, 135170.0], [84.6, 135170.0], [84.7, 136421.0], [84.8, 136421.0], [84.9, 136421.0], [85.0, 136421.0], [85.1, 136421.0], [85.2, 138872.0], [85.3, 138872.0], [85.4, 138872.0], [85.5, 138872.0], [85.6, 138872.0], [85.7, 139062.0], [85.8, 139062.0], [85.9, 139062.0], [86.0, 139062.0], [86.1, 139062.0], [86.2, 139311.0], [86.3, 139311.0], [86.4, 139311.0], [86.5, 139311.0], [86.6, 139311.0], [86.7, 139592.0], [86.8, 139592.0], [86.9, 139592.0], [87.0, 139592.0], [87.1, 139786.0], [87.2, 139786.0], [87.3, 139786.0], [87.4, 139786.0], [87.5, 139786.0], [87.6, 139989.0], [87.7, 139989.0], [87.8, 139989.0], [87.9, 139989.0], [88.0, 139989.0], [88.1, 141734.0], [88.2, 141734.0], [88.3, 141734.0], [88.4, 141734.0], [88.5, 141734.0], [88.6, 141875.0], [88.7, 141875.0], [88.8, 141875.0], [88.9, 141875.0], [89.0, 142336.0], [89.1, 142336.0], [89.2, 142336.0], [89.3, 142336.0], [89.4, 142336.0], [89.5, 142862.0], [89.6, 142862.0], [89.7, 142862.0], [89.8, 142862.0], [89.9, 142862.0], [90.0, 143161.0], [90.1, 143161.0], [90.2, 143161.0], [90.3, 143161.0], [90.4, 143161.0], [90.5, 143602.0], [90.6, 143602.0], [90.7, 143602.0], [90.8, 143602.0], [90.9, 143602.0], [91.0, 145214.0], [91.1, 145214.0], [91.2, 145214.0], [91.3, 145214.0], [91.4, 145922.0], [91.5, 145922.0], [91.6, 145922.0], [91.7, 145922.0], [91.8, 145922.0], [91.9, 146393.0], [92.0, 146393.0], [92.1, 146393.0], [92.2, 146393.0], [92.3, 146393.0], [92.4, 146558.0], [92.5, 146558.0], [92.6, 146558.0], [92.7, 146558.0], [92.8, 146558.0], [92.9, 147084.0], [93.0, 147084.0], [93.1, 147084.0], [93.2, 147084.0], [93.3, 147084.0], [93.4, 147193.0], [93.5, 147193.0], [93.6, 147193.0], [93.7, 147193.0], [93.8, 147246.0], [93.9, 147246.0], [94.0, 147246.0], [94.1, 147246.0], [94.2, 147246.0], [94.3, 148714.0], [94.4, 148714.0], [94.5, 148714.0], [94.6, 148714.0], [94.7, 148714.0], [94.8, 148958.0], [94.9, 148958.0], [95.0, 148958.0], [95.1, 148958.0], [95.2, 148958.0], [95.3, 149342.0], [95.4, 149342.0], [95.5, 149342.0], [95.6, 149342.0], [95.7, 149883.0], [95.8, 149883.0], [95.9, 149883.0], [96.0, 149883.0], [96.1, 149883.0], [96.2, 152987.0], [96.3, 152987.0], [96.4, 152987.0], [96.5, 152987.0], [96.6, 152987.0], [96.7, 152991.0], [96.8, 152991.0], [96.9, 152991.0], [97.0, 152991.0], [97.1, 152991.0], [97.2, 156684.0], [97.3, 156684.0], [97.4, 156684.0], [97.5, 156684.0], [97.6, 156684.0], [97.7, 157420.0], [97.8, 157420.0], [97.9, 157420.0], [98.0, 157420.0], [98.1, 159027.0], [98.2, 159027.0], [98.3, 159027.0], [98.4, 159027.0], [98.5, 159027.0], [98.6, 161208.0], [98.7, 161208.0], [98.8, 161208.0], [98.9, 161208.0], [99.0, 161208.0], [99.1, 163853.0], [99.2, 163853.0], [99.3, 163853.0], [99.4, 163853.0], [99.5, 163853.0], [99.6, 164053.0], [99.7, 164053.0], [99.8, 164053.0], [99.9, 164053.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 90.0], [5.0, 90.0], [5.1, 90.0], [5.2, 90.0], [5.3, 90.0], [5.4, 90.0], [5.5, 90.0], [5.6, 90.0], [5.7, 90.0], [5.8, 90.0], [5.9, 90.0], [6.0, 92.0], [6.1, 92.0], [6.2, 92.0], [6.3, 92.0], [6.4, 92.0], [6.5, 94.0], [6.6, 94.0], [6.7, 94.0], [6.8, 94.0], [6.9, 94.0], [7.0, 94.0], [7.1, 94.0], [7.2, 94.0], [7.3, 94.0], [7.4, 94.0], [7.5, 94.0], [7.6, 94.0], [7.7, 94.0], [7.8, 94.0], [7.9, 94.0], [8.0, 94.0], [8.1, 99.0], [8.2, 99.0], [8.3, 99.0], [8.4, 99.0], [8.5, 99.0], [8.6, 99.0], [8.7, 101.0], [8.8, 101.0], [8.9, 101.0], [9.0, 101.0], [9.1, 101.0], [9.2, 104.0], [9.3, 104.0], [9.4, 104.0], [9.5, 104.0], [9.6, 104.0], [9.7, 107.0], [9.8, 107.0], [9.9, 107.0], [10.0, 107.0], [10.1, 107.0], [10.2, 107.0], [10.3, 111.0], [10.4, 111.0], [10.5, 111.0], [10.6, 111.0], [10.7, 111.0], [10.8, 121.0], [10.9, 121.0], [11.0, 121.0], [11.1, 121.0], [11.2, 121.0], [11.3, 126.0], [11.4, 126.0], [11.5, 126.0], [11.6, 126.0], [11.7, 126.0], [11.8, 126.0], [11.9, 127.0], [12.0, 127.0], [12.1, 127.0], [12.2, 127.0], [12.3, 127.0], [12.4, 134.0], [12.5, 134.0], [12.6, 134.0], [12.7, 134.0], [12.8, 134.0], [12.9, 134.0], [13.0, 139.0], [13.1, 139.0], [13.2, 139.0], [13.3, 139.0], [13.4, 139.0], [13.5, 148.0], [13.6, 148.0], [13.7, 148.0], [13.8, 148.0], [13.9, 148.0], [14.0, 184.0], [14.1, 184.0], [14.2, 184.0], [14.3, 184.0], [14.4, 184.0], [14.5, 184.0], [14.6, 188.0], [14.7, 188.0], [14.8, 188.0], [14.9, 188.0], [15.0, 188.0], [15.1, 196.0], [15.2, 196.0], [15.3, 196.0], [15.4, 196.0], [15.5, 196.0], [15.6, 198.0], [15.7, 198.0], [15.8, 198.0], [15.9, 198.0], [16.0, 198.0], [16.1, 198.0], [16.2, 211.0], [16.3, 211.0], [16.4, 211.0], [16.5, 211.0], [16.6, 211.0], [16.7, 217.0], [16.8, 217.0], [16.9, 217.0], [17.0, 217.0], [17.1, 217.0], [17.2, 217.0], [17.3, 218.0], [17.4, 218.0], [17.5, 218.0], [17.6, 218.0], [17.7, 218.0], [17.8, 223.0], [17.9, 223.0], [18.0, 223.0], [18.1, 223.0], [18.2, 223.0], [18.3, 225.0], [18.4, 225.0], [18.5, 225.0], [18.6, 225.0], [18.7, 225.0], [18.8, 225.0], [18.9, 228.0], [19.0, 228.0], [19.1, 228.0], [19.2, 228.0], [19.3, 228.0], [19.4, 232.0], [19.5, 232.0], [19.6, 232.0], [19.7, 232.0], [19.8, 232.0], [19.9, 233.0], [20.0, 233.0], [20.1, 233.0], [20.2, 233.0], [20.3, 233.0], [20.4, 233.0], [20.5, 244.0], [20.6, 244.0], [20.7, 244.0], [20.8, 244.0], [20.9, 244.0], [21.0, 256.0], [21.1, 256.0], [21.2, 256.0], [21.3, 256.0], [21.4, 256.0], [21.5, 256.0], [21.6, 257.0], [21.7, 257.0], [21.8, 257.0], [21.9, 257.0], [22.0, 257.0], [22.1, 260.0], [22.2, 260.0], [22.3, 260.0], [22.4, 260.0], [22.5, 260.0], [22.6, 295.0], [22.7, 295.0], [22.8, 295.0], [22.9, 295.0], [23.0, 295.0], [23.1, 295.0], [23.2, 297.0], [23.3, 297.0], [23.4, 297.0], [23.5, 297.0], [23.6, 297.0], [23.7, 297.0], [23.8, 297.0], [23.9, 297.0], [24.0, 297.0], [24.1, 297.0], [24.2, 303.0], [24.3, 303.0], [24.4, 303.0], [24.5, 303.0], [24.6, 303.0], [24.7, 303.0], [24.8, 304.0], [24.9, 304.0], [25.0, 304.0], [25.1, 304.0], [25.2, 304.0], [25.3, 306.0], [25.4, 306.0], [25.5, 306.0], [25.6, 306.0], [25.7, 306.0], [25.8, 306.0], [25.9, 307.0], [26.0, 307.0], [26.1, 307.0], [26.2, 307.0], [26.3, 307.0], [26.4, 309.0], [26.5, 309.0], [26.6, 309.0], [26.7, 309.0], [26.8, 309.0], [26.9, 313.0], [27.0, 313.0], [27.1, 313.0], [27.2, 313.0], [27.3, 313.0], [27.4, 313.0], [27.5, 315.0], [27.6, 315.0], [27.7, 315.0], [27.8, 315.0], [27.9, 315.0], [28.0, 316.0], [28.1, 316.0], [28.2, 316.0], [28.3, 316.0], [28.4, 316.0], [28.5, 316.0], [28.6, 316.0], [28.7, 316.0], [28.8, 316.0], [28.9, 316.0], [29.0, 316.0], [29.1, 316.0], [29.2, 316.0], [29.3, 316.0], [29.4, 316.0], [29.5, 316.0], [29.6, 316.0], [29.7, 316.0], [29.8, 316.0], [29.9, 316.0], [30.0, 316.0], [30.1, 316.0], [30.2, 318.0], [30.3, 318.0], [30.4, 318.0], [30.5, 318.0], [30.6, 318.0], [30.7, 318.0], [30.8, 318.0], [30.9, 318.0], [31.0, 318.0], [31.1, 318.0], [31.2, 321.0], [31.3, 321.0], [31.4, 321.0], [31.5, 321.0], [31.6, 321.0], [31.7, 321.0], [31.8, 322.0], [31.9, 322.0], [32.0, 322.0], [32.1, 322.0], [32.2, 322.0], [32.3, 322.0], [32.4, 322.0], [32.5, 322.0], [32.6, 322.0], [32.7, 322.0], [32.8, 323.0], [32.9, 323.0], [33.0, 323.0], [33.1, 323.0], [33.2, 323.0], [33.3, 323.0], [33.4, 334.0], [33.5, 334.0], [33.6, 334.0], [33.7, 334.0], [33.8, 334.0], [33.9, 345.0], [34.0, 345.0], [34.1, 345.0], [34.2, 345.0], [34.3, 345.0], [34.4, 345.0], [34.5, 348.0], [34.6, 348.0], [34.7, 348.0], [34.8, 348.0], [34.9, 348.0], [35.0, 358.0], [35.1, 358.0], [35.2, 358.0], [35.3, 358.0], [35.4, 358.0], [35.5, 361.0], [35.6, 361.0], [35.7, 361.0], [35.8, 361.0], [35.9, 361.0], [36.0, 361.0], [36.1, 369.0], [36.2, 369.0], [36.3, 369.0], [36.4, 369.0], [36.5, 369.0], [36.6, 376.0], [36.7, 376.0], [36.8, 376.0], [36.9, 376.0], [37.0, 376.0], [37.1, 379.0], [37.2, 379.0], [37.3, 379.0], [37.4, 379.0], [37.5, 379.0], [37.6, 379.0], [37.7, 381.0], [37.8, 381.0], [37.9, 381.0], [38.0, 381.0], [38.1, 381.0], [38.2, 387.0], [38.3, 387.0], [38.4, 387.0], [38.5, 387.0], [38.6, 387.0], [38.7, 387.0], [38.8, 388.0], [38.9, 388.0], [39.0, 388.0], [39.1, 388.0], [39.2, 388.0], [39.3, 390.0], [39.4, 390.0], [39.5, 390.0], [39.6, 390.0], [39.7, 390.0], [39.8, 396.0], [39.9, 396.0], [40.0, 396.0], [40.1, 396.0], [40.2, 396.0], [40.3, 396.0], [40.4, 397.0], [40.5, 397.0], [40.6, 397.0], [40.7, 397.0], [40.8, 397.0], [40.9, 400.0], [41.0, 400.0], [41.1, 400.0], [41.2, 400.0], [41.3, 400.0], [41.4, 402.0], [41.5, 402.0], [41.6, 402.0], [41.7, 402.0], [41.8, 402.0], [41.9, 402.0], [42.0, 402.0], [42.1, 402.0], [42.2, 402.0], [42.3, 402.0], [42.4, 402.0], [42.5, 402.0], [42.6, 402.0], [42.7, 402.0], [42.8, 402.0], [42.9, 402.0], [43.0, 402.0], [43.1, 405.0], [43.2, 405.0], [43.3, 405.0], [43.4, 405.0], [43.5, 405.0], [43.6, 411.0], [43.7, 411.0], [43.8, 411.0], [43.9, 411.0], [44.0, 411.0], [44.1, 412.0], [44.2, 412.0], [44.3, 412.0], [44.4, 412.0], [44.5, 412.0], [44.6, 412.0], [44.7, 412.0], [44.8, 412.0], [44.9, 412.0], [45.0, 412.0], [45.1, 412.0], [45.2, 412.0], [45.3, 412.0], [45.4, 412.0], [45.5, 412.0], [45.6, 412.0], [45.7, 413.0], [45.8, 413.0], [45.9, 413.0], [46.0, 413.0], [46.1, 413.0], [46.2, 413.0], [46.3, 414.0], [46.4, 414.0], [46.5, 414.0], [46.6, 414.0], [46.7, 414.0], [46.8, 417.0], [46.9, 417.0], [47.0, 417.0], [47.1, 417.0], [47.2, 417.0], [47.3, 417.0], [47.4, 417.0], [47.5, 417.0], [47.6, 417.0], [47.7, 417.0], [47.8, 417.0], [47.9, 420.0], [48.0, 420.0], [48.1, 420.0], [48.2, 420.0], [48.3, 420.0], [48.4, 422.0], [48.5, 422.0], [48.6, 422.0], [48.7, 422.0], [48.8, 422.0], [48.9, 422.0], [49.0, 423.0], [49.1, 423.0], [49.2, 423.0], [49.3, 423.0], [49.4, 423.0], [49.5, 427.0], [49.6, 427.0], [49.7, 427.0], [49.8, 427.0], [49.9, 427.0], [50.0, 427.0], [50.1, 429.0], [50.2, 429.0], [50.3, 429.0], [50.4, 429.0], [50.5, 429.0], [50.6, 433.0], [50.7, 433.0], [50.8, 433.0], [50.9, 433.0], [51.0, 433.0], [51.1, 443.0], [51.2, 443.0], [51.3, 443.0], [51.4, 443.0], [51.5, 443.0], [51.6, 443.0], [51.7, 443.0], [51.8, 443.0], [51.9, 443.0], [52.0, 443.0], [52.1, 443.0], [52.2, 447.0], [52.3, 447.0], [52.4, 447.0], [52.5, 447.0], [52.6, 447.0], [52.7, 448.0], [52.8, 448.0], [52.9, 448.0], [53.0, 448.0], [53.1, 448.0], [53.2, 448.0], [53.3, 448.0], [53.4, 448.0], [53.5, 448.0], [53.6, 448.0], [53.7, 448.0], [53.8, 455.0], [53.9, 455.0], [54.0, 455.0], [54.1, 455.0], [54.2, 455.0], [54.3, 455.0], [54.4, 457.0], [54.5, 457.0], [54.6, 457.0], [54.7, 457.0], [54.8, 457.0], [54.9, 459.0], [55.0, 459.0], [55.1, 459.0], [55.2, 459.0], [55.3, 459.0], [55.4, 461.0], [55.5, 461.0], [55.6, 461.0], [55.7, 461.0], [55.8, 461.0], [55.9, 461.0], [56.0, 492.0], [56.1, 492.0], [56.2, 492.0], [56.3, 492.0], [56.4, 492.0], [56.5, 492.0], [56.6, 492.0], [56.7, 492.0], [56.8, 492.0], [56.9, 492.0], [57.0, 506.0], [57.1, 506.0], [57.2, 506.0], [57.3, 506.0], [57.4, 506.0], [57.5, 506.0], [57.6, 508.0], [57.7, 508.0], [57.8, 508.0], [57.9, 508.0], [58.0, 508.0], [58.1, 513.0], [58.2, 513.0], [58.3, 513.0], [58.4, 513.0], [58.5, 513.0], [58.6, 513.0], [58.7, 528.0], [58.8, 528.0], [58.9, 528.0], [59.0, 528.0], [59.1, 528.0], [59.2, 534.0], [59.3, 534.0], [59.4, 534.0], [59.5, 534.0], [59.6, 534.0], [59.7, 564.0], [59.8, 564.0], [59.9, 564.0], [60.0, 564.0], [60.1, 564.0], [60.2, 564.0], [60.3, 566.0], [60.4, 566.0], [60.5, 566.0], [60.6, 566.0], [60.7, 566.0], [60.8, 580.0], [60.9, 580.0], [61.0, 580.0], [61.1, 580.0], [61.2, 580.0], [61.3, 585.0], [61.4, 585.0], [61.5, 585.0], [61.6, 585.0], [61.7, 585.0], [61.8, 585.0], [61.9, 607.0], [62.0, 607.0], [62.1, 607.0], [62.2, 607.0], [62.3, 607.0], [62.4, 607.0], [62.5, 607.0], [62.6, 607.0], [62.7, 607.0], [62.8, 607.0], [62.9, 607.0], [63.0, 609.0], [63.1, 609.0], [63.2, 609.0], [63.3, 609.0], [63.4, 609.0], [63.5, 613.0], [63.6, 613.0], [63.7, 613.0], [63.8, 613.0], [63.9, 613.0], [64.0, 616.0], [64.1, 616.0], [64.2, 616.0], [64.3, 616.0], [64.4, 616.0], [64.5, 616.0], [64.6, 616.0], [64.7, 616.0], [64.8, 616.0], [64.9, 616.0], [65.0, 616.0], [65.1, 623.0], [65.2, 623.0], [65.3, 623.0], [65.4, 623.0], [65.5, 623.0], [65.6, 625.0], [65.7, 625.0], [65.8, 625.0], [65.9, 625.0], [66.0, 625.0], [66.1, 625.0], [66.2, 625.0], [66.3, 625.0], [66.4, 625.0], [66.5, 625.0], [66.6, 625.0], [66.7, 627.0], [66.8, 627.0], [66.9, 627.0], [67.0, 627.0], [67.1, 627.0], [67.2, 627.0], [67.3, 634.0], [67.4, 634.0], [67.5, 634.0], [67.6, 634.0], [67.7, 634.0], [67.8, 638.0], [67.9, 638.0], [68.0, 638.0], [68.1, 638.0], [68.2, 638.0], [68.3, 643.0], [68.4, 643.0], [68.5, 643.0], [68.6, 643.0], [68.7, 643.0], [68.8, 643.0], [68.9, 671.0], [69.0, 671.0], [69.1, 671.0], [69.2, 671.0], [69.3, 671.0], [69.4, 680.0], [69.5, 680.0], [69.6, 680.0], [69.7, 680.0], [69.8, 680.0], [69.9, 708.0], [70.0, 708.0], [70.1, 708.0], [70.2, 708.0], [70.3, 708.0], [70.4, 708.0], [70.5, 717.0], [70.6, 717.0], [70.7, 717.0], [70.8, 717.0], [70.9, 717.0], [71.0, 726.0], [71.1, 726.0], [71.2, 726.0], [71.3, 726.0], [71.4, 726.0], [71.5, 726.0], [71.6, 730.0], [71.7, 730.0], [71.8, 730.0], [71.9, 730.0], [72.0, 730.0], [72.1, 731.0], [72.2, 731.0], [72.3, 731.0], [72.4, 731.0], [72.5, 731.0], [72.6, 743.0], [72.7, 743.0], [72.8, 743.0], [72.9, 743.0], [73.0, 743.0], [73.1, 743.0], [73.2, 745.0], [73.3, 745.0], [73.4, 745.0], [73.5, 745.0], [73.6, 745.0], [73.7, 757.0], [73.8, 757.0], [73.9, 757.0], [74.0, 757.0], [74.1, 757.0], [74.2, 796.0], [74.3, 796.0], [74.4, 796.0], [74.5, 796.0], [74.6, 796.0], [74.7, 796.0], [74.8, 812.0], [74.9, 812.0], [75.0, 812.0], [75.1, 812.0], [75.2, 812.0], [75.3, 816.0], [75.4, 816.0], [75.5, 816.0], [75.6, 816.0], [75.7, 816.0], [75.8, 816.0], [75.9, 821.0], [76.0, 821.0], [76.1, 821.0], [76.2, 821.0], [76.3, 821.0], [76.4, 838.0], [76.5, 838.0], [76.6, 838.0], [76.7, 838.0], [76.8, 838.0], [76.9, 844.0], [77.0, 844.0], [77.1, 844.0], [77.2, 844.0], [77.3, 844.0], [77.4, 844.0], [77.5, 860.0], [77.6, 860.0], [77.7, 860.0], [77.8, 860.0], [77.9, 860.0], [78.0, 895.0], [78.1, 895.0], [78.2, 895.0], [78.3, 895.0], [78.4, 895.0], [78.5, 917.0], [78.6, 917.0], [78.7, 917.0], [78.8, 917.0], [78.9, 917.0], [79.0, 917.0], [79.1, 925.0], [79.2, 925.0], [79.3, 925.0], [79.4, 925.0], [79.5, 925.0], [79.6, 932.0], [79.7, 932.0], [79.8, 932.0], [79.9, 932.0], [80.0, 932.0], [80.1, 932.0], [80.2, 936.0], [80.3, 936.0], [80.4, 936.0], [80.5, 936.0], [80.6, 936.0], [80.7, 941.0], [80.8, 941.0], [80.9, 941.0], [81.0, 941.0], [81.1, 941.0], [81.2, 956.0], [81.3, 956.0], [81.4, 956.0], [81.5, 956.0], [81.6, 956.0], [81.7, 956.0], [81.8, 968.0], [81.9, 968.0], [82.0, 968.0], [82.1, 968.0], [82.2, 968.0], [82.3, 968.0], [82.4, 968.0], [82.5, 968.0], [82.6, 968.0], [82.7, 968.0], [82.8, 982.0], [82.9, 982.0], [83.0, 982.0], [83.1, 982.0], [83.2, 982.0], [83.3, 982.0], [83.4, 1012.0], [83.5, 1012.0], [83.6, 1012.0], [83.7, 1012.0], [83.8, 1012.0], [83.9, 1015.0], [84.0, 1015.0], [84.1, 1015.0], [84.2, 1015.0], [84.3, 1015.0], [84.4, 1015.0], [84.5, 1040.0], [84.6, 1040.0], [84.7, 1040.0], [84.8, 1040.0], [84.9, 1040.0], [85.0, 1068.0], [85.1, 1068.0], [85.2, 1068.0], [85.3, 1068.0], [85.4, 1068.0], [85.5, 1085.0], [85.6, 1085.0], [85.7, 1085.0], [85.8, 1085.0], [85.9, 1085.0], [86.0, 1085.0], [86.1, 1133.0], [86.2, 1133.0], [86.3, 1133.0], [86.4, 1133.0], [86.5, 1133.0], [86.6, 1136.0], [86.7, 1136.0], [86.8, 1136.0], [86.9, 1136.0], [87.0, 1136.0], [87.1, 1215.0], [87.2, 1215.0], [87.3, 1215.0], [87.4, 1215.0], [87.5, 1215.0], [87.6, 1215.0], [87.7, 1244.0], [87.8, 1244.0], [87.9, 1244.0], [88.0, 1244.0], [88.1, 1244.0], [88.2, 1265.0], [88.3, 1265.0], [88.4, 1265.0], [88.5, 1265.0], [88.6, 1265.0], [88.7, 1265.0], [88.8, 1269.0], [88.9, 1269.0], [89.0, 1269.0], [89.1, 1269.0], [89.2, 1269.0], [89.3, 1309.0], [89.4, 1309.0], [89.5, 1309.0], [89.6, 1309.0], [89.7, 1309.0], [89.8, 1459.0], [89.9, 1459.0], [90.0, 1459.0], [90.1, 1459.0], [90.2, 1459.0], [90.3, 1459.0], [90.4, 1705.0], [90.5, 1705.0], [90.6, 1705.0], [90.7, 1705.0], [90.8, 1705.0], [90.9, 1850.0], [91.0, 1850.0], [91.1, 1850.0], [91.2, 1850.0], [91.3, 1850.0], [91.4, 2061.0], [91.5, 2061.0], [91.6, 2061.0], [91.7, 2061.0], [91.8, 2061.0], [91.9, 2061.0], [92.0, 2502.0], [92.1, 2502.0], [92.2, 2502.0], [92.3, 2502.0], [92.4, 2502.0], [92.5, 2672.0], [92.6, 2672.0], [92.7, 2672.0], [92.8, 2672.0], [92.9, 2672.0], [93.0, 2672.0], [93.1, 2868.0], [93.2, 2868.0], [93.3, 2868.0], [93.4, 2868.0], [93.5, 2868.0], [93.6, 2934.0], [93.7, 2934.0], [93.8, 2934.0], [93.9, 2934.0], [94.0, 2934.0], [94.1, 3186.0], [94.2, 3186.0], [94.3, 3186.0], [94.4, 3186.0], [94.5, 3186.0], [94.6, 3186.0], [94.7, 3250.0], [94.8, 3250.0], [94.9, 3250.0], [95.0, 3250.0], [95.1, 3250.0], [95.2, 4121.0], [95.3, 4121.0], [95.4, 4121.0], [95.5, 4121.0], [95.6, 4121.0], [95.7, 4132.0], [95.8, 4132.0], [95.9, 4132.0], [96.0, 4132.0], [96.1, 4132.0], [96.2, 4132.0], [96.3, 9015.0], [96.4, 9015.0], [96.5, 9015.0], [96.6, 9015.0], [96.7, 9015.0], [96.8, 12780.0], [96.9, 12780.0], [97.0, 12780.0], [97.1, 12780.0], [97.2, 12780.0], [97.3, 12780.0], [97.4, 15886.0], [97.5, 15886.0], [97.6, 15886.0], [97.7, 15886.0], [97.8, 15886.0], [97.9, 17685.0], [98.0, 17685.0], [98.1, 17685.0], [98.2, 17685.0], [98.3, 17685.0], [98.4, 17775.0], [98.5, 17775.0], [98.6, 17775.0], [98.7, 17775.0], [98.8, 17775.0], [98.9, 17775.0], [99.0, 20596.0], [99.1, 20596.0], [99.2, 20596.0], [99.3, 20596.0], [99.4, 20596.0], [99.5, 35635.0], [99.6, 35635.0], [99.7, 35635.0], [99.8, 35635.0], [99.9, 35635.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 31.0, "series": [{"data": [[33100.0, 1.0], [34500.0, 1.0], [34100.0, 1.0], [34700.0, 1.0], [35700.0, 1.0], [37700.0, 1.0], [37300.0, 1.0], [37100.0, 1.0], [46300.0, 1.0], [48700.0, 1.0], [47700.0, 2.0], [48100.0, 1.0], [50900.0, 1.0], [49300.0, 1.0], [53100.0, 1.0], [54300.0, 1.0], [55900.0, 1.0], [58700.0, 1.0], [58500.0, 2.0], [61100.0, 1.0], [1000.0, 1.0], [1100.0, 3.0], [1200.0, 5.0], [1300.0, 1.0], [1400.0, 1.0], [1800.0, 1.0], [1900.0, 2.0], [2000.0, 1.0], [2100.0, 1.0], [3000.0, 1.0], [3800.0, 2.0], [67700.0, 1.0], [4400.0, 1.0], [4900.0, 1.0], [5500.0, 1.0], [6100.0, 1.0], [6500.0, 1.0], [6600.0, 1.0], [6700.0, 2.0], [6800.0, 1.0], [7100.0, 1.0], [8200.0, 2.0], [8300.0, 1.0], [8600.0, 1.0], [8800.0, 1.0], [9200.0, 1.0], [9600.0, 1.0], [9900.0, 1.0], [10300.0, 1.0], [11200.0, 1.0], [11400.0, 1.0], [11300.0, 1.0], [13900.0, 1.0], [14300.0, 3.0], [14500.0, 1.0], [14700.0, 2.0], [15000.0, 2.0], [15200.0, 1.0], [14900.0, 1.0], [15700.0, 1.0], [16100.0, 1.0], [16700.0, 1.0], [16900.0, 1.0], [16600.0, 1.0], [17400.0, 1.0], [17000.0, 2.0], [18100.0, 1.0], [17800.0, 3.0], [18400.0, 1.0], [17900.0, 1.0], [19100.0, 1.0], [19400.0, 3.0], [20200.0, 1.0], [19700.0, 1.0], [20700.0, 1.0], [21500.0, 1.0], [21600.0, 1.0], [22100.0, 1.0], [23500.0, 1.0], [23800.0, 1.0], [24000.0, 1.0], [23600.0, 1.0], [24100.0, 1.0], [25100.0, 1.0], [25500.0, 2.0], [24800.0, 1.0], [24900.0, 1.0], [26000.0, 3.0], [26400.0, 1.0], [25800.0, 1.0], [25900.0, 1.0], [27300.0, 1.0], [27600.0, 1.0], [27400.0, 1.0], [27200.0, 1.0], [27000.0, 2.0], [27900.0, 2.0], [29200.0, 2.0], [28800.0, 1.0], [29100.0, 1.0], [28900.0, 1.0], [30000.0, 2.0], [30600.0, 1.0], [30300.0, 2.0], [30200.0, 1.0], [31500.0, 1.0], [31700.0, 1.0], [31100.0, 1.0], [32300.0, 1.0], [32600.0, 1.0], [32200.0, 1.0], [33600.0, 1.0], [33800.0, 1.0], [34000.0, 1.0], [34800.0, 1.0], [35200.0, 1.0], [36800.0, 1.0], [38200.0, 1.0], [37800.0, 1.0], [37200.0, 1.0], [38800.0, 1.0], [40000.0, 1.0], [39400.0, 1.0], [42800.0, 1.0], [43000.0, 1.0], [41200.0, 2.0], [43400.0, 1.0], [48600.0, 1.0], [50800.0, 1.0], [51000.0, 1.0], [51200.0, 1.0], [59600.0, 1.0], [61200.0, 1.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[600.0, 7.0], [700.0, 4.0], [800.0, 6.0], [900.0, 6.0], [1000.0, 7.0], [1100.0, 3.0], [1200.0, 3.0], [1300.0, 2.0], [1400.0, 3.0], [1600.0, 2.0], [1700.0, 2.0], [1800.0, 5.0], [1900.0, 3.0], [2000.0, 2.0], [2300.0, 1.0], [2400.0, 2.0], [2500.0, 3.0], [2600.0, 3.0], [2800.0, 4.0], [2700.0, 2.0], [2900.0, 1.0], [3000.0, 2.0], [3200.0, 1.0], [3600.0, 1.0], [3800.0, 1.0], [4000.0, 1.0], [4100.0, 3.0], [4300.0, 2.0], [4400.0, 2.0], [4500.0, 1.0], [4800.0, 3.0], [4700.0, 1.0], [4900.0, 2.0], [5000.0, 2.0], [5100.0, 1.0], [5300.0, 1.0], [5600.0, 1.0], [5500.0, 3.0], [5400.0, 2.0], [5800.0, 1.0], [5700.0, 2.0], [5900.0, 2.0], [6300.0, 2.0], [6500.0, 2.0], [6600.0, 2.0], [6700.0, 2.0], [6900.0, 1.0], [7100.0, 4.0], [8100.0, 2.0], [8000.0, 1.0], [8600.0, 1.0], [8200.0, 1.0], [8300.0, 1.0], [9600.0, 1.0], [9700.0, 1.0], [10100.0, 1.0], [9900.0, 1.0], [10000.0, 2.0], [9800.0, 1.0], [10300.0, 2.0], [10600.0, 2.0], [10500.0, 1.0], [10700.0, 1.0], [11100.0, 1.0], [11200.0, 1.0], [11700.0, 1.0], [11400.0, 1.0], [12100.0, 1.0], [11800.0, 1.0], [13300.0, 1.0], [12900.0, 1.0], [13500.0, 1.0], [14300.0, 1.0], [14100.0, 1.0], [14700.0, 1.0], [16300.0, 1.0], [17100.0, 1.0], [16900.0, 2.0], [16500.0, 1.0], [17400.0, 1.0], [100.0, 3.0], [30600.0, 1.0], [200.0, 4.0], [300.0, 6.0], [400.0, 6.0], [500.0, 7.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[134400.0, 1.0], [131200.0, 1.0], [147200.0, 1.0], [164000.0, 1.0], [132900.0, 1.0], [139300.0, 1.0], [146500.0, 1.0], [141700.0, 1.0], [148900.0, 1.0], [152900.0, 2.0], [75100.0, 1.0], [77500.0, 1.0], [79100.0, 1.0], [86300.0, 1.0], [88700.0, 1.0], [87900.0, 1.0], [97900.0, 1.0], [95100.0, 1.0], [99500.0, 1.0], [103500.0, 1.0], [110700.0, 1.0], [115100.0, 3.0], [117500.0, 1.0], [119100.0, 1.0], [119500.0, 1.0], [120700.0, 1.0], [121900.0, 1.0], [119900.0, 1.0], [123100.0, 1.0], [124300.0, 1.0], [129100.0, 1.0], [131400.0, 1.0], [141800.0, 1.0], [149800.0, 1.0], [132300.0, 1.0], [133100.0, 2.0], [139500.0, 1.0], [145900.0, 1.0], [40100.0, 1.0], [42700.0, 1.0], [42100.0, 1.0], [45700.0, 1.0], [49500.0, 1.0], [58300.0, 1.0], [59100.0, 2.0], [57700.0, 1.0], [59300.0, 1.0], [62500.0, 1.0], [61900.0, 1.0], [64500.0, 1.0], [64300.0, 1.0], [75000.0, 1.0], [78600.0, 1.0], [83400.0, 1.0], [87000.0, 1.0], [88200.0, 1.0], [89800.0, 1.0], [95000.0, 1.0], [95400.0, 1.0], [95800.0, 2.0], [103000.0, 1.0], [105400.0, 1.0], [112600.0, 1.0], [111400.0, 1.0], [117000.0, 2.0], [122200.0, 1.0], [123000.0, 1.0], [126200.0, 1.0], [127000.0, 1.0], [136400.0, 1.0], [133200.0, 1.0], [138800.0, 1.0], [143600.0, 1.0], [142800.0, 1.0], [145200.0, 1.0], [161200.0, 1.0], [139700.0, 1.0], [149300.0, 1.0], [67700.0, 1.0], [5400.0, 1.0], [5500.0, 2.0], [5600.0, 1.0], [86500.0, 1.0], [87700.0, 1.0], [89700.0, 1.0], [5700.0, 2.0], [93700.0, 1.0], [92900.0, 2.0], [5900.0, 2.0], [6000.0, 1.0], [95700.0, 1.0], [94900.0, 1.0], [98900.0, 1.0], [103300.0, 1.0], [6800.0, 3.0], [107300.0, 1.0], [7000.0, 1.0], [113300.0, 1.0], [112100.0, 1.0], [111300.0, 1.0], [7400.0, 1.0], [116100.0, 1.0], [117300.0, 1.0], [123300.0, 1.0], [8100.0, 1.0], [129700.0, 1.0], [8200.0, 1.0], [8300.0, 1.0], [139000.0, 1.0], [8900.0, 1.0], [8800.0, 1.0], [147000.0, 1.0], [10000.0, 1.0], [156600.0, 1.0], [157400.0, 1.0], [159000.0, 1.0], [163800.0, 1.0], [11000.0, 2.0], [10900.0, 1.0], [10800.0, 2.0], [12100.0, 1.0], [12700.0, 1.0], [12800.0, 1.0], [14000.0, 1.0], [14400.0, 1.0], [15100.0, 1.0], [17200.0, 1.0], [17000.0, 1.0], [18300.0, 1.0], [20100.0, 1.0], [20200.0, 1.0], [21500.0, 1.0], [22700.0, 1.0], [23100.0, 1.0], [24500.0, 1.0], [30000.0, 1.0], [30700.0, 1.0], [31200.0, 1.0], [34000.0, 1.0], [135100.0, 2.0], [35400.0, 1.0], [142300.0, 1.0], [147100.0, 1.0], [146300.0, 1.0], [143100.0, 1.0], [139900.0, 1.0], [148700.0, 1.0], [39800.0, 1.0], [42600.0, 1.0], [42400.0, 1.0], [43400.0, 1.0], [47200.0, 1.0], [50600.0, 1.0], [49200.0, 1.0], [51200.0, 1.0], [55200.0, 1.0], [56600.0, 1.0], [59000.0, 1.0], [58200.0, 1.0], [59800.0, 1.0], [60600.0, 1.0], [62200.0, 1.0], [64600.0, 1.0], [65200.0, 1.0], [63600.0, 1.0], [66400.0, 1.0], [68000.0, 1.0], [65600.0, 1.0], [69600.0, 1.0], [72800.0, 1.0], [74800.0, 1.0], [76800.0, 1.0], [81200.0, 1.0], [85200.0, 1.0], [89600.0, 1.0], [88400.0, 2.0], [94000.0, 1.0], [92000.0, 1.0], [95200.0, 1.0], [98000.0, 1.0], [100400.0, 1.0], [99600.0, 1.0], [105600.0, 1.0], [108000.0, 1.0], [119600.0, 1.0], [118800.0, 1.0], [119200.0, 2.0], [125600.0, 1.0], [126400.0, 1.0], [130000.0, 1.0], [129600.0, 1.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[0.0, 16.0], [9000.0, 1.0], [600.0, 15.0], [700.0, 9.0], [12700.0, 1.0], [800.0, 7.0], [900.0, 9.0], [15800.0, 1.0], [1000.0, 5.0], [1100.0, 2.0], [17700.0, 1.0], [17600.0, 1.0], [1200.0, 4.0], [20500.0, 1.0], [1300.0, 1.0], [1400.0, 1.0], [100.0, 14.0], [1700.0, 1.0], [1800.0, 1.0], [2000.0, 1.0], [35600.0, 1.0], [2500.0, 1.0], [2600.0, 1.0], [2800.0, 1.0], [2900.0, 1.0], [3100.0, 1.0], [200.0, 15.0], [3200.0, 1.0], [4100.0, 2.0], [300.0, 31.0], [400.0, 30.0], [500.0, 9.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 164000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 9.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 495.0, "series": [{"data": [[0.0, 116.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 121.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 495.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 9.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 3.7499999999999996, "minX": 1.71873342E12, "maxY": 60.0, "series": [{"data": [[1.71873342E12, 3.7499999999999996], [1.7187336E12, 24.142857142857142], [1.71873408E12, 14.458333333333329], [1.71873378E12, 45.27142857142857], [1.71873396E12, 60.0], [1.71873366E12, 30.367088607594937], [1.71873384E12, 52.56578947368422], [1.71873348E12, 9.336842105263159], [1.71873354E12, 15.95454545454545], [1.71873402E12, 47.302325581395344], [1.71873372E12, 38.22058823529412], [1.7187339E12, 59.14666666666667]], "isOverall": false, "label": "MixedTest", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71873408E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 94.0, "minX": 1.0, "maxY": 143205.9705882353, "series": [{"data": [[2.0, 1082.0], [3.0, 1219.0], [4.0, 1248.3333333333333], [5.0, 1443.0], [6.0, 1875.5], [7.0, 2093.0], [8.0, 2022.0], [9.0, 3055.0], [10.0, 3878.5], [11.0, 4429.0], [12.0, 5534.5], [13.0, 6240.0], [14.0, 6775.5], [15.0, 6999.0], [16.0, 8364.75], [17.0, 8822.0], [18.0, 9450.5], [19.0, 10159.5], [20.0, 11361.0], [22.0, 13942.0], [24.0, 14908.666666666666], [25.0, 32558.5], [26.0, 55909.0], [27.0, 16841.5], [28.0, 15553.0], [29.0, 18662.5], [30.0, 18242.666666666668], [31.0, 16667.6], [32.0, 15701.25], [33.0, 17009.0], [34.0, 17827.5], [35.0, 23859.0], [36.0, 20472.8], [38.0, 26092.0], [39.0, 24855.8], [40.0, 27440.0], [41.0, 26451.0], [42.0, 24999.0], [43.0, 31040.666666666668], [44.0, 37192.545454545456], [45.0, 27280.0], [47.0, 32206.25], [48.0, 30837.666666666668], [49.0, 34472.0], [50.0, 38007.0], [51.0, 38921.0], [52.0, 46560.0], [53.0, 58595.0], [54.0, 34297.5], [55.0, 30947.75], [56.0, 34701.0], [58.0, 35732.700000000004], [59.0, 31147.0], [60.0, 44748.904761904756], [1.0, 1133.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[36.48466257668713, 24696.791411042945]], "isOverall": false, "label": "Directors by name-Aggregated", "isController": false}, {"data": [[2.0, 479.0], [3.0, 529.0], [4.0, 368.25], [5.0, 502.4], [6.0, 519.3333333333334], [7.0, 619.25], [8.0, 743.0], [9.0, 1012.1428571428571], [10.0, 1299.8], [11.0, 1699.6666666666667], [13.0, 1923.2222222222222], [14.0, 1494.0], [15.0, 2127.6666666666665], [16.0, 2099.6666666666665], [17.0, 1129.0], [18.0, 2919.0], [19.0, 1005.0], [21.0, 3973.6666666666665], [22.0, 2265.6666666666665], [25.0, 3506.3333333333335], [26.0, 3329.0], [27.0, 3394.75], [28.0, 3547.8], [29.0, 4094.0], [30.0, 4826.8], [31.0, 549.5], [32.0, 3689.0], [33.0, 5980.25], [34.0, 5147.0], [35.0, 5537.0], [36.0, 1743.0], [37.0, 4480.2], [38.0, 8666.5], [39.0, 7105.5], [40.0, 3312.0], [41.0, 5017.0], [42.0, 1023.0], [43.0, 8196.0], [44.0, 3975.3333333333335], [45.0, 5983.833333333333], [46.0, 9645.25], [47.0, 4823.5], [48.0, 9659.0], [49.0, 10372.0], [50.0, 1809.5], [51.0, 10541.5], [52.0, 5982.857142857143], [54.0, 13893.0], [55.0, 822.0], [56.0, 7146.666666666667], [57.0, 8177.5], [58.0, 9641.0], [59.0, 10671.0], [60.0, 10172.608695652174]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[31.98360655737705, 4596.579234972676]], "isOverall": false, "label": "TitleBasics by primary_title-Aggregated", "isController": false}, {"data": [[2.0, 5542.5], [3.0, 38138.5], [4.0, 19204.5], [5.0, 22372.2], [6.0, 7753.75], [7.0, 8733.0], [8.0, 38390.14285714286], [9.0, 27012.0], [10.0, 29230.6], [11.0, 17520.333333333332], [12.0, 22160.5], [13.0, 22033.25], [14.0, 31289.0], [15.0, 30405.0], [16.0, 34756.5], [18.0, 40866.333333333336], [19.0, 78249.44444444444], [20.0, 89633.66666666667], [21.0, 82301.5], [22.0, 50176.75], [23.0, 55210.0], [24.0, 112296.25], [25.0, 58553.0], [26.0, 61559.666666666664], [27.0, 63697.333333333336], [28.0, 65842.0], [29.0, 67937.5], [30.0, 62690.8], [31.0, 115124.0], [32.0, 112560.83333333334], [33.0, 88555.75], [35.0, 100254.0], [34.0, 129706.0], [36.0, 108819.0], [37.0, 82429.25], [38.0, 88700.0], [39.0, 91648.5], [40.0, 93627.0], [41.0, 92311.0], [42.0, 96347.5], [43.0, 97979.0], [44.0, 115404.0], [45.0, 95440.33333333333], [47.0, 103026.66666666667], [48.0, 105475.0], [49.0, 117063.0], [50.0, 112043.0], [51.0, 132987.72727272726], [52.0, 104764.33333333333], [55.0, 118713.75], [56.0, 120361.66666666667], [58.0, 136421.0], [59.0, 139592.0], [60.0, 143205.9705882353], [1.0, 32394.5]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[32.55502392344497, 83971.89952153112]], "isOverall": false, "label": "Actors by name-Aggregated", "isController": false}, {"data": [[2.0, 111.0], [3.0, 150.33333333333334], [4.0, 105.0], [5.0, 166.25], [7.0, 144.0], [8.0, 225.0], [9.0, 212.62500000000003], [10.0, 296.75], [11.0, 400.0], [12.0, 335.5], [13.0, 343.875], [14.0, 616.5], [15.0, 188.0], [16.0, 345.66666666666663], [17.0, 431.6666666666667], [18.0, 510.5], [19.0, 1908.0], [20.0, 968.0], [22.0, 340.0], [24.0, 420.0], [25.0, 441.0], [26.0, 404.5], [27.0, 558.5], [28.0, 569.25], [29.0, 916.6], [30.0, 495.5], [32.0, 3527.666666666667], [33.0, 362.3333333333333], [34.0, 726.0], [35.0, 492.33333333333337], [36.0, 2061.0], [37.0, 692.0], [39.0, 606.8333333333333], [40.0, 616.0], [41.0, 450.6666666666667], [42.0, 968.0], [43.0, 812.0], [44.0, 2477.0], [45.0, 895.1666666666666], [46.0, 225.0], [47.0, 459.5], [49.0, 3969.666666666667], [50.0, 939.0], [51.0, 809.6666666666666], [52.0, 6826.666666666667], [54.0, 4705.25], [55.0, 1240.0], [56.0, 925.5], [57.0, 1128.25], [58.0, 730.0], [59.0, 1806.5], [60.0, 2195.08], [1.0, 94.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}, {"data": [[34.048387096774185, 1296.1666666666663]], "isOverall": false, "label": "TitleBasics by params-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 60.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 63.11666666666667, "minX": 1.71873342E12, "maxY": 6457.716666666666, "series": [{"data": [[1.71873342E12, 3527.2166666666667], [1.7187336E12, 2760.266666666667], [1.71873408E12, 351.6], [1.71873378E12, 4633.266666666666], [1.71873396E12, 2193.6666666666665], [1.71873366E12, 5751.85], [1.71873384E12, 4833.5], [1.71873348E12, 6457.716666666666], [1.71873354E12, 4308.716666666666], [1.71873402E12, 1169.2333333333333], [1.71873372E12, 4529.483333333334], [1.7187339E12, 5490.866666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71873342E12, 146.51666666666668], [1.7187336E12, 132.53333333333333], [1.71873408E12, 63.11666666666667], [1.71873378E12, 190.33333333333334], [1.71873396E12, 118.6], [1.71873366E12, 220.7], [1.71873384E12, 211.66666666666666], [1.71873348E12, 257.03333333333336], [1.71873354E12, 182.23333333333332], [1.71873402E12, 115.33333333333333], [1.71873372E12, 187.83333333333334], [1.7187339E12, 208.18333333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71873408E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 130.0666666666667, "minX": 1.71873342E12, "maxY": 142698.0625, "series": [{"data": [[1.71873342E12, 1227.090909090909], [1.7187336E12, 14219.700000000003], [1.71873378E12, 29928.555555555562], [1.71873396E12, 51745.9], [1.71873366E12, 16882.28571428571], [1.71873384E12, 34612.64705882354], [1.71873348E12, 3484.0833333333335], [1.71873354E12, 8148.666666666668], [1.71873402E12, 51034.181818181816], [1.71873372E12, 23669.176470588234], [1.7187339E12, 35379.761904761916]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.71873342E12, 467.38461538461536], [1.7187336E12, 3300.1875000000005], [1.71873378E12, 6385.277777777777], [1.71873396E12, 11871.636363636362], [1.71873366E12, 4152.428571428572], [1.71873384E12, 6879.705882352941], [1.71873348E12, 975.0666666666667], [1.71873354E12, 1994.4736842105262], [1.71873402E12, 23808.5], [1.71873372E12, 5003.210526315789], [1.7187339E12, 7223.000000000002]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.71873342E12, 6093.0], [1.7187336E12, 56452.66666666667], [1.71873408E12, 95171.58333333333], [1.71873378E12, 99532.25], [1.71873396E12, 142698.0625], [1.71873366E12, 67385.21428571429], [1.71873384E12, 113690.65000000002], [1.71873348E12, 13717.115384615385], [1.71873354E12, 37529.0], [1.71873402E12, 137996.0714285714], [1.71873372E12, 88797.9375], [1.7187339E12, 134412.7272727273]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.71873342E12, 130.0666666666667], [1.7187336E12, 412.375], [1.71873378E12, 1196.6363636363635], [1.71873396E12, 1199.4285714285716], [1.71873366E12, 1005.7826086956519], [1.71873384E12, 4119.090909090907], [1.71873348E12, 247.81481481481478], [1.71873354E12, 707.5555555555555], [1.71873402E12, 722.5], [1.71873372E12, 658.1875], [1.7187339E12, 2152.2692307692314]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71873408E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 127.13333333333334, "minX": 1.71873342E12, "maxY": 142698.0625, "series": [{"data": [[1.71873342E12, 1227.090909090909], [1.7187336E12, 14219.6], [1.71873378E12, 29928.500000000004], [1.71873396E12, 51745.9], [1.71873366E12, 16882.238095238095], [1.71873384E12, 34612.64705882354], [1.71873348E12, 3484.0833333333335], [1.71873354E12, 8148.666666666668], [1.71873402E12, 51034.181818181816], [1.71873372E12, 23669.176470588234], [1.7187339E12, 35379.761904761916]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.71873342E12, 466.53846153846155], [1.7187336E12, 3300.0625], [1.71873378E12, 6384.944444444444], [1.71873396E12, 11871.090909090908], [1.71873366E12, 4150.523809523809], [1.71873384E12, 6879.117647058824], [1.71873348E12, 974.2333333333332], [1.71873354E12, 1994.1578947368423], [1.71873402E12, 23808.5], [1.71873372E12, 5003.052631578948], [1.7187339E12, 7222.764705882353]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.71873342E12, 6093.0], [1.7187336E12, 56452.66666666667], [1.71873408E12, 95171.58333333333], [1.71873378E12, 99532.25], [1.71873396E12, 142698.0625], [1.71873366E12, 67385.21428571429], [1.71873384E12, 113690.65000000002], [1.71873348E12, 13717.115384615385], [1.71873354E12, 37529.0], [1.71873402E12, 137996.0714285714], [1.71873372E12, 88797.9375], [1.7187339E12, 134412.7272727273]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.71873342E12, 127.13333333333334], [1.7187336E12, 411.625], [1.71873378E12, 1195.590909090909], [1.71873396E12, 1198.5714285714287], [1.71873366E12, 1005.1739130434781], [1.71873384E12, 4118.409090909091], [1.71873348E12, 247.1481481481481], [1.71873354E12, 707.1111111111111], [1.71873402E12, 722.5], [1.71873372E12, 657.6250000000001], [1.7187339E12, 2151.2692307692314]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71873408E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.71873342E12, "maxY": 35.0, "series": [{"data": [[1.71873342E12, 11.18181818181818], [1.7187336E12, 24.1], [1.71873378E12, 12.111111111111112], [1.71873396E12, 6.8999999999999995], [1.71873366E12, 10.095238095238095], [1.71873384E12, 14.411764705882353], [1.71873348E12, 0.0], [1.71873354E12, 9.533333333333333], [1.71873402E12, 19.18181818181818], [1.71873372E12, 8.764705882352942], [1.7187339E12, 7.333333333333334]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.71873342E12, 0.0], [1.7187336E12, 6.5], [1.71873378E12, 10.444444444444446], [1.71873396E12, 12.909090909090908], [1.71873366E12, 10.095238095238095], [1.71873384E12, 19.41176470588235], [1.71873348E12, 2.399999999999999], [1.71873354E12, 3.947368421052632], [1.71873402E12, 35.0], [1.71873372E12, 18.105263157894736], [1.7187339E12, 21.58823529411765]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.71873342E12, 5.384615384615384], [1.7187336E12, 9.8], [1.71873408E12, 17.0], [1.71873378E12, 10.083333333333334], [1.71873396E12, 9.062500000000002], [1.71873366E12, 13.214285714285715], [1.71873384E12, 14.399999999999997], [1.71873348E12, 4.769230769230769], [1.71873354E12, 5.285714285714285], [1.71873402E12, 7.642857142857142], [1.71873372E12, 9.437499999999998], [1.7187339E12, 16.727272727272727]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.71873342E12, 0.0], [1.7187336E12, 18.25], [1.71873378E12, 12.81818181818182], [1.71873396E12, 19.571428571428573], [1.71873366E12, 9.391304347826088], [1.71873384E12, 16.818181818181817], [1.71873348E12, 6.851851851851851], [1.71873354E12, 24.555555555555557], [1.71873402E12, 35.0], [1.71873372E12, 18.624999999999996], [1.7187339E12, 11.153846153846153]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71873408E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 90.0, "minX": 1.71873342E12, "maxY": 164053.0, "series": [{"data": [[1.71873342E12, 7041.0], [1.7187336E12, 64621.0], [1.71873408E12, 133138.0], [1.71873378E12, 108047.0], [1.71873396E12, 156684.0], [1.71873366E12, 75112.0], [1.71873384E12, 123103.0], [1.71873348E12, 23181.0], [1.71873354E12, 45753.0], [1.71873402E12, 164053.0], [1.71873372E12, 95757.0], [1.7187339E12, 148958.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71873342E12, 90.0], [1.7187336E12, 316.0], [1.71873408E12, 57712.0], [1.71873378E12, 225.0], [1.71873396E12, 303.0], [1.71873366E12, 316.0], [1.71873384E12, 295.0], [1.71873348E12, 94.0], [1.71873354E12, 188.0], [1.71873402E12, 309.0], [1.71873372E12, 218.0], [1.7187339E12, 297.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71873342E12, 6014.8], [1.7187336E12, 60046.3], [1.71873408E12, 130087.0], [1.71873378E12, 98969.6], [1.71873396E12, 147149.4], [1.71873366E12, 65632.0], [1.71873384E12, 118931.5], [1.71873348E12, 14907.500000000002], [1.71873354E12, 40964.0], [1.71873402E12, 158384.2], [1.71873372E12, 90046.40000000001], [1.7187339E12, 129850.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71873342E12, 7041.0], [1.7187336E12, 64621.0], [1.71873408E12, 133138.0], [1.71873378E12, 108047.0], [1.71873396E12, 156684.0], [1.71873366E12, 75112.0], [1.71873384E12, 123103.0], [1.71873348E12, 23181.0], [1.71873354E12, 45753.0], [1.71873402E12, 164053.0], [1.71873372E12, 95757.0], [1.7187339E12, 148958.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71873342E12, 611.5], [1.7187336E12, 11300.5], [1.71873408E12, 89111.0], [1.71873378E12, 10723.5], [1.71873396E12, 51003.0], [1.71873366E12, 5951.0], [1.71873384E12, 21653.0], [1.71873348E12, 1388.5], [1.71873354E12, 2893.0], [1.71873402E12, 123303.0], [1.71873372E12, 8675.5], [1.7187339E12, 12281.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.71873342E12, 6856.65], [1.7187336E12, 62435.4], [1.71873408E12, 133132.5], [1.71873378E12, 103182.05], [1.71873396E12, 149774.8], [1.71873366E12, 72836.0], [1.71873384E12, 119833.2], [1.71873348E12, 20192.25], [1.71873354E12, 42737.9], [1.71873402E12, 163324.0], [1.71873372E12, 94969.65], [1.7187339E12, 140308.25]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71873408E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 125922.0, "series": [{"data": [[2.0, 3165.0], [1.0, 5748.5], [4.0, 14771.0], [8.0, 59661.0], [5.0, 14252.5], [10.0, 95859.5], [3.0, 3555.5], [6.0, 29753.0], [12.0, 90254.0], [13.0, 26925.0], [7.0, 125922.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 0.0], [1.0, 0.0], [2.0, 0.0], [8.0, 0.0], [5.0, 0.0], [3.0, 0.0], [13.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 13.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 125922.0, "series": [{"data": [[2.0, 3165.0], [1.0, 5748.5], [4.0, 14771.0], [8.0, 59661.0], [5.0, 14252.5], [10.0, 95859.5], [3.0, 3553.5], [6.0, 29753.0], [12.0, 90254.0], [13.0, 26925.0], [7.0, 125922.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 0.0], [1.0, 0.0], [2.0, 0.0], [8.0, 0.0], [5.0, 0.0], [3.0, 0.0], [13.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 13.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.11666666666666667, "minX": 1.71873342E12, "maxY": 1.7, "series": [{"data": [[1.71873342E12, 0.95], [1.7187336E12, 0.9166666666666666], [1.71873378E12, 1.2666666666666666], [1.71873396E12, 0.7333333333333333], [1.71873366E12, 1.45], [1.71873384E12, 1.3666666666666667], [1.71873348E12, 1.7], [1.71873354E12, 1.2333333333333334], [1.71873402E12, 0.11666666666666667], [1.71873372E12, 1.2666666666666666], [1.7187339E12, 1.35]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71873402E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71873342E12, "maxY": 1.5333333333333334, "series": [{"data": [[1.71873342E12, 0.8666666666666667], [1.7187336E12, 0.8], [1.71873408E12, 0.4], [1.71873378E12, 1.1333333333333333], [1.71873396E12, 0.7166666666666667], [1.71873366E12, 1.3166666666666667], [1.71873384E12, 1.2666666666666666], [1.71873348E12, 1.5333333333333334], [1.71873354E12, 1.0833333333333333], [1.71873402E12, 0.7166666666666667], [1.71873372E12, 1.1333333333333333], [1.7187339E12, 1.2333333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.7187336E12, 0.016666666666666666], [1.71873378E12, 0.03333333333333333], [1.71873396E12, 0.016666666666666666], [1.71873348E12, 0.05], [1.71873354E12, 0.016666666666666666], [1.7187339E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: java.net.URISyntaxException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71873408E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71873342E12, "maxY": 0.5, "series": [{"data": [[1.71873342E12, 0.21666666666666667], [1.7187336E12, 0.26666666666666666], [1.71873378E12, 0.3], [1.71873396E12, 0.18333333333333332], [1.71873366E12, 0.35], [1.71873384E12, 0.2833333333333333], [1.71873348E12, 0.5], [1.71873354E12, 0.31666666666666665], [1.71873402E12, 0.03333333333333333], [1.71873372E12, 0.31666666666666665], [1.7187339E12, 0.2833333333333333]], "isOverall": false, "label": "TitleBasics by primary_title-success", "isController": false}, {"data": [[1.71873342E12, 0.21666666666666667], [1.7187336E12, 0.25], [1.71873408E12, 0.4], [1.71873378E12, 0.2], [1.71873396E12, 0.26666666666666666], [1.71873366E12, 0.23333333333333334], [1.71873384E12, 0.3333333333333333], [1.71873348E12, 0.43333333333333335], [1.71873354E12, 0.23333333333333334], [1.71873402E12, 0.4666666666666667], [1.71873372E12, 0.26666666666666666], [1.7187339E12, 0.18333333333333332]], "isOverall": false, "label": "Actors by name-success", "isController": false}, {"data": [[1.7187336E12, 0.016666666666666666], [1.71873378E12, 0.03333333333333333], [1.71873396E12, 0.016666666666666666], [1.71873348E12, 0.05], [1.71873354E12, 0.016666666666666666], [1.7187339E12, 0.016666666666666666]], "isOverall": false, "label": "TitleBasics by params-failure", "isController": false}, {"data": [[1.71873342E12, 0.18333333333333332], [1.7187336E12, 0.16666666666666666], [1.71873378E12, 0.3], [1.71873396E12, 0.16666666666666666], [1.71873366E12, 0.35], [1.71873384E12, 0.2833333333333333], [1.71873348E12, 0.2], [1.71873354E12, 0.25], [1.71873402E12, 0.18333333333333332], [1.71873372E12, 0.2833333333333333], [1.7187339E12, 0.35]], "isOverall": false, "label": "Directors by name-success", "isController": false}, {"data": [[1.71873342E12, 0.25], [1.7187336E12, 0.11666666666666667], [1.71873378E12, 0.3333333333333333], [1.71873396E12, 0.1], [1.71873366E12, 0.38333333333333336], [1.71873384E12, 0.36666666666666664], [1.71873348E12, 0.4], [1.71873354E12, 0.2833333333333333], [1.71873402E12, 0.03333333333333333], [1.71873372E12, 0.26666666666666666], [1.7187339E12, 0.4166666666666667]], "isOverall": false, "label": "TitleBasics by params-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71873408E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71873342E12, "maxY": 1.5333333333333334, "series": [{"data": [[1.71873342E12, 0.8666666666666667], [1.7187336E12, 0.8], [1.71873408E12, 0.4], [1.71873378E12, 1.1333333333333333], [1.71873396E12, 0.7166666666666667], [1.71873366E12, 1.3166666666666667], [1.71873384E12, 1.2666666666666666], [1.71873348E12, 1.5333333333333334], [1.71873354E12, 1.0833333333333333], [1.71873402E12, 0.7166666666666667], [1.71873372E12, 1.1333333333333333], [1.7187339E12, 1.2333333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.7187336E12, 0.016666666666666666], [1.71873378E12, 0.03333333333333333], [1.71873396E12, 0.016666666666666666], [1.71873348E12, 0.05], [1.71873354E12, 0.016666666666666666], [1.7187339E12, 0.016666666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71873408E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}


/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 38495.0, "series": [{"data": [[0.0, 1255.0], [0.1, 1255.0], [0.2, 1255.0], [0.3, 3682.0], [0.4, 3682.0], [0.5, 3682.0], [0.6, 3755.0], [0.7, 3755.0], [0.8, 4504.0], [0.9, 4504.0], [1.0, 4504.0], [1.1, 4710.0], [1.2, 4710.0], [1.3, 4740.0], [1.4, 4740.0], [1.5, 4740.0], [1.6, 4800.0], [1.7, 4800.0], [1.8, 4906.0], [1.9, 4906.0], [2.0, 4906.0], [2.1, 4939.0], [2.2, 4939.0], [2.3, 4939.0], [2.4, 4995.0], [2.5, 4995.0], [2.6, 5006.0], [2.7, 5006.0], [2.8, 5006.0], [2.9, 5241.0], [3.0, 5241.0], [3.1, 5261.0], [3.2, 5261.0], [3.3, 5261.0], [3.4, 5280.0], [3.5, 5280.0], [3.6, 5292.0], [3.7, 5292.0], [3.8, 5292.0], [3.9, 5350.0], [4.0, 5350.0], [4.1, 5361.0], [4.2, 5361.0], [4.3, 5361.0], [4.4, 5394.0], [4.5, 5394.0], [4.6, 5394.0], [4.7, 5399.0], [4.8, 5399.0], [4.9, 5437.0], [5.0, 5437.0], [5.1, 5437.0], [5.2, 5448.0], [5.3, 5448.0], [5.4, 5464.0], [5.5, 5464.0], [5.6, 5464.0], [5.7, 5481.0], [5.8, 5481.0], [5.9, 5514.0], [6.0, 5514.0], [6.1, 5514.0], [6.2, 5526.0], [6.3, 5526.0], [6.4, 5547.0], [6.5, 5547.0], [6.6, 5547.0], [6.7, 5554.0], [6.8, 5554.0], [6.9, 5554.0], [7.0, 5555.0], [7.1, 5555.0], [7.2, 5592.0], [7.3, 5592.0], [7.4, 5592.0], [7.5, 5614.0], [7.6, 5614.0], [7.7, 5634.0], [7.8, 5634.0], [7.9, 5634.0], [8.0, 5640.0], [8.1, 5640.0], [8.2, 5640.0], [8.3, 5640.0], [8.4, 5640.0], [8.5, 5660.0], [8.6, 5660.0], [8.7, 5698.0], [8.8, 5698.0], [8.9, 5698.0], [9.0, 5698.0], [9.1, 5698.0], [9.2, 5698.0], [9.3, 5708.0], [9.4, 5708.0], [9.5, 5718.0], [9.6, 5718.0], [9.7, 5718.0], [9.8, 5725.0], [9.9, 5725.0], [10.0, 5731.0], [10.1, 5731.0], [10.2, 5731.0], [10.3, 5755.0], [10.4, 5755.0], [10.5, 5756.0], [10.6, 5756.0], [10.7, 5756.0], [10.8, 5761.0], [10.9, 5761.0], [11.0, 5767.0], [11.1, 5767.0], [11.2, 5767.0], [11.3, 5768.0], [11.4, 5768.0], [11.5, 5768.0], [11.6, 5769.0], [11.7, 5769.0], [11.8, 5778.0], [11.9, 5778.0], [12.0, 5778.0], [12.1, 5781.0], [12.2, 5781.0], [12.3, 5792.0], [12.4, 5792.0], [12.5, 5792.0], [12.6, 5800.0], [12.7, 5800.0], [12.8, 5840.0], [12.9, 5840.0], [13.0, 5840.0], [13.1, 5867.0], [13.2, 5867.0], [13.3, 5874.0], [13.4, 5874.0], [13.5, 5874.0], [13.6, 5878.0], [13.7, 5878.0], [13.8, 5878.0], [13.9, 5879.0], [14.0, 5879.0], [14.1, 5880.0], [14.2, 5880.0], [14.3, 5880.0], [14.4, 5892.0], [14.5, 5892.0], [14.6, 5892.0], [14.7, 5892.0], [14.8, 5892.0], [14.9, 5903.0], [15.0, 5903.0], [15.1, 5921.0], [15.2, 5921.0], [15.3, 5921.0], [15.4, 5935.0], [15.5, 5935.0], [15.6, 5935.0], [15.7, 5936.0], [15.8, 5936.0], [15.9, 5938.0], [16.0, 5938.0], [16.1, 5938.0], [16.2, 5947.0], [16.3, 5947.0], [16.4, 5948.0], [16.5, 5948.0], [16.6, 5948.0], [16.7, 5952.0], [16.8, 5952.0], [16.9, 5956.0], [17.0, 5956.0], [17.1, 5956.0], [17.2, 5965.0], [17.3, 5965.0], [17.4, 5970.0], [17.5, 5970.0], [17.6, 5970.0], [17.7, 5971.0], [17.8, 5971.0], [17.9, 5971.0], [18.0, 5971.0], [18.1, 5971.0], [18.2, 5974.0], [18.3, 5974.0], [18.4, 5974.0], [18.5, 5974.0], [18.6, 5974.0], [18.7, 5979.0], [18.8, 5979.0], [18.9, 5979.0], [19.0, 5983.0], [19.1, 5983.0], [19.2, 5997.0], [19.3, 5997.0], [19.4, 5997.0], [19.5, 6037.0], [19.6, 6037.0], [19.7, 6041.0], [19.8, 6041.0], [19.9, 6041.0], [20.0, 6042.0], [20.1, 6042.0], [20.2, 6042.0], [20.3, 6044.0], [20.4, 6044.0], [20.5, 6050.0], [20.6, 6050.0], [20.7, 6050.0], [20.8, 6050.0], [20.9, 6050.0], [21.0, 6053.0], [21.1, 6053.0], [21.2, 6053.0], [21.3, 6056.0], [21.4, 6056.0], [21.5, 6061.0], [21.6, 6061.0], [21.7, 6061.0], [21.8, 6062.0], [21.9, 6062.0], [22.0, 6082.0], [22.1, 6082.0], [22.2, 6082.0], [22.3, 6094.0], [22.4, 6094.0], [22.5, 6094.0], [22.6, 6116.0], [22.7, 6116.0], [22.8, 6118.0], [22.9, 6118.0], [23.0, 6118.0], [23.1, 6118.0], [23.2, 6118.0], [23.3, 6138.0], [23.4, 6138.0], [23.5, 6138.0], [23.6, 6143.0], [23.7, 6143.0], [23.8, 6149.0], [23.9, 6149.0], [24.0, 6149.0], [24.1, 6158.0], [24.2, 6158.0], [24.3, 6160.0], [24.4, 6160.0], [24.5, 6160.0], [24.6, 6163.0], [24.7, 6163.0], [24.8, 6163.0], [24.9, 6171.0], [25.0, 6171.0], [25.1, 6171.0], [25.2, 6171.0], [25.3, 6171.0], [25.4, 6184.0], [25.5, 6184.0], [25.6, 6185.0], [25.7, 6185.0], [25.8, 6185.0], [25.9, 6192.0], [26.0, 6192.0], [26.1, 6194.0], [26.2, 6194.0], [26.3, 6194.0], [26.4, 6207.0], [26.5, 6207.0], [26.6, 6209.0], [26.7, 6209.0], [26.8, 6209.0], [26.9, 6210.0], [27.0, 6210.0], [27.1, 6210.0], [27.2, 6214.0], [27.3, 6214.0], [27.4, 6222.0], [27.5, 6222.0], [27.6, 6222.0], [27.7, 6233.0], [27.8, 6233.0], [27.9, 6261.0], [28.0, 6261.0], [28.1, 6261.0], [28.2, 6263.0], [28.3, 6263.0], [28.4, 6266.0], [28.5, 6266.0], [28.6, 6266.0], [28.7, 6275.0], [28.8, 6275.0], [28.9, 6275.0], [29.0, 6277.0], [29.1, 6277.0], [29.2, 6277.0], [29.3, 6277.0], [29.4, 6277.0], [29.5, 6297.0], [29.6, 6297.0], [29.7, 6312.0], [29.8, 6312.0], [29.9, 6312.0], [30.0, 6323.0], [30.1, 6323.0], [30.2, 6325.0], [30.3, 6325.0], [30.4, 6325.0], [30.5, 6326.0], [30.6, 6326.0], [30.7, 6330.0], [30.8, 6330.0], [30.9, 6330.0], [31.0, 6333.0], [31.1, 6333.0], [31.2, 6333.0], [31.3, 6349.0], [31.4, 6349.0], [31.5, 6349.0], [31.6, 6349.0], [31.7, 6349.0], [31.8, 6357.0], [31.9, 6357.0], [32.0, 6372.0], [32.1, 6372.0], [32.2, 6372.0], [32.3, 6372.0], [32.4, 6372.0], [32.5, 6372.0], [32.6, 6372.0], [32.7, 6372.0], [32.8, 6374.0], [32.9, 6374.0], [33.0, 6376.0], [33.1, 6376.0], [33.2, 6376.0], [33.3, 6378.0], [33.4, 6378.0], [33.5, 6378.0], [33.6, 6380.0], [33.7, 6380.0], [33.8, 6381.0], [33.9, 6381.0], [34.0, 6381.0], [34.1, 6384.0], [34.2, 6384.0], [34.3, 6385.0], [34.4, 6385.0], [34.5, 6385.0], [34.6, 6385.0], [34.7, 6385.0], [34.8, 6388.0], [34.9, 6388.0], [35.0, 6388.0], [35.1, 6390.0], [35.2, 6390.0], [35.3, 6393.0], [35.4, 6393.0], [35.5, 6393.0], [35.6, 6393.0], [35.7, 6393.0], [35.8, 6393.0], [35.9, 6393.0], [36.0, 6393.0], [36.1, 6397.0], [36.2, 6397.0], [36.3, 6397.0], [36.4, 6403.0], [36.5, 6403.0], [36.6, 6411.0], [36.7, 6411.0], [36.8, 6411.0], [36.9, 6419.0], [37.0, 6419.0], [37.1, 6428.0], [37.2, 6428.0], [37.3, 6428.0], [37.4, 6430.0], [37.5, 6430.0], [37.6, 6432.0], [37.7, 6432.0], [37.8, 6432.0], [37.9, 6436.0], [38.0, 6436.0], [38.1, 6436.0], [38.2, 6446.0], [38.3, 6446.0], [38.4, 6458.0], [38.5, 6458.0], [38.6, 6458.0], [38.7, 6464.0], [38.8, 6464.0], [38.9, 6465.0], [39.0, 6465.0], [39.1, 6465.0], [39.2, 6467.0], [39.3, 6467.0], [39.4, 6470.0], [39.5, 6470.0], [39.6, 6470.0], [39.7, 6471.0], [39.8, 6471.0], [39.9, 6471.0], [40.0, 6471.0], [40.1, 6471.0], [40.2, 6472.0], [40.3, 6472.0], [40.4, 6472.0], [40.5, 6474.0], [40.6, 6474.0], [40.7, 6478.0], [40.8, 6478.0], [40.9, 6478.0], [41.0, 6481.0], [41.1, 6481.0], [41.2, 6481.0], [41.3, 6481.0], [41.4, 6481.0], [41.5, 6482.0], [41.6, 6482.0], [41.7, 6482.0], [41.8, 6482.0], [41.9, 6482.0], [42.0, 6483.0], [42.1, 6483.0], [42.2, 6493.0], [42.3, 6493.0], [42.4, 6493.0], [42.5, 6496.0], [42.6, 6496.0], [42.7, 6496.0], [42.8, 6496.0], [42.9, 6496.0], [43.0, 6498.0], [43.1, 6498.0], [43.2, 6498.0], [43.3, 6499.0], [43.4, 6499.0], [43.5, 6510.0], [43.6, 6510.0], [43.7, 6510.0], [43.8, 6514.0], [43.9, 6514.0], [44.0, 6515.0], [44.1, 6515.0], [44.2, 6515.0], [44.3, 6533.0], [44.4, 6533.0], [44.5, 6533.0], [44.6, 6544.0], [44.7, 6544.0], [44.8, 6554.0], [44.9, 6554.0], [45.0, 6554.0], [45.1, 6559.0], [45.2, 6559.0], [45.3, 6561.0], [45.4, 6561.0], [45.5, 6561.0], [45.6, 6566.0], [45.7, 6566.0], [45.8, 6570.0], [45.9, 6570.0], [46.0, 6570.0], [46.1, 6571.0], [46.2, 6571.0], [46.3, 6575.0], [46.4, 6575.0], [46.5, 6575.0], [46.6, 6578.0], [46.7, 6578.0], [46.8, 6578.0], [46.9, 6580.0], [47.0, 6580.0], [47.1, 6581.0], [47.2, 6581.0], [47.3, 6581.0], [47.4, 6581.0], [47.5, 6581.0], [47.6, 6585.0], [47.7, 6585.0], [47.8, 6585.0], [47.9, 6594.0], [48.0, 6594.0], [48.1, 6599.0], [48.2, 6599.0], [48.3, 6599.0], [48.4, 6600.0], [48.5, 6600.0], [48.6, 6608.0], [48.7, 6608.0], [48.8, 6608.0], [48.9, 6613.0], [49.0, 6613.0], [49.1, 6613.0], [49.2, 6613.0], [49.3, 6613.0], [49.4, 6613.0], [49.5, 6613.0], [49.6, 6613.0], [49.7, 6627.0], [49.8, 6627.0], [49.9, 6630.0], [50.0, 6630.0], [50.1, 6630.0], [50.2, 6655.0], [50.3, 6655.0], [50.4, 6655.0], [50.5, 6655.0], [50.6, 6655.0], [50.7, 6656.0], [50.8, 6656.0], [50.9, 6663.0], [51.0, 6663.0], [51.1, 6663.0], [51.2, 6670.0], [51.3, 6670.0], [51.4, 6670.0], [51.5, 6675.0], [51.6, 6675.0], [51.7, 6683.0], [51.8, 6683.0], [51.9, 6683.0], [52.0, 6684.0], [52.1, 6684.0], [52.2, 6684.0], [52.3, 6684.0], [52.4, 6684.0], [52.5, 6686.0], [52.6, 6686.0], [52.7, 6687.0], [52.8, 6687.0], [52.9, 6687.0], [53.0, 6687.0], [53.1, 6687.0], [53.2, 6688.0], [53.3, 6688.0], [53.4, 6688.0], [53.5, 6688.0], [53.6, 6688.0], [53.7, 6688.0], [53.8, 6688.0], [53.9, 6688.0], [54.0, 6690.0], [54.1, 6690.0], [54.2, 6690.0], [54.3, 6691.0], [54.4, 6691.0], [54.5, 6694.0], [54.6, 6694.0], [54.7, 6694.0], [54.8, 6696.0], [54.9, 6696.0], [55.0, 6699.0], [55.1, 6699.0], [55.2, 6699.0], [55.3, 6703.0], [55.4, 6703.0], [55.5, 6708.0], [55.6, 6708.0], [55.7, 6708.0], [55.8, 6709.0], [55.9, 6709.0], [56.0, 6709.0], [56.1, 6710.0], [56.2, 6710.0], [56.3, 6717.0], [56.4, 6717.0], [56.5, 6717.0], [56.6, 6717.0], [56.7, 6717.0], [56.8, 6724.0], [56.9, 6724.0], [57.0, 6724.0], [57.1, 6732.0], [57.2, 6732.0], [57.3, 6739.0], [57.4, 6739.0], [57.5, 6739.0], [57.6, 6739.0], [57.7, 6739.0], [57.8, 6739.0], [57.9, 6747.0], [58.0, 6747.0], [58.1, 6751.0], [58.2, 6751.0], [58.3, 6751.0], [58.4, 6751.0], [58.5, 6751.0], [58.6, 6772.0], [58.7, 6772.0], [58.8, 6772.0], [58.9, 6772.0], [59.0, 6772.0], [59.1, 6773.0], [59.2, 6773.0], [59.3, 6773.0], [59.4, 6773.0], [59.5, 6773.0], [59.6, 6775.0], [59.7, 6775.0], [59.8, 6775.0], [59.9, 6776.0], [60.0, 6776.0], [60.1, 6776.0], [60.2, 6778.0], [60.3, 6778.0], [60.4, 6778.0], [60.5, 6778.0], [60.6, 6778.0], [60.7, 6780.0], [60.8, 6780.0], [60.9, 6782.0], [61.0, 6782.0], [61.1, 6782.0], [61.2, 6785.0], [61.3, 6785.0], [61.4, 6788.0], [61.5, 6788.0], [61.6, 6788.0], [61.7, 6788.0], [61.8, 6788.0], [61.9, 6789.0], [62.0, 6789.0], [62.1, 6789.0], [62.2, 6790.0], [62.3, 6790.0], [62.4, 6790.0], [62.5, 6791.0], [62.6, 6791.0], [62.7, 6794.0], [62.8, 6794.0], [62.9, 6794.0], [63.0, 6812.0], [63.1, 6812.0], [63.2, 6821.0], [63.3, 6821.0], [63.4, 6821.0], [63.5, 6821.0], [63.6, 6821.0], [63.7, 6822.0], [63.8, 6822.0], [63.9, 6822.0], [64.0, 6823.0], [64.1, 6823.0], [64.2, 6825.0], [64.3, 6825.0], [64.4, 6825.0], [64.5, 6832.0], [64.6, 6832.0], [64.7, 6832.0], [64.8, 6835.0], [64.9, 6835.0], [65.0, 6840.0], [65.1, 6840.0], [65.2, 6840.0], [65.3, 6845.0], [65.4, 6845.0], [65.5, 6846.0], [65.6, 6846.0], [65.7, 6846.0], [65.8, 6847.0], [65.9, 6847.0], [66.0, 6852.0], [66.1, 6852.0], [66.2, 6852.0], [66.3, 6854.0], [66.4, 6854.0], [66.5, 6857.0], [66.6, 6857.0], [66.7, 6857.0], [66.8, 6861.0], [66.9, 6861.0], [67.0, 6861.0], [67.1, 6870.0], [67.2, 6870.0], [67.3, 6881.0], [67.4, 6881.0], [67.5, 6881.0], [67.6, 6885.0], [67.7, 6885.0], [67.8, 6886.0], [67.9, 6886.0], [68.0, 6886.0], [68.1, 6887.0], [68.2, 6887.0], [68.3, 6889.0], [68.4, 6889.0], [68.5, 6889.0], [68.6, 6901.0], [68.7, 6901.0], [68.8, 6903.0], [68.9, 6903.0], [69.0, 6903.0], [69.1, 6913.0], [69.2, 6913.0], [69.3, 6913.0], [69.4, 6914.0], [69.5, 6914.0], [69.6, 6915.0], [69.7, 6915.0], [69.8, 6915.0], [69.9, 6916.0], [70.0, 6916.0], [70.1, 6917.0], [70.2, 6917.0], [70.3, 6917.0], [70.4, 6918.0], [70.5, 6918.0], [70.6, 6922.0], [70.7, 6922.0], [70.8, 6922.0], [70.9, 6936.0], [71.0, 6936.0], [71.1, 6953.0], [71.2, 6953.0], [71.3, 6953.0], [71.4, 6964.0], [71.5, 6964.0], [71.6, 6964.0], [71.7, 6968.0], [71.8, 6968.0], [71.9, 6977.0], [72.0, 6977.0], [72.1, 6977.0], [72.2, 6977.0], [72.3, 6977.0], [72.4, 6979.0], [72.5, 6979.0], [72.6, 6979.0], [72.7, 6979.0], [72.8, 6979.0], [72.9, 6981.0], [73.0, 6981.0], [73.1, 6981.0], [73.2, 6985.0], [73.3, 6985.0], [73.4, 6985.0], [73.5, 6991.0], [73.6, 6991.0], [73.7, 6992.0], [73.8, 6992.0], [73.9, 6992.0], [74.0, 6994.0], [74.1, 6994.0], [74.2, 6999.0], [74.3, 6999.0], [74.4, 6999.0], [74.5, 6999.0], [74.6, 6999.0], [74.7, 6999.0], [74.8, 6999.0], [74.9, 6999.0], [75.0, 7000.0], [75.1, 7000.0], [75.2, 7003.0], [75.3, 7003.0], [75.4, 7003.0], [75.5, 7006.0], [75.6, 7006.0], [75.7, 7006.0], [75.8, 7008.0], [75.9, 7008.0], [76.0, 7016.0], [76.1, 7016.0], [76.2, 7016.0], [76.3, 7025.0], [76.4, 7025.0], [76.5, 7030.0], [76.6, 7030.0], [76.7, 7030.0], [76.8, 7034.0], [76.9, 7034.0], [77.0, 7039.0], [77.1, 7039.0], [77.2, 7039.0], [77.3, 7043.0], [77.4, 7043.0], [77.5, 7065.0], [77.6, 7065.0], [77.7, 7065.0], [77.8, 7066.0], [77.9, 7066.0], [78.0, 7066.0], [78.1, 7079.0], [78.2, 7079.0], [78.3, 7091.0], [78.4, 7091.0], [78.5, 7091.0], [78.6, 7095.0], [78.7, 7095.0], [78.8, 7101.0], [78.9, 7101.0], [79.0, 7101.0], [79.1, 7107.0], [79.2, 7107.0], [79.3, 7112.0], [79.4, 7112.0], [79.5, 7112.0], [79.6, 7138.0], [79.7, 7138.0], [79.8, 7140.0], [79.9, 7140.0], [80.0, 7140.0], [80.1, 7142.0], [80.2, 7142.0], [80.3, 7142.0], [80.4, 7145.0], [80.5, 7145.0], [80.6, 7145.0], [80.7, 7145.0], [80.8, 7145.0], [80.9, 7160.0], [81.0, 7160.0], [81.1, 7164.0], [81.2, 7164.0], [81.3, 7164.0], [81.4, 7168.0], [81.5, 7168.0], [81.6, 7172.0], [81.7, 7172.0], [81.8, 7172.0], [81.9, 7174.0], [82.0, 7174.0], [82.1, 7180.0], [82.2, 7180.0], [82.3, 7180.0], [82.4, 7182.0], [82.5, 7182.0], [82.6, 7182.0], [82.7, 7184.0], [82.8, 7184.0], [82.9, 7190.0], [83.0, 7190.0], [83.1, 7190.0], [83.2, 7191.0], [83.3, 7191.0], [83.4, 7191.0], [83.5, 7191.0], [83.6, 7191.0], [83.7, 7194.0], [83.8, 7194.0], [83.9, 7195.0], [84.0, 7195.0], [84.1, 7195.0], [84.2, 7199.0], [84.3, 7199.0], [84.4, 7205.0], [84.5, 7205.0], [84.6, 7205.0], [84.7, 7208.0], [84.8, 7208.0], [84.9, 7208.0], [85.0, 7209.0], [85.1, 7209.0], [85.2, 7211.0], [85.3, 7211.0], [85.4, 7211.0], [85.5, 7212.0], [85.6, 7212.0], [85.7, 7212.0], [85.8, 7212.0], [85.9, 7212.0], [86.0, 7224.0], [86.1, 7224.0], [86.2, 7240.0], [86.3, 7240.0], [86.4, 7240.0], [86.5, 7263.0], [86.6, 7263.0], [86.7, 7263.0], [86.8, 7272.0], [86.9, 7272.0], [87.0, 7288.0], [87.1, 7288.0], [87.2, 7288.0], [87.3, 7290.0], [87.4, 7290.0], [87.5, 7291.0], [87.6, 7291.0], [87.7, 7291.0], [87.8, 7298.0], [87.9, 7298.0], [88.0, 7312.0], [88.1, 7312.0], [88.2, 7312.0], [88.3, 7322.0], [88.4, 7322.0], [88.5, 7323.0], [88.6, 7323.0], [88.7, 7323.0], [88.8, 7323.0], [88.9, 7323.0], [89.0, 7323.0], [89.1, 7331.0], [89.2, 7331.0], [89.3, 7343.0], [89.4, 7343.0], [89.5, 7343.0], [89.6, 7348.0], [89.7, 7348.0], [89.8, 7362.0], [89.9, 7362.0], [90.0, 7362.0], [90.1, 7366.0], [90.2, 7366.0], [90.3, 7380.0], [90.4, 7380.0], [90.5, 7380.0], [90.6, 7387.0], [90.7, 7387.0], [90.8, 7389.0], [90.9, 7389.0], [91.0, 7389.0], [91.1, 7392.0], [91.2, 7392.0], [91.3, 7392.0], [91.4, 7397.0], [91.5, 7397.0], [91.6, 7399.0], [91.7, 7399.0], [91.8, 7399.0], [91.9, 7404.0], [92.0, 7404.0], [92.1, 7406.0], [92.2, 7406.0], [92.3, 7406.0], [92.4, 7407.0], [92.5, 7407.0], [92.6, 7414.0], [92.7, 7414.0], [92.8, 7414.0], [92.9, 7416.0], [93.0, 7416.0], [93.1, 7434.0], [93.2, 7434.0], [93.3, 7434.0], [93.4, 7435.0], [93.5, 7435.0], [93.6, 7435.0], [93.7, 7469.0], [93.8, 7469.0], [93.9, 7492.0], [94.0, 7492.0], [94.1, 7492.0], [94.2, 7494.0], [94.3, 7494.0], [94.4, 7498.0], [94.5, 7498.0], [94.6, 7498.0], [94.7, 7502.0], [94.8, 7502.0], [94.9, 7503.0], [95.0, 7503.0], [95.1, 7503.0], [95.2, 7505.0], [95.3, 7505.0], [95.4, 7516.0], [95.5, 7516.0], [95.6, 7516.0], [95.7, 7525.0], [95.8, 7525.0], [95.9, 7525.0], [96.0, 7527.0], [96.1, 7527.0], [96.2, 7545.0], [96.3, 7545.0], [96.4, 7545.0], [96.5, 7556.0], [96.6, 7556.0], [96.7, 7572.0], [96.8, 7572.0], [96.9, 7572.0], [97.0, 7573.0], [97.1, 7573.0], [97.2, 7594.0], [97.3, 7594.0], [97.4, 7594.0], [97.5, 7607.0], [97.6, 7607.0], [97.7, 7612.0], [97.8, 7612.0], [97.9, 7612.0], [98.0, 7617.0], [98.1, 7617.0], [98.2, 7617.0], [98.3, 7620.0], [98.4, 7620.0], [98.5, 7676.0], [98.6, 7676.0], [98.7, 7676.0], [98.8, 7707.0], [98.9, 7707.0], [99.0, 7709.0], [99.1, 7709.0], [99.2, 7709.0], [99.3, 7799.0], [99.4, 7799.0], [99.5, 7803.0], [99.6, 7803.0], [99.7, 7803.0], [99.8, 7908.0], [99.9, 7908.0], [100.0, 7908.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[0.0, 118.0], [0.1, 118.0], [0.2, 118.0], [0.3, 131.0], [0.4, 131.0], [0.5, 131.0], [0.6, 135.0], [0.7, 135.0], [0.8, 180.0], [0.9, 180.0], [1.0, 180.0], [1.1, 205.0], [1.2, 205.0], [1.3, 251.0], [1.4, 251.0], [1.5, 251.0], [1.6, 277.0], [1.7, 277.0], [1.8, 278.0], [1.9, 278.0], [2.0, 278.0], [2.1, 295.0], [2.2, 295.0], [2.3, 310.0], [2.4, 310.0], [2.5, 310.0], [2.6, 326.0], [2.7, 326.0], [2.8, 327.0], [2.9, 327.0], [3.0, 327.0], [3.1, 329.0], [3.2, 329.0], [3.3, 330.0], [3.4, 330.0], [3.5, 330.0], [3.6, 338.0], [3.7, 338.0], [3.8, 342.0], [3.9, 342.0], [4.0, 342.0], [4.1, 346.0], [4.2, 346.0], [4.3, 359.0], [4.4, 359.0], [4.5, 359.0], [4.6, 365.0], [4.7, 365.0], [4.8, 372.0], [4.9, 372.0], [5.0, 372.0], [5.1, 373.0], [5.2, 373.0], [5.3, 427.0], [5.4, 427.0], [5.5, 427.0], [5.6, 437.0], [5.7, 437.0], [5.8, 437.0], [5.9, 437.0], [6.0, 437.0], [6.1, 437.0], [6.2, 437.0], [6.3, 438.0], [6.4, 438.0], [6.5, 438.0], [6.6, 440.0], [6.7, 440.0], [6.8, 440.0], [6.9, 480.0], [7.0, 480.0], [7.1, 485.0], [7.2, 485.0], [7.3, 485.0], [7.4, 490.0], [7.5, 490.0], [7.6, 504.0], [7.7, 504.0], [7.8, 504.0], [7.9, 513.0], [8.0, 513.0], [8.1, 513.0], [8.2, 513.0], [8.3, 513.0], [8.4, 524.0], [8.5, 524.0], [8.6, 537.0], [8.7, 537.0], [8.8, 537.0], [8.9, 544.0], [9.0, 544.0], [9.1, 551.0], [9.2, 551.0], [9.3, 551.0], [9.4, 553.0], [9.5, 553.0], [9.6, 554.0], [9.7, 554.0], [9.8, 554.0], [9.9, 556.0], [10.0, 556.0], [10.1, 559.0], [10.2, 559.0], [10.3, 559.0], [10.4, 564.0], [10.5, 564.0], [10.6, 581.0], [10.7, 581.0], [10.8, 581.0], [10.9, 603.0], [11.0, 603.0], [11.1, 628.0], [11.2, 628.0], [11.3, 628.0], [11.4, 634.0], [11.5, 634.0], [11.6, 640.0], [11.7, 640.0], [11.8, 640.0], [11.9, 642.0], [12.0, 642.0], [12.1, 642.0], [12.2, 642.0], [12.3, 642.0], [12.4, 643.0], [12.5, 643.0], [12.6, 681.0], [12.7, 681.0], [12.8, 681.0], [12.9, 707.0], [13.0, 707.0], [13.1, 742.0], [13.2, 742.0], [13.3, 742.0], [13.4, 744.0], [13.5, 744.0], [13.6, 744.0], [13.7, 750.0], [13.8, 750.0], [13.9, 783.0], [14.0, 783.0], [14.1, 783.0], [14.2, 806.0], [14.3, 806.0], [14.4, 840.0], [14.5, 840.0], [14.6, 840.0], [14.7, 841.0], [14.8, 841.0], [14.9, 844.0], [15.0, 844.0], [15.1, 844.0], [15.2, 848.0], [15.3, 848.0], [15.4, 861.0], [15.5, 861.0], [15.6, 861.0], [15.7, 864.0], [15.8, 864.0], [15.9, 896.0], [16.0, 896.0], [16.1, 896.0], [16.2, 907.0], [16.3, 907.0], [16.4, 908.0], [16.5, 908.0], [16.6, 908.0], [16.7, 916.0], [16.8, 916.0], [16.9, 919.0], [17.0, 919.0], [17.1, 919.0], [17.2, 922.0], [17.3, 922.0], [17.4, 958.0], [17.5, 958.0], [17.6, 958.0], [17.7, 966.0], [17.8, 966.0], [17.9, 972.0], [18.0, 972.0], [18.1, 972.0], [18.2, 1007.0], [18.3, 1007.0], [18.4, 1024.0], [18.5, 1024.0], [18.6, 1024.0], [18.7, 1032.0], [18.8, 1032.0], [18.9, 1048.0], [19.0, 1048.0], [19.1, 1048.0], [19.2, 1060.0], [19.3, 1060.0], [19.4, 1065.0], [19.5, 1065.0], [19.6, 1065.0], [19.7, 1067.0], [19.8, 1067.0], [19.9, 1072.0], [20.0, 1072.0], [20.1, 1072.0], [20.2, 1117.0], [20.3, 1117.0], [20.4, 1117.0], [20.5, 1128.0], [20.6, 1128.0], [20.7, 1131.0], [20.8, 1131.0], [20.9, 1131.0], [21.0, 1146.0], [21.1, 1146.0], [21.2, 1199.0], [21.3, 1199.0], [21.4, 1199.0], [21.5, 1201.0], [21.6, 1201.0], [21.7, 1206.0], [21.8, 1206.0], [21.9, 1206.0], [22.0, 1246.0], [22.1, 1246.0], [22.2, 1258.0], [22.3, 1258.0], [22.4, 1258.0], [22.5, 1299.0], [22.6, 1299.0], [22.7, 1337.0], [22.8, 1337.0], [22.9, 1337.0], [23.0, 1354.0], [23.1, 1354.0], [23.2, 1357.0], [23.3, 1357.0], [23.4, 1357.0], [23.5, 1411.0], [23.6, 1411.0], [23.7, 1415.0], [23.8, 1415.0], [23.9, 1415.0], [24.0, 1464.0], [24.1, 1464.0], [24.2, 1475.0], [24.3, 1475.0], [24.4, 1475.0], [24.5, 1488.0], [24.6, 1488.0], [24.7, 1491.0], [24.8, 1491.0], [24.9, 1491.0], [25.0, 1513.0], [25.1, 1513.0], [25.2, 1541.0], [25.3, 1541.0], [25.4, 1541.0], [25.5, 1575.0], [25.6, 1575.0], [25.7, 1597.0], [25.8, 1597.0], [25.9, 1597.0], [26.0, 1598.0], [26.1, 1598.0], [26.2, 1669.0], [26.3, 1669.0], [26.4, 1669.0], [26.5, 1679.0], [26.6, 1679.0], [26.7, 1679.0], [26.8, 1688.0], [26.9, 1688.0], [27.0, 1702.0], [27.1, 1702.0], [27.2, 1702.0], [27.3, 1703.0], [27.4, 1703.0], [27.5, 1708.0], [27.6, 1708.0], [27.7, 1708.0], [27.8, 1715.0], [27.9, 1715.0], [28.0, 1749.0], [28.1, 1749.0], [28.2, 1749.0], [28.3, 1764.0], [28.4, 1764.0], [28.5, 1770.0], [28.6, 1770.0], [28.7, 1770.0], [28.8, 1787.0], [28.9, 1787.0], [29.0, 1796.0], [29.1, 1796.0], [29.2, 1796.0], [29.3, 1799.0], [29.4, 1799.0], [29.5, 1804.0], [29.6, 1804.0], [29.7, 1804.0], [29.8, 1808.0], [29.9, 1808.0], [30.0, 1863.0], [30.1, 1863.0], [30.2, 1863.0], [30.3, 1884.0], [30.4, 1884.0], [30.5, 1960.0], [30.6, 1960.0], [30.7, 1960.0], [30.8, 1971.0], [30.9, 1971.0], [31.0, 1988.0], [31.1, 1988.0], [31.2, 1988.0], [31.3, 1990.0], [31.4, 1990.0], [31.5, 1995.0], [31.6, 1995.0], [31.7, 1995.0], [31.8, 1995.0], [31.9, 1995.0], [32.0, 2003.0], [32.1, 2003.0], [32.2, 2003.0], [32.3, 2032.0], [32.4, 2032.0], [32.5, 2048.0], [32.6, 2048.0], [32.7, 2048.0], [32.8, 2050.0], [32.9, 2050.0], [33.0, 2062.0], [33.1, 2062.0], [33.2, 2062.0], [33.3, 2065.0], [33.4, 2065.0], [33.5, 2065.0], [33.6, 2066.0], [33.7, 2066.0], [33.8, 2067.0], [33.9, 2067.0], [34.0, 2067.0], [34.1, 2099.0], [34.2, 2099.0], [34.3, 2110.0], [34.4, 2110.0], [34.5, 2110.0], [34.6, 2132.0], [34.7, 2132.0], [34.8, 2134.0], [34.9, 2134.0], [35.0, 2134.0], [35.1, 2164.0], [35.2, 2164.0], [35.3, 2166.0], [35.4, 2166.0], [35.5, 2166.0], [35.6, 2167.0], [35.7, 2167.0], [35.8, 2177.0], [35.9, 2177.0], [36.0, 2177.0], [36.1, 2189.0], [36.2, 2189.0], [36.3, 2189.0], [36.4, 2189.0], [36.5, 2189.0], [36.6, 2191.0], [36.7, 2191.0], [36.8, 2192.0], [36.9, 2192.0], [37.0, 2192.0], [37.1, 2193.0], [37.2, 2193.0], [37.3, 2195.0], [37.4, 2195.0], [37.5, 2195.0], [37.6, 2202.0], [37.7, 2202.0], [37.8, 2205.0], [37.9, 2205.0], [38.0, 2205.0], [38.1, 2232.0], [38.2, 2232.0], [38.3, 2240.0], [38.4, 2240.0], [38.5, 2240.0], [38.6, 2251.0], [38.7, 2251.0], [38.8, 2255.0], [38.9, 2255.0], [39.0, 2255.0], [39.1, 2271.0], [39.2, 2271.0], [39.3, 2271.0], [39.4, 2271.0], [39.5, 2271.0], [39.6, 2276.0], [39.7, 2276.0], [39.8, 2276.0], [39.9, 2276.0], [40.0, 2276.0], [40.1, 2283.0], [40.2, 2283.0], [40.3, 2283.0], [40.4, 2283.0], [40.5, 2283.0], [40.6, 2288.0], [40.7, 2288.0], [40.8, 2288.0], [40.9, 2295.0], [41.0, 2295.0], [41.1, 2304.0], [41.2, 2304.0], [41.3, 2304.0], [41.4, 2314.0], [41.5, 2314.0], [41.6, 2318.0], [41.7, 2318.0], [41.8, 2318.0], [41.9, 2335.0], [42.0, 2335.0], [42.1, 2361.0], [42.2, 2361.0], [42.3, 2361.0], [42.4, 2361.0], [42.5, 2361.0], [42.6, 2364.0], [42.7, 2364.0], [42.8, 2364.0], [42.9, 2366.0], [43.0, 2366.0], [43.1, 2376.0], [43.2, 2376.0], [43.3, 2376.0], [43.4, 2382.0], [43.5, 2382.0], [43.6, 2384.0], [43.7, 2384.0], [43.8, 2384.0], [43.9, 2387.0], [44.0, 2387.0], [44.1, 2393.0], [44.2, 2393.0], [44.3, 2393.0], [44.4, 2400.0], [44.5, 2400.0], [44.6, 2410.0], [44.7, 2410.0], [44.8, 2410.0], [44.9, 2413.0], [45.0, 2413.0], [45.1, 2433.0], [45.2, 2433.0], [45.3, 2433.0], [45.4, 2438.0], [45.5, 2438.0], [45.6, 2445.0], [45.7, 2445.0], [45.8, 2445.0], [45.9, 2452.0], [46.0, 2452.0], [46.1, 2458.0], [46.2, 2458.0], [46.3, 2458.0], [46.4, 2461.0], [46.5, 2461.0], [46.6, 2462.0], [46.7, 2462.0], [46.8, 2462.0], [46.9, 2469.0], [47.0, 2469.0], [47.1, 2469.0], [47.2, 2469.0], [47.3, 2469.0], [47.4, 2470.0], [47.5, 2470.0], [47.6, 2470.0], [47.7, 2475.0], [47.8, 2475.0], [47.9, 2478.0], [48.0, 2478.0], [48.1, 2478.0], [48.2, 2478.0], [48.3, 2478.0], [48.4, 2479.0], [48.5, 2479.0], [48.6, 2479.0], [48.7, 2480.0], [48.8, 2480.0], [48.9, 2480.0], [49.0, 2480.0], [49.1, 2480.0], [49.2, 2483.0], [49.3, 2483.0], [49.4, 2484.0], [49.5, 2484.0], [49.6, 2484.0], [49.7, 2487.0], [49.8, 2487.0], [49.9, 2487.0], [50.0, 2487.0], [50.1, 2487.0], [50.2, 2491.0], [50.3, 2491.0], [50.4, 2492.0], [50.5, 2492.0], [50.6, 2492.0], [50.7, 2493.0], [50.8, 2493.0], [50.9, 2494.0], [51.0, 2494.0], [51.1, 2494.0], [51.2, 2494.0], [51.3, 2494.0], [51.4, 2496.0], [51.5, 2496.0], [51.6, 2496.0], [51.7, 2497.0], [51.8, 2497.0], [51.9, 2498.0], [52.0, 2498.0], [52.1, 2498.0], [52.2, 2501.0], [52.3, 2501.0], [52.4, 2502.0], [52.5, 2502.0], [52.6, 2502.0], [52.7, 2502.0], [52.8, 2502.0], [52.9, 2502.0], [53.0, 2502.0], [53.1, 2502.0], [53.2, 2503.0], [53.3, 2503.0], [53.4, 2503.0], [53.5, 2504.0], [53.6, 2504.0], [53.7, 2504.0], [53.8, 2504.0], [53.9, 2504.0], [54.0, 2510.0], [54.1, 2510.0], [54.2, 2511.0], [54.3, 2511.0], [54.4, 2511.0], [54.5, 2511.0], [54.6, 2511.0], [54.7, 2513.0], [54.8, 2513.0], [54.9, 2513.0], [55.0, 2513.0], [55.1, 2513.0], [55.2, 2520.0], [55.3, 2520.0], [55.4, 2520.0], [55.5, 2527.0], [55.6, 2527.0], [55.7, 2534.0], [55.8, 2534.0], [55.9, 2534.0], [56.0, 2537.0], [56.1, 2537.0], [56.2, 2537.0], [56.3, 2537.0], [56.4, 2537.0], [56.5, 2539.0], [56.6, 2539.0], [56.7, 2540.0], [56.8, 2540.0], [56.9, 2540.0], [57.0, 2541.0], [57.1, 2541.0], [57.2, 2543.0], [57.3, 2543.0], [57.4, 2543.0], [57.5, 2544.0], [57.6, 2544.0], [57.7, 2544.0], [57.8, 2544.0], [57.9, 2544.0], [58.0, 2545.0], [58.1, 2545.0], [58.2, 2546.0], [58.3, 2546.0], [58.4, 2546.0], [58.5, 2557.0], [58.6, 2557.0], [58.7, 2559.0], [58.8, 2559.0], [58.9, 2559.0], [59.0, 2561.0], [59.1, 2561.0], [59.2, 2562.0], [59.3, 2562.0], [59.4, 2562.0], [59.5, 2564.0], [59.6, 2564.0], [59.7, 2565.0], [59.8, 2565.0], [59.9, 2565.0], [60.0, 2568.0], [60.1, 2568.0], [60.2, 2568.0], [60.3, 2570.0], [60.4, 2570.0], [60.5, 2572.0], [60.6, 2572.0], [60.7, 2572.0], [60.8, 2578.0], [60.9, 2578.0], [61.0, 2578.0], [61.1, 2578.0], [61.2, 2578.0], [61.3, 2580.0], [61.4, 2580.0], [61.5, 2583.0], [61.6, 2583.0], [61.7, 2583.0], [61.8, 2584.0], [61.9, 2584.0], [62.0, 2586.0], [62.1, 2586.0], [62.2, 2586.0], [62.3, 2586.0], [62.4, 2586.0], [62.5, 2587.0], [62.6, 2587.0], [62.7, 2587.0], [62.8, 2589.0], [62.9, 2589.0], [63.0, 2590.0], [63.1, 2590.0], [63.2, 2590.0], [63.3, 2595.0], [63.4, 2595.0], [63.5, 2596.0], [63.6, 2596.0], [63.7, 2596.0], [63.8, 2598.0], [63.9, 2598.0], [64.0, 2598.0], [64.1, 2598.0], [64.2, 2598.0], [64.3, 2603.0], [64.4, 2603.0], [64.5, 2604.0], [64.6, 2604.0], [64.7, 2604.0], [64.8, 2605.0], [64.9, 2605.0], [65.0, 2611.0], [65.1, 2611.0], [65.2, 2611.0], [65.3, 2613.0], [65.4, 2613.0], [65.5, 2614.0], [65.6, 2614.0], [65.7, 2614.0], [65.8, 2615.0], [65.9, 2615.0], [66.0, 2616.0], [66.1, 2616.0], [66.2, 2616.0], [66.3, 2621.0], [66.4, 2621.0], [66.5, 2624.0], [66.6, 2624.0], [66.7, 2624.0], [66.8, 2627.0], [66.9, 2627.0], [67.0, 2627.0], [67.1, 2637.0], [67.2, 2637.0], [67.3, 2641.0], [67.4, 2641.0], [67.5, 2641.0], [67.6, 2645.0], [67.7, 2645.0], [67.8, 2645.0], [67.9, 2645.0], [68.0, 2645.0], [68.1, 2655.0], [68.2, 2655.0], [68.3, 2656.0], [68.4, 2656.0], [68.5, 2656.0], [68.6, 2667.0], [68.7, 2667.0], [68.8, 2672.0], [68.9, 2672.0], [69.0, 2672.0], [69.1, 2674.0], [69.2, 2674.0], [69.3, 2675.0], [69.4, 2675.0], [69.5, 2675.0], [69.6, 2678.0], [69.7, 2678.0], [69.8, 2678.0], [69.9, 2678.0], [70.0, 2678.0], [70.1, 2679.0], [70.2, 2679.0], [70.3, 2682.0], [70.4, 2682.0], [70.5, 2682.0], [70.6, 2685.0], [70.7, 2685.0], [70.8, 2685.0], [70.9, 2685.0], [71.0, 2685.0], [71.1, 2686.0], [71.2, 2686.0], [71.3, 2686.0], [71.4, 2686.0], [71.5, 2686.0], [71.6, 2687.0], [71.7, 2687.0], [71.8, 2687.0], [71.9, 2687.0], [72.0, 2687.0], [72.1, 2689.0], [72.2, 2689.0], [72.3, 2689.0], [72.4, 2689.0], [72.5, 2689.0], [72.6, 2691.0], [72.7, 2691.0], [72.8, 2693.0], [72.9, 2693.0], [73.0, 2693.0], [73.1, 2698.0], [73.2, 2698.0], [73.3, 2700.0], [73.4, 2700.0], [73.5, 2700.0], [73.6, 2704.0], [73.7, 2704.0], [73.8, 2704.0], [73.9, 2707.0], [74.0, 2707.0], [74.1, 2710.0], [74.2, 2710.0], [74.3, 2710.0], [74.4, 2711.0], [74.5, 2711.0], [74.6, 2712.0], [74.7, 2712.0], [74.8, 2712.0], [74.9, 2720.0], [75.0, 2720.0], [75.1, 2721.0], [75.2, 2721.0], [75.3, 2721.0], [75.4, 2723.0], [75.5, 2723.0], [75.6, 2724.0], [75.7, 2724.0], [75.8, 2724.0], [75.9, 2728.0], [76.0, 2728.0], [76.1, 2732.0], [76.2, 2732.0], [76.3, 2732.0], [76.4, 2733.0], [76.5, 2733.0], [76.6, 2735.0], [76.7, 2735.0], [76.8, 2735.0], [76.9, 2737.0], [77.0, 2737.0], [77.1, 2756.0], [77.2, 2756.0], [77.3, 2756.0], [77.4, 2760.0], [77.5, 2760.0], [77.6, 2765.0], [77.7, 2765.0], [77.8, 2765.0], [77.9, 2766.0], [78.0, 2766.0], [78.1, 2774.0], [78.2, 2774.0], [78.3, 2774.0], [78.4, 2775.0], [78.5, 2775.0], [78.6, 2778.0], [78.7, 2778.0], [78.8, 2778.0], [78.9, 2782.0], [79.0, 2782.0], [79.1, 2783.0], [79.2, 2783.0], [79.3, 2783.0], [79.4, 2788.0], [79.5, 2788.0], [79.6, 2789.0], [79.7, 2789.0], [79.8, 2789.0], [79.9, 2789.0], [80.0, 2789.0], [80.1, 2789.0], [80.2, 2791.0], [80.3, 2791.0], [80.4, 2794.0], [80.5, 2794.0], [80.6, 2794.0], [80.7, 2795.0], [80.8, 2795.0], [80.9, 2796.0], [81.0, 2796.0], [81.1, 2796.0], [81.2, 2797.0], [81.3, 2797.0], [81.4, 2800.0], [81.5, 2800.0], [81.6, 2800.0], [81.7, 2801.0], [81.8, 2801.0], [81.9, 2803.0], [82.0, 2803.0], [82.1, 2803.0], [82.2, 2807.0], [82.3, 2807.0], [82.4, 2814.0], [82.5, 2814.0], [82.6, 2814.0], [82.7, 2815.0], [82.8, 2815.0], [82.9, 2821.0], [83.0, 2821.0], [83.1, 2821.0], [83.2, 2827.0], [83.3, 2827.0], [83.4, 2830.0], [83.5, 2830.0], [83.6, 2830.0], [83.7, 2833.0], [83.8, 2833.0], [83.9, 2834.0], [84.0, 2834.0], [84.1, 2834.0], [84.2, 2835.0], [84.3, 2835.0], [84.4, 2842.0], [84.5, 2842.0], [84.6, 2842.0], [84.7, 2847.0], [84.8, 2847.0], [84.9, 2850.0], [85.0, 2850.0], [85.1, 2850.0], [85.2, 2856.0], [85.3, 2856.0], [85.4, 2856.0], [85.5, 2856.0], [85.6, 2856.0], [85.7, 2856.0], [85.8, 2856.0], [85.9, 2865.0], [86.0, 2865.0], [86.1, 2865.0], [86.2, 2865.0], [86.3, 2865.0], [86.4, 2874.0], [86.5, 2874.0], [86.6, 2874.0], [86.7, 2874.0], [86.8, 2874.0], [86.9, 2874.0], [87.0, 2876.0], [87.1, 2876.0], [87.2, 2885.0], [87.3, 2885.0], [87.4, 2885.0], [87.5, 2887.0], [87.6, 2887.0], [87.7, 2888.0], [87.8, 2888.0], [87.9, 2888.0], [88.0, 2888.0], [88.1, 2888.0], [88.2, 2889.0], [88.3, 2889.0], [88.4, 2889.0], [88.5, 2891.0], [88.6, 2891.0], [88.7, 2896.0], [88.8, 2896.0], [88.9, 2896.0], [89.0, 2896.0], [89.1, 2896.0], [89.2, 2897.0], [89.3, 2897.0], [89.4, 2897.0], [89.5, 2898.0], [89.6, 2898.0], [89.7, 2904.0], [89.8, 2904.0], [89.9, 2904.0], [90.0, 2916.0], [90.1, 2916.0], [90.2, 2919.0], [90.3, 2919.0], [90.4, 2919.0], [90.5, 2922.0], [90.6, 2922.0], [90.7, 2926.0], [90.8, 2926.0], [90.9, 2926.0], [91.0, 2932.0], [91.1, 2932.0], [91.2, 2933.0], [91.3, 2933.0], [91.4, 2933.0], [91.5, 2937.0], [91.6, 2937.0], [91.7, 2941.0], [91.8, 2941.0], [91.9, 2941.0], [92.0, 2949.0], [92.1, 2949.0], [92.2, 2954.0], [92.3, 2954.0], [92.4, 2954.0], [92.5, 2968.0], [92.6, 2968.0], [92.7, 2971.0], [92.8, 2971.0], [92.9, 2971.0], [93.0, 2981.0], [93.1, 2981.0], [93.2, 2993.0], [93.3, 2993.0], [93.4, 2993.0], [93.5, 2993.0], [93.6, 2993.0], [93.7, 2993.0], [93.8, 2994.0], [93.9, 2994.0], [94.0, 2995.0], [94.1, 2995.0], [94.2, 2995.0], [94.3, 2998.0], [94.4, 2998.0], [94.5, 3010.0], [94.6, 3010.0], [94.7, 3010.0], [94.8, 3011.0], [94.9, 3011.0], [95.0, 3019.0], [95.1, 3019.0], [95.2, 3019.0], [95.3, 3021.0], [95.4, 3021.0], [95.5, 3024.0], [95.6, 3024.0], [95.7, 3024.0], [95.8, 3029.0], [95.9, 3029.0], [96.0, 3033.0], [96.1, 3033.0], [96.2, 3033.0], [96.3, 3084.0], [96.4, 3084.0], [96.5, 3091.0], [96.6, 3091.0], [96.7, 3091.0], [96.8, 3103.0], [96.9, 3103.0], [97.0, 3107.0], [97.1, 3107.0], [97.2, 3107.0], [97.3, 3113.0], [97.4, 3113.0], [97.5, 3116.0], [97.6, 3116.0], [97.7, 3116.0], [97.8, 3140.0], [97.9, 3140.0], [98.0, 3162.0], [98.1, 3162.0], [98.2, 3162.0], [98.3, 3202.0], [98.4, 3202.0], [98.5, 3292.0], [98.6, 3292.0], [98.7, 3292.0], [98.8, 3345.0], [98.9, 3345.0], [99.0, 3479.0], [99.1, 3479.0], [99.2, 3479.0], [99.3, 3488.0], [99.4, 3488.0], [99.5, 4015.0], [99.6, 4015.0], [99.7, 4015.0], [99.8, 4717.0], [99.9, 4717.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[0.0, 12828.0], [0.1, 12828.0], [0.2, 12828.0], [0.3, 16125.0], [0.4, 16125.0], [0.5, 16125.0], [0.6, 24419.0], [0.7, 24419.0], [0.8, 24419.0], [0.9, 26548.0], [1.0, 26548.0], [1.1, 27184.0], [1.2, 27184.0], [1.3, 27184.0], [1.4, 27454.0], [1.5, 27454.0], [1.6, 27454.0], [1.7, 27871.0], [1.8, 27871.0], [1.9, 28396.0], [2.0, 28396.0], [2.1, 28396.0], [2.2, 28534.0], [2.3, 28534.0], [2.4, 28534.0], [2.5, 28685.0], [2.6, 28685.0], [2.7, 28685.0], [2.8, 28749.0], [2.9, 28749.0], [3.0, 28880.0], [3.1, 28880.0], [3.2, 28880.0], [3.3, 29700.0], [3.4, 29700.0], [3.5, 29700.0], [3.6, 29806.0], [3.7, 29806.0], [3.8, 29847.0], [3.9, 29847.0], [4.0, 29847.0], [4.1, 29868.0], [4.2, 29868.0], [4.3, 29868.0], [4.4, 29927.0], [4.5, 29927.0], [4.6, 30136.0], [4.7, 30136.0], [4.8, 30136.0], [4.9, 30163.0], [5.0, 30163.0], [5.1, 30163.0], [5.2, 30319.0], [5.3, 30319.0], [5.4, 30319.0], [5.5, 30344.0], [5.6, 30344.0], [5.7, 30355.0], [5.8, 30355.0], [5.9, 30355.0], [6.0, 30398.0], [6.1, 30398.0], [6.2, 30398.0], [6.3, 30409.0], [6.4, 30409.0], [6.5, 30662.0], [6.6, 30662.0], [6.7, 30662.0], [6.8, 30663.0], [6.9, 30663.0], [7.0, 30663.0], [7.1, 30706.0], [7.2, 30706.0], [7.3, 30819.0], [7.4, 30819.0], [7.5, 30819.0], [7.6, 30842.0], [7.7, 30842.0], [7.8, 30842.0], [7.9, 30854.0], [8.0, 30854.0], [8.1, 30854.0], [8.2, 30881.0], [8.3, 30881.0], [8.4, 30883.0], [8.5, 30883.0], [8.6, 30883.0], [8.7, 30920.0], [8.8, 30920.0], [8.9, 30920.0], [9.0, 30924.0], [9.1, 30924.0], [9.2, 30929.0], [9.3, 30929.0], [9.4, 30929.0], [9.5, 30933.0], [9.6, 30933.0], [9.7, 30933.0], [9.8, 31032.0], [9.9, 31032.0], [10.0, 31186.0], [10.1, 31186.0], [10.2, 31186.0], [10.3, 31222.0], [10.4, 31222.0], [10.5, 31222.0], [10.6, 31381.0], [10.7, 31381.0], [10.8, 31381.0], [10.9, 31426.0], [11.0, 31426.0], [11.1, 31562.0], [11.2, 31562.0], [11.3, 31562.0], [11.4, 31594.0], [11.5, 31594.0], [11.6, 31594.0], [11.7, 31600.0], [11.8, 31600.0], [11.9, 31660.0], [12.0, 31660.0], [12.1, 31660.0], [12.2, 31683.0], [12.3, 31683.0], [12.4, 31683.0], [12.5, 31840.0], [12.6, 31840.0], [12.7, 31840.0], [12.8, 31899.0], [12.9, 31899.0], [13.0, 31903.0], [13.1, 31903.0], [13.2, 31903.0], [13.3, 31968.0], [13.4, 31968.0], [13.5, 31968.0], [13.6, 31991.0], [13.7, 31991.0], [13.8, 31996.0], [13.9, 31996.0], [14.0, 31996.0], [14.1, 32011.0], [14.2, 32011.0], [14.3, 32011.0], [14.4, 32078.0], [14.5, 32078.0], [14.6, 32079.0], [14.7, 32079.0], [14.8, 32079.0], [14.9, 32096.0], [15.0, 32096.0], [15.1, 32096.0], [15.2, 32098.0], [15.3, 32098.0], [15.4, 32098.0], [15.5, 32099.0], [15.6, 32099.0], [15.7, 32183.0], [15.8, 32183.0], [15.9, 32183.0], [16.0, 32184.0], [16.1, 32184.0], [16.2, 32184.0], [16.3, 32184.0], [16.4, 32184.0], [16.5, 32187.0], [16.6, 32187.0], [16.7, 32187.0], [16.8, 32210.0], [16.9, 32210.0], [17.0, 32210.0], [17.1, 32252.0], [17.2, 32252.0], [17.3, 32254.0], [17.4, 32254.0], [17.5, 32254.0], [17.6, 32323.0], [17.7, 32323.0], [17.8, 32323.0], [17.9, 32381.0], [18.0, 32381.0], [18.1, 32381.0], [18.2, 32381.0], [18.3, 32381.0], [18.4, 32384.0], [18.5, 32384.0], [18.6, 32384.0], [18.7, 32401.0], [18.8, 32401.0], [18.9, 32401.0], [19.0, 32406.0], [19.1, 32406.0], [19.2, 32427.0], [19.3, 32427.0], [19.4, 32427.0], [19.5, 32450.0], [19.6, 32450.0], [19.7, 32450.0], [19.8, 32501.0], [19.9, 32501.0], [20.0, 32552.0], [20.1, 32552.0], [20.2, 32552.0], [20.3, 32604.0], [20.4, 32604.0], [20.5, 32604.0], [20.6, 32607.0], [20.7, 32607.0], [20.8, 32607.0], [20.9, 32650.0], [21.0, 32650.0], [21.1, 32688.0], [21.2, 32688.0], [21.3, 32688.0], [21.4, 32692.0], [21.5, 32692.0], [21.6, 32692.0], [21.7, 32696.0], [21.8, 32696.0], [21.9, 32734.0], [22.0, 32734.0], [22.1, 32734.0], [22.2, 32738.0], [22.3, 32738.0], [22.4, 32738.0], [22.5, 32783.0], [22.6, 32783.0], [22.7, 32783.0], [22.8, 32800.0], [22.9, 32800.0], [23.0, 32834.0], [23.1, 32834.0], [23.2, 32834.0], [23.3, 32890.0], [23.4, 32890.0], [23.5, 32890.0], [23.6, 32911.0], [23.7, 32911.0], [23.8, 32955.0], [23.9, 32955.0], [24.0, 32955.0], [24.1, 32978.0], [24.2, 32978.0], [24.3, 32978.0], [24.4, 32987.0], [24.5, 32987.0], [24.6, 32996.0], [24.7, 32996.0], [24.8, 32996.0], [24.9, 33002.0], [25.0, 33002.0], [25.1, 33002.0], [25.2, 33003.0], [25.3, 33003.0], [25.4, 33003.0], [25.5, 33006.0], [25.6, 33006.0], [25.7, 33007.0], [25.8, 33007.0], [25.9, 33007.0], [26.0, 33008.0], [26.1, 33008.0], [26.2, 33008.0], [26.3, 33009.0], [26.4, 33009.0], [26.5, 33009.0], [26.6, 33009.0], [26.7, 33009.0], [26.8, 33033.0], [26.9, 33033.0], [27.0, 33033.0], [27.1, 33093.0], [27.2, 33093.0], [27.3, 33113.0], [27.4, 33113.0], [27.5, 33113.0], [27.6, 33118.0], [27.7, 33118.0], [27.8, 33118.0], [27.9, 33141.0], [28.0, 33141.0], [28.1, 33141.0], [28.2, 33156.0], [28.3, 33156.0], [28.4, 33163.0], [28.5, 33163.0], [28.6, 33163.0], [28.7, 33171.0], [28.8, 33171.0], [28.9, 33171.0], [29.0, 33178.0], [29.1, 33178.0], [29.2, 33185.0], [29.3, 33185.0], [29.4, 33185.0], [29.5, 33216.0], [29.6, 33216.0], [29.7, 33216.0], [29.8, 33221.0], [29.9, 33221.0], [30.0, 33235.0], [30.1, 33235.0], [30.2, 33235.0], [30.3, 33238.0], [30.4, 33238.0], [30.5, 33238.0], [30.6, 33238.0], [30.7, 33238.0], [30.8, 33238.0], [30.9, 33243.0], [31.0, 33243.0], [31.1, 33254.0], [31.2, 33254.0], [31.3, 33254.0], [31.4, 33274.0], [31.5, 33274.0], [31.6, 33274.0], [31.7, 33279.0], [31.8, 33279.0], [31.9, 33281.0], [32.0, 33281.0], [32.1, 33281.0], [32.2, 33287.0], [32.3, 33287.0], [32.4, 33287.0], [32.5, 33288.0], [32.6, 33288.0], [32.7, 33288.0], [32.8, 33322.0], [32.9, 33322.0], [33.0, 33336.0], [33.1, 33336.0], [33.2, 33336.0], [33.3, 33358.0], [33.4, 33358.0], [33.5, 33358.0], [33.6, 33382.0], [33.7, 33382.0], [33.8, 33398.0], [33.9, 33398.0], [34.0, 33398.0], [34.1, 33479.0], [34.2, 33479.0], [34.3, 33479.0], [34.4, 33480.0], [34.5, 33480.0], [34.6, 33489.0], [34.7, 33489.0], [34.8, 33489.0], [34.9, 33501.0], [35.0, 33501.0], [35.1, 33501.0], [35.2, 33502.0], [35.3, 33502.0], [35.4, 33502.0], [35.5, 33527.0], [35.6, 33527.0], [35.7, 33528.0], [35.8, 33528.0], [35.9, 33528.0], [36.0, 33531.0], [36.1, 33531.0], [36.2, 33531.0], [36.3, 33548.0], [36.4, 33548.0], [36.5, 33579.0], [36.6, 33579.0], [36.7, 33579.0], [36.8, 33584.0], [36.9, 33584.0], [37.0, 33584.0], [37.1, 33590.0], [37.2, 33590.0], [37.3, 33609.0], [37.4, 33609.0], [37.5, 33609.0], [37.6, 33647.0], [37.7, 33647.0], [37.8, 33647.0], [37.9, 33657.0], [38.0, 33657.0], [38.1, 33657.0], [38.2, 33665.0], [38.3, 33665.0], [38.4, 33676.0], [38.5, 33676.0], [38.6, 33676.0], [38.7, 33691.0], [38.8, 33691.0], [38.9, 33691.0], [39.0, 33703.0], [39.1, 33703.0], [39.2, 33706.0], [39.3, 33706.0], [39.4, 33706.0], [39.5, 33741.0], [39.6, 33741.0], [39.7, 33741.0], [39.8, 33790.0], [39.9, 33790.0], [40.0, 33790.0], [40.1, 33798.0], [40.2, 33798.0], [40.3, 33826.0], [40.4, 33826.0], [40.5, 33826.0], [40.6, 33886.0], [40.7, 33886.0], [40.8, 33886.0], [40.9, 33888.0], [41.0, 33888.0], [41.1, 33896.0], [41.2, 33896.0], [41.3, 33896.0], [41.4, 33905.0], [41.5, 33905.0], [41.6, 33905.0], [41.7, 33914.0], [41.8, 33914.0], [41.9, 33923.0], [42.0, 33923.0], [42.1, 33923.0], [42.2, 33946.0], [42.3, 33946.0], [42.4, 33946.0], [42.5, 33968.0], [42.6, 33968.0], [42.7, 33968.0], [42.8, 34019.0], [42.9, 34019.0], [43.0, 34052.0], [43.1, 34052.0], [43.2, 34052.0], [43.3, 34055.0], [43.4, 34055.0], [43.5, 34055.0], [43.6, 34057.0], [43.7, 34057.0], [43.8, 34069.0], [43.9, 34069.0], [44.0, 34069.0], [44.1, 34083.0], [44.2, 34083.0], [44.3, 34083.0], [44.4, 34084.0], [44.5, 34084.0], [44.6, 34102.0], [44.7, 34102.0], [44.8, 34102.0], [44.9, 34105.0], [45.0, 34105.0], [45.1, 34105.0], [45.2, 34112.0], [45.3, 34112.0], [45.4, 34112.0], [45.5, 34128.0], [45.6, 34128.0], [45.7, 34130.0], [45.8, 34130.0], [45.9, 34130.0], [46.0, 34145.0], [46.1, 34145.0], [46.2, 34145.0], [46.3, 34150.0], [46.4, 34150.0], [46.5, 34153.0], [46.6, 34153.0], [46.7, 34153.0], [46.8, 34166.0], [46.9, 34166.0], [47.0, 34166.0], [47.1, 34182.0], [47.2, 34182.0], [47.3, 34211.0], [47.4, 34211.0], [47.5, 34211.0], [47.6, 34221.0], [47.7, 34221.0], [47.8, 34221.0], [47.9, 34228.0], [48.0, 34228.0], [48.1, 34228.0], [48.2, 34264.0], [48.3, 34264.0], [48.4, 34283.0], [48.5, 34283.0], [48.6, 34283.0], [48.7, 34284.0], [48.8, 34284.0], [48.9, 34284.0], [49.0, 34296.0], [49.1, 34296.0], [49.2, 34309.0], [49.3, 34309.0], [49.4, 34309.0], [49.5, 34320.0], [49.6, 34320.0], [49.7, 34320.0], [49.8, 34328.0], [49.9, 34328.0], [50.0, 34328.0], [50.1, 34331.0], [50.2, 34331.0], [50.3, 34344.0], [50.4, 34344.0], [50.5, 34344.0], [50.6, 34344.0], [50.7, 34344.0], [50.8, 34344.0], [50.9, 34350.0], [51.0, 34350.0], [51.1, 34373.0], [51.2, 34373.0], [51.3, 34373.0], [51.4, 34384.0], [51.5, 34384.0], [51.6, 34384.0], [51.7, 34391.0], [51.8, 34391.0], [51.9, 34400.0], [52.0, 34400.0], [52.1, 34400.0], [52.2, 34406.0], [52.3, 34406.0], [52.4, 34406.0], [52.5, 34423.0], [52.6, 34423.0], [52.7, 34423.0], [52.8, 34424.0], [52.9, 34424.0], [53.0, 34431.0], [53.1, 34431.0], [53.2, 34431.0], [53.3, 34445.0], [53.4, 34445.0], [53.5, 34445.0], [53.6, 34488.0], [53.7, 34488.0], [53.8, 34508.0], [53.9, 34508.0], [54.0, 34508.0], [54.1, 34524.0], [54.2, 34524.0], [54.3, 34524.0], [54.4, 34526.0], [54.5, 34526.0], [54.6, 34549.0], [54.7, 34549.0], [54.8, 34549.0], [54.9, 34598.0], [55.0, 34598.0], [55.1, 34598.0], [55.2, 34616.0], [55.3, 34616.0], [55.4, 34616.0], [55.5, 34639.0], [55.6, 34639.0], [55.7, 34643.0], [55.8, 34643.0], [55.9, 34643.0], [56.0, 34649.0], [56.1, 34649.0], [56.2, 34649.0], [56.3, 34652.0], [56.4, 34652.0], [56.5, 34652.0], [56.6, 34652.0], [56.7, 34652.0], [56.8, 34697.0], [56.9, 34697.0], [57.0, 34697.0], [57.1, 34709.0], [57.2, 34709.0], [57.3, 34717.0], [57.4, 34717.0], [57.5, 34717.0], [57.6, 34724.0], [57.7, 34724.0], [57.8, 34724.0], [57.9, 34726.0], [58.0, 34726.0], [58.1, 34726.0], [58.2, 34741.0], [58.3, 34741.0], [58.4, 34748.0], [58.5, 34748.0], [58.6, 34748.0], [58.7, 34748.0], [58.8, 34748.0], [58.9, 34748.0], [59.0, 34801.0], [59.1, 34801.0], [59.2, 34812.0], [59.3, 34812.0], [59.4, 34812.0], [59.5, 34859.0], [59.6, 34859.0], [59.7, 34859.0], [59.8, 34944.0], [59.9, 34944.0], [60.0, 34944.0], [60.1, 34963.0], [60.2, 34963.0], [60.3, 34980.0], [60.4, 34980.0], [60.5, 34980.0], [60.6, 34993.0], [60.7, 34993.0], [60.8, 34993.0], [60.9, 34998.0], [61.0, 34998.0], [61.1, 35011.0], [61.2, 35011.0], [61.3, 35011.0], [61.4, 35019.0], [61.5, 35019.0], [61.6, 35019.0], [61.7, 35040.0], [61.8, 35040.0], [61.9, 35046.0], [62.0, 35046.0], [62.1, 35046.0], [62.2, 35047.0], [62.3, 35047.0], [62.4, 35047.0], [62.5, 35050.0], [62.6, 35050.0], [62.7, 35050.0], [62.8, 35063.0], [62.9, 35063.0], [63.0, 35065.0], [63.1, 35065.0], [63.2, 35065.0], [63.3, 35116.0], [63.4, 35116.0], [63.5, 35116.0], [63.6, 35135.0], [63.7, 35135.0], [63.8, 35140.0], [63.9, 35140.0], [64.0, 35140.0], [64.1, 35145.0], [64.2, 35145.0], [64.3, 35145.0], [64.4, 35145.0], [64.5, 35145.0], [64.6, 35147.0], [64.7, 35147.0], [64.8, 35147.0], [64.9, 35148.0], [65.0, 35148.0], [65.1, 35148.0], [65.2, 35149.0], [65.3, 35149.0], [65.4, 35149.0], [65.5, 35155.0], [65.6, 35155.0], [65.7, 35173.0], [65.8, 35173.0], [65.9, 35173.0], [66.0, 35194.0], [66.1, 35194.0], [66.2, 35194.0], [66.3, 35205.0], [66.4, 35205.0], [66.5, 35232.0], [66.6, 35232.0], [66.7, 35232.0], [66.8, 35239.0], [66.9, 35239.0], [67.0, 35239.0], [67.1, 35244.0], [67.2, 35244.0], [67.3, 35249.0], [67.4, 35249.0], [67.5, 35249.0], [67.6, 35254.0], [67.7, 35254.0], [67.8, 35254.0], [67.9, 35260.0], [68.0, 35260.0], [68.1, 35260.0], [68.2, 35263.0], [68.3, 35263.0], [68.4, 35270.0], [68.5, 35270.0], [68.6, 35270.0], [68.7, 35275.0], [68.8, 35275.0], [68.9, 35275.0], [69.0, 35320.0], [69.1, 35320.0], [69.2, 35329.0], [69.3, 35329.0], [69.4, 35329.0], [69.5, 35339.0], [69.6, 35339.0], [69.7, 35339.0], [69.8, 35355.0], [69.9, 35355.0], [70.0, 35355.0], [70.1, 35392.0], [70.2, 35392.0], [70.3, 35392.0], [70.4, 35392.0], [70.5, 35392.0], [70.6, 35393.0], [70.7, 35393.0], [70.8, 35393.0], [70.9, 35402.0], [71.0, 35402.0], [71.1, 35404.0], [71.2, 35404.0], [71.3, 35404.0], [71.4, 35434.0], [71.5, 35434.0], [71.6, 35434.0], [71.7, 35436.0], [71.8, 35436.0], [71.9, 35444.0], [72.0, 35444.0], [72.1, 35444.0], [72.2, 35455.0], [72.3, 35455.0], [72.4, 35455.0], [72.5, 35456.0], [72.6, 35456.0], [72.7, 35456.0], [72.8, 35458.0], [72.9, 35458.0], [73.0, 35459.0], [73.1, 35459.0], [73.2, 35459.0], [73.3, 35473.0], [73.4, 35473.0], [73.5, 35473.0], [73.6, 35542.0], [73.7, 35542.0], [73.8, 35560.0], [73.9, 35560.0], [74.0, 35560.0], [74.1, 35565.0], [74.2, 35565.0], [74.3, 35565.0], [74.4, 35566.0], [74.5, 35566.0], [74.6, 35573.0], [74.7, 35573.0], [74.8, 35573.0], [74.9, 35578.0], [75.0, 35578.0], [75.1, 35578.0], [75.2, 35600.0], [75.3, 35600.0], [75.4, 35600.0], [75.5, 35647.0], [75.6, 35647.0], [75.7, 35652.0], [75.8, 35652.0], [75.9, 35652.0], [76.0, 35659.0], [76.1, 35659.0], [76.2, 35659.0], [76.3, 35671.0], [76.4, 35671.0], [76.5, 35676.0], [76.6, 35676.0], [76.7, 35676.0], [76.8, 35683.0], [76.9, 35683.0], [77.0, 35683.0], [77.1, 35708.0], [77.2, 35708.0], [77.3, 35760.0], [77.4, 35760.0], [77.5, 35760.0], [77.6, 35762.0], [77.7, 35762.0], [77.8, 35762.0], [77.9, 35803.0], [78.0, 35803.0], [78.1, 35803.0], [78.2, 35804.0], [78.3, 35804.0], [78.4, 35810.0], [78.5, 35810.0], [78.6, 35810.0], [78.7, 35815.0], [78.8, 35815.0], [78.9, 35815.0], [79.0, 35837.0], [79.1, 35837.0], [79.2, 35853.0], [79.3, 35853.0], [79.4, 35853.0], [79.5, 35854.0], [79.6, 35854.0], [79.7, 35854.0], [79.8, 35882.0], [79.9, 35882.0], [80.0, 35882.0], [80.1, 35891.0], [80.2, 35891.0], [80.3, 35934.0], [80.4, 35934.0], [80.5, 35934.0], [80.6, 35976.0], [80.7, 35976.0], [80.8, 35976.0], [80.9, 35977.0], [81.0, 35977.0], [81.1, 35984.0], [81.2, 35984.0], [81.3, 35984.0], [81.4, 36001.0], [81.5, 36001.0], [81.6, 36001.0], [81.7, 36028.0], [81.8, 36028.0], [81.9, 36058.0], [82.0, 36058.0], [82.1, 36058.0], [82.2, 36086.0], [82.3, 36086.0], [82.4, 36086.0], [82.5, 36101.0], [82.6, 36101.0], [82.7, 36101.0], [82.8, 36105.0], [82.9, 36105.0], [83.0, 36108.0], [83.1, 36108.0], [83.2, 36108.0], [83.3, 36122.0], [83.4, 36122.0], [83.5, 36122.0], [83.6, 36147.0], [83.7, 36147.0], [83.8, 36162.0], [83.9, 36162.0], [84.0, 36162.0], [84.1, 36165.0], [84.2, 36165.0], [84.3, 36165.0], [84.4, 36168.0], [84.5, 36168.0], [84.6, 36176.0], [84.7, 36176.0], [84.8, 36176.0], [84.9, 36206.0], [85.0, 36206.0], [85.1, 36206.0], [85.2, 36208.0], [85.3, 36208.0], [85.4, 36208.0], [85.5, 36234.0], [85.6, 36234.0], [85.7, 36241.0], [85.8, 36241.0], [85.9, 36241.0], [86.0, 36282.0], [86.1, 36282.0], [86.2, 36282.0], [86.3, 36308.0], [86.4, 36308.0], [86.5, 36312.0], [86.6, 36312.0], [86.7, 36312.0], [86.8, 36321.0], [86.9, 36321.0], [87.0, 36321.0], [87.1, 36365.0], [87.2, 36365.0], [87.3, 36367.0], [87.4, 36367.0], [87.5, 36367.0], [87.6, 36369.0], [87.7, 36369.0], [87.8, 36369.0], [87.9, 36378.0], [88.0, 36378.0], [88.1, 36378.0], [88.2, 36386.0], [88.3, 36386.0], [88.4, 36391.0], [88.5, 36391.0], [88.6, 36391.0], [88.7, 36406.0], [88.8, 36406.0], [88.9, 36406.0], [89.0, 36496.0], [89.1, 36496.0], [89.2, 36507.0], [89.3, 36507.0], [89.4, 36507.0], [89.5, 36513.0], [89.6, 36513.0], [89.7, 36513.0], [89.8, 36559.0], [89.9, 36559.0], [90.0, 36559.0], [90.1, 36569.0], [90.2, 36569.0], [90.3, 36587.0], [90.4, 36587.0], [90.5, 36587.0], [90.6, 36592.0], [90.7, 36592.0], [90.8, 36592.0], [90.9, 36606.0], [91.0, 36606.0], [91.1, 36664.0], [91.2, 36664.0], [91.3, 36664.0], [91.4, 36688.0], [91.5, 36688.0], [91.6, 36688.0], [91.7, 36688.0], [91.8, 36688.0], [91.9, 36701.0], [92.0, 36701.0], [92.1, 36701.0], [92.2, 36777.0], [92.3, 36777.0], [92.4, 36777.0], [92.5, 36798.0], [92.6, 36798.0], [92.7, 36798.0], [92.8, 36808.0], [92.9, 36808.0], [93.0, 36832.0], [93.1, 36832.0], [93.2, 36832.0], [93.3, 36859.0], [93.4, 36859.0], [93.5, 36859.0], [93.6, 36887.0], [93.7, 36887.0], [93.8, 36892.0], [93.9, 36892.0], [94.0, 36892.0], [94.1, 36923.0], [94.2, 36923.0], [94.3, 36923.0], [94.4, 36993.0], [94.5, 36993.0], [94.6, 36994.0], [94.7, 36994.0], [94.8, 36994.0], [94.9, 37056.0], [95.0, 37056.0], [95.1, 37056.0], [95.2, 37065.0], [95.3, 37065.0], [95.4, 37065.0], [95.5, 37094.0], [95.6, 37094.0], [95.7, 37095.0], [95.8, 37095.0], [95.9, 37095.0], [96.0, 37105.0], [96.1, 37105.0], [96.2, 37105.0], [96.3, 37121.0], [96.4, 37121.0], [96.5, 37183.0], [96.6, 37183.0], [96.7, 37183.0], [96.8, 37227.0], [96.9, 37227.0], [97.0, 37227.0], [97.1, 37260.0], [97.2, 37260.0], [97.3, 37293.0], [97.4, 37293.0], [97.5, 37293.0], [97.6, 37307.0], [97.7, 37307.0], [97.8, 37307.0], [97.9, 37410.0], [98.0, 37410.0], [98.1, 37410.0], [98.2, 37471.0], [98.3, 37471.0], [98.4, 37526.0], [98.5, 37526.0], [98.6, 37526.0], [98.7, 37738.0], [98.8, 37738.0], [98.9, 37738.0], [99.0, 38012.0], [99.1, 38012.0], [99.2, 38319.0], [99.3, 38319.0], [99.4, 38319.0], [99.5, 38364.0], [99.6, 38364.0], [99.7, 38364.0], [99.8, 38495.0], [99.9, 38495.0], [100.0, 38495.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 81.0], [6.2, 81.0], [6.3, 88.0], [6.4, 88.0], [6.5, 88.0], [6.6, 89.0], [6.7, 89.0], [6.8, 94.0], [6.9, 94.0], [7.0, 94.0], [7.1, 96.0], [7.2, 96.0], [7.3, 97.0], [7.4, 97.0], [7.5, 97.0], [7.6, 103.0], [7.7, 103.0], [7.8, 110.0], [7.9, 110.0], [8.0, 110.0], [8.1, 111.0], [8.2, 111.0], [8.3, 113.0], [8.4, 113.0], [8.5, 113.0], [8.6, 114.0], [8.7, 114.0], [8.8, 119.0], [8.9, 119.0], [9.0, 119.0], [9.1, 120.0], [9.2, 120.0], [9.3, 123.0], [9.4, 123.0], [9.5, 123.0], [9.6, 128.0], [9.7, 128.0], [9.8, 136.0], [9.9, 136.0], [10.0, 136.0], [10.1, 137.0], [10.2, 137.0], [10.3, 137.0], [10.4, 141.0], [10.5, 141.0], [10.6, 141.0], [10.7, 141.0], [10.8, 141.0], [10.9, 157.0], [11.0, 157.0], [11.1, 158.0], [11.2, 158.0], [11.3, 158.0], [11.4, 160.0], [11.5, 160.0], [11.6, 161.0], [11.7, 161.0], [11.8, 161.0], [11.9, 165.0], [12.0, 165.0], [12.1, 165.0], [12.2, 165.0], [12.3, 165.0], [12.4, 171.0], [12.5, 171.0], [12.6, 171.0], [12.7, 171.0], [12.8, 171.0], [12.9, 173.0], [13.0, 173.0], [13.1, 184.0], [13.2, 184.0], [13.3, 184.0], [13.4, 187.0], [13.5, 187.0], [13.6, 190.0], [13.7, 190.0], [13.8, 190.0], [13.9, 192.0], [14.0, 192.0], [14.1, 192.0], [14.2, 192.0], [14.3, 192.0], [14.4, 193.0], [14.5, 193.0], [14.6, 193.0], [14.7, 193.0], [14.8, 193.0], [14.9, 197.0], [15.0, 197.0], [15.1, 198.0], [15.2, 198.0], [15.3, 198.0], [15.4, 200.0], [15.5, 200.0], [15.6, 204.0], [15.7, 204.0], [15.8, 204.0], [15.9, 207.0], [16.0, 207.0], [16.1, 208.0], [16.2, 208.0], [16.3, 208.0], [16.4, 208.0], [16.5, 208.0], [16.6, 209.0], [16.7, 209.0], [16.8, 209.0], [16.9, 209.0], [17.0, 209.0], [17.1, 210.0], [17.2, 210.0], [17.3, 210.0], [17.4, 213.0], [17.5, 213.0], [17.6, 213.0], [17.7, 213.0], [17.8, 213.0], [17.9, 215.0], [18.0, 215.0], [18.1, 215.0], [18.2, 215.0], [18.3, 215.0], [18.4, 215.0], [18.5, 215.0], [18.6, 218.0], [18.7, 218.0], [18.8, 218.0], [18.9, 218.0], [19.0, 218.0], [19.1, 219.0], [19.2, 219.0], [19.3, 219.0], [19.4, 221.0], [19.5, 221.0], [19.6, 221.0], [19.7, 221.0], [19.8, 221.0], [19.9, 222.0], [20.0, 222.0], [20.1, 222.0], [20.2, 222.0], [20.3, 222.0], [20.4, 224.0], [20.5, 224.0], [20.6, 224.0], [20.7, 225.0], [20.8, 225.0], [20.9, 226.0], [21.0, 226.0], [21.1, 226.0], [21.2, 226.0], [21.3, 226.0], [21.4, 227.0], [21.5, 227.0], [21.6, 227.0], [21.7, 227.0], [21.8, 227.0], [21.9, 227.0], [22.0, 227.0], [22.1, 227.0], [22.2, 228.0], [22.3, 228.0], [22.4, 229.0], [22.5, 229.0], [22.6, 229.0], [22.7, 230.0], [22.8, 230.0], [22.9, 230.0], [23.0, 230.0], [23.1, 230.0], [23.2, 230.0], [23.3, 230.0], [23.4, 232.0], [23.5, 232.0], [23.6, 232.0], [23.7, 232.0], [23.8, 232.0], [23.9, 233.0], [24.0, 233.0], [24.1, 233.0], [24.2, 234.0], [24.3, 234.0], [24.4, 234.0], [24.5, 234.0], [24.6, 234.0], [24.7, 235.0], [24.8, 235.0], [24.9, 235.0], [25.0, 235.0], [25.1, 235.0], [25.2, 235.0], [25.3, 235.0], [25.4, 236.0], [25.5, 236.0], [25.6, 236.0], [25.7, 237.0], [25.8, 237.0], [25.9, 237.0], [26.0, 237.0], [26.1, 237.0], [26.2, 237.0], [26.3, 237.0], [26.4, 237.0], [26.5, 237.0], [26.6, 237.0], [26.7, 238.0], [26.8, 238.0], [26.9, 239.0], [27.0, 239.0], [27.1, 239.0], [27.2, 239.0], [27.3, 239.0], [27.4, 239.0], [27.5, 239.0], [27.6, 239.0], [27.7, 240.0], [27.8, 240.0], [27.9, 240.0], [28.0, 240.0], [28.1, 240.0], [28.2, 241.0], [28.3, 241.0], [28.4, 241.0], [28.5, 241.0], [28.6, 241.0], [28.7, 242.0], [28.8, 242.0], [28.9, 243.0], [29.0, 243.0], [29.1, 243.0], [29.2, 244.0], [29.3, 244.0], [29.4, 244.0], [29.5, 244.0], [29.6, 244.0], [29.7, 245.0], [29.8, 245.0], [29.9, 246.0], [30.0, 246.0], [30.1, 246.0], [30.2, 246.0], [30.3, 246.0], [30.4, 246.0], [30.5, 246.0], [30.6, 246.0], [30.7, 247.0], [30.8, 247.0], [30.9, 247.0], [31.0, 247.0], [31.1, 247.0], [31.2, 248.0], [31.3, 248.0], [31.4, 248.0], [31.5, 249.0], [31.6, 249.0], [31.7, 251.0], [31.8, 251.0], [31.9, 251.0], [32.0, 252.0], [32.1, 252.0], [32.2, 258.0], [32.3, 258.0], [32.4, 258.0], [32.5, 259.0], [32.6, 259.0], [32.7, 259.0], [32.8, 259.0], [32.9, 259.0], [33.0, 262.0], [33.1, 262.0], [33.2, 262.0], [33.3, 262.0], [33.4, 262.0], [33.5, 263.0], [33.6, 263.0], [33.7, 267.0], [33.8, 267.0], [33.9, 267.0], [34.0, 268.0], [34.1, 268.0], [34.2, 274.0], [34.3, 274.0], [34.4, 274.0], [34.5, 275.0], [34.6, 275.0], [34.7, 278.0], [34.8, 278.0], [34.9, 278.0], [35.0, 278.0], [35.1, 278.0], [35.2, 278.0], [35.3, 278.0], [35.4, 278.0], [35.5, 280.0], [35.6, 280.0], [35.7, 281.0], [35.8, 281.0], [35.9, 281.0], [36.0, 282.0], [36.1, 282.0], [36.2, 284.0], [36.3, 284.0], [36.4, 284.0], [36.5, 286.0], [36.6, 286.0], [36.7, 289.0], [36.8, 289.0], [36.9, 289.0], [37.0, 290.0], [37.1, 290.0], [37.2, 292.0], [37.3, 292.0], [37.4, 292.0], [37.5, 293.0], [37.6, 293.0], [37.7, 294.0], [37.8, 294.0], [37.9, 294.0], [38.0, 295.0], [38.1, 295.0], [38.2, 295.0], [38.3, 295.0], [38.4, 295.0], [38.5, 296.0], [38.6, 296.0], [38.7, 297.0], [38.8, 297.0], [38.9, 297.0], [39.0, 297.0], [39.1, 297.0], [39.2, 297.0], [39.3, 297.0], [39.4, 297.0], [39.5, 297.0], [39.6, 297.0], [39.7, 300.0], [39.8, 300.0], [39.9, 300.0], [40.0, 301.0], [40.1, 301.0], [40.2, 301.0], [40.3, 301.0], [40.4, 301.0], [40.5, 302.0], [40.6, 302.0], [40.7, 302.0], [40.8, 306.0], [40.9, 306.0], [41.0, 306.0], [41.1, 306.0], [41.2, 306.0], [41.3, 307.0], [41.4, 307.0], [41.5, 307.0], [41.6, 307.0], [41.7, 307.0], [41.8, 308.0], [41.9, 308.0], [42.0, 309.0], [42.1, 309.0], [42.2, 309.0], [42.3, 310.0], [42.4, 310.0], [42.5, 310.0], [42.6, 310.0], [42.7, 310.0], [42.8, 314.0], [42.9, 314.0], [43.0, 314.0], [43.1, 314.0], [43.2, 314.0], [43.3, 316.0], [43.4, 316.0], [43.5, 316.0], [43.6, 316.0], [43.7, 316.0], [43.8, 317.0], [43.9, 317.0], [44.0, 317.0], [44.1, 317.0], [44.2, 317.0], [44.3, 318.0], [44.4, 318.0], [44.5, 319.0], [44.6, 319.0], [44.7, 319.0], [44.8, 319.0], [44.9, 319.0], [45.0, 321.0], [45.1, 321.0], [45.2, 321.0], [45.3, 321.0], [45.4, 321.0], [45.5, 321.0], [45.6, 321.0], [45.7, 321.0], [45.8, 321.0], [45.9, 321.0], [46.0, 322.0], [46.1, 322.0], [46.2, 322.0], [46.3, 322.0], [46.4, 322.0], [46.5, 323.0], [46.6, 323.0], [46.7, 323.0], [46.8, 323.0], [46.9, 323.0], [47.0, 324.0], [47.1, 324.0], [47.2, 324.0], [47.3, 324.0], [47.4, 324.0], [47.5, 325.0], [47.6, 325.0], [47.7, 325.0], [47.8, 325.0], [47.9, 325.0], [48.0, 325.0], [48.1, 325.0], [48.2, 325.0], [48.3, 326.0], [48.4, 326.0], [48.5, 326.0], [48.6, 326.0], [48.7, 326.0], [48.8, 326.0], [48.9, 326.0], [49.0, 326.0], [49.1, 326.0], [49.2, 326.0], [49.3, 326.0], [49.4, 326.0], [49.5, 327.0], [49.6, 327.0], [49.7, 327.0], [49.8, 327.0], [49.9, 327.0], [50.0, 327.0], [50.1, 327.0], [50.2, 327.0], [50.3, 328.0], [50.4, 328.0], [50.5, 328.0], [50.6, 328.0], [50.7, 328.0], [50.8, 329.0], [50.9, 329.0], [51.0, 329.0], [51.1, 331.0], [51.2, 331.0], [51.3, 331.0], [51.4, 331.0], [51.5, 331.0], [51.6, 332.0], [51.7, 332.0], [51.8, 332.0], [51.9, 332.0], [52.0, 332.0], [52.1, 332.0], [52.2, 332.0], [52.3, 333.0], [52.4, 333.0], [52.5, 333.0], [52.6, 333.0], [52.7, 333.0], [52.8, 333.0], [52.9, 333.0], [53.0, 333.0], [53.1, 333.0], [53.2, 333.0], [53.3, 333.0], [53.4, 333.0], [53.5, 333.0], [53.6, 334.0], [53.7, 334.0], [53.8, 334.0], [53.9, 334.0], [54.0, 334.0], [54.1, 334.0], [54.2, 334.0], [54.3, 335.0], [54.4, 335.0], [54.5, 335.0], [54.6, 335.0], [54.7, 335.0], [54.8, 336.0], [54.9, 336.0], [55.0, 336.0], [55.1, 336.0], [55.2, 336.0], [55.3, 337.0], [55.4, 337.0], [55.5, 337.0], [55.6, 337.0], [55.7, 337.0], [55.8, 337.0], [55.9, 337.0], [56.0, 337.0], [56.1, 337.0], [56.2, 337.0], [56.3, 337.0], [56.4, 337.0], [56.5, 337.0], [56.6, 338.0], [56.7, 338.0], [56.8, 338.0], [56.9, 338.0], [57.0, 338.0], [57.1, 339.0], [57.2, 339.0], [57.3, 340.0], [57.4, 340.0], [57.5, 340.0], [57.6, 340.0], [57.7, 340.0], [57.8, 340.0], [57.9, 340.0], [58.0, 340.0], [58.1, 341.0], [58.2, 341.0], [58.3, 341.0], [58.4, 341.0], [58.5, 341.0], [58.6, 342.0], [58.7, 342.0], [58.8, 342.0], [58.9, 342.0], [59.0, 342.0], [59.1, 342.0], [59.2, 342.0], [59.3, 342.0], [59.4, 342.0], [59.5, 342.0], [59.6, 342.0], [59.7, 342.0], [59.8, 343.0], [59.9, 343.0], [60.0, 343.0], [60.1, 344.0], [60.2, 344.0], [60.3, 344.0], [60.4, 344.0], [60.5, 344.0], [60.6, 344.0], [60.7, 344.0], [60.8, 344.0], [60.9, 345.0], [61.0, 345.0], [61.1, 345.0], [61.2, 345.0], [61.3, 345.0], [61.4, 346.0], [61.5, 346.0], [61.6, 347.0], [61.7, 347.0], [61.8, 347.0], [61.9, 347.0], [62.0, 347.0], [62.1, 347.0], [62.2, 347.0], [62.3, 347.0], [62.4, 348.0], [62.5, 348.0], [62.6, 349.0], [62.7, 349.0], [62.8, 349.0], [62.9, 350.0], [63.0, 350.0], [63.1, 350.0], [63.2, 350.0], [63.3, 350.0], [63.4, 351.0], [63.5, 351.0], [63.6, 351.0], [63.7, 351.0], [63.8, 351.0], [63.9, 351.0], [64.0, 351.0], [64.1, 353.0], [64.2, 353.0], [64.3, 353.0], [64.4, 353.0], [64.5, 353.0], [64.6, 353.0], [64.7, 353.0], [64.8, 353.0], [64.9, 354.0], [65.0, 354.0], [65.1, 355.0], [65.2, 355.0], [65.3, 355.0], [65.4, 355.0], [65.5, 355.0], [65.6, 355.0], [65.7, 355.0], [65.8, 355.0], [65.9, 356.0], [66.0, 356.0], [66.1, 359.0], [66.2, 359.0], [66.3, 359.0], [66.4, 362.0], [66.5, 362.0], [66.6, 362.0], [66.7, 362.0], [66.8, 362.0], [66.9, 363.0], [67.0, 363.0], [67.1, 364.0], [67.2, 364.0], [67.3, 364.0], [67.4, 365.0], [67.5, 365.0], [67.6, 365.0], [67.7, 365.0], [67.8, 365.0], [67.9, 366.0], [68.0, 366.0], [68.1, 367.0], [68.2, 367.0], [68.3, 367.0], [68.4, 368.0], [68.5, 368.0], [68.6, 368.0], [68.7, 368.0], [68.8, 368.0], [68.9, 369.0], [69.0, 369.0], [69.1, 371.0], [69.2, 371.0], [69.3, 371.0], [69.4, 371.0], [69.5, 371.0], [69.6, 373.0], [69.7, 373.0], [69.8, 373.0], [69.9, 373.0], [70.0, 373.0], [70.1, 373.0], [70.2, 374.0], [70.3, 374.0], [70.4, 375.0], [70.5, 375.0], [70.6, 375.0], [70.7, 378.0], [70.8, 378.0], [70.9, 380.0], [71.0, 380.0], [71.1, 380.0], [71.2, 384.0], [71.3, 384.0], [71.4, 386.0], [71.5, 386.0], [71.6, 386.0], [71.7, 387.0], [71.8, 387.0], [71.9, 387.0], [72.0, 387.0], [72.1, 387.0], [72.2, 388.0], [72.3, 388.0], [72.4, 391.0], [72.5, 391.0], [72.6, 391.0], [72.7, 391.0], [72.8, 391.0], [72.9, 394.0], [73.0, 394.0], [73.1, 394.0], [73.2, 395.0], [73.3, 395.0], [73.4, 397.0], [73.5, 397.0], [73.6, 397.0], [73.7, 397.0], [73.8, 397.0], [73.9, 400.0], [74.0, 400.0], [74.1, 400.0], [74.2, 401.0], [74.3, 401.0], [74.4, 402.0], [74.5, 402.0], [74.6, 402.0], [74.7, 403.0], [74.8, 403.0], [74.9, 409.0], [75.0, 409.0], [75.1, 409.0], [75.2, 411.0], [75.3, 411.0], [75.4, 412.0], [75.5, 412.0], [75.6, 412.0], [75.7, 412.0], [75.8, 412.0], [75.9, 416.0], [76.0, 416.0], [76.1, 416.0], [76.2, 417.0], [76.3, 417.0], [76.4, 418.0], [76.5, 418.0], [76.6, 418.0], [76.7, 418.0], [76.8, 418.0], [76.9, 419.0], [77.0, 419.0], [77.1, 419.0], [77.2, 419.0], [77.3, 419.0], [77.4, 421.0], [77.5, 421.0], [77.6, 421.0], [77.7, 422.0], [77.8, 422.0], [77.9, 424.0], [78.0, 424.0], [78.1, 424.0], [78.2, 426.0], [78.3, 426.0], [78.4, 426.0], [78.5, 426.0], [78.6, 426.0], [78.7, 429.0], [78.8, 429.0], [78.9, 430.0], [79.0, 430.0], [79.1, 430.0], [79.2, 431.0], [79.3, 431.0], [79.4, 431.0], [79.5, 431.0], [79.6, 431.0], [79.7, 434.0], [79.8, 434.0], [79.9, 435.0], [80.0, 435.0], [80.1, 435.0], [80.2, 436.0], [80.3, 436.0], [80.4, 436.0], [80.5, 437.0], [80.6, 437.0], [80.7, 440.0], [80.8, 440.0], [80.9, 440.0], [81.0, 440.0], [81.1, 440.0], [81.2, 440.0], [81.3, 440.0], [81.4, 440.0], [81.5, 443.0], [81.6, 443.0], [81.7, 444.0], [81.8, 444.0], [81.9, 444.0], [82.0, 446.0], [82.1, 446.0], [82.2, 454.0], [82.3, 454.0], [82.4, 454.0], [82.5, 455.0], [82.6, 455.0], [82.7, 458.0], [82.8, 458.0], [82.9, 458.0], [83.0, 459.0], [83.1, 459.0], [83.2, 475.0], [83.3, 475.0], [83.4, 475.0], [83.5, 476.0], [83.6, 476.0], [83.7, 494.0], [83.8, 494.0], [83.9, 494.0], [84.0, 512.0], [84.1, 512.0], [84.2, 515.0], [84.3, 515.0], [84.4, 515.0], [84.5, 517.0], [84.6, 517.0], [84.7, 530.0], [84.8, 530.0], [84.9, 530.0], [85.0, 532.0], [85.1, 532.0], [85.2, 534.0], [85.3, 534.0], [85.4, 534.0], [85.5, 541.0], [85.6, 541.0], [85.7, 541.0], [85.8, 541.0], [85.9, 541.0], [86.0, 545.0], [86.1, 545.0], [86.2, 547.0], [86.3, 547.0], [86.4, 547.0], [86.5, 553.0], [86.6, 553.0], [86.7, 558.0], [86.8, 558.0], [86.9, 558.0], [87.0, 564.0], [87.1, 564.0], [87.2, 569.0], [87.3, 569.0], [87.4, 569.0], [87.5, 608.0], [87.6, 608.0], [87.7, 621.0], [87.8, 621.0], [87.9, 621.0], [88.0, 625.0], [88.1, 625.0], [88.2, 630.0], [88.3, 630.0], [88.4, 630.0], [88.5, 635.0], [88.6, 635.0], [88.7, 646.0], [88.8, 646.0], [88.9, 646.0], [89.0, 646.0], [89.1, 646.0], [89.2, 649.0], [89.3, 649.0], [89.4, 649.0], [89.5, 651.0], [89.6, 651.0], [89.7, 652.0], [89.8, 652.0], [89.9, 652.0], [90.0, 653.0], [90.1, 653.0], [90.2, 653.0], [90.3, 678.0], [90.4, 678.0], [90.5, 729.0], [90.6, 729.0], [90.7, 729.0], [90.8, 732.0], [90.9, 732.0], [91.0, 750.0], [91.1, 750.0], [91.2, 750.0], [91.3, 751.0], [91.4, 751.0], [91.5, 754.0], [91.6, 754.0], [91.7, 754.0], [91.8, 786.0], [91.9, 786.0], [92.0, 800.0], [92.1, 800.0], [92.2, 800.0], [92.3, 810.0], [92.4, 810.0], [92.5, 826.0], [92.6, 826.0], [92.7, 826.0], [92.8, 826.0], [92.9, 826.0], [93.0, 843.0], [93.1, 843.0], [93.2, 843.0], [93.3, 846.0], [93.4, 846.0], [93.5, 846.0], [93.6, 846.0], [93.7, 846.0], [93.8, 856.0], [93.9, 856.0], [94.0, 930.0], [94.1, 930.0], [94.2, 930.0], [94.3, 965.0], [94.4, 965.0], [94.5, 1017.0], [94.6, 1017.0], [94.7, 1017.0], [94.8, 1148.0], [94.9, 1148.0], [95.0, 1536.0], [95.1, 1536.0], [95.2, 1536.0], [95.3, 2505.0], [95.4, 2505.0], [95.5, 2598.0], [95.6, 2598.0], [95.7, 2598.0], [95.8, 2739.0], [95.9, 2739.0], [96.0, 2806.0], [96.1, 2806.0], [96.2, 2806.0], [96.3, 2855.0], [96.4, 2855.0], [96.5, 2879.0], [96.6, 2879.0], [96.7, 2879.0], [96.8, 2896.0], [96.9, 2896.0], [97.0, 2911.0], [97.1, 2911.0], [97.2, 2911.0], [97.3, 3160.0], [97.4, 3160.0], [97.5, 5409.0], [97.6, 5409.0], [97.7, 5409.0], [97.8, 5888.0], [97.9, 5888.0], [98.0, 6042.0], [98.1, 6042.0], [98.2, 6042.0], [98.3, 6073.0], [98.4, 6073.0], [98.5, 6377.0], [98.6, 6377.0], [98.7, 6377.0], [98.8, 6452.0], [98.9, 6452.0], [99.0, 6495.0], [99.1, 6495.0], [99.2, 6495.0], [99.3, 7075.0], [99.4, 7075.0], [99.5, 7089.0], [99.6, 7089.0], [99.7, 7089.0], [99.8, 7293.0], [99.9, 7293.0], [100.0, 7293.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 136.0, "series": [{"data": [[1200.0, 1.0], [3600.0, 1.0], [3700.0, 1.0], [4500.0, 1.0], [4700.0, 2.0], [4800.0, 1.0], [4900.0, 3.0], [5000.0, 1.0], [5300.0, 4.0], [5200.0, 4.0], [5400.0, 4.0], [5500.0, 6.0], [5600.0, 7.0], [5800.0, 9.0], [5700.0, 13.0], [5900.0, 18.0], [6100.0, 15.0], [6000.0, 12.0], [6300.0, 26.0], [6200.0, 13.0], [6600.0, 27.0], [6500.0, 19.0], [6400.0, 28.0], [6700.0, 30.0], [6900.0, 25.0], [6800.0, 22.0], [7100.0, 22.0], [7000.0, 15.0], [7200.0, 14.0], [7300.0, 15.0], [7400.0, 11.0], [7500.0, 11.0], [7600.0, 5.0], [7700.0, 3.0], [7800.0, 1.0], [7900.0, 1.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[600.0, 8.0], [700.0, 5.0], [800.0, 8.0], [900.0, 8.0], [1000.0, 8.0], [1100.0, 5.0], [1200.0, 5.0], [1300.0, 3.0], [1400.0, 6.0], [1500.0, 5.0], [100.0, 4.0], [1600.0, 3.0], [1700.0, 10.0], [1800.0, 4.0], [1900.0, 6.0], [2000.0, 9.0], [2100.0, 13.0], [2300.0, 13.0], [2200.0, 14.0], [2400.0, 31.0], [2500.0, 48.0], [2600.0, 36.0], [2800.0, 33.0], [2700.0, 32.0], [2900.0, 19.0], [3000.0, 9.0], [3100.0, 6.0], [200.0, 5.0], [3200.0, 2.0], [3300.0, 1.0], [3400.0, 2.0], [4000.0, 1.0], [300.0, 12.0], [4700.0, 1.0], [400.0, 9.0], [500.0, 13.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[12800.0, 1.0], [16100.0, 1.0], [24400.0, 1.0], [26500.0, 1.0], [27400.0, 1.0], [27100.0, 1.0], [28500.0, 1.0], [28300.0, 1.0], [27800.0, 1.0], [28600.0, 1.0], [28800.0, 1.0], [28700.0, 1.0], [29800.0, 3.0], [29900.0, 1.0], [29700.0, 1.0], [30100.0, 2.0], [30600.0, 2.0], [30400.0, 1.0], [30300.0, 4.0], [30700.0, 1.0], [30900.0, 4.0], [31600.0, 3.0], [30800.0, 5.0], [31100.0, 1.0], [31500.0, 2.0], [31400.0, 1.0], [31300.0, 1.0], [31200.0, 1.0], [31000.0, 1.0], [31900.0, 4.0], [32300.0, 4.0], [32600.0, 6.0], [32400.0, 4.0], [31800.0, 2.0], [32200.0, 3.0], [32000.0, 6.0], [32500.0, 2.0], [32100.0, 4.0], [32700.0, 3.0], [33000.0, 9.0], [34000.0, 7.0], [34800.0, 3.0], [33800.0, 4.0], [33900.0, 5.0], [33600.0, 6.0], [33200.0, 12.0], [33100.0, 8.0], [33500.0, 9.0], [33400.0, 3.0], [33300.0, 5.0], [34700.0, 7.0], [34400.0, 7.0], [34500.0, 5.0], [34600.0, 7.0], [34100.0, 10.0], [34300.0, 10.0], [34200.0, 7.0], [33700.0, 5.0], [32900.0, 5.0], [32800.0, 3.0], [35200.0, 10.0], [34900.0, 5.0], [35400.0, 10.0], [35600.0, 7.0], [35500.0, 6.0], [35700.0, 3.0], [35800.0, 9.0], [35100.0, 11.0], [35000.0, 8.0], [36600.0, 4.0], [36700.0, 3.0], [36100.0, 9.0], [35900.0, 4.0], [36000.0, 4.0], [36300.0, 9.0], [36200.0, 5.0], [36800.0, 5.0], [36500.0, 6.0], [35300.0, 7.0], [36400.0, 2.0], [37200.0, 3.0], [36900.0, 3.0], [38400.0, 1.0], [37400.0, 2.0], [38300.0, 2.0], [38000.0, 1.0], [37000.0, 4.0], [37100.0, 3.0], [37300.0, 1.0], [37700.0, 1.0], [37500.0, 1.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[0.0, 30.0], [600.0, 12.0], [700.0, 6.0], [800.0, 8.0], [900.0, 2.0], [1000.0, 1.0], [1100.0, 1.0], [1500.0, 1.0], [100.0, 31.0], [2500.0, 2.0], [2700.0, 1.0], [2800.0, 4.0], [2900.0, 1.0], [3100.0, 1.0], [200.0, 97.0], [300.0, 136.0], [5400.0, 1.0], [5800.0, 1.0], [6000.0, 2.0], [6300.0, 1.0], [400.0, 40.0], [6400.0, 2.0], [7000.0, 2.0], [7200.0, 1.0], [500.0, 14.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 38400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 24.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1078.0, "series": [{"data": [[0.0, 340.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 114.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1078.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 24.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 4.625, "minX": 1.71897672E12, "maxY": 15.0, "series": [{"data": [[1.71897768E12, 15.0], [1.71897738E12, 15.0], [1.71897708E12, 15.0], [1.71897678E12, 15.0], [1.71897774E12, 15.0], [1.71897792E12, 14.74390243902439], [1.71897696E12, 15.0], [1.71897762E12, 15.0], [1.71897732E12, 15.0], [1.71897798E12, 4.625], [1.71897702E12, 15.0], [1.7189772E12, 15.0], [1.71897786E12, 15.0], [1.7189769E12, 15.0], [1.71897756E12, 15.0], [1.71897726E12, 15.0], [1.71897744E12, 15.0], [1.71897714E12, 15.0], [1.71897684E12, 15.0], [1.7189778E12, 15.0], [1.71897672E12, 11.833333333333334], [1.7189775E12, 15.0]], "isOverall": false, "label": "MixedTest", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71897798E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 124.5, "minX": 1.0, "maxY": 35853.0, "series": [{"data": [[9.0, 3818.0], [10.0, 6393.0], [13.0, 6690.0], [15.0, 6563.7028423772645]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[14.951406649616358, 6549.544757033246]], "isOverall": false, "label": "Directors by name-Aggregated", "isController": false}, {"data": [[9.0, 513.0], [10.0, 681.0], [11.0, 345.5], [13.0, 124.5], [14.0, 1513.0], [15.0, 2136.9331619537247]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[14.93702770780856, 2106.869017632241]], "isOverall": false, "label": "TitleBasics by primary_title-Aggregated", "isController": false}, {"data": [[8.0, 30344.0], [2.0, 24419.0], [1.0, 12828.0], [5.0, 27934.5], [11.0, 33946.0], [12.0, 35853.0], [6.0, 29806.0], [3.0, 30136.0], [7.0, 30355.0], [15.0, 34165.36944444442]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[14.756756756756754, 34008.34864864862]], "isOverall": false, "label": "Actors by name-Aggregated", "isController": false}, {"data": [[7.0, 173.0], [15.0, 539.8513853904282]], "isOverall": false, "label": "TitleBasics by params", "isController": false}, {"data": [[14.979899497487432, 538.9296482412065]], "isOverall": false, "label": "TitleBasics by params-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 15.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 20.7, "minX": 1.71897672E12, "maxY": 7088.983333333334, "series": [{"data": [[1.71897768E12, 4548.166666666667], [1.71897738E12, 4525.916666666667], [1.71897708E12, 5725.516666666666], [1.71897678E12, 5269.4], [1.71897774E12, 2734.5], [1.71897792E12, 5114.066666666667], [1.71897696E12, 3581.1], [1.71897762E12, 5544.2], [1.71897732E12, 3825.233333333333], [1.71897798E12, 129.35], [1.71897702E12, 5708.533333333334], [1.7189772E12, 5883.916666666667], [1.71897786E12, 4601.066666666667], [1.7189769E12, 3263.1833333333334], [1.71897756E12, 6110.966666666666], [1.71897726E12, 7088.983333333334], [1.71897744E12, 5568.55], [1.71897714E12, 4871.75], [1.71897684E12, 5146.183333333333], [1.7189778E12, 3996.85], [1.71897672E12, 1239.4166666666667], [1.7189775E12, 3462.3333333333335]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71897768E12, 183.06666666666666], [1.71897738E12, 202.8], [1.71897708E12, 264.2], [1.71897678E12, 236.6], [1.71897774E12, 135.0], [1.71897792E12, 224.73333333333332], [1.71897696E12, 163.93333333333334], [1.71897762E12, 226.01666666666668], [1.71897732E12, 177.65], [1.71897798E12, 20.7], [1.71897702E12, 249.38333333333333], [1.7189772E12, 241.11666666666667], [1.71897786E12, 192.56666666666666], [1.7189769E12, 165.05], [1.71897756E12, 247.7], [1.71897726E12, 267.2], [1.71897744E12, 228.38333333333333], [1.71897714E12, 214.01666666666668], [1.71897684E12, 237.43333333333334], [1.7189778E12, 194.31666666666666], [1.71897672E12, 32.916666666666664], [1.7189775E12, 162.86666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71897798E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 241.78571428571428, "minX": 1.71897672E12, "maxY": 36176.0, "series": [{"data": [[1.71897768E12, 6383.099999999999], [1.71897738E12, 6803.95], [1.71897708E12, 6468.617647058824], [1.71897678E12, 6350.137931034483], [1.71897774E12, 6858.111111111111], [1.71897792E12, 6620.181818181817], [1.71897696E12, 6972.818181818182], [1.71897762E12, 6359.0526315789475], [1.71897732E12, 6980.285714285714], [1.71897702E12, 6586.240000000001], [1.7189772E12, 6386.59090909091], [1.71897786E12, 6733.615384615385], [1.7189769E12, 6517.6], [1.71897756E12, 6639.444444444445], [1.71897726E12, 6291.083333333333], [1.71897744E12, 6335.347826086957], [1.71897714E12, 6818.809523809524], [1.71897684E12, 6409.7037037037035], [1.7189778E12, 6742.294117647059], [1.71897672E12, 1255.0], [1.7189775E12, 6905.916666666667]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.71897768E12, 2177.5625], [1.71897738E12, 2620.55], [1.71897708E12, 1838.181818181818], [1.71897678E12, 1777.625], [1.71897774E12, 2515.0], [1.71897792E12, 2419.142857142857], [1.71897696E12, 2318.9047619047624], [1.71897762E12, 2293.7000000000003], [1.71897732E12, 2188.9523809523807], [1.71897702E12, 2140.7619047619046], [1.7189772E12, 1791.2727272727273], [1.71897786E12, 2151.5555555555557], [1.7189769E12, 2450.923076923077], [1.71897756E12, 2338.2727272727275], [1.71897726E12, 2005.5384615384617], [1.71897744E12, 2094.0000000000005], [1.71897714E12, 1830.388888888889], [1.71897684E12, 1919.8000000000002], [1.7189778E12, 2446.238095238095], [1.71897672E12, 505.25], [1.7189775E12, 1791.1249999999998]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.71897768E12, 35318.84210526315], [1.71897738E12, 35387.722222222226], [1.71897708E12, 32519.466666666667], [1.71897678E12, 31264.5], [1.71897774E12, 35534.15], [1.71897792E12, 34886.166666666664], [1.71897696E12, 36176.0], [1.71897762E12, 33753.72222222222], [1.71897732E12, 34443.99999999999], [1.71897798E12, 26719.625], [1.71897702E12, 33686.26315789474], [1.7189772E12, 32599.0], [1.71897786E12, 35174.57894736843], [1.7189769E12, 34078.05882352941], [1.71897756E12, 34478.27777777779], [1.71897726E12, 32758.529411764706], [1.71897744E12, 33307.3125], [1.71897714E12, 33235.30000000001], [1.71897684E12, 32871.00000000001], [1.7189778E12, 35981.31578947369], [1.7189775E12, 34569.434782608696]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.71897768E12, 419.7727272727272], [1.71897738E12, 261.70588235294116], [1.71897708E12, 868.2608695652173], [1.71897678E12, 733.8888888888888], [1.71897774E12, 352.7857142857143], [1.71897792E12, 287.5238095238095], [1.71897696E12, 301.3], [1.71897762E12, 552.24], [1.71897732E12, 1247.0], [1.71897702E12, 823.56], [1.7189772E12, 983.0000000000002], [1.71897786E12, 391.89473684210526], [1.7189769E12, 241.78571428571428], [1.71897756E12, 493.61290322580635], [1.71897726E12, 342.44827586206895], [1.71897744E12, 330.47619047619054], [1.71897714E12, 661.1666666666667], [1.71897684E12, 305.19999999999993], [1.7189778E12, 652.7692307692307], [1.71897672E12, 275.6666666666667], [1.7189775E12, 511.6363636363636]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71897798E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 241.5, "minX": 1.71897672E12, "maxY": 36176.0, "series": [{"data": [[1.71897768E12, 6383.099999999999], [1.71897738E12, 6803.95], [1.71897708E12, 6468.617647058824], [1.71897678E12, 6350.137931034483], [1.71897774E12, 6858.111111111111], [1.71897792E12, 6620.181818181817], [1.71897696E12, 6972.818181818182], [1.71897762E12, 6359.0526315789475], [1.71897732E12, 6980.285714285714], [1.71897702E12, 6586.160000000001], [1.7189772E12, 6386.59090909091], [1.71897786E12, 6733.615384615385], [1.7189769E12, 6517.6], [1.71897756E12, 6639.444444444445], [1.71897726E12, 6291.083333333333], [1.71897744E12, 6335.347826086957], [1.71897714E12, 6818.761904761905], [1.71897684E12, 6409.7037037037035], [1.7189778E12, 6742.294117647059], [1.71897672E12, 1255.0], [1.7189775E12, 6905.916666666667]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.71897768E12, 2177.5], [1.71897738E12, 2620.25], [1.71897708E12, 1837.7272727272727], [1.71897678E12, 1777.3750000000002], [1.71897774E12, 2515.0], [1.71897792E12, 2418.8571428571427], [1.71897696E12, 2318.428571428571], [1.71897762E12, 2293.3000000000006], [1.71897732E12, 2188.3809523809523], [1.71897702E12, 2140.2380952380954], [1.7189772E12, 1790.772727272727], [1.71897786E12, 2151.222222222222], [1.7189769E12, 2450.230769230769], [1.71897756E12, 2337.909090909091], [1.71897726E12, 1992.6153846153845], [1.71897744E12, 2093.4166666666665], [1.71897714E12, 1812.7222222222222], [1.71897684E12, 1919.2666666666667], [1.7189778E12, 2444.3809523809527], [1.71897672E12, 502.75], [1.7189775E12, 1790.5]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.71897768E12, 35318.84210526315], [1.71897738E12, 35387.722222222226], [1.71897708E12, 32519.466666666667], [1.71897678E12, 31264.42857142857], [1.71897774E12, 35534.15], [1.71897792E12, 34886.166666666664], [1.71897696E12, 36176.0], [1.71897762E12, 33753.72222222222], [1.71897732E12, 34443.99999999999], [1.71897798E12, 26719.625], [1.71897702E12, 33686.26315789474], [1.7189772E12, 32599.0], [1.71897786E12, 35174.57894736843], [1.7189769E12, 34078.05882352941], [1.71897756E12, 34478.22222222223], [1.71897726E12, 32758.529411764706], [1.71897744E12, 33307.3125], [1.71897714E12, 33235.30000000001], [1.71897684E12, 32871.00000000001], [1.7189778E12, 35981.31578947369], [1.7189775E12, 34569.434782608696]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.71897768E12, 418.18181818181824], [1.71897738E12, 260.47058823529414], [1.71897708E12, 867.8260869565217], [1.71897678E12, 733.5555555555555], [1.71897774E12, 352.42857142857144], [1.71897792E12, 286.5238095238095], [1.71897696E12, 301.1], [1.71897762E12, 551.6400000000001], [1.71897732E12, 1246.3076923076924], [1.71897702E12, 822.36], [1.7189772E12, 982.5000000000001], [1.71897786E12, 389.421052631579], [1.7189769E12, 241.5], [1.71897756E12, 491.80645161290306], [1.71897726E12, 341.62068965517244], [1.71897744E12, 329.7142857142857], [1.71897714E12, 659.9444444444446], [1.71897684E12, 304.35999999999996], [1.7189778E12, 652.6153846153845], [1.71897672E12, 274.3333333333333], [1.7189775E12, 511.54545454545456]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71897798E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.71897672E12, "maxY": 34.0, "series": [{"data": [[1.71897768E12, 6.9], [1.71897738E12, 7.849999999999999], [1.71897708E12, 13.47058823529412], [1.71897678E12, 5.793103448275862], [1.71897774E12, 3.5555555555555554], [1.71897792E12, 6.363636363636365], [1.71897696E12, 3.909090909090909], [1.71897762E12, 10.368421052631579], [1.71897732E12, 9.142857142857144], [1.71897702E12, 6.279999999999999], [1.7189772E12, 9.272727272727273], [1.71897786E12, 10.0], [1.7189769E12, 3.4], [1.71897756E12, 9.055555555555554], [1.71897726E12, 3.0], [1.71897744E12, 4.521739130434785], [1.71897714E12, 11.285714285714286], [1.71897684E12, 3.8888888888888897], [1.7189778E12, 8.176470588235293], [1.71897672E12, 34.0], [1.7189775E12, 10.166666666666664]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.71897768E12, 6.812499999999999], [1.71897738E12, 10.350000000000001], [1.71897708E12, 5.545454545454545], [1.71897678E12, 4.083333333333333], [1.71897774E12, 0.0], [1.71897792E12, 1.952380952380952], [1.71897696E12, 7.142857142857142], [1.71897762E12, 7.699999999999999], [1.71897732E12, 3.238095238095238], [1.71897702E12, 0.0], [1.7189772E12, 5.318181818181818], [1.71897786E12, 3.6111111111111116], [1.7189769E12, 13.53846153846154], [1.71897756E12, 4.1818181818181825], [1.71897726E12, 3.5], [1.71897744E12, 2.833333333333333], [1.71897714E12, 10.66666666666667], [1.71897684E12, 6.7333333333333325], [1.7189778E12, 1.6666666666666665], [1.71897672E12, 16.875], [1.7189775E12, 6.5625]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.71897768E12, 4.473684210526316], [1.71897738E12, 5.555555555555556], [1.71897708E12, 5.333333333333333], [1.71897678E12, 10.57142857142857], [1.71897774E12, 9.2], [1.71897792E12, 1.8333333333333333], [1.71897696E12, 11.277777777777782], [1.71897762E12, 1.8333333333333333], [1.71897732E12, 9.588235294117647], [1.71897798E12, 8.25], [1.71897702E12, 9.368421052631579], [1.7189772E12, 6.944444444444445], [1.71897786E12, 3.4736842105263155], [1.7189769E12, 5.764705882352941], [1.71897756E12, 3.8888888888888884], [1.71897726E12, 4.0], [1.71897744E12, 12.562499999999998], [1.71897714E12, 1.6500000000000001], [1.71897684E12, 3.578947368421052], [1.7189778E12, 9.105263157894736], [1.7189775E12, 10.913043478260871]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.71897768E12, 11.363636363636365], [1.71897738E12, 4.647058823529411], [1.71897708E12, 1.4782608695652173], [1.71897678E12, 1.7777777777777777], [1.71897774E12, 7.571428571428571], [1.71897792E12, 6.333333333333332], [1.71897696E12, 7.3], [1.71897762E12, 8.360000000000001], [1.71897732E12, 9.0], [1.71897702E12, 5.920000000000001], [1.7189772E12, 8.0], [1.71897786E12, 12.526315789473681], [1.7189769E12, 2.4285714285714284], [1.71897756E12, 6.096774193548386], [1.71897726E12, 5.379310344827588], [1.71897744E12, 8.333333333333332], [1.71897714E12, 11.222222222222223], [1.71897684E12, 4.5200000000000005], [1.7189778E12, 7.6923076923076925], [1.71897672E12, 14.666666666666668], [1.7189775E12, 11.454545454545457]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71897798E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 81.0, "minX": 1.71897672E12, "maxY": 38495.0, "series": [{"data": [[1.71897768E12, 37526.0], [1.71897738E12, 36777.0], [1.71897708E12, 35434.0], [1.71897678E12, 35275.0], [1.71897774E12, 38012.0], [1.71897792E12, 37056.0], [1.71897696E12, 38495.0], [1.71897762E12, 35854.0], [1.71897732E12, 36282.0], [1.71897798E12, 30355.0], [1.71897702E12, 38364.0], [1.7189772E12, 34296.0], [1.71897786E12, 37260.0], [1.7189769E12, 36688.0], [1.71897756E12, 37738.0], [1.71897726E12, 35392.0], [1.71897744E12, 35244.0], [1.71897714E12, 36569.0], [1.71897684E12, 35444.0], [1.7189778E12, 38319.0], [1.71897672E12, 1703.0], [1.7189775E12, 37307.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71897768E12, 111.0], [1.71897738E12, 81.0], [1.71897708E12, 88.0], [1.71897678E12, 235.0], [1.71897774E12, 209.0], [1.71897792E12, 94.0], [1.71897696E12, 96.0], [1.71897762E12, 192.0], [1.71897732E12, 237.0], [1.71897798E12, 12828.0], [1.71897702E12, 113.0], [1.7189772E12, 97.0], [1.71897786E12, 120.0], [1.7189769E12, 141.0], [1.71897756E12, 123.0], [1.71897726E12, 103.0], [1.71897744E12, 165.0], [1.71897714E12, 157.0], [1.71897684E12, 141.0], [1.7189778E12, 89.0], [1.71897672E12, 118.0], [1.7189775E12, 236.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71897768E12, 36084.0], [1.71897738E12, 36182.4], [1.71897708E12, 32131.5], [1.71897678E12, 32534.600000000002], [1.71897774E12, 36496.0], [1.71897792E12, 35344.0], [1.71897696E12, 36688.0], [1.71897762E12, 34142.4], [1.71897732E12, 35146.0], [1.71897798E12, 30355.0], [1.71897702E12, 33923.0], [1.7189772E12, 33024.8], [1.71897786E12, 35578.0], [1.7189769E12, 35138.8], [1.71897756E12, 35073.4], [1.71897726E12, 32194.4], [1.71897744E12, 33830.0], [1.71897714E12, 34159.0], [1.71897684E12, 33583.8], [1.7189778E12, 36548.9], [1.71897672E12, 1568.6000000000004], [1.7189775E12, 36371.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71897768E12, 37526.0], [1.71897738E12, 36777.0], [1.71897708E12, 35434.0], [1.71897678E12, 35275.0], [1.71897774E12, 38012.0], [1.71897792E12, 37056.0], [1.71897696E12, 38495.0], [1.71897762E12, 35854.0], [1.71897732E12, 36282.0], [1.71897798E12, 30355.0], [1.71897702E12, 38364.0], [1.7189772E12, 34296.0], [1.71897786E12, 37260.0], [1.7189769E12, 36688.0], [1.71897756E12, 37738.0], [1.71897726E12, 35392.0], [1.71897744E12, 35244.0], [1.71897714E12, 36569.0], [1.71897684E12, 35444.0], [1.7189778E12, 38319.0], [1.71897672E12, 1703.0], [1.7189775E12, 37307.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71897768E12, 2712.0], [1.71897738E12, 5997.0], [1.71897708E12, 5776.5], [1.71897678E12, 4015.0], [1.71897774E12, 6922.0], [1.71897792E12, 3345.0], [1.71897696E12, 2968.0], [1.71897762E12, 3021.0], [1.71897732E12, 6042.0], [1.71897798E12, 29245.5], [1.71897702E12, 5718.0], [1.7189772E12, 3876.5], [1.71897786E12, 2904.0], [1.7189769E12, 6533.5], [1.71897756E12, 2634.0], [1.71897726E12, 2723.0], [1.71897744E12, 3047.5], [1.71897714E12, 6160.0], [1.71897684E12, 5464.0], [1.7189778E12, 5799.0], [1.71897672E12, 327.0], [1.7189775E12, 6985.5]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.71897768E12, 37116.2], [1.71897738E12, 36372.7], [1.71897708E12, 33520.5], [1.71897678E12, 33648.1], [1.71897774E12, 36977.0], [1.71897792E12, 36117.6], [1.71897696E12, 36994.0], [1.71897762E12, 34340.5], [1.71897732E12, 35653.25], [1.71897798E12, 30355.0], [1.71897702E12, 36008.0], [1.7189772E12, 33797.2], [1.71897786E12, 36383.5], [1.7189769E12, 35682.85], [1.71897756E12, 35528.2], [1.71897726E12, 33651.399999999994], [1.71897744E12, 34576.1], [1.71897714E12, 34470.399999999994], [1.71897684E12, 34628.8], [1.7189778E12, 37118.1], [1.71897672E12, 1703.0], [1.7189775E12, 36587.75]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71897798E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 19576.5, "series": [{"data": [[1.0, 2933.0], [2.0, 3319.5], [4.0, 6165.0], [5.0, 6724.0], [3.0, 3051.0], [6.0, 19576.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [4.0, 0.0], [1.0, 0.0], [5.0, 0.0], [3.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 6.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 19576.5, "series": [{"data": [[1.0, 2933.0], [2.0, 3319.5], [4.0, 6165.0], [5.0, 6724.0], [3.0, 3051.0], [6.0, 19576.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [4.0, 0.0], [1.0, 0.0], [5.0, 0.0], [3.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 6.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.4, "minX": 1.71897672E12, "maxY": 1.5833333333333333, "series": [{"data": [[1.71897768E12, 1.0833333333333333], [1.71897738E12, 1.2666666666666666], [1.71897708E12, 1.55], [1.71897678E12, 1.45], [1.71897774E12, 0.8666666666666667], [1.71897792E12, 1.25], [1.71897696E12, 1.0166666666666666], [1.71897762E12, 1.4166666666666667], [1.71897732E12, 1.0833333333333333], [1.71897702E12, 1.5166666666666666], [1.7189772E12, 1.4666666666666666], [1.71897786E12, 1.1666666666666667], [1.7189769E12, 1.0333333333333334], [1.71897756E12, 1.4666666666666666], [1.71897726E12, 1.5833333333333333], [1.71897744E12, 1.4166666666666667], [1.71897714E12, 1.3], [1.71897684E12, 1.4333333333333333], [1.7189778E12, 1.1666666666666667], [1.71897672E12, 0.4], [1.7189775E12, 1.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71897792E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71897672E12, "maxY": 1.5833333333333333, "series": [{"data": [[1.71897768E12, 1.0833333333333333], [1.71897738E12, 1.2166666666666666], [1.71897708E12, 1.5666666666666667], [1.71897678E12, 1.4166666666666667], [1.71897774E12, 0.8166666666666667], [1.71897792E12, 1.35], [1.71897696E12, 0.9833333333333333], [1.71897762E12, 1.35], [1.71897732E12, 1.0666666666666667], [1.71897798E12, 0.13333333333333333], [1.71897702E12, 1.4833333333333334], [1.7189772E12, 1.4333333333333333], [1.71897786E12, 1.15], [1.7189769E12, 1.0], [1.71897756E12, 1.4666666666666666], [1.71897726E12, 1.5833333333333333], [1.71897744E12, 1.3666666666666667], [1.71897714E12, 1.2833333333333334], [1.71897684E12, 1.4166666666666667], [1.7189778E12, 1.1666666666666667], [1.71897672E12, 0.2], [1.7189775E12, 1.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71897768E12, 0.03333333333333333], [1.71897738E12, 0.03333333333333333], [1.71897774E12, 0.03333333333333333], [1.71897792E12, 0.016666666666666666], [1.71897696E12, 0.016666666666666666], [1.71897762E12, 0.016666666666666666], [1.71897732E12, 0.016666666666666666], [1.71897702E12, 0.016666666666666666], [1.7189772E12, 0.03333333333333333], [1.7189769E12, 0.06666666666666667], [1.71897756E12, 0.016666666666666666], [1.71897726E12, 0.016666666666666666], [1.71897744E12, 0.03333333333333333], [1.71897684E12, 0.016666666666666666], [1.7189775E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.URISyntaxException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71897798E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71897672E12, "maxY": 0.5666666666666667, "series": [{"data": [[1.71897768E12, 0.26666666666666666], [1.71897738E12, 0.3333333333333333], [1.71897708E12, 0.36666666666666664], [1.71897678E12, 0.4], [1.71897774E12, 0.13333333333333333], [1.71897792E12, 0.35], [1.71897696E12, 0.35], [1.71897762E12, 0.3333333333333333], [1.71897732E12, 0.35], [1.71897702E12, 0.35], [1.7189772E12, 0.36666666666666664], [1.71897786E12, 0.3], [1.7189769E12, 0.21666666666666667], [1.71897756E12, 0.36666666666666664], [1.71897726E12, 0.43333333333333335], [1.71897744E12, 0.4], [1.71897714E12, 0.3], [1.71897684E12, 0.25], [1.7189778E12, 0.35], [1.71897672E12, 0.13333333333333333], [1.7189775E12, 0.26666666666666666]], "isOverall": false, "label": "TitleBasics by primary_title-success", "isController": false}, {"data": [[1.71897768E12, 0.31666666666666665], [1.71897738E12, 0.3], [1.71897708E12, 0.25], [1.71897678E12, 0.23333333333333334], [1.71897774E12, 0.3333333333333333], [1.71897792E12, 0.3], [1.71897696E12, 0.3], [1.71897762E12, 0.3], [1.71897732E12, 0.2833333333333333], [1.71897798E12, 0.13333333333333333], [1.71897702E12, 0.31666666666666665], [1.7189772E12, 0.3], [1.71897786E12, 0.31666666666666665], [1.7189769E12, 0.2833333333333333], [1.71897756E12, 0.3], [1.71897726E12, 0.2833333333333333], [1.71897744E12, 0.26666666666666666], [1.71897714E12, 0.3333333333333333], [1.71897684E12, 0.31666666666666665], [1.7189778E12, 0.31666666666666665], [1.7189775E12, 0.38333333333333336]], "isOverall": false, "label": "Actors by name-success", "isController": false}, {"data": [[1.71897768E12, 0.03333333333333333], [1.71897738E12, 0.03333333333333333], [1.71897774E12, 0.03333333333333333], [1.71897792E12, 0.016666666666666666], [1.71897696E12, 0.016666666666666666], [1.71897762E12, 0.016666666666666666], [1.71897732E12, 0.016666666666666666], [1.71897702E12, 0.016666666666666666], [1.7189772E12, 0.03333333333333333], [1.7189769E12, 0.06666666666666667], [1.71897756E12, 0.016666666666666666], [1.71897726E12, 0.016666666666666666], [1.71897744E12, 0.03333333333333333], [1.71897684E12, 0.016666666666666666], [1.7189775E12, 0.03333333333333333]], "isOverall": false, "label": "TitleBasics by params-failure", "isController": false}, {"data": [[1.71897768E12, 0.3333333333333333], [1.71897738E12, 0.25], [1.71897708E12, 0.38333333333333336], [1.71897678E12, 0.3], [1.71897774E12, 0.2], [1.71897792E12, 0.3333333333333333], [1.71897696E12, 0.15], [1.71897762E12, 0.4], [1.71897732E12, 0.2], [1.71897702E12, 0.4], [1.7189772E12, 0.4], [1.71897786E12, 0.31666666666666665], [1.7189769E12, 0.16666666666666666], [1.71897756E12, 0.5], [1.71897726E12, 0.4666666666666667], [1.71897744E12, 0.31666666666666665], [1.71897714E12, 0.3], [1.71897684E12, 0.4], [1.7189778E12, 0.21666666666666667], [1.71897672E12, 0.05], [1.7189775E12, 0.15]], "isOverall": false, "label": "TitleBasics by params-success", "isController": false}, {"data": [[1.71897768E12, 0.16666666666666666], [1.71897738E12, 0.3333333333333333], [1.71897708E12, 0.5666666666666667], [1.71897678E12, 0.48333333333333334], [1.71897774E12, 0.15], [1.71897792E12, 0.36666666666666664], [1.71897696E12, 0.18333333333333332], [1.71897762E12, 0.31666666666666665], [1.71897732E12, 0.23333333333333334], [1.71897702E12, 0.4166666666666667], [1.7189772E12, 0.36666666666666664], [1.71897786E12, 0.21666666666666667], [1.7189769E12, 0.3333333333333333], [1.71897756E12, 0.3], [1.71897726E12, 0.4], [1.71897744E12, 0.38333333333333336], [1.71897714E12, 0.35], [1.71897684E12, 0.45], [1.7189778E12, 0.2833333333333333], [1.71897672E12, 0.016666666666666666], [1.7189775E12, 0.2]], "isOverall": false, "label": "Directors by name-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71897798E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71897672E12, "maxY": 1.5833333333333333, "series": [{"data": [[1.71897768E12, 1.0833333333333333], [1.71897738E12, 1.2166666666666666], [1.71897708E12, 1.5666666666666667], [1.71897678E12, 1.4166666666666667], [1.71897774E12, 0.8166666666666667], [1.71897792E12, 1.35], [1.71897696E12, 0.9833333333333333], [1.71897762E12, 1.35], [1.71897732E12, 1.0666666666666667], [1.71897798E12, 0.13333333333333333], [1.71897702E12, 1.4833333333333334], [1.7189772E12, 1.4333333333333333], [1.71897786E12, 1.15], [1.7189769E12, 1.0], [1.71897756E12, 1.4666666666666666], [1.71897726E12, 1.5833333333333333], [1.71897744E12, 1.3666666666666667], [1.71897714E12, 1.2833333333333334], [1.71897684E12, 1.4166666666666667], [1.7189778E12, 1.1666666666666667], [1.71897672E12, 0.2], [1.7189775E12, 1.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.71897768E12, 0.03333333333333333], [1.71897738E12, 0.03333333333333333], [1.71897774E12, 0.03333333333333333], [1.71897792E12, 0.016666666666666666], [1.71897696E12, 0.016666666666666666], [1.71897762E12, 0.016666666666666666], [1.71897732E12, 0.016666666666666666], [1.71897702E12, 0.016666666666666666], [1.7189772E12, 0.03333333333333333], [1.7189769E12, 0.06666666666666667], [1.71897756E12, 0.016666666666666666], [1.71897726E12, 0.016666666666666666], [1.71897744E12, 0.03333333333333333], [1.71897684E12, 0.016666666666666666], [1.7189775E12, 0.03333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71897798E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}


/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 50224.0, "series": [{"data": [[0.0, 1142.0], [0.1, 1142.0], [0.2, 1168.0], [0.3, 1168.0], [0.4, 1170.0], [0.5, 1170.0], [0.6, 1172.0], [0.7, 1172.0], [0.8, 1180.0], [0.9, 1189.0], [1.0, 1189.0], [1.1, 1190.0], [1.2, 1190.0], [1.3, 1195.0], [1.4, 1195.0], [1.5, 1197.0], [1.6, 1202.0], [1.7, 1202.0], [1.8, 1202.0], [1.9, 1202.0], [2.0, 1203.0], [2.1, 1203.0], [2.2, 1206.0], [2.3, 1209.0], [2.4, 1209.0], [2.5, 1212.0], [2.6, 1212.0], [2.7, 1215.0], [2.8, 1215.0], [2.9, 1221.0], [3.0, 1221.0], [3.1, 1221.0], [3.2, 1225.0], [3.3, 1225.0], [3.4, 1233.0], [3.5, 1233.0], [3.6, 1237.0], [3.7, 1237.0], [3.8, 1247.0], [3.9, 1250.0], [4.0, 1250.0], [4.1, 1254.0], [4.2, 1254.0], [4.3, 1288.0], [4.4, 1288.0], [4.5, 1311.0], [4.6, 1331.0], [4.7, 1331.0], [4.8, 1339.0], [4.9, 1339.0], [5.0, 1347.0], [5.1, 1347.0], [5.2, 1379.0], [5.3, 1380.0], [5.4, 1380.0], [5.5, 1383.0], [5.6, 1383.0], [5.7, 1386.0], [5.8, 1386.0], [5.9, 1391.0], [6.0, 1411.0], [6.1, 1411.0], [6.2, 1411.0], [6.3, 1411.0], [6.4, 1435.0], [6.5, 1435.0], [6.6, 1461.0], [6.7, 1461.0], [6.8, 1487.0], [6.9, 1533.0], [7.0, 1533.0], [7.1, 1559.0], [7.2, 1559.0], [7.3, 1574.0], [7.4, 1574.0], [7.5, 1577.0], [7.6, 1578.0], [7.7, 1578.0], [7.8, 1592.0], [7.9, 1592.0], [8.0, 1642.0], [8.1, 1642.0], [8.2, 1656.0], [8.3, 1717.0], [8.4, 1717.0], [8.5, 1727.0], [8.6, 1727.0], [8.7, 1732.0], [8.8, 1732.0], [8.9, 1740.0], [9.0, 1749.0], [9.1, 1749.0], [9.2, 1767.0], [9.3, 1767.0], [9.4, 1776.0], [9.5, 1776.0], [9.6, 1779.0], [9.7, 1779.0], [9.8, 1780.0], [9.9, 1785.0], [10.0, 1785.0], [10.1, 1823.0], [10.2, 1823.0], [10.3, 1833.0], [10.4, 1833.0], [10.5, 1859.0], [10.6, 1864.0], [10.7, 1864.0], [10.8, 1878.0], [10.9, 1878.0], [11.0, 1881.0], [11.1, 1881.0], [11.2, 1885.0], [11.3, 1894.0], [11.4, 1894.0], [11.5, 1907.0], [11.6, 1907.0], [11.7, 1942.0], [11.8, 1942.0], [11.9, 1946.0], [12.0, 1952.0], [12.1, 1952.0], [12.2, 1955.0], [12.3, 1955.0], [12.4, 1970.0], [12.5, 1970.0], [12.6, 1992.0], [12.7, 1996.0], [12.8, 1996.0], [12.9, 2033.0], [13.0, 2033.0], [13.1, 2051.0], [13.2, 2051.0], [13.3, 2060.0], [13.4, 2060.0], [13.5, 2073.0], [13.6, 2083.0], [13.7, 2083.0], [13.8, 2086.0], [13.9, 2086.0], [14.0, 2089.0], [14.1, 2089.0], [14.2, 2089.0], [14.3, 2110.0], [14.4, 2110.0], [14.5, 2112.0], [14.6, 2112.0], [14.7, 2116.0], [14.8, 2116.0], [14.9, 2129.0], [15.0, 2131.0], [15.1, 2131.0], [15.2, 2135.0], [15.3, 2135.0], [15.4, 2137.0], [15.5, 2137.0], [15.6, 2141.0], [15.7, 2165.0], [15.8, 2165.0], [15.9, 2169.0], [16.0, 2169.0], [16.1, 2169.0], [16.2, 2169.0], [16.3, 2175.0], [16.4, 2175.0], [16.5, 2179.0], [16.6, 2205.0], [16.7, 2205.0], [16.8, 2230.0], [16.9, 2230.0], [17.0, 2242.0], [17.1, 2242.0], [17.2, 2255.0], [17.3, 2306.0], [17.4, 2306.0], [17.5, 2350.0], [17.6, 2350.0], [17.7, 2383.0], [17.8, 2383.0], [17.9, 2398.0], [18.0, 2448.0], [18.1, 2448.0], [18.2, 2497.0], [18.3, 2497.0], [18.4, 2512.0], [18.5, 2512.0], [18.6, 2605.0], [18.7, 2613.0], [18.8, 2613.0], [18.9, 2613.0], [19.0, 2613.0], [19.1, 2629.0], [19.2, 2629.0], [19.3, 2651.0], [19.4, 2651.0], [19.5, 2658.0], [19.6, 2724.0], [19.7, 2724.0], [19.8, 2748.0], [19.9, 2748.0], [20.0, 2750.0], [20.1, 2750.0], [20.2, 2765.0], [20.3, 2776.0], [20.4, 2776.0], [20.5, 2791.0], [20.6, 2791.0], [20.7, 2883.0], [20.8, 2883.0], [20.9, 2900.0], [21.0, 2906.0], [21.1, 2906.0], [21.2, 2925.0], [21.3, 2925.0], [21.4, 2936.0], [21.5, 2936.0], [21.6, 2942.0], [21.7, 2978.0], [21.8, 2978.0], [21.9, 3035.0], [22.0, 3035.0], [22.1, 3056.0], [22.2, 3056.0], [22.3, 3127.0], [22.4, 3134.0], [22.5, 3134.0], [22.6, 3146.0], [22.7, 3146.0], [22.8, 3187.0], [22.9, 3187.0], [23.0, 3189.0], [23.1, 3189.0], [23.2, 3190.0], [23.3, 3192.0], [23.4, 3192.0], [23.5, 3350.0], [23.6, 3350.0], [23.7, 3383.0], [23.8, 3383.0], [23.9, 3385.0], [24.0, 3388.0], [24.1, 3388.0], [24.2, 3400.0], [24.3, 3400.0], [24.4, 3410.0], [24.5, 3410.0], [24.6, 3410.0], [24.7, 3412.0], [24.8, 3412.0], [24.9, 3446.0], [25.0, 3446.0], [25.1, 3452.0], [25.2, 3452.0], [25.3, 3528.0], [25.4, 3552.0], [25.5, 3552.0], [25.6, 3559.0], [25.7, 3559.0], [25.8, 3596.0], [25.9, 3596.0], [26.0, 3622.0], [26.1, 3622.0], [26.2, 3627.0], [26.3, 3688.0], [26.4, 3688.0], [26.5, 3716.0], [26.6, 3716.0], [26.7, 3737.0], [26.8, 3737.0], [26.9, 3771.0], [27.0, 3800.0], [27.1, 3800.0], [27.2, 3817.0], [27.3, 3817.0], [27.4, 3849.0], [27.5, 3849.0], [27.6, 3851.0], [27.7, 3967.0], [27.8, 3967.0], [27.9, 3996.0], [28.0, 3996.0], [28.1, 4035.0], [28.2, 4035.0], [28.3, 4163.0], [28.4, 4166.0], [28.5, 4166.0], [28.6, 4175.0], [28.7, 4175.0], [28.8, 4178.0], [28.9, 4178.0], [29.0, 4179.0], [29.1, 4179.0], [29.2, 4197.0], [29.3, 4215.0], [29.4, 4215.0], [29.5, 4266.0], [29.6, 4266.0], [29.7, 4304.0], [29.8, 4304.0], [29.9, 4307.0], [30.0, 4357.0], [30.1, 4357.0], [30.2, 4405.0], [30.3, 4405.0], [30.4, 4424.0], [30.5, 4424.0], [30.6, 4446.0], [30.7, 4460.0], [30.8, 4460.0], [30.9, 4510.0], [31.0, 4510.0], [31.1, 4511.0], [31.2, 4511.0], [31.3, 4532.0], [31.4, 4569.0], [31.5, 4569.0], [31.6, 4598.0], [31.7, 4598.0], [31.8, 4619.0], [31.9, 4619.0], [32.0, 4641.0], [32.1, 4656.0], [32.2, 4656.0], [32.3, 4701.0], [32.4, 4701.0], [32.5, 4719.0], [32.6, 4719.0], [32.7, 4726.0], [32.8, 4726.0], [32.9, 4735.0], [33.0, 4747.0], [33.1, 4747.0], [33.2, 4748.0], [33.3, 4748.0], [33.4, 4760.0], [33.5, 4760.0], [33.6, 4765.0], [33.7, 4779.0], [33.8, 4779.0], [33.9, 4780.0], [34.0, 4780.0], [34.1, 4791.0], [34.2, 4791.0], [34.3, 4793.0], [34.4, 4800.0], [34.5, 4800.0], [34.6, 4800.0], [34.7, 4800.0], [34.8, 4826.0], [34.9, 4826.0], [35.0, 4836.0], [35.1, 4846.0], [35.2, 4846.0], [35.3, 4860.0], [35.4, 4860.0], [35.5, 4883.0], [35.6, 4883.0], [35.7, 4915.0], [35.8, 4915.0], [35.9, 4936.0], [36.0, 4947.0], [36.1, 4947.0], [36.2, 4959.0], [36.3, 4959.0], [36.4, 4985.0], [36.5, 4985.0], [36.6, 4986.0], [36.7, 4991.0], [36.8, 4991.0], [36.9, 4998.0], [37.0, 4998.0], [37.1, 5021.0], [37.2, 5021.0], [37.3, 5027.0], [37.4, 5035.0], [37.5, 5035.0], [37.6, 5049.0], [37.7, 5049.0], [37.8, 5082.0], [37.9, 5082.0], [38.0, 5206.0], [38.1, 5210.0], [38.2, 5210.0], [38.3, 5224.0], [38.4, 5224.0], [38.5, 5237.0], [38.6, 5237.0], [38.7, 5293.0], [38.8, 5293.0], [38.9, 5317.0], [39.0, 5337.0], [39.1, 5337.0], [39.2, 5356.0], [39.3, 5356.0], [39.4, 5465.0], [39.5, 5465.0], [39.6, 5472.0], [39.7, 5504.0], [39.8, 5504.0], [39.9, 5518.0], [40.0, 5518.0], [40.1, 5621.0], [40.2, 5621.0], [40.3, 5625.0], [40.4, 5625.0], [40.5, 5625.0], [40.6, 5647.0], [40.7, 5647.0], [40.8, 5687.0], [40.9, 5687.0], [41.0, 5694.0], [41.1, 5703.0], [41.2, 5703.0], [41.3, 5728.0], [41.4, 5728.0], [41.5, 5752.0], [41.6, 5752.0], [41.7, 5775.0], [41.8, 5779.0], [41.9, 5779.0], [42.0, 5790.0], [42.1, 5790.0], [42.2, 5808.0], [42.3, 5808.0], [42.4, 5848.0], [42.5, 5848.0], [42.6, 5863.0], [42.7, 5886.0], [42.8, 5886.0], [42.9, 5942.0], [43.0, 5942.0], [43.1, 5978.0], [43.2, 5978.0], [43.3, 5996.0], [43.4, 5998.0], [43.5, 5998.0], [43.6, 6006.0], [43.7, 6006.0], [43.8, 6118.0], [43.9, 6118.0], [44.0, 6131.0], [44.1, 6145.0], [44.2, 6145.0], [44.3, 6159.0], [44.4, 6159.0], [44.5, 6180.0], [44.6, 6180.0], [44.7, 6182.0], [44.8, 6220.0], [44.9, 6220.0], [45.0, 6225.0], [45.1, 6225.0], [45.2, 6225.0], [45.3, 6225.0], [45.4, 6253.0], [45.5, 6253.0], [45.6, 6259.0], [45.7, 6282.0], [45.8, 6282.0], [45.9, 6296.0], [46.0, 6296.0], [46.1, 6299.0], [46.2, 6299.0], [46.3, 6303.0], [46.4, 6308.0], [46.5, 6308.0], [46.6, 6311.0], [46.7, 6311.0], [46.8, 6357.0], [46.9, 6357.0], [47.0, 6360.0], [47.1, 6390.0], [47.2, 6390.0], [47.3, 6405.0], [47.4, 6405.0], [47.5, 6438.0], [47.6, 6438.0], [47.7, 6455.0], [47.8, 6466.0], [47.9, 6466.0], [48.0, 6470.0], [48.1, 6470.0], [48.2, 6492.0], [48.3, 6492.0], [48.4, 6500.0], [48.5, 6500.0], [48.6, 6512.0], [48.7, 6549.0], [48.8, 6549.0], [48.9, 6549.0], [49.0, 6549.0], [49.1, 6552.0], [49.2, 6552.0], [49.3, 6622.0], [49.4, 6662.0], [49.5, 6662.0], [49.6, 6682.0], [49.7, 6682.0], [49.8, 6685.0], [49.9, 6685.0], [50.0, 6690.0], [50.1, 6702.0], [50.2, 6702.0], [50.3, 6720.0], [50.4, 6720.0], [50.5, 6725.0], [50.6, 6725.0], [50.7, 6735.0], [50.8, 6764.0], [50.9, 6764.0], [51.0, 6797.0], [51.1, 6797.0], [51.2, 6799.0], [51.3, 6799.0], [51.4, 6800.0], [51.5, 6819.0], [51.6, 6819.0], [51.7, 6840.0], [51.8, 6840.0], [51.9, 6863.0], [52.0, 6863.0], [52.1, 6876.0], [52.2, 6876.0], [52.3, 6896.0], [52.4, 6919.0], [52.5, 6919.0], [52.6, 6933.0], [52.7, 6933.0], [52.8, 6945.0], [52.9, 6945.0], [53.0, 6998.0], [53.1, 7045.0], [53.2, 7045.0], [53.3, 7063.0], [53.4, 7063.0], [53.5, 7080.0], [53.6, 7080.0], [53.7, 7084.0], [53.8, 7091.0], [53.9, 7091.0], [54.0, 7098.0], [54.1, 7098.0], [54.2, 7102.0], [54.3, 7102.0], [54.4, 7111.0], [54.5, 7115.0], [54.6, 7115.0], [54.7, 7120.0], [54.8, 7120.0], [54.9, 7123.0], [55.0, 7123.0], [55.1, 7152.0], [55.2, 7152.0], [55.3, 7167.0], [55.4, 7176.0], [55.5, 7176.0], [55.6, 7180.0], [55.7, 7180.0], [55.8, 7271.0], [55.9, 7271.0], [56.0, 7280.0], [56.1, 7336.0], [56.2, 7336.0], [56.3, 7336.0], [56.4, 7336.0], [56.5, 7344.0], [56.6, 7344.0], [56.7, 7352.0], [56.8, 7361.0], [56.9, 7361.0], [57.0, 7372.0], [57.1, 7372.0], [57.2, 7385.0], [57.3, 7385.0], [57.4, 7418.0], [57.5, 7423.0], [57.6, 7423.0], [57.7, 7437.0], [57.8, 7437.0], [57.9, 7485.0], [58.0, 7485.0], [58.1, 7492.0], [58.2, 7492.0], [58.3, 7493.0], [58.4, 7504.0], [58.5, 7504.0], [58.6, 7505.0], [58.7, 7505.0], [58.8, 7508.0], [58.9, 7508.0], [59.0, 7510.0], [59.1, 7521.0], [59.2, 7521.0], [59.3, 7525.0], [59.4, 7525.0], [59.5, 7539.0], [59.6, 7539.0], [59.7, 7559.0], [59.8, 7583.0], [59.9, 7583.0], [60.0, 7597.0], [60.1, 7597.0], [60.2, 7648.0], [60.3, 7648.0], [60.4, 7650.0], [60.5, 7696.0], [60.6, 7696.0], [60.7, 7702.0], [60.8, 7702.0], [60.9, 7795.0], [61.0, 7795.0], [61.1, 7815.0], [61.2, 7817.0], [61.3, 7817.0], [61.4, 7822.0], [61.5, 7822.0], [61.6, 7871.0], [61.7, 7871.0], [61.8, 7873.0], [61.9, 7873.0], [62.0, 7904.0], [62.1, 7911.0], [62.2, 7911.0], [62.3, 7911.0], [62.4, 7911.0], [62.5, 7936.0], [62.6, 7936.0], [62.7, 7937.0], [62.8, 7954.0], [62.9, 7954.0], [63.0, 7963.0], [63.1, 7963.0], [63.2, 8001.0], [63.3, 8001.0], [63.4, 8037.0], [63.5, 8054.0], [63.6, 8054.0], [63.7, 8061.0], [63.8, 8061.0], [63.9, 8071.0], [64.0, 8071.0], [64.1, 8094.0], [64.2, 8115.0], [64.3, 8115.0], [64.4, 8120.0], [64.5, 8120.0], [64.6, 8121.0], [64.7, 8121.0], [64.8, 8152.0], [64.9, 8152.0], [65.0, 8160.0], [65.1, 8176.0], [65.2, 8176.0], [65.3, 8191.0], [65.4, 8191.0], [65.5, 8211.0], [65.6, 8211.0], [65.7, 8274.0], [65.8, 8282.0], [65.9, 8282.0], [66.0, 8292.0], [66.1, 8292.0], [66.2, 8375.0], [66.3, 8375.0], [66.4, 8381.0], [66.5, 8383.0], [66.6, 8383.0], [66.7, 8411.0], [66.8, 8411.0], [66.9, 8423.0], [67.0, 8423.0], [67.1, 8442.0], [67.2, 8492.0], [67.3, 8492.0], [67.4, 8515.0], [67.5, 8515.0], [67.6, 8523.0], [67.7, 8523.0], [67.8, 8541.0], [67.9, 8541.0], [68.0, 8585.0], [68.1, 8624.0], [68.2, 8624.0], [68.3, 8683.0], [68.4, 8683.0], [68.5, 8708.0], [68.6, 8708.0], [68.7, 8730.0], [68.8, 8731.0], [68.9, 8731.0], [69.0, 8744.0], [69.1, 8744.0], [69.2, 8808.0], [69.3, 8808.0], [69.4, 8834.0], [69.5, 8882.0], [69.6, 8882.0], [69.7, 8900.0], [69.8, 8900.0], [69.9, 8900.0], [70.0, 8900.0], [70.1, 8953.0], [70.2, 9009.0], [70.3, 9009.0], [70.4, 9034.0], [70.5, 9034.0], [70.6, 9046.0], [70.7, 9046.0], [70.8, 9047.0], [70.9, 9075.0], [71.0, 9075.0], [71.1, 9087.0], [71.2, 9087.0], [71.3, 9130.0], [71.4, 9130.0], [71.5, 9168.0], [71.6, 9168.0], [71.7, 9236.0], [71.8, 9250.0], [71.9, 9250.0], [72.0, 9269.0], [72.1, 9269.0], [72.2, 9279.0], [72.3, 9279.0], [72.4, 9299.0], [72.5, 9301.0], [72.6, 9301.0], [72.7, 9335.0], [72.8, 9335.0], [72.9, 9352.0], [73.0, 9352.0], [73.1, 9378.0], [73.2, 9395.0], [73.3, 9395.0], [73.4, 9408.0], [73.5, 9408.0], [73.6, 9413.0], [73.7, 9413.0], [73.8, 9418.0], [73.9, 9459.0], [74.0, 9459.0], [74.1, 9485.0], [74.2, 9485.0], [74.3, 9509.0], [74.4, 9509.0], [74.5, 9515.0], [74.6, 9515.0], [74.7, 9542.0], [74.8, 9555.0], [74.9, 9555.0], [75.0, 9562.0], [75.1, 9562.0], [75.2, 9571.0], [75.3, 9571.0], [75.4, 9573.0], [75.5, 9573.0], [75.6, 9573.0], [75.7, 9590.0], [75.8, 9590.0], [75.9, 9608.0], [76.0, 9608.0], [76.1, 9653.0], [76.2, 9749.0], [76.3, 9749.0], [76.4, 9750.0], [76.5, 9750.0], [76.6, 9760.0], [76.7, 9760.0], [76.8, 9782.0], [76.9, 9884.0], [77.0, 9884.0], [77.1, 9890.0], [77.2, 9890.0], [77.3, 9966.0], [77.4, 9966.0], [77.5, 9989.0], [77.6, 9989.0], [77.7, 10040.0], [77.8, 10060.0], [77.9, 10060.0], [78.0, 10083.0], [78.1, 10083.0], [78.2, 10095.0], [78.3, 10095.0], [78.4, 10107.0], [78.5, 10234.0], [78.6, 10234.0], [78.7, 10240.0], [78.8, 10240.0], [78.9, 10243.0], [79.0, 10243.0], [79.1, 10246.0], [79.2, 10246.0], [79.3, 10246.0], [79.4, 10252.0], [79.5, 10252.0], [79.6, 10260.0], [79.7, 10260.0], [79.8, 10262.0], [79.9, 10268.0], [80.0, 10268.0], [80.1, 10281.0], [80.2, 10281.0], [80.3, 10473.0], [80.4, 10473.0], [80.5, 10487.0], [80.6, 10491.0], [80.7, 10491.0], [80.8, 10517.0], [80.9, 10517.0], [81.0, 10589.0], [81.1, 10589.0], [81.2, 10612.0], [81.3, 10612.0], [81.4, 10629.0], [81.5, 10711.0], [81.6, 10711.0], [81.7, 10738.0], [81.8, 10738.0], [81.9, 10774.0], [82.0, 10774.0], [82.1, 10816.0], [82.2, 10845.0], [82.3, 10845.0], [82.4, 10893.0], [82.5, 10893.0], [82.6, 10902.0], [82.7, 10902.0], [82.8, 11035.0], [82.9, 11046.0], [83.0, 11046.0], [83.1, 11106.0], [83.2, 11106.0], [83.3, 11113.0], [83.4, 11113.0], [83.5, 11143.0], [83.6, 11143.0], [83.7, 11143.0], [83.8, 11189.0], [83.9, 11189.0], [84.0, 11309.0], [84.1, 11309.0], [84.2, 11320.0], [84.3, 11320.0], [84.4, 11320.0], [84.5, 11337.0], [84.6, 11337.0], [84.7, 11348.0], [84.8, 11348.0], [84.9, 11370.0], [85.0, 11370.0], [85.1, 11388.0], [85.2, 11401.0], [85.3, 11401.0], [85.4, 11455.0], [85.5, 11455.0], [85.6, 11458.0], [85.7, 11458.0], [85.8, 11471.0], [85.9, 11473.0], [86.0, 11473.0], [86.1, 11528.0], [86.2, 11528.0], [86.3, 11807.0], [86.4, 11807.0], [86.5, 11859.0], [86.6, 11880.0], [86.7, 11880.0], [86.8, 11940.0], [86.9, 11940.0], [87.0, 11968.0], [87.1, 11968.0], [87.2, 11990.0], [87.3, 11990.0], [87.4, 12017.0], [87.5, 12031.0], [87.6, 12031.0], [87.7, 12057.0], [87.8, 12057.0], [87.9, 12066.0], [88.0, 12066.0], [88.1, 12107.0], [88.2, 12130.0], [88.3, 12130.0], [88.4, 12151.0], [88.5, 12151.0], [88.6, 12215.0], [88.7, 12215.0], [88.8, 12245.0], [88.9, 12316.0], [89.0, 12316.0], [89.1, 12347.0], [89.2, 12347.0], [89.3, 12439.0], [89.4, 12439.0], [89.5, 12453.0], [89.6, 12468.0], [89.7, 12468.0], [89.8, 12656.0], [89.9, 12656.0], [90.0, 12745.0], [90.1, 12745.0], [90.2, 12751.0], [90.3, 12810.0], [90.4, 12810.0], [90.5, 12848.0], [90.6, 12848.0], [90.7, 12850.0], [90.8, 12850.0], [90.9, 12859.0], [91.0, 12859.0], [91.1, 12912.0], [91.2, 12941.0], [91.3, 12941.0], [91.4, 12970.0], [91.5, 12970.0], [91.6, 12981.0], [91.7, 12981.0], [91.8, 13018.0], [91.9, 13028.0], [92.0, 13028.0], [92.1, 13034.0], [92.2, 13034.0], [92.3, 13047.0], [92.4, 13047.0], [92.5, 13060.0], [92.6, 13075.0], [92.7, 13075.0], [92.8, 13147.0], [92.9, 13147.0], [93.0, 13171.0], [93.1, 13171.0], [93.2, 13226.0], [93.3, 13267.0], [93.4, 13267.0], [93.5, 13277.0], [93.6, 13277.0], [93.7, 13368.0], [93.8, 13368.0], [93.9, 13435.0], [94.0, 13435.0], [94.1, 13512.0], [94.2, 13513.0], [94.3, 13513.0], [94.4, 13529.0], [94.5, 13529.0], [94.6, 13583.0], [94.7, 13583.0], [94.8, 13622.0], [94.9, 13624.0], [95.0, 13624.0], [95.1, 13651.0], [95.2, 13651.0], [95.3, 13660.0], [95.4, 13660.0], [95.5, 13748.0], [95.6, 13780.0], [95.7, 13780.0], [95.8, 13949.0], [95.9, 13949.0], [96.0, 13972.0], [96.1, 13972.0], [96.2, 14061.0], [96.3, 14074.0], [96.4, 14074.0], [96.5, 14076.0], [96.6, 14076.0], [96.7, 14188.0], [96.8, 14188.0], [96.9, 14252.0], [97.0, 14252.0], [97.1, 14300.0], [97.2, 14321.0], [97.3, 14321.0], [97.4, 14332.0], [97.5, 14332.0], [97.6, 14460.0], [97.7, 14460.0], [97.8, 14652.0], [97.9, 14923.0], [98.0, 14923.0], [98.1, 14977.0], [98.2, 14977.0], [98.3, 14993.0], [98.4, 14993.0], [98.5, 15097.0], [98.6, 15155.0], [98.7, 15155.0], [98.8, 15650.0], [98.9, 15650.0], [99.0, 16270.0], [99.1, 16270.0], [99.2, 16847.0], [99.3, 18024.0], [99.4, 18024.0], [99.5, 18178.0], [99.6, 18178.0], [99.7, 19459.0], [99.8, 19459.0], [99.9, 20556.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[0.0, 136.0], [0.1, 136.0], [0.2, 160.0], [0.3, 160.0], [0.4, 169.0], [0.5, 177.0], [0.6, 177.0], [0.7, 181.0], [0.8, 182.0], [0.9, 182.0], [1.0, 187.0], [1.1, 187.0], [1.2, 190.0], [1.3, 191.0], [1.4, 191.0], [1.5, 193.0], [1.6, 194.0], [1.7, 194.0], [1.8, 195.0], [1.9, 195.0], [2.0, 204.0], [2.1, 205.0], [2.2, 205.0], [2.3, 206.0], [2.4, 215.0], [2.5, 215.0], [2.6, 216.0], [2.7, 220.0], [2.8, 220.0], [2.9, 225.0], [3.0, 225.0], [3.1, 225.0], [3.2, 227.0], [3.3, 227.0], [3.4, 228.0], [3.5, 229.0], [3.6, 229.0], [3.7, 230.0], [3.8, 230.0], [3.9, 235.0], [4.0, 240.0], [4.1, 240.0], [4.2, 241.0], [4.3, 241.0], [4.4, 241.0], [4.5, 242.0], [4.6, 243.0], [4.7, 243.0], [4.8, 246.0], [4.9, 246.0], [5.0, 247.0], [5.1, 247.0], [5.2, 247.0], [5.3, 249.0], [5.4, 250.0], [5.5, 250.0], [5.6, 255.0], [5.7, 255.0], [5.8, 256.0], [5.9, 257.0], [6.0, 257.0], [6.1, 260.0], [6.2, 261.0], [6.3, 261.0], [6.4, 261.0], [6.5, 265.0], [6.6, 265.0], [6.7, 266.0], [6.8, 266.0], [6.9, 266.0], [7.0, 268.0], [7.1, 268.0], [7.2, 268.0], [7.3, 269.0], [7.4, 269.0], [7.5, 271.0], [7.6, 271.0], [7.7, 272.0], [7.8, 274.0], [7.9, 274.0], [8.0, 274.0], [8.1, 276.0], [8.2, 276.0], [8.3, 292.0], [8.4, 293.0], [8.5, 293.0], [8.6, 296.0], [8.7, 296.0], [8.8, 298.0], [8.9, 299.0], [9.0, 299.0], [9.1, 300.0], [9.2, 303.0], [9.3, 303.0], [9.4, 304.0], [9.5, 304.0], [9.6, 306.0], [9.7, 308.0], [9.8, 308.0], [9.9, 312.0], [10.0, 314.0], [10.1, 314.0], [10.2, 314.0], [10.3, 314.0], [10.4, 314.0], [10.5, 315.0], [10.6, 315.0], [10.7, 319.0], [10.8, 323.0], [10.9, 323.0], [11.0, 327.0], [11.1, 328.0], [11.2, 328.0], [11.3, 329.0], [11.4, 329.0], [11.5, 332.0], [11.6, 334.0], [11.7, 334.0], [11.8, 337.0], [11.9, 338.0], [12.0, 338.0], [12.1, 338.0], [12.2, 338.0], [12.3, 342.0], [12.4, 345.0], [12.5, 345.0], [12.6, 353.0], [12.7, 355.0], [12.8, 355.0], [12.9, 360.0], [13.0, 361.0], [13.1, 361.0], [13.2, 363.0], [13.3, 363.0], [13.4, 379.0], [13.5, 386.0], [13.6, 386.0], [13.7, 392.0], [13.8, 395.0], [13.9, 395.0], [14.0, 407.0], [14.1, 407.0], [14.2, 409.0], [14.3, 409.0], [14.4, 409.0], [14.5, 409.0], [14.6, 414.0], [14.7, 414.0], [14.8, 419.0], [14.9, 419.0], [15.0, 419.0], [15.1, 424.0], [15.2, 424.0], [15.3, 426.0], [15.4, 437.0], [15.5, 437.0], [15.6, 437.0], [15.7, 437.0], [15.8, 437.0], [15.9, 437.0], [16.0, 437.0], [16.1, 442.0], [16.2, 445.0], [16.3, 445.0], [16.4, 449.0], [16.5, 449.0], [16.6, 449.0], [16.7, 457.0], [16.8, 458.0], [16.9, 458.0], [17.0, 460.0], [17.1, 460.0], [17.2, 460.0], [17.3, 461.0], [17.4, 461.0], [17.5, 461.0], [17.6, 464.0], [17.7, 464.0], [17.8, 466.0], [17.9, 466.0], [18.0, 477.0], [18.1, 477.0], [18.2, 477.0], [18.3, 477.0], [18.4, 478.0], [18.5, 478.0], [18.6, 481.0], [18.7, 481.0], [18.8, 481.0], [18.9, 487.0], [19.0, 487.0], [19.1, 487.0], [19.2, 488.0], [19.3, 488.0], [19.4, 490.0], [19.5, 491.0], [19.6, 491.0], [19.7, 493.0], [19.8, 493.0], [19.9, 495.0], [20.0, 507.0], [20.1, 507.0], [20.2, 510.0], [20.3, 512.0], [20.4, 512.0], [20.5, 513.0], [20.6, 513.0], [20.7, 515.0], [20.8, 517.0], [20.9, 517.0], [21.0, 519.0], [21.1, 519.0], [21.2, 519.0], [21.3, 530.0], [21.4, 531.0], [21.5, 531.0], [21.6, 538.0], [21.7, 538.0], [21.8, 539.0], [21.9, 543.0], [22.0, 543.0], [22.1, 546.0], [22.2, 562.0], [22.3, 562.0], [22.4, 568.0], [22.5, 568.0], [22.6, 569.0], [22.7, 569.0], [22.8, 569.0], [22.9, 574.0], [23.0, 589.0], [23.1, 589.0], [23.2, 595.0], [23.3, 601.0], [23.4, 601.0], [23.5, 601.0], [23.6, 601.0], [23.7, 602.0], [23.8, 611.0], [23.9, 611.0], [24.0, 614.0], [24.1, 616.0], [24.2, 616.0], [24.3, 616.0], [24.4, 616.0], [24.5, 620.0], [24.6, 626.0], [24.7, 626.0], [24.8, 629.0], [24.9, 631.0], [25.0, 631.0], [25.1, 632.0], [25.2, 634.0], [25.3, 634.0], [25.4, 636.0], [25.5, 636.0], [25.6, 637.0], [25.7, 640.0], [25.8, 640.0], [25.9, 641.0], [26.0, 646.0], [26.1, 646.0], [26.2, 651.0], [26.3, 651.0], [26.4, 653.0], [26.5, 654.0], [26.6, 654.0], [26.7, 655.0], [26.8, 658.0], [26.9, 658.0], [27.0, 660.0], [27.1, 662.0], [27.2, 662.0], [27.3, 667.0], [27.4, 667.0], [27.5, 668.0], [27.6, 668.0], [27.7, 668.0], [27.8, 678.0], [27.9, 681.0], [28.0, 681.0], [28.1, 685.0], [28.2, 685.0], [28.3, 693.0], [28.4, 694.0], [28.5, 694.0], [28.6, 700.0], [28.7, 719.0], [28.8, 719.0], [28.9, 721.0], [29.0, 721.0], [29.1, 722.0], [29.2, 729.0], [29.3, 729.0], [29.4, 733.0], [29.5, 735.0], [29.6, 735.0], [29.7, 740.0], [29.8, 743.0], [29.9, 743.0], [30.0, 744.0], [30.1, 744.0], [30.2, 745.0], [30.3, 745.0], [30.4, 745.0], [30.5, 745.0], [30.6, 750.0], [30.7, 750.0], [30.8, 751.0], [30.9, 751.0], [31.0, 751.0], [31.1, 755.0], [31.2, 755.0], [31.3, 756.0], [31.4, 758.0], [31.5, 758.0], [31.6, 760.0], [31.7, 767.0], [31.8, 767.0], [31.9, 776.0], [32.0, 776.0], [32.1, 785.0], [32.2, 788.0], [32.3, 788.0], [32.4, 789.0], [32.5, 789.0], [32.6, 789.0], [32.7, 797.0], [32.8, 797.0], [32.9, 799.0], [33.0, 811.0], [33.1, 811.0], [33.2, 818.0], [33.3, 819.0], [33.4, 819.0], [33.5, 820.0], [33.6, 820.0], [33.7, 820.0], [33.8, 827.0], [33.9, 827.0], [34.0, 840.0], [34.1, 842.0], [34.2, 842.0], [34.3, 843.0], [34.4, 844.0], [34.5, 844.0], [34.6, 861.0], [34.7, 861.0], [34.8, 863.0], [34.9, 870.0], [35.0, 870.0], [35.1, 872.0], [35.2, 890.0], [35.3, 890.0], [35.4, 891.0], [35.5, 891.0], [35.6, 891.0], [35.7, 895.0], [35.8, 895.0], [35.9, 922.0], [36.0, 925.0], [36.1, 925.0], [36.2, 928.0], [36.3, 939.0], [36.4, 939.0], [36.5, 941.0], [36.6, 941.0], [36.7, 952.0], [36.8, 957.0], [36.9, 957.0], [37.0, 963.0], [37.1, 968.0], [37.2, 968.0], [37.3, 975.0], [37.4, 975.0], [37.5, 978.0], [37.6, 985.0], [37.7, 985.0], [37.8, 988.0], [37.9, 1004.0], [38.0, 1004.0], [38.1, 1006.0], [38.2, 1009.0], [38.3, 1009.0], [38.4, 1009.0], [38.5, 1009.0], [38.6, 1020.0], [38.7, 1020.0], [38.8, 1020.0], [38.9, 1035.0], [39.0, 1039.0], [39.1, 1039.0], [39.2, 1040.0], [39.3, 1040.0], [39.4, 1043.0], [39.5, 1053.0], [39.6, 1053.0], [39.7, 1054.0], [39.8, 1061.0], [39.9, 1061.0], [40.0, 1061.0], [40.1, 1066.0], [40.2, 1066.0], [40.3, 1067.0], [40.4, 1067.0], [40.5, 1067.0], [40.6, 1068.0], [40.7, 1068.0], [40.8, 1070.0], [40.9, 1071.0], [41.0, 1071.0], [41.1, 1072.0], [41.2, 1072.0], [41.3, 1078.0], [41.4, 1079.0], [41.5, 1079.0], [41.6, 1082.0], [41.7, 1086.0], [41.8, 1086.0], [41.9, 1093.0], [42.0, 1094.0], [42.1, 1094.0], [42.2, 1095.0], [42.3, 1095.0], [42.4, 1101.0], [42.5, 1106.0], [42.6, 1106.0], [42.7, 1108.0], [42.8, 1112.0], [42.9, 1112.0], [43.0, 1117.0], [43.1, 1117.0], [43.2, 1129.0], [43.3, 1139.0], [43.4, 1139.0], [43.5, 1142.0], [43.6, 1151.0], [43.7, 1151.0], [43.8, 1151.0], [43.9, 1161.0], [44.0, 1161.0], [44.1, 1173.0], [44.2, 1173.0], [44.3, 1183.0], [44.4, 1184.0], [44.5, 1184.0], [44.6, 1188.0], [44.7, 1192.0], [44.8, 1192.0], [44.9, 1196.0], [45.0, 1196.0], [45.1, 1200.0], [45.2, 1202.0], [45.3, 1202.0], [45.4, 1205.0], [45.5, 1207.0], [45.6, 1207.0], [45.7, 1211.0], [45.8, 1211.0], [45.9, 1219.0], [46.0, 1228.0], [46.1, 1228.0], [46.2, 1235.0], [46.3, 1240.0], [46.4, 1240.0], [46.5, 1250.0], [46.6, 1256.0], [46.7, 1256.0], [46.8, 1271.0], [46.9, 1271.0], [47.0, 1272.0], [47.1, 1276.0], [47.2, 1276.0], [47.3, 1277.0], [47.4, 1277.0], [47.5, 1277.0], [47.6, 1300.0], [47.7, 1300.0], [47.8, 1314.0], [47.9, 1314.0], [48.0, 1314.0], [48.1, 1316.0], [48.2, 1317.0], [48.3, 1317.0], [48.4, 1331.0], [48.5, 1335.0], [48.6, 1335.0], [48.7, 1338.0], [48.8, 1338.0], [48.9, 1341.0], [49.0, 1347.0], [49.1, 1347.0], [49.2, 1360.0], [49.3, 1367.0], [49.4, 1367.0], [49.5, 1383.0], [49.6, 1383.0], [49.7, 1385.0], [49.8, 1387.0], [49.9, 1387.0], [50.0, 1390.0], [50.1, 1423.0], [50.2, 1423.0], [50.3, 1437.0], [50.4, 1441.0], [50.5, 1441.0], [50.6, 1453.0], [50.7, 1453.0], [50.8, 1453.0], [50.9, 1458.0], [51.0, 1458.0], [51.1, 1460.0], [51.2, 1472.0], [51.3, 1472.0], [51.4, 1476.0], [51.5, 1476.0], [51.6, 1477.0], [51.7, 1481.0], [51.8, 1481.0], [51.9, 1484.0], [52.0, 1490.0], [52.1, 1490.0], [52.2, 1493.0], [52.3, 1497.0], [52.4, 1497.0], [52.5, 1504.0], [52.6, 1504.0], [52.7, 1506.0], [52.8, 1509.0], [52.9, 1509.0], [53.0, 1513.0], [53.1, 1516.0], [53.2, 1516.0], [53.3, 1535.0], [53.4, 1535.0], [53.5, 1555.0], [53.6, 1579.0], [53.7, 1579.0], [53.8, 1594.0], [53.9, 1596.0], [54.0, 1596.0], [54.1, 1611.0], [54.2, 1635.0], [54.3, 1635.0], [54.4, 1638.0], [54.5, 1638.0], [54.6, 1646.0], [54.7, 1649.0], [54.8, 1649.0], [54.9, 1653.0], [55.0, 1658.0], [55.1, 1658.0], [55.2, 1677.0], [55.3, 1677.0], [55.4, 1678.0], [55.5, 1679.0], [55.6, 1679.0], [55.7, 1685.0], [55.8, 1688.0], [55.9, 1688.0], [56.0, 1698.0], [56.1, 1698.0], [56.2, 1701.0], [56.3, 1707.0], [56.4, 1707.0], [56.5, 1710.0], [56.6, 1719.0], [56.7, 1719.0], [56.8, 1720.0], [56.9, 1753.0], [57.0, 1753.0], [57.1, 1761.0], [57.2, 1761.0], [57.3, 1765.0], [57.4, 1779.0], [57.5, 1779.0], [57.6, 1780.0], [57.7, 1790.0], [57.8, 1790.0], [57.9, 1799.0], [58.0, 1799.0], [58.1, 1805.0], [58.2, 1829.0], [58.3, 1829.0], [58.4, 1846.0], [58.5, 1853.0], [58.6, 1853.0], [58.7, 1857.0], [58.8, 1861.0], [58.9, 1861.0], [59.0, 1861.0], [59.1, 1861.0], [59.2, 1871.0], [59.3, 1876.0], [59.4, 1876.0], [59.5, 1877.0], [59.6, 1878.0], [59.7, 1878.0], [59.8, 1887.0], [59.9, 1887.0], [60.0, 1893.0], [60.1, 1894.0], [60.2, 1894.0], [60.3, 1899.0], [60.4, 1900.0], [60.5, 1900.0], [60.6, 1902.0], [60.7, 1911.0], [60.8, 1911.0], [60.9, 1919.0], [61.0, 1919.0], [61.1, 1924.0], [61.2, 1928.0], [61.3, 1928.0], [61.4, 1941.0], [61.5, 1945.0], [61.6, 1945.0], [61.7, 1951.0], [61.8, 1951.0], [61.9, 1954.0], [62.0, 1956.0], [62.1, 1956.0], [62.2, 1958.0], [62.3, 1960.0], [62.4, 1960.0], [62.5, 1968.0], [62.6, 1972.0], [62.7, 1972.0], [62.8, 1978.0], [62.9, 1978.0], [63.0, 1985.0], [63.1, 1987.0], [63.2, 1987.0], [63.3, 1991.0], [63.4, 1991.0], [63.5, 1991.0], [63.6, 1992.0], [63.7, 1992.0], [63.8, 2006.0], [63.9, 2008.0], [64.0, 2008.0], [64.1, 2009.0], [64.2, 2010.0], [64.3, 2010.0], [64.4, 2016.0], [64.5, 2016.0], [64.6, 2017.0], [64.7, 2017.0], [64.8, 2017.0], [64.9, 2024.0], [65.0, 2025.0], [65.1, 2025.0], [65.2, 2028.0], [65.3, 2033.0], [65.4, 2033.0], [65.5, 2038.0], [65.6, 2038.0], [65.7, 2041.0], [65.8, 2042.0], [65.9, 2042.0], [66.0, 2046.0], [66.1, 2050.0], [66.2, 2050.0], [66.3, 2051.0], [66.4, 2051.0], [66.5, 2053.0], [66.6, 2054.0], [66.7, 2054.0], [66.8, 2067.0], [66.9, 2068.0], [67.0, 2068.0], [67.1, 2071.0], [67.2, 2072.0], [67.3, 2072.0], [67.4, 2085.0], [67.5, 2085.0], [67.6, 2094.0], [67.7, 2096.0], [67.8, 2096.0], [67.9, 2109.0], [68.0, 2113.0], [68.1, 2113.0], [68.2, 2129.0], [68.3, 2129.0], [68.4, 2129.0], [68.5, 2130.0], [68.6, 2130.0], [68.7, 2142.0], [68.8, 2144.0], [68.9, 2144.0], [69.0, 2148.0], [69.1, 2149.0], [69.2, 2149.0], [69.3, 2157.0], [69.4, 2157.0], [69.5, 2177.0], [69.6, 2179.0], [69.7, 2179.0], [69.8, 2184.0], [69.9, 2190.0], [70.0, 2190.0], [70.1, 2220.0], [70.2, 2220.0], [70.3, 2224.0], [70.4, 2238.0], [70.5, 2238.0], [70.6, 2242.0], [70.7, 2242.0], [70.8, 2242.0], [70.9, 2260.0], [71.0, 2261.0], [71.1, 2261.0], [71.2, 2261.0], [71.3, 2261.0], [71.4, 2265.0], [71.5, 2266.0], [71.6, 2266.0], [71.7, 2267.0], [71.8, 2270.0], [71.9, 2270.0], [72.0, 2282.0], [72.1, 2282.0], [72.2, 2289.0], [72.3, 2295.0], [72.4, 2295.0], [72.5, 2295.0], [72.6, 2311.0], [72.7, 2311.0], [72.8, 2312.0], [72.9, 2312.0], [73.0, 2313.0], [73.1, 2313.0], [73.2, 2313.0], [73.3, 2324.0], [73.4, 2331.0], [73.5, 2331.0], [73.6, 2340.0], [73.7, 2365.0], [73.8, 2365.0], [73.9, 2436.0], [74.0, 2436.0], [74.1, 2441.0], [74.2, 2479.0], [74.3, 2479.0], [74.4, 2490.0], [74.5, 2493.0], [74.6, 2493.0], [74.7, 2509.0], [74.8, 2509.0], [74.9, 2516.0], [75.0, 2522.0], [75.1, 2522.0], [75.2, 2579.0], [75.3, 2648.0], [75.4, 2648.0], [75.5, 2653.0], [75.6, 2659.0], [75.7, 2659.0], [75.8, 2668.0], [75.9, 2668.0], [76.0, 2671.0], [76.1, 2677.0], [76.2, 2677.0], [76.3, 2702.0], [76.4, 2748.0], [76.5, 2748.0], [76.6, 2750.0], [76.7, 2750.0], [76.8, 2760.0], [76.9, 2801.0], [77.0, 2801.0], [77.1, 2811.0], [77.2, 2834.0], [77.3, 2834.0], [77.4, 2846.0], [77.5, 2876.0], [77.6, 2876.0], [77.7, 2878.0], [77.8, 2878.0], [77.9, 2892.0], [78.0, 2902.0], [78.1, 2902.0], [78.2, 2913.0], [78.3, 2924.0], [78.4, 2924.0], [78.5, 2938.0], [78.6, 2938.0], [78.7, 2966.0], [78.8, 2978.0], [78.9, 2978.0], [79.0, 2983.0], [79.1, 3000.0], [79.2, 3000.0], [79.3, 3020.0], [79.4, 3029.0], [79.5, 3029.0], [79.6, 3037.0], [79.7, 3037.0], [79.8, 3046.0], [79.9, 3082.0], [80.0, 3082.0], [80.1, 3099.0], [80.2, 3105.0], [80.3, 3105.0], [80.4, 3146.0], [80.5, 3146.0], [80.6, 3147.0], [80.7, 3169.0], [80.8, 3169.0], [80.9, 3173.0], [81.0, 3193.0], [81.1, 3193.0], [81.2, 3217.0], [81.3, 3219.0], [81.4, 3219.0], [81.5, 3231.0], [81.6, 3231.0], [81.7, 3246.0], [81.8, 3249.0], [81.9, 3249.0], [82.0, 3270.0], [82.1, 3273.0], [82.2, 3273.0], [82.3, 3278.0], [82.4, 3278.0], [82.5, 3280.0], [82.6, 3287.0], [82.7, 3287.0], [82.8, 3308.0], [82.9, 3335.0], [83.0, 3335.0], [83.1, 3348.0], [83.2, 3348.0], [83.3, 3427.0], [83.4, 3432.0], [83.5, 3432.0], [83.6, 3442.0], [83.7, 3491.0], [83.8, 3491.0], [83.9, 3502.0], [84.0, 3515.0], [84.1, 3515.0], [84.2, 3517.0], [84.3, 3517.0], [84.4, 3539.0], [84.5, 3598.0], [84.6, 3598.0], [84.7, 3612.0], [84.8, 3616.0], [84.9, 3616.0], [85.0, 3657.0], [85.1, 3657.0], [85.2, 3672.0], [85.3, 3678.0], [85.4, 3678.0], [85.5, 3714.0], [85.6, 3719.0], [85.7, 3719.0], [85.8, 3727.0], [85.9, 3748.0], [86.0, 3748.0], [86.1, 3792.0], [86.2, 3792.0], [86.3, 3793.0], [86.4, 3815.0], [86.5, 3815.0], [86.6, 3816.0], [86.7, 3898.0], [86.8, 3898.0], [86.9, 3915.0], [87.0, 3915.0], [87.1, 3923.0], [87.2, 3932.0], [87.3, 3932.0], [87.4, 3937.0], [87.5, 3944.0], [87.6, 3944.0], [87.7, 3957.0], [87.8, 3968.0], [87.9, 3968.0], [88.0, 3974.0], [88.1, 3974.0], [88.2, 4019.0], [88.3, 4032.0], [88.4, 4032.0], [88.5, 4043.0], [88.6, 4049.0], [88.7, 4049.0], [88.8, 4103.0], [88.9, 4103.0], [89.0, 4104.0], [89.1, 4122.0], [89.2, 4122.0], [89.3, 4202.0], [89.4, 4223.0], [89.5, 4223.0], [89.6, 4251.0], [89.7, 4265.0], [89.8, 4265.0], [89.9, 4272.0], [90.0, 4272.0], [90.1, 4309.0], [90.2, 4320.0], [90.3, 4320.0], [90.4, 4352.0], [90.5, 4373.0], [90.6, 4373.0], [90.7, 4402.0], [90.8, 4402.0], [90.9, 4421.0], [91.0, 4430.0], [91.1, 4430.0], [91.2, 4519.0], [91.3, 4527.0], [91.4, 4527.0], [91.5, 4655.0], [91.6, 4655.0], [91.7, 4664.0], [91.8, 4746.0], [91.9, 4746.0], [92.0, 4756.0], [92.1, 4851.0], [92.2, 4851.0], [92.3, 4881.0], [92.4, 4965.0], [92.5, 4965.0], [92.6, 4971.0], [92.7, 4971.0], [92.8, 4989.0], [92.9, 5018.0], [93.0, 5018.0], [93.1, 5027.0], [93.2, 5157.0], [93.3, 5157.0], [93.4, 5167.0], [93.5, 5167.0], [93.6, 5208.0], [93.7, 5307.0], [93.8, 5307.0], [93.9, 5330.0], [94.0, 5488.0], [94.1, 5488.0], [94.2, 5607.0], [94.3, 5710.0], [94.4, 5710.0], [94.5, 5843.0], [94.6, 5843.0], [94.7, 5965.0], [94.8, 5981.0], [94.9, 5981.0], [95.0, 5994.0], [95.1, 6096.0], [95.2, 6096.0], [95.3, 6134.0], [95.4, 6134.0], [95.5, 6215.0], [95.6, 6303.0], [95.7, 6303.0], [95.8, 6440.0], [95.9, 6588.0], [96.0, 6588.0], [96.1, 6846.0], [96.2, 7037.0], [96.3, 7037.0], [96.4, 7113.0], [96.5, 7113.0], [96.6, 7173.0], [96.7, 7865.0], [96.8, 7865.0], [96.9, 8007.0], [97.0, 8038.0], [97.1, 8038.0], [97.2, 8192.0], [97.3, 8192.0], [97.4, 8571.0], [97.5, 8975.0], [97.6, 8975.0], [97.7, 9127.0], [97.8, 9375.0], [97.9, 9375.0], [98.0, 9478.0], [98.1, 9941.0], [98.2, 9941.0], [98.3, 9971.0], [98.4, 9971.0], [98.5, 9989.0], [98.6, 10085.0], [98.7, 10085.0], [98.8, 10103.0], [98.9, 10431.0], [99.0, 10431.0], [99.1, 11143.0], [99.2, 11143.0], [99.3, 11290.0], [99.4, 11573.0], [99.5, 11573.0], [99.6, 11972.0], [99.7, 12354.0], [99.8, 12354.0], [99.9, 14920.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[0.0, 5506.0], [0.1, 5506.0], [0.2, 5511.0], [0.3, 5511.0], [0.4, 5514.0], [0.5, 5611.0], [0.6, 5611.0], [0.7, 5642.0], [0.8, 5642.0], [0.9, 5695.0], [1.0, 5700.0], [1.1, 5700.0], [1.2, 5774.0], [1.3, 5774.0], [1.4, 5814.0], [1.5, 5831.0], [1.6, 5831.0], [1.7, 5838.0], [1.8, 5860.0], [1.9, 5860.0], [2.0, 5885.0], [2.1, 5885.0], [2.2, 5892.0], [2.3, 5902.0], [2.4, 5902.0], [2.5, 5911.0], [2.6, 5911.0], [2.7, 5926.0], [2.8, 5928.0], [2.9, 5928.0], [3.0, 5966.0], [3.1, 5978.0], [3.2, 5978.0], [3.3, 5990.0], [3.4, 5990.0], [3.5, 6016.0], [3.6, 6050.0], [3.7, 6050.0], [3.8, 6161.0], [3.9, 6161.0], [4.0, 6176.0], [4.1, 6194.0], [4.2, 6194.0], [4.3, 6306.0], [4.4, 6328.0], [4.5, 6328.0], [4.6, 6328.0], [4.7, 6328.0], [4.8, 6370.0], [4.9, 6379.0], [5.0, 6379.0], [5.1, 6399.0], [5.2, 6399.0], [5.3, 6517.0], [5.4, 6527.0], [5.5, 6527.0], [5.6, 6597.0], [5.7, 6597.0], [5.8, 6607.0], [5.9, 6664.0], [6.0, 6664.0], [6.1, 6725.0], [6.2, 6729.0], [6.3, 6729.0], [6.4, 6788.0], [6.5, 6788.0], [6.6, 6801.0], [6.7, 6905.0], [6.8, 6905.0], [6.9, 6923.0], [7.0, 6923.0], [7.1, 6980.0], [7.2, 7037.0], [7.3, 7037.0], [7.4, 7043.0], [7.5, 7088.0], [7.6, 7088.0], [7.7, 7351.0], [7.8, 7351.0], [7.9, 7354.0], [8.0, 7403.0], [8.1, 7403.0], [8.2, 7490.0], [8.3, 7490.0], [8.4, 7565.0], [8.5, 7675.0], [8.6, 7675.0], [8.7, 7689.0], [8.8, 7746.0], [8.9, 7746.0], [9.0, 7825.0], [9.1, 7825.0], [9.2, 7961.0], [9.3, 8011.0], [9.4, 8011.0], [9.5, 8132.0], [9.6, 8132.0], [9.7, 8225.0], [9.8, 8318.0], [9.9, 8318.0], [10.0, 8426.0], [10.1, 8540.0], [10.2, 8540.0], [10.3, 8626.0], [10.4, 8626.0], [10.5, 8939.0], [10.6, 9014.0], [10.7, 9014.0], [10.8, 9016.0], [10.9, 9016.0], [11.0, 9181.0], [11.1, 9187.0], [11.2, 9187.0], [11.3, 9476.0], [11.4, 9476.0], [11.5, 9509.0], [11.6, 9553.0], [11.7, 9553.0], [11.8, 9627.0], [11.9, 9642.0], [12.0, 9642.0], [12.1, 9723.0], [12.2, 9723.0], [12.3, 9775.0], [12.4, 9810.0], [12.5, 9810.0], [12.6, 9822.0], [12.7, 9822.0], [12.8, 9833.0], [12.9, 10025.0], [13.0, 10025.0], [13.1, 10083.0], [13.2, 10215.0], [13.3, 10215.0], [13.4, 10294.0], [13.5, 10294.0], [13.6, 10340.0], [13.7, 10425.0], [13.8, 10425.0], [13.9, 10604.0], [14.0, 10604.0], [14.1, 10621.0], [14.2, 10715.0], [14.3, 10715.0], [14.4, 10774.0], [14.5, 10822.0], [14.6, 10822.0], [14.7, 10824.0], [14.8, 10824.0], [14.9, 10900.0], [15.0, 10959.0], [15.1, 10959.0], [15.2, 11002.0], [15.3, 11002.0], [15.4, 11080.0], [15.5, 11121.0], [15.6, 11121.0], [15.7, 11134.0], [15.8, 11359.0], [15.9, 11359.0], [16.0, 11375.0], [16.1, 11375.0], [16.2, 11450.0], [16.3, 11472.0], [16.4, 11472.0], [16.5, 11479.0], [16.6, 11479.0], [16.7, 11550.0], [16.8, 11561.0], [16.9, 11561.0], [17.0, 11679.0], [17.1, 11679.0], [17.2, 11687.0], [17.3, 11814.0], [17.4, 11814.0], [17.5, 11975.0], [17.6, 12535.0], [17.7, 12535.0], [17.8, 12550.0], [17.9, 12550.0], [18.0, 12677.0], [18.1, 12680.0], [18.2, 12680.0], [18.3, 12715.0], [18.4, 12715.0], [18.5, 12734.0], [18.6, 12950.0], [18.7, 12950.0], [18.8, 12965.0], [18.9, 13006.0], [19.0, 13006.0], [19.1, 13025.0], [19.2, 13025.0], [19.3, 13044.0], [19.4, 13058.0], [19.5, 13058.0], [19.6, 13128.0], [19.7, 13128.0], [19.8, 13132.0], [19.9, 13140.0], [20.0, 13140.0], [20.1, 13157.0], [20.2, 13159.0], [20.3, 13159.0], [20.4, 13241.0], [20.5, 13241.0], [20.6, 13281.0], [20.7, 13386.0], [20.8, 13386.0], [20.9, 13404.0], [21.0, 13404.0], [21.1, 13423.0], [21.2, 13651.0], [21.3, 13651.0], [21.4, 13654.0], [21.5, 13877.0], [21.6, 13877.0], [21.7, 14056.0], [21.8, 14056.0], [21.9, 14113.0], [22.0, 14124.0], [22.1, 14124.0], [22.2, 14153.0], [22.3, 14153.0], [22.4, 14268.0], [22.5, 14571.0], [22.6, 14571.0], [22.7, 14576.0], [22.8, 14576.0], [22.9, 14729.0], [23.0, 14872.0], [23.1, 14872.0], [23.2, 14897.0], [23.3, 14969.0], [23.4, 14969.0], [23.5, 15055.0], [23.6, 15055.0], [23.7, 15062.0], [23.8, 15071.0], [23.9, 15071.0], [24.0, 15214.0], [24.1, 15214.0], [24.2, 15238.0], [24.3, 15280.0], [24.4, 15280.0], [24.5, 15287.0], [24.6, 15314.0], [24.7, 15314.0], [24.8, 15338.0], [24.9, 15338.0], [25.0, 15471.0], [25.1, 15473.0], [25.2, 15473.0], [25.3, 15478.0], [25.4, 15478.0], [25.5, 15512.0], [25.6, 15580.0], [25.7, 15580.0], [25.8, 15602.0], [25.9, 15785.0], [26.0, 15785.0], [26.1, 15845.0], [26.2, 15845.0], [26.3, 16097.0], [26.4, 16255.0], [26.5, 16255.0], [26.6, 16284.0], [26.7, 16284.0], [26.8, 16353.0], [26.9, 16399.0], [27.0, 16399.0], [27.1, 16410.0], [27.2, 16445.0], [27.3, 16445.0], [27.4, 16527.0], [27.5, 16527.0], [27.6, 16618.0], [27.7, 16653.0], [27.8, 16653.0], [27.9, 16703.0], [28.0, 16703.0], [28.1, 17100.0], [28.2, 17224.0], [28.3, 17224.0], [28.4, 17285.0], [28.5, 17285.0], [28.6, 17362.0], [28.7, 17397.0], [28.8, 17397.0], [28.9, 17600.0], [29.0, 17674.0], [29.1, 17674.0], [29.2, 17723.0], [29.3, 17723.0], [29.4, 17842.0], [29.5, 17857.0], [29.6, 17857.0], [29.7, 17904.0], [29.8, 17904.0], [29.9, 17907.0], [30.0, 17955.0], [30.1, 17955.0], [30.2, 17962.0], [30.3, 18015.0], [30.4, 18015.0], [30.5, 18036.0], [30.6, 18036.0], [30.7, 18048.0], [30.8, 18137.0], [30.9, 18137.0], [31.0, 18149.0], [31.1, 18149.0], [31.2, 18174.0], [31.3, 18215.0], [31.4, 18215.0], [31.5, 18216.0], [31.6, 18258.0], [31.7, 18258.0], [31.8, 18284.0], [31.9, 18284.0], [32.0, 18307.0], [32.1, 18454.0], [32.2, 18454.0], [32.3, 18676.0], [32.4, 18676.0], [32.5, 18728.0], [32.6, 18769.0], [32.7, 18769.0], [32.8, 18796.0], [32.9, 18878.0], [33.0, 18878.0], [33.1, 18909.0], [33.2, 18909.0], [33.3, 18960.0], [33.4, 19037.0], [33.5, 19037.0], [33.6, 19084.0], [33.7, 19084.0], [33.8, 19103.0], [33.9, 19143.0], [34.0, 19143.0], [34.1, 19248.0], [34.2, 19248.0], [34.3, 19263.0], [34.4, 19305.0], [34.5, 19305.0], [34.6, 19452.0], [34.7, 19492.0], [34.8, 19492.0], [34.9, 19503.0], [35.0, 19503.0], [35.1, 19608.0], [35.2, 19613.0], [35.3, 19613.0], [35.4, 19744.0], [35.5, 19744.0], [35.6, 19810.0], [35.7, 19827.0], [35.8, 19827.0], [35.9, 19974.0], [36.0, 19977.0], [36.1, 19977.0], [36.2, 19978.0], [36.3, 19978.0], [36.4, 19985.0], [36.5, 20010.0], [36.6, 20010.0], [36.7, 20010.0], [36.8, 20010.0], [36.9, 20038.0], [37.0, 20067.0], [37.1, 20067.0], [37.2, 20117.0], [37.3, 20137.0], [37.4, 20137.0], [37.5, 20137.0], [37.6, 20137.0], [37.7, 20169.0], [37.8, 20203.0], [37.9, 20203.0], [38.0, 20295.0], [38.1, 20295.0], [38.2, 20354.0], [38.3, 20359.0], [38.4, 20359.0], [38.5, 20396.0], [38.6, 20407.0], [38.7, 20407.0], [38.8, 20421.0], [38.9, 20421.0], [39.0, 20433.0], [39.1, 20454.0], [39.2, 20454.0], [39.3, 20502.0], [39.4, 20502.0], [39.5, 20549.0], [39.6, 20559.0], [39.7, 20559.0], [39.8, 20712.0], [39.9, 20712.0], [40.0, 20745.0], [40.1, 20834.0], [40.2, 20834.0], [40.3, 20963.0], [40.4, 20972.0], [40.5, 20972.0], [40.6, 21047.0], [40.7, 21047.0], [40.8, 21442.0], [40.9, 21459.0], [41.0, 21459.0], [41.1, 21521.0], [41.2, 21521.0], [41.3, 21616.0], [41.4, 21705.0], [41.5, 21705.0], [41.6, 21839.0], [41.7, 21995.0], [41.8, 21995.0], [41.9, 22092.0], [42.0, 22092.0], [42.1, 22145.0], [42.2, 22161.0], [42.3, 22161.0], [42.4, 22282.0], [42.5, 22282.0], [42.6, 22490.0], [42.7, 22513.0], [42.8, 22513.0], [42.9, 22518.0], [43.0, 22531.0], [43.1, 22531.0], [43.2, 22613.0], [43.3, 22613.0], [43.4, 22642.0], [43.5, 22660.0], [43.6, 22660.0], [43.7, 22684.0], [43.8, 22684.0], [43.9, 22784.0], [44.0, 22794.0], [44.1, 22794.0], [44.2, 22976.0], [44.3, 23103.0], [44.4, 23103.0], [44.5, 23337.0], [44.6, 23337.0], [44.7, 23383.0], [44.8, 23429.0], [44.9, 23429.0], [45.0, 23481.0], [45.1, 23481.0], [45.2, 23503.0], [45.3, 23549.0], [45.4, 23549.0], [45.5, 23557.0], [45.6, 23557.0], [45.7, 23607.0], [45.8, 23611.0], [45.9, 23611.0], [46.0, 23671.0], [46.1, 23723.0], [46.2, 23723.0], [46.3, 23742.0], [46.4, 23742.0], [46.5, 23888.0], [46.6, 23946.0], [46.7, 23946.0], [46.8, 23962.0], [46.9, 23962.0], [47.0, 23983.0], [47.1, 24099.0], [47.2, 24099.0], [47.3, 24187.0], [47.4, 24287.0], [47.5, 24287.0], [47.6, 24326.0], [47.7, 24326.0], [47.8, 24397.0], [47.9, 24451.0], [48.0, 24451.0], [48.1, 24472.0], [48.2, 24472.0], [48.3, 24482.0], [48.4, 24585.0], [48.5, 24585.0], [48.6, 24732.0], [48.7, 24824.0], [48.8, 24824.0], [48.9, 24858.0], [49.0, 24858.0], [49.1, 25216.0], [49.2, 25218.0], [49.3, 25218.0], [49.4, 25268.0], [49.5, 25268.0], [49.6, 25476.0], [49.7, 25499.0], [49.8, 25499.0], [49.9, 25513.0], [50.0, 25536.0], [50.1, 25536.0], [50.2, 25813.0], [50.3, 25813.0], [50.4, 25955.0], [50.5, 26091.0], [50.6, 26091.0], [50.7, 26119.0], [50.8, 26119.0], [50.9, 26139.0], [51.0, 26378.0], [51.1, 26378.0], [51.2, 26414.0], [51.3, 26414.0], [51.4, 26558.0], [51.5, 26559.0], [51.6, 26559.0], [51.7, 26580.0], [51.8, 26673.0], [51.9, 26673.0], [52.0, 26979.0], [52.1, 26979.0], [52.2, 27142.0], [52.3, 27147.0], [52.4, 27147.0], [52.5, 27332.0], [52.6, 27332.0], [52.7, 27536.0], [52.8, 27540.0], [52.9, 27540.0], [53.0, 27558.0], [53.1, 27710.0], [53.2, 27710.0], [53.3, 27710.0], [53.4, 27710.0], [53.5, 27880.0], [53.6, 27958.0], [53.7, 27958.0], [53.8, 28079.0], [53.9, 28079.0], [54.0, 28115.0], [54.1, 28244.0], [54.2, 28244.0], [54.3, 28247.0], [54.4, 28254.0], [54.5, 28254.0], [54.6, 28263.0], [54.7, 28263.0], [54.8, 28532.0], [54.9, 28594.0], [55.0, 28594.0], [55.1, 28602.0], [55.2, 28602.0], [55.3, 28654.0], [55.4, 28662.0], [55.5, 28662.0], [55.6, 28674.0], [55.7, 28674.0], [55.8, 28723.0], [55.9, 28862.0], [56.0, 28862.0], [56.1, 28864.0], [56.2, 28962.0], [56.3, 28962.0], [56.4, 28984.0], [56.5, 28984.0], [56.6, 29034.0], [56.7, 29035.0], [56.8, 29035.0], [56.9, 29064.0], [57.0, 29064.0], [57.1, 29135.0], [57.2, 29144.0], [57.3, 29144.0], [57.4, 29176.0], [57.5, 29313.0], [57.6, 29313.0], [57.7, 29325.0], [57.8, 29325.0], [57.9, 29345.0], [58.0, 29366.0], [58.1, 29366.0], [58.2, 29642.0], [58.3, 29642.0], [58.4, 29784.0], [58.5, 29787.0], [58.6, 29787.0], [58.7, 29811.0], [58.8, 29821.0], [58.9, 29821.0], [59.0, 29838.0], [59.1, 29838.0], [59.2, 29858.0], [59.3, 29923.0], [59.4, 29923.0], [59.5, 29995.0], [59.6, 29995.0], [59.7, 30000.0], [59.8, 30003.0], [59.9, 30003.0], [60.0, 30098.0], [60.1, 30150.0], [60.2, 30150.0], [60.3, 30174.0], [60.4, 30174.0], [60.5, 30181.0], [60.6, 30192.0], [60.7, 30192.0], [60.8, 30261.0], [60.9, 30261.0], [61.0, 30264.0], [61.1, 30274.0], [61.2, 30274.0], [61.3, 30291.0], [61.4, 30291.0], [61.5, 30317.0], [61.6, 30335.0], [61.7, 30335.0], [61.8, 30369.0], [61.9, 30525.0], [62.0, 30525.0], [62.1, 30569.0], [62.2, 30569.0], [62.3, 30696.0], [62.4, 30699.0], [62.5, 30699.0], [62.6, 30796.0], [62.7, 30796.0], [62.8, 30822.0], [62.9, 30854.0], [63.0, 30854.0], [63.1, 30879.0], [63.2, 30893.0], [63.3, 30893.0], [63.4, 30896.0], [63.5, 30896.0], [63.6, 30915.0], [63.7, 30921.0], [63.8, 30921.0], [63.9, 30924.0], [64.0, 30924.0], [64.1, 31008.0], [64.2, 31013.0], [64.3, 31013.0], [64.4, 31033.0], [64.5, 31099.0], [64.6, 31099.0], [64.7, 31109.0], [64.8, 31109.0], [64.9, 31185.0], [65.0, 31222.0], [65.1, 31222.0], [65.2, 31275.0], [65.3, 31275.0], [65.4, 31378.0], [65.5, 31440.0], [65.6, 31440.0], [65.7, 31553.0], [65.8, 31659.0], [65.9, 31659.0], [66.0, 31768.0], [66.1, 31768.0], [66.2, 31834.0], [66.3, 31848.0], [66.4, 31848.0], [66.5, 31930.0], [66.6, 31930.0], [66.7, 31957.0], [66.8, 32007.0], [66.9, 32007.0], [67.0, 32013.0], [67.1, 32013.0], [67.2, 32037.0], [67.3, 32074.0], [67.4, 32074.0], [67.5, 32106.0], [67.6, 32132.0], [67.7, 32132.0], [67.8, 32135.0], [67.9, 32135.0], [68.0, 32146.0], [68.1, 32151.0], [68.2, 32151.0], [68.3, 32221.0], [68.4, 32221.0], [68.5, 32343.0], [68.6, 32343.0], [68.7, 32343.0], [68.8, 32345.0], [68.9, 32345.0], [69.0, 32345.0], [69.1, 32351.0], [69.2, 32351.0], [69.3, 32360.0], [69.4, 32364.0], [69.5, 32364.0], [69.6, 32364.0], [69.7, 32364.0], [69.8, 32451.0], [69.9, 32461.0], [70.0, 32461.0], [70.1, 32485.0], [70.2, 32561.0], [70.3, 32561.0], [70.4, 32653.0], [70.5, 32653.0], [70.6, 32655.0], [70.7, 32665.0], [70.8, 32665.0], [70.9, 32849.0], [71.0, 32849.0], [71.1, 32864.0], [71.2, 32876.0], [71.3, 32876.0], [71.4, 32895.0], [71.5, 32916.0], [71.6, 32916.0], [71.7, 32918.0], [71.8, 32918.0], [71.9, 33047.0], [72.0, 33103.0], [72.1, 33103.0], [72.2, 33117.0], [72.3, 33117.0], [72.4, 33118.0], [72.5, 33162.0], [72.6, 33162.0], [72.7, 33218.0], [72.8, 33218.0], [72.9, 33218.0], [73.0, 33245.0], [73.1, 33245.0], [73.2, 33247.0], [73.3, 33263.0], [73.4, 33263.0], [73.5, 33275.0], [73.6, 33275.0], [73.7, 33306.0], [73.8, 33338.0], [73.9, 33338.0], [74.0, 33350.0], [74.1, 33350.0], [74.2, 33445.0], [74.3, 33480.0], [74.4, 33480.0], [74.5, 33531.0], [74.6, 33650.0], [74.7, 33650.0], [74.8, 33749.0], [74.9, 33749.0], [75.0, 33765.0], [75.1, 33775.0], [75.2, 33775.0], [75.3, 33796.0], [75.4, 33796.0], [75.5, 33822.0], [75.6, 33828.0], [75.7, 33828.0], [75.8, 33829.0], [75.9, 33829.0], [76.0, 33829.0], [76.1, 33873.0], [76.2, 33873.0], [76.3, 33891.0], [76.4, 33926.0], [76.5, 33926.0], [76.6, 34022.0], [76.7, 34022.0], [76.8, 34091.0], [76.9, 34157.0], [77.0, 34157.0], [77.1, 34190.0], [77.2, 34306.0], [77.3, 34306.0], [77.4, 34373.0], [77.5, 34373.0], [77.6, 34401.0], [77.7, 34426.0], [77.8, 34426.0], [77.9, 34461.0], [78.0, 34461.0], [78.1, 34503.0], [78.2, 34529.0], [78.3, 34529.0], [78.4, 34595.0], [78.5, 34595.0], [78.6, 34624.0], [78.7, 34701.0], [78.8, 34701.0], [78.9, 34719.0], [79.0, 34849.0], [79.1, 34849.0], [79.2, 35088.0], [79.3, 35088.0], [79.4, 35222.0], [79.5, 35279.0], [79.6, 35279.0], [79.7, 35291.0], [79.8, 35291.0], [79.9, 35310.0], [80.0, 35390.0], [80.1, 35390.0], [80.2, 35493.0], [80.3, 35574.0], [80.4, 35574.0], [80.5, 35587.0], [80.6, 35587.0], [80.7, 35675.0], [80.8, 35721.0], [80.9, 35721.0], [81.0, 35776.0], [81.1, 35776.0], [81.2, 35788.0], [81.3, 35807.0], [81.4, 35807.0], [81.5, 35874.0], [81.6, 35976.0], [81.7, 35976.0], [81.8, 36052.0], [81.9, 36052.0], [82.0, 36113.0], [82.1, 36183.0], [82.2, 36183.0], [82.3, 36190.0], [82.4, 36190.0], [82.5, 36234.0], [82.6, 36316.0], [82.7, 36316.0], [82.8, 36359.0], [82.9, 36404.0], [83.0, 36404.0], [83.1, 36407.0], [83.2, 36407.0], [83.3, 36452.0], [83.4, 36481.0], [83.5, 36481.0], [83.6, 36539.0], [83.7, 36539.0], [83.8, 36543.0], [83.9, 36546.0], [84.0, 36546.0], [84.1, 36580.0], [84.2, 36580.0], [84.3, 36683.0], [84.4, 36766.0], [84.5, 36766.0], [84.6, 36853.0], [84.7, 36913.0], [84.8, 36913.0], [84.9, 36992.0], [85.0, 36992.0], [85.1, 37087.0], [85.2, 37091.0], [85.3, 37091.0], [85.4, 37209.0], [85.5, 37209.0], [85.6, 37216.0], [85.7, 37224.0], [85.8, 37224.0], [85.9, 37335.0], [86.0, 37411.0], [86.1, 37411.0], [86.2, 37456.0], [86.3, 37456.0], [86.4, 37492.0], [86.5, 37692.0], [86.6, 37692.0], [86.7, 37741.0], [86.8, 37741.0], [86.9, 37776.0], [87.0, 37807.0], [87.1, 37807.0], [87.2, 37906.0], [87.3, 37938.0], [87.4, 37938.0], [87.5, 37943.0], [87.6, 37943.0], [87.7, 38222.0], [87.8, 38337.0], [87.9, 38337.0], [88.0, 38419.0], [88.1, 38419.0], [88.2, 38446.0], [88.3, 38465.0], [88.4, 38465.0], [88.5, 38468.0], [88.6, 38503.0], [88.7, 38503.0], [88.8, 38523.0], [88.9, 38523.0], [89.0, 38525.0], [89.1, 38613.0], [89.2, 38613.0], [89.3, 38651.0], [89.4, 38651.0], [89.5, 38688.0], [89.6, 38721.0], [89.7, 38721.0], [89.8, 38912.0], [89.9, 38912.0], [90.0, 38913.0], [90.1, 38950.0], [90.2, 38950.0], [90.3, 39090.0], [90.4, 39139.0], [90.5, 39139.0], [90.6, 39217.0], [90.7, 39217.0], [90.8, 39276.0], [90.9, 39595.0], [91.0, 39595.0], [91.1, 39658.0], [91.2, 39658.0], [91.3, 39744.0], [91.4, 39754.0], [91.5, 39754.0], [91.6, 39778.0], [91.7, 39811.0], [91.8, 39811.0], [91.9, 39885.0], [92.0, 39885.0], [92.1, 40051.0], [92.2, 40102.0], [92.3, 40102.0], [92.4, 40124.0], [92.5, 40124.0], [92.6, 40225.0], [92.7, 40239.0], [92.8, 40239.0], [92.9, 40382.0], [93.0, 40385.0], [93.1, 40385.0], [93.2, 40683.0], [93.3, 40683.0], [93.4, 40719.0], [93.5, 40777.0], [93.6, 40777.0], [93.7, 40830.0], [93.8, 40830.0], [93.9, 41022.0], [94.0, 41100.0], [94.1, 41100.0], [94.2, 41286.0], [94.3, 41481.0], [94.4, 41481.0], [94.5, 41547.0], [94.6, 41547.0], [94.7, 41828.0], [94.8, 41850.0], [94.9, 41850.0], [95.0, 42097.0], [95.1, 42097.0], [95.2, 42114.0], [95.3, 42454.0], [95.4, 42454.0], [95.5, 42657.0], [95.6, 42657.0], [95.7, 42779.0], [95.8, 42861.0], [95.9, 42861.0], [96.0, 42897.0], [96.1, 43138.0], [96.2, 43138.0], [96.3, 43306.0], [96.4, 43306.0], [96.5, 43340.0], [96.6, 43491.0], [96.7, 43491.0], [96.8, 43604.0], [96.9, 43604.0], [97.0, 43652.0], [97.1, 43702.0], [97.2, 43702.0], [97.3, 43911.0], [97.4, 44153.0], [97.5, 44153.0], [97.6, 44553.0], [97.7, 44553.0], [97.8, 44568.0], [97.9, 44852.0], [98.0, 44852.0], [98.1, 45025.0], [98.2, 45025.0], [98.3, 45161.0], [98.4, 45454.0], [98.5, 45454.0], [98.6, 45597.0], [98.7, 46112.0], [98.8, 46112.0], [98.9, 46306.0], [99.0, 46306.0], [99.1, 46355.0], [99.2, 46742.0], [99.3, 46742.0], [99.4, 47022.0], [99.5, 47022.0], [99.6, 47760.0], [99.7, 47783.0], [99.8, 47783.0], [99.9, 50224.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 107.0], [6.8, 107.0], [6.9, 113.0], [7.0, 113.0], [7.1, 114.0], [7.2, 115.0], [7.3, 115.0], [7.4, 117.0], [7.5, 117.0], [7.6, 117.0], [7.7, 118.0], [7.8, 118.0], [7.9, 118.0], [8.0, 118.0], [8.1, 120.0], [8.2, 120.0], [8.3, 120.0], [8.4, 120.0], [8.5, 120.0], [8.6, 121.0], [8.7, 122.0], [8.8, 122.0], [8.9, 122.0], [9.0, 122.0], [9.1, 123.0], [9.2, 123.0], [9.3, 123.0], [9.4, 123.0], [9.5, 123.0], [9.6, 123.0], [9.7, 123.0], [9.8, 123.0], [9.9, 124.0], [10.0, 124.0], [10.1, 124.0], [10.2, 124.0], [10.3, 125.0], [10.4, 126.0], [10.5, 126.0], [10.6, 126.0], [10.7, 126.0], [10.8, 126.0], [10.9, 127.0], [11.0, 127.0], [11.1, 127.0], [11.2, 127.0], [11.3, 128.0], [11.4, 128.0], [11.5, 128.0], [11.6, 128.0], [11.7, 128.0], [11.8, 129.0], [11.9, 129.0], [12.0, 129.0], [12.1, 129.0], [12.2, 129.0], [12.3, 129.0], [12.4, 130.0], [12.5, 130.0], [12.6, 130.0], [12.7, 130.0], [12.8, 131.0], [12.9, 131.0], [13.0, 131.0], [13.1, 131.0], [13.2, 131.0], [13.3, 131.0], [13.4, 132.0], [13.5, 132.0], [13.6, 132.0], [13.7, 132.0], [13.8, 132.0], [13.9, 132.0], [14.0, 132.0], [14.1, 132.0], [14.2, 132.0], [14.3, 132.0], [14.4, 133.0], [14.5, 133.0], [14.6, 133.0], [14.7, 133.0], [14.8, 133.0], [14.9, 133.0], [15.0, 133.0], [15.1, 134.0], [15.2, 134.0], [15.3, 134.0], [15.4, 134.0], [15.5, 134.0], [15.6, 135.0], [15.7, 135.0], [15.8, 135.0], [15.9, 135.0], [16.0, 135.0], [16.1, 136.0], [16.2, 136.0], [16.3, 137.0], [16.4, 137.0], [16.5, 137.0], [16.6, 137.0], [16.7, 137.0], [16.8, 137.0], [16.9, 138.0], [17.0, 138.0], [17.1, 138.0], [17.2, 138.0], [17.3, 138.0], [17.4, 139.0], [17.5, 139.0], [17.6, 139.0], [17.7, 139.0], [17.8, 139.0], [17.9, 140.0], [18.0, 140.0], [18.1, 140.0], [18.2, 140.0], [18.3, 140.0], [18.4, 140.0], [18.5, 140.0], [18.6, 140.0], [18.7, 140.0], [18.8, 141.0], [18.9, 141.0], [19.0, 141.0], [19.1, 141.0], [19.2, 141.0], [19.3, 141.0], [19.4, 142.0], [19.5, 142.0], [19.6, 142.0], [19.7, 142.0], [19.8, 142.0], [19.9, 142.0], [20.0, 142.0], [20.1, 143.0], [20.2, 143.0], [20.3, 143.0], [20.4, 143.0], [20.5, 143.0], [20.6, 143.0], [20.7, 143.0], [20.8, 143.0], [20.9, 143.0], [21.0, 143.0], [21.1, 144.0], [21.2, 144.0], [21.3, 144.0], [21.4, 144.0], [21.5, 144.0], [21.6, 144.0], [21.7, 144.0], [21.8, 144.0], [21.9, 144.0], [22.0, 145.0], [22.1, 145.0], [22.2, 145.0], [22.3, 145.0], [22.4, 145.0], [22.5, 145.0], [22.6, 145.0], [22.7, 145.0], [22.8, 145.0], [22.9, 145.0], [23.0, 145.0], [23.1, 146.0], [23.2, 146.0], [23.3, 146.0], [23.4, 146.0], [23.5, 146.0], [23.6, 146.0], [23.7, 146.0], [23.8, 146.0], [23.9, 146.0], [24.0, 146.0], [24.1, 147.0], [24.2, 147.0], [24.3, 147.0], [24.4, 147.0], [24.5, 147.0], [24.6, 148.0], [24.7, 148.0], [24.8, 148.0], [24.9, 148.0], [25.0, 148.0], [25.1, 148.0], [25.2, 148.0], [25.3, 148.0], [25.4, 148.0], [25.5, 148.0], [25.6, 148.0], [25.7, 148.0], [25.8, 148.0], [25.9, 148.0], [26.0, 149.0], [26.1, 149.0], [26.2, 149.0], [26.3, 149.0], [26.4, 149.0], [26.5, 150.0], [26.6, 151.0], [26.7, 151.0], [26.8, 151.0], [26.9, 151.0], [27.0, 151.0], [27.1, 151.0], [27.2, 151.0], [27.3, 151.0], [27.4, 151.0], [27.5, 151.0], [27.6, 151.0], [27.7, 151.0], [27.8, 152.0], [27.9, 152.0], [28.0, 152.0], [28.1, 152.0], [28.2, 152.0], [28.3, 152.0], [28.4, 152.0], [28.5, 154.0], [28.6, 154.0], [28.7, 154.0], [28.8, 154.0], [28.9, 154.0], [29.0, 155.0], [29.1, 155.0], [29.2, 155.0], [29.3, 155.0], [29.4, 155.0], [29.5, 155.0], [29.6, 155.0], [29.7, 155.0], [29.8, 155.0], [29.9, 155.0], [30.0, 155.0], [30.1, 155.0], [30.2, 156.0], [30.3, 156.0], [30.4, 156.0], [30.5, 156.0], [30.6, 156.0], [30.7, 157.0], [30.8, 157.0], [30.9, 157.0], [31.0, 157.0], [31.1, 157.0], [31.2, 157.0], [31.3, 157.0], [31.4, 157.0], [31.5, 158.0], [31.6, 158.0], [31.7, 158.0], [31.8, 158.0], [31.9, 158.0], [32.0, 159.0], [32.1, 159.0], [32.2, 159.0], [32.3, 160.0], [32.4, 160.0], [32.5, 160.0], [32.6, 160.0], [32.7, 161.0], [32.8, 161.0], [32.9, 161.0], [33.0, 161.0], [33.1, 161.0], [33.2, 161.0], [33.3, 161.0], [33.4, 161.0], [33.5, 162.0], [33.6, 162.0], [33.7, 163.0], [33.8, 163.0], [33.9, 163.0], [34.0, 163.0], [34.1, 163.0], [34.2, 164.0], [34.3, 164.0], [34.4, 164.0], [34.5, 165.0], [34.6, 165.0], [34.7, 165.0], [34.8, 166.0], [34.9, 166.0], [35.0, 166.0], [35.1, 166.0], [35.2, 166.0], [35.3, 166.0], [35.4, 166.0], [35.5, 167.0], [35.6, 167.0], [35.7, 167.0], [35.8, 167.0], [35.9, 167.0], [36.0, 167.0], [36.1, 167.0], [36.2, 168.0], [36.3, 168.0], [36.4, 168.0], [36.5, 168.0], [36.6, 168.0], [36.7, 169.0], [36.8, 169.0], [36.9, 169.0], [37.0, 170.0], [37.1, 170.0], [37.2, 170.0], [37.3, 170.0], [37.4, 170.0], [37.5, 170.0], [37.6, 170.0], [37.7, 170.0], [37.8, 171.0], [37.9, 171.0], [38.0, 171.0], [38.1, 171.0], [38.2, 171.0], [38.3, 172.0], [38.4, 172.0], [38.5, 172.0], [38.6, 172.0], [38.7, 172.0], [38.8, 173.0], [38.9, 173.0], [39.0, 174.0], [39.1, 174.0], [39.2, 174.0], [39.3, 174.0], [39.4, 174.0], [39.5, 174.0], [39.6, 174.0], [39.7, 175.0], [39.8, 175.0], [39.9, 175.0], [40.0, 175.0], [40.1, 175.0], [40.2, 175.0], [40.3, 175.0], [40.4, 176.0], [40.5, 176.0], [40.6, 176.0], [40.7, 176.0], [40.8, 176.0], [40.9, 176.0], [41.0, 176.0], [41.1, 176.0], [41.2, 176.0], [41.3, 176.0], [41.4, 177.0], [41.5, 177.0], [41.6, 177.0], [41.7, 177.0], [41.8, 177.0], [41.9, 177.0], [42.0, 178.0], [42.1, 178.0], [42.2, 178.0], [42.3, 178.0], [42.4, 178.0], [42.5, 180.0], [42.6, 180.0], [42.7, 180.0], [42.8, 180.0], [42.9, 181.0], [43.0, 181.0], [43.1, 181.0], [43.2, 181.0], [43.3, 181.0], [43.4, 182.0], [43.5, 183.0], [43.6, 183.0], [43.7, 183.0], [43.8, 183.0], [43.9, 183.0], [44.0, 184.0], [44.1, 184.0], [44.2, 184.0], [44.3, 184.0], [44.4, 184.0], [44.5, 185.0], [44.6, 185.0], [44.7, 186.0], [44.8, 186.0], [44.9, 186.0], [45.0, 186.0], [45.1, 186.0], [45.2, 187.0], [45.3, 187.0], [45.4, 187.0], [45.5, 187.0], [45.6, 187.0], [45.7, 188.0], [45.8, 188.0], [45.9, 188.0], [46.0, 188.0], [46.1, 188.0], [46.2, 190.0], [46.3, 190.0], [46.4, 190.0], [46.5, 190.0], [46.6, 190.0], [46.7, 190.0], [46.8, 190.0], [46.9, 190.0], [47.0, 191.0], [47.1, 191.0], [47.2, 191.0], [47.3, 191.0], [47.4, 192.0], [47.5, 192.0], [47.6, 192.0], [47.7, 192.0], [47.8, 192.0], [47.9, 192.0], [48.0, 193.0], [48.1, 193.0], [48.2, 193.0], [48.3, 193.0], [48.4, 193.0], [48.5, 193.0], [48.6, 193.0], [48.7, 193.0], [48.8, 193.0], [48.9, 193.0], [49.0, 193.0], [49.1, 193.0], [49.2, 194.0], [49.3, 194.0], [49.4, 194.0], [49.5, 195.0], [49.6, 195.0], [49.7, 195.0], [49.8, 195.0], [49.9, 196.0], [50.0, 196.0], [50.1, 196.0], [50.2, 196.0], [50.3, 196.0], [50.4, 196.0], [50.5, 196.0], [50.6, 197.0], [50.7, 197.0], [50.8, 197.0], [50.9, 197.0], [51.0, 197.0], [51.1, 198.0], [51.2, 198.0], [51.3, 198.0], [51.4, 198.0], [51.5, 198.0], [51.6, 199.0], [51.7, 199.0], [51.8, 199.0], [51.9, 199.0], [52.0, 199.0], [52.1, 199.0], [52.2, 200.0], [52.3, 200.0], [52.4, 200.0], [52.5, 200.0], [52.6, 200.0], [52.7, 200.0], [52.8, 200.0], [52.9, 201.0], [53.0, 201.0], [53.1, 202.0], [53.2, 202.0], [53.3, 202.0], [53.4, 203.0], [53.5, 203.0], [53.6, 204.0], [53.7, 204.0], [53.8, 204.0], [53.9, 205.0], [54.0, 205.0], [54.1, 206.0], [54.2, 207.0], [54.3, 207.0], [54.4, 209.0], [54.5, 209.0], [54.6, 209.0], [54.7, 210.0], [54.8, 210.0], [54.9, 210.0], [55.0, 210.0], [55.1, 211.0], [55.2, 211.0], [55.3, 211.0], [55.4, 212.0], [55.5, 212.0], [55.6, 213.0], [55.7, 213.0], [55.8, 213.0], [55.9, 213.0], [56.0, 213.0], [56.1, 214.0], [56.2, 214.0], [56.3, 214.0], [56.4, 215.0], [56.5, 215.0], [56.6, 217.0], [56.7, 217.0], [56.8, 217.0], [56.9, 217.0], [57.0, 217.0], [57.1, 218.0], [57.2, 218.0], [57.3, 218.0], [57.4, 219.0], [57.5, 219.0], [57.6, 219.0], [57.7, 219.0], [57.8, 219.0], [57.9, 220.0], [58.0, 220.0], [58.1, 220.0], [58.2, 221.0], [58.3, 221.0], [58.4, 222.0], [58.5, 222.0], [58.6, 223.0], [58.7, 223.0], [58.8, 223.0], [58.9, 224.0], [59.0, 224.0], [59.1, 224.0], [59.2, 225.0], [59.3, 225.0], [59.4, 226.0], [59.5, 226.0], [59.6, 227.0], [59.7, 227.0], [59.8, 227.0], [59.9, 227.0], [60.0, 227.0], [60.1, 228.0], [60.2, 228.0], [60.3, 229.0], [60.4, 229.0], [60.5, 229.0], [60.6, 230.0], [60.7, 230.0], [60.8, 230.0], [60.9, 231.0], [61.0, 231.0], [61.1, 231.0], [61.2, 231.0], [61.3, 232.0], [61.4, 232.0], [61.5, 232.0], [61.6, 232.0], [61.7, 232.0], [61.8, 233.0], [61.9, 233.0], [62.0, 233.0], [62.1, 234.0], [62.2, 234.0], [62.3, 234.0], [62.4, 234.0], [62.5, 234.0], [62.6, 235.0], [62.7, 235.0], [62.8, 235.0], [62.9, 235.0], [63.0, 235.0], [63.1, 235.0], [63.2, 235.0], [63.3, 236.0], [63.4, 236.0], [63.5, 236.0], [63.6, 238.0], [63.7, 238.0], [63.8, 238.0], [63.9, 239.0], [64.0, 239.0], [64.1, 239.0], [64.2, 239.0], [64.3, 239.0], [64.4, 239.0], [64.5, 239.0], [64.6, 241.0], [64.7, 241.0], [64.8, 241.0], [64.9, 241.0], [65.0, 241.0], [65.1, 241.0], [65.2, 241.0], [65.3, 242.0], [65.4, 243.0], [65.5, 243.0], [65.6, 244.0], [65.7, 244.0], [65.8, 244.0], [65.9, 245.0], [66.0, 245.0], [66.1, 245.0], [66.2, 245.0], [66.3, 246.0], [66.4, 247.0], [66.5, 247.0], [66.6, 248.0], [66.7, 248.0], [66.8, 249.0], [66.9, 249.0], [67.0, 249.0], [67.1, 252.0], [67.2, 252.0], [67.3, 253.0], [67.4, 254.0], [67.5, 254.0], [67.6, 256.0], [67.7, 256.0], [67.8, 256.0], [67.9, 257.0], [68.0, 257.0], [68.1, 257.0], [68.2, 257.0], [68.3, 257.0], [68.4, 258.0], [68.5, 258.0], [68.6, 260.0], [68.7, 260.0], [68.8, 260.0], [68.9, 260.0], [69.0, 260.0], [69.1, 261.0], [69.2, 261.0], [69.3, 263.0], [69.4, 264.0], [69.5, 264.0], [69.6, 264.0], [69.7, 264.0], [69.8, 265.0], [69.9, 267.0], [70.0, 267.0], [70.1, 267.0], [70.2, 267.0], [70.3, 268.0], [70.4, 268.0], [70.5, 268.0], [70.6, 269.0], [70.7, 269.0], [70.8, 269.0], [70.9, 269.0], [71.0, 272.0], [71.1, 273.0], [71.2, 273.0], [71.3, 275.0], [71.4, 275.0], [71.5, 275.0], [71.6, 275.0], [71.7, 275.0], [71.8, 276.0], [71.9, 276.0], [72.0, 277.0], [72.1, 278.0], [72.2, 278.0], [72.3, 279.0], [72.4, 279.0], [72.5, 279.0], [72.6, 280.0], [72.7, 280.0], [72.8, 282.0], [72.9, 282.0], [73.0, 283.0], [73.1, 283.0], [73.2, 283.0], [73.3, 284.0], [73.4, 284.0], [73.5, 285.0], [73.6, 285.0], [73.7, 285.0], [73.8, 286.0], [73.9, 286.0], [74.0, 286.0], [74.1, 288.0], [74.2, 288.0], [74.3, 290.0], [74.4, 290.0], [74.5, 291.0], [74.6, 293.0], [74.7, 293.0], [74.8, 294.0], [74.9, 294.0], [75.0, 294.0], [75.1, 295.0], [75.2, 295.0], [75.3, 295.0], [75.4, 295.0], [75.5, 295.0], [75.6, 295.0], [75.7, 295.0], [75.8, 296.0], [75.9, 296.0], [76.0, 298.0], [76.1, 299.0], [76.2, 299.0], [76.3, 302.0], [76.4, 302.0], [76.5, 304.0], [76.6, 304.0], [76.7, 304.0], [76.8, 305.0], [76.9, 305.0], [77.0, 306.0], [77.1, 307.0], [77.2, 307.0], [77.3, 309.0], [77.4, 309.0], [77.5, 309.0], [77.6, 310.0], [77.7, 310.0], [77.8, 310.0], [77.9, 310.0], [78.0, 312.0], [78.1, 314.0], [78.2, 314.0], [78.3, 314.0], [78.4, 314.0], [78.5, 314.0], [78.6, 320.0], [78.7, 320.0], [78.8, 324.0], [78.9, 324.0], [79.0, 329.0], [79.1, 329.0], [79.2, 329.0], [79.3, 329.0], [79.4, 329.0], [79.5, 331.0], [79.6, 331.0], [79.7, 331.0], [79.8, 332.0], [79.9, 332.0], [80.0, 332.0], [80.1, 332.0], [80.2, 333.0], [80.3, 335.0], [80.4, 335.0], [80.5, 344.0], [80.6, 344.0], [80.7, 347.0], [80.8, 347.0], [80.9, 347.0], [81.0, 349.0], [81.1, 349.0], [81.2, 355.0], [81.3, 361.0], [81.4, 361.0], [81.5, 362.0], [81.6, 362.0], [81.7, 364.0], [81.8, 365.0], [81.9, 365.0], [82.0, 370.0], [82.1, 370.0], [82.2, 371.0], [82.3, 374.0], [82.4, 374.0], [82.5, 374.0], [82.6, 374.0], [82.7, 378.0], [82.8, 382.0], [82.9, 382.0], [83.0, 387.0], [83.1, 387.0], [83.2, 394.0], [83.3, 401.0], [83.4, 401.0], [83.5, 404.0], [83.6, 404.0], [83.7, 405.0], [83.8, 406.0], [83.9, 406.0], [84.0, 408.0], [84.1, 408.0], [84.2, 408.0], [84.3, 411.0], [84.4, 411.0], [84.5, 418.0], [84.6, 418.0], [84.7, 420.0], [84.8, 428.0], [84.9, 428.0], [85.0, 452.0], [85.1, 452.0], [85.2, 452.0], [85.3, 455.0], [85.4, 455.0], [85.5, 461.0], [85.6, 461.0], [85.7, 466.0], [85.8, 467.0], [85.9, 467.0], [86.0, 470.0], [86.1, 470.0], [86.2, 481.0], [86.3, 489.0], [86.4, 489.0], [86.5, 491.0], [86.6, 491.0], [86.7, 509.0], [86.8, 513.0], [86.9, 513.0], [87.0, 516.0], [87.1, 516.0], [87.2, 516.0], [87.3, 531.0], [87.4, 531.0], [87.5, 536.0], [87.6, 536.0], [87.7, 537.0], [87.8, 540.0], [87.9, 540.0], [88.0, 542.0], [88.1, 542.0], [88.2, 559.0], [88.3, 562.0], [88.4, 562.0], [88.5, 576.0], [88.6, 576.0], [88.7, 589.0], [88.8, 592.0], [88.9, 592.0], [89.0, 592.0], [89.1, 592.0], [89.2, 597.0], [89.3, 605.0], [89.4, 605.0], [89.5, 613.0], [89.6, 613.0], [89.7, 616.0], [89.8, 616.0], [89.9, 616.0], [90.0, 623.0], [90.1, 623.0], [90.2, 631.0], [90.3, 631.0], [90.4, 633.0], [90.5, 653.0], [90.6, 653.0], [90.7, 676.0], [90.8, 676.0], [90.9, 678.0], [91.0, 731.0], [91.1, 731.0], [91.2, 732.0], [91.3, 732.0], [91.4, 743.0], [91.5, 751.0], [91.6, 751.0], [91.7, 756.0], [91.8, 756.0], [91.9, 759.0], [92.0, 782.0], [92.1, 782.0], [92.2, 787.0], [92.3, 787.0], [92.4, 812.0], [92.5, 824.0], [92.6, 824.0], [92.7, 825.0], [92.8, 825.0], [92.9, 832.0], [93.0, 834.0], [93.1, 834.0], [93.2, 834.0], [93.3, 834.0], [93.4, 843.0], [93.5, 862.0], [93.6, 862.0], [93.7, 927.0], [93.8, 927.0], [93.9, 961.0], [94.0, 964.0], [94.1, 964.0], [94.2, 1025.0], [94.3, 1025.0], [94.4, 1028.0], [94.5, 1034.0], [94.6, 1034.0], [94.7, 1058.0], [94.8, 1058.0], [94.9, 1143.0], [95.0, 1185.0], [95.1, 1185.0], [95.2, 1191.0], [95.3, 1191.0], [95.4, 1240.0], [95.5, 1240.0], [95.6, 1240.0], [95.7, 1244.0], [95.8, 1244.0], [95.9, 1254.0], [96.0, 1270.0], [96.1, 1270.0], [96.2, 1281.0], [96.3, 1281.0], [96.4, 1320.0], [96.5, 1332.0], [96.6, 1332.0], [96.7, 1351.0], [96.8, 1351.0], [96.9, 1401.0], [97.0, 1463.0], [97.1, 1463.0], [97.2, 1775.0], [97.3, 1775.0], [97.4, 2066.0], [97.5, 2385.0], [97.6, 2385.0], [97.7, 3038.0], [97.8, 3038.0], [97.9, 3102.0], [98.0, 3390.0], [98.1, 3390.0], [98.2, 3467.0], [98.3, 3467.0], [98.4, 3479.0], [98.5, 4885.0], [98.6, 4885.0], [98.7, 4998.0], [98.8, 4998.0], [98.9, 5370.0], [99.0, 6294.0], [99.1, 6294.0], [99.2, 6470.0], [99.3, 6470.0], [99.4, 7056.0], [99.5, 10542.0], [99.6, 10542.0], [99.7, 13722.0], [99.8, 13722.0], [99.9, 14262.0], [100.0, 14262.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 272.0, "series": [{"data": [[1100.0, 9.0], [1200.0, 16.0], [1300.0, 9.0], [1400.0, 5.0], [1500.0, 6.0], [1600.0, 2.0], [1700.0, 10.0], [1800.0, 8.0], [1900.0, 8.0], [2000.0, 8.0], [2100.0, 13.0], [2300.0, 4.0], [2200.0, 4.0], [2400.0, 2.0], [2500.0, 1.0], [2600.0, 6.0], [2800.0, 1.0], [2700.0, 6.0], [2900.0, 6.0], [3000.0, 2.0], [3100.0, 7.0], [3300.0, 4.0], [3400.0, 6.0], [3500.0, 4.0], [3700.0, 3.0], [3600.0, 3.0], [3800.0, 4.0], [3900.0, 2.0], [4000.0, 1.0], [4200.0, 2.0], [4100.0, 6.0], [4300.0, 3.0], [4500.0, 5.0], [4400.0, 4.0], [4600.0, 3.0], [4700.0, 12.0], [4800.0, 7.0], [4900.0, 8.0], [5000.0, 5.0], [5200.0, 5.0], [5300.0, 3.0], [5400.0, 2.0], [5500.0, 2.0], [5600.0, 6.0], [5800.0, 4.0], [5700.0, 6.0], [5900.0, 4.0], [6100.0, 6.0], [6000.0, 1.0], [6200.0, 8.0], [6300.0, 6.0], [6600.0, 5.0], [6500.0, 5.0], [6400.0, 6.0], [6900.0, 4.0], [6800.0, 6.0], [6700.0, 7.0], [7100.0, 9.0], [7000.0, 6.0], [7200.0, 2.0], [7300.0, 7.0], [7400.0, 6.0], [7500.0, 10.0], [7600.0, 3.0], [7900.0, 7.0], [7800.0, 5.0], [7700.0, 2.0], [8100.0, 7.0], [8000.0, 6.0], [8500.0, 4.0], [8200.0, 4.0], [8700.0, 4.0], [8400.0, 4.0], [8300.0, 3.0], [8600.0, 2.0], [9000.0, 6.0], [8800.0, 3.0], [8900.0, 3.0], [9200.0, 5.0], [9100.0, 2.0], [9600.0, 2.0], [9400.0, 5.0], [9500.0, 9.0], [9300.0, 5.0], [9700.0, 4.0], [10200.0, 10.0], [9900.0, 2.0], [10100.0, 1.0], [10000.0, 4.0], [9800.0, 2.0], [10600.0, 2.0], [10700.0, 3.0], [10500.0, 2.0], [10400.0, 3.0], [10800.0, 3.0], [11000.0, 2.0], [11100.0, 5.0], [10900.0, 1.0], [11300.0, 7.0], [11400.0, 5.0], [11500.0, 1.0], [12100.0, 3.0], [11800.0, 3.0], [11900.0, 3.0], [12000.0, 4.0], [12200.0, 2.0], [12400.0, 3.0], [12700.0, 2.0], [12300.0, 2.0], [12600.0, 1.0], [12900.0, 4.0], [13300.0, 1.0], [12800.0, 4.0], [13100.0, 2.0], [13000.0, 6.0], [13200.0, 3.0], [13700.0, 2.0], [13500.0, 4.0], [13400.0, 1.0], [13600.0, 4.0], [14300.0, 3.0], [14000.0, 3.0], [14100.0, 1.0], [13900.0, 2.0], [14200.0, 1.0], [14600.0, 1.0], [14400.0, 1.0], [15000.0, 1.0], [14900.0, 3.0], [15100.0, 1.0], [15600.0, 1.0], [16200.0, 1.0], [16800.0, 1.0], [18000.0, 1.0], [18100.0, 1.0], [19400.0, 1.0], [20500.0, 1.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[600.0, 33.0], [700.0, 28.0], [800.0, 18.0], [900.0, 13.0], [1000.0, 28.0], [1100.0, 17.0], [1200.0, 16.0], [1300.0, 16.0], [1400.0, 15.0], [1500.0, 10.0], [1600.0, 13.0], [1700.0, 12.0], [1800.0, 15.0], [1900.0, 21.0], [2000.0, 26.0], [2100.0, 14.0], [2200.0, 16.0], [2300.0, 8.0], [2400.0, 5.0], [2500.0, 4.0], [2600.0, 6.0], [2700.0, 4.0], [2800.0, 7.0], [2900.0, 7.0], [3000.0, 7.0], [3100.0, 6.0], [3200.0, 10.0], [3300.0, 3.0], [3400.0, 4.0], [3500.0, 5.0], [3700.0, 6.0], [3600.0, 5.0], [3800.0, 3.0], [3900.0, 8.0], [4000.0, 4.0], [4100.0, 3.0], [4200.0, 5.0], [4300.0, 4.0], [4600.0, 2.0], [4400.0, 3.0], [4500.0, 2.0], [4800.0, 2.0], [4700.0, 2.0], [5000.0, 2.0], [4900.0, 3.0], [5100.0, 2.0], [5200.0, 1.0], [5300.0, 2.0], [5400.0, 1.0], [5600.0, 1.0], [5700.0, 1.0], [5800.0, 1.0], [6100.0, 1.0], [5900.0, 3.0], [6000.0, 1.0], [6200.0, 1.0], [6300.0, 1.0], [6400.0, 1.0], [6500.0, 1.0], [6800.0, 1.0], [7000.0, 1.0], [7100.0, 2.0], [7800.0, 1.0], [8000.0, 2.0], [8100.0, 1.0], [8500.0, 1.0], [9100.0, 1.0], [8900.0, 1.0], [9400.0, 1.0], [9300.0, 1.0], [10100.0, 1.0], [9900.0, 3.0], [10000.0, 1.0], [10400.0, 1.0], [11200.0, 1.0], [11100.0, 1.0], [11500.0, 1.0], [11900.0, 1.0], [12300.0, 1.0], [14900.0, 1.0], [100.0, 12.0], [200.0, 45.0], [300.0, 31.0], [400.0, 38.0], [500.0, 21.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[33700.0, 4.0], [34100.0, 2.0], [32900.0, 2.0], [34500.0, 3.0], [33300.0, 3.0], [36100.0, 3.0], [36500.0, 4.0], [35700.0, 3.0], [35300.0, 2.0], [36900.0, 2.0], [38900.0, 3.0], [38500.0, 3.0], [37700.0, 2.0], [37300.0, 1.0], [40100.0, 2.0], [39700.0, 3.0], [42100.0, 1.0], [43300.0, 2.0], [43700.0, 1.0], [44500.0, 2.0], [44100.0, 1.0], [46100.0, 1.0], [47700.0, 2.0], [5500.0, 3.0], [5600.0, 3.0], [5800.0, 6.0], [5700.0, 2.0], [5900.0, 7.0], [6000.0, 2.0], [6100.0, 3.0], [6300.0, 6.0], [6500.0, 3.0], [6600.0, 2.0], [6900.0, 3.0], [6700.0, 3.0], [6800.0, 1.0], [7000.0, 3.0], [7300.0, 2.0], [7400.0, 2.0], [7500.0, 1.0], [7600.0, 2.0], [7900.0, 1.0], [7700.0, 1.0], [7800.0, 1.0], [8000.0, 1.0], [8100.0, 1.0], [8300.0, 1.0], [8400.0, 1.0], [8200.0, 1.0], [8500.0, 1.0], [8600.0, 1.0], [9000.0, 2.0], [9100.0, 2.0], [8900.0, 1.0], [9700.0, 2.0], [9500.0, 2.0], [9600.0, 2.0], [9400.0, 1.0], [9800.0, 3.0], [10000.0, 2.0], [10200.0, 2.0], [10400.0, 1.0], [10700.0, 2.0], [10600.0, 2.0], [10300.0, 1.0], [10900.0, 2.0], [11100.0, 2.0], [10800.0, 2.0], [11000.0, 2.0], [11400.0, 3.0], [11600.0, 2.0], [11500.0, 2.0], [11300.0, 2.0], [11800.0, 1.0], [11900.0, 1.0], [12500.0, 2.0], [12600.0, 2.0], [12700.0, 2.0], [13100.0, 5.0], [13000.0, 4.0], [13300.0, 1.0], [12900.0, 2.0], [13200.0, 2.0], [13400.0, 2.0], [13600.0, 2.0], [13800.0, 1.0], [14100.0, 3.0], [14000.0, 1.0], [14200.0, 1.0], [14800.0, 2.0], [14500.0, 2.0], [14700.0, 1.0], [15300.0, 2.0], [15200.0, 4.0], [15000.0, 3.0], [14900.0, 1.0], [15400.0, 3.0], [15600.0, 1.0], [15500.0, 2.0], [15700.0, 1.0], [15800.0, 1.0], [16000.0, 1.0], [16300.0, 2.0], [16200.0, 2.0], [16400.0, 2.0], [17200.0, 2.0], [16600.0, 2.0], [17800.0, 2.0], [18200.0, 4.0], [17600.0, 2.0], [18400.0, 1.0], [18000.0, 3.0], [18600.0, 1.0], [18800.0, 1.0], [19200.0, 2.0], [19400.0, 2.0], [19000.0, 2.0], [19600.0, 2.0], [19800.0, 2.0], [20200.0, 2.0], [20000.0, 4.0], [20400.0, 4.0], [21000.0, 1.0], [21400.0, 2.0], [20800.0, 1.0], [21600.0, 1.0], [22200.0, 1.0], [21800.0, 1.0], [22400.0, 1.0], [22000.0, 1.0], [22600.0, 4.0], [23400.0, 2.0], [24400.0, 3.0], [23600.0, 3.0], [23800.0, 1.0], [24000.0, 1.0], [24200.0, 1.0], [24800.0, 2.0], [25400.0, 2.0], [25200.0, 3.0], [26400.0, 1.0], [26600.0, 1.0], [25800.0, 1.0], [26000.0, 1.0], [28200.0, 4.0], [28600.0, 4.0], [28000.0, 1.0], [27800.0, 1.0], [29600.0, 1.0], [29000.0, 3.0], [28800.0, 2.0], [29800.0, 4.0], [30600.0, 2.0], [30200.0, 4.0], [30000.0, 3.0], [31400.0, 1.0], [30800.0, 5.0], [31000.0, 4.0], [31200.0, 2.0], [31600.0, 1.0], [32400.0, 3.0], [32600.0, 3.0], [32000.0, 4.0], [31800.0, 2.0], [32200.0, 1.0], [33200.0, 6.0], [32800.0, 4.0], [34400.0, 3.0], [34800.0, 1.0], [34000.0, 2.0], [33600.0, 1.0], [36400.0, 4.0], [35200.0, 3.0], [36800.0, 1.0], [35600.0, 1.0], [36000.0, 1.0], [38400.0, 4.0], [37600.0, 1.0], [37200.0, 3.0], [40800.0, 1.0], [39200.0, 2.0], [39600.0, 1.0], [40000.0, 1.0], [42000.0, 1.0], [42800.0, 2.0], [42400.0, 1.0], [41200.0, 1.0], [44800.0, 1.0], [43600.0, 2.0], [33900.0, 1.0], [33100.0, 4.0], [34300.0, 2.0], [33500.0, 1.0], [34700.0, 2.0], [35900.0, 1.0], [35500.0, 2.0], [36300.0, 2.0], [36700.0, 1.0], [37900.0, 3.0], [38300.0, 1.0], [38700.0, 1.0], [40700.0, 2.0], [39500.0, 1.0], [40300.0, 2.0], [39100.0, 1.0], [42700.0, 1.0], [41500.0, 1.0], [41100.0, 1.0], [43100.0, 1.0], [43900.0, 1.0], [45100.0, 1.0], [46300.0, 2.0], [46700.0, 1.0], [45500.0, 1.0], [16700.0, 1.0], [17300.0, 2.0], [17100.0, 1.0], [16500.0, 1.0], [17900.0, 4.0], [18100.0, 3.0], [18300.0, 1.0], [17700.0, 1.0], [18700.0, 3.0], [18900.0, 2.0], [19300.0, 1.0], [19100.0, 2.0], [19900.0, 4.0], [19500.0, 1.0], [20300.0, 3.0], [19700.0, 1.0], [20100.0, 4.0], [20500.0, 3.0], [20900.0, 2.0], [20700.0, 2.0], [21500.0, 1.0], [22100.0, 2.0], [22500.0, 3.0], [21700.0, 1.0], [21900.0, 1.0], [23300.0, 2.0], [23500.0, 3.0], [23100.0, 1.0], [22700.0, 2.0], [22900.0, 1.0], [23900.0, 3.0], [24300.0, 2.0], [24100.0, 1.0], [23700.0, 2.0], [24500.0, 1.0], [25500.0, 2.0], [24700.0, 1.0], [25900.0, 1.0], [26500.0, 3.0], [26100.0, 2.0], [26300.0, 1.0], [26900.0, 1.0], [27500.0, 3.0], [27300.0, 1.0], [27100.0, 2.0], [28500.0, 2.0], [27700.0, 2.0], [27900.0, 1.0], [28100.0, 1.0], [28900.0, 2.0], [29100.0, 3.0], [29300.0, 4.0], [28700.0, 1.0], [30100.0, 4.0], [29700.0, 2.0], [30700.0, 1.0], [30500.0, 2.0], [30300.0, 3.0], [29900.0, 2.0], [30900.0, 3.0], [31100.0, 2.0], [31300.0, 1.0], [31700.0, 1.0], [31500.0, 1.0], [32300.0, 8.0], [31900.0, 2.0], [32100.0, 5.0], [32500.0, 1.0], [33800.0, 6.0], [34600.0, 1.0], [33000.0, 1.0], [33400.0, 2.0], [35400.0, 1.0], [36600.0, 1.0], [36200.0, 1.0], [35800.0, 2.0], [35000.0, 1.0], [37400.0, 3.0], [37800.0, 1.0], [37000.0, 2.0], [38200.0, 1.0], [38600.0, 3.0], [40200.0, 2.0], [39800.0, 2.0], [40600.0, 1.0], [39000.0, 1.0], [41400.0, 1.0], [41800.0, 2.0], [42600.0, 1.0], [41000.0, 1.0], [43400.0, 1.0], [45000.0, 1.0], [45400.0, 1.0], [47000.0, 1.0], [50200.0, 1.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[0.0, 40.0], [600.0, 10.0], [10500.0, 1.0], [700.0, 8.0], [800.0, 8.0], [13700.0, 1.0], [14200.0, 1.0], [900.0, 3.0], [1000.0, 4.0], [1100.0, 3.0], [1200.0, 6.0], [1300.0, 3.0], [1400.0, 2.0], [100.0, 272.0], [1700.0, 1.0], [2000.0, 1.0], [2300.0, 1.0], [3000.0, 1.0], [3100.0, 1.0], [200.0, 144.0], [3300.0, 1.0], [3400.0, 2.0], [300.0, 42.0], [4800.0, 1.0], [4900.0, 1.0], [5300.0, 1.0], [6200.0, 1.0], [400.0, 20.0], [6400.0, 1.0], [7000.0, 1.0], [500.0, 16.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 50200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 40.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1459.0, "series": [{"data": [[0.0, 604.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 307.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1459.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 40.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.8124999999999996, "minX": 1.7182632E12, "maxY": 60.0, "series": [{"data": [[1.7182635E12, 35.99277978339349], [1.71826332E12, 14.67634854771784], [1.71826362E12, 50.196850393700764], [1.71826344E12, 28.87280701754385], [1.71826326E12, 7.711956521739132], [1.71826374E12, 60.0], [1.71826356E12, 43.34653465346533], [1.71826338E12, 21.789915966386562], [1.7182638E12, 50.30508474576269], [1.7182632E12, 2.8124999999999996], [1.71826368E12, 57.63636363636365]], "isOverall": false, "label": "MixedTest", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7182638E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 108.0, "minX": 1.0, "maxY": 40509.0, "series": [{"data": [[3.0, 1455.0], [4.0, 1247.1666666666665], [5.0, 1348.0], [6.0, 1279.0], [7.0, 1221.3333333333333], [8.0, 1258.090909090909], [9.0, 1430.0], [10.0, 1749.3333333333333], [11.0, 1595.6666666666665], [12.0, 1737.0], [13.0, 1989.8333333333333], [14.0, 1953.0714285714287], [15.0, 2002.1666666666665], [16.0, 2048.3571428571427], [17.0, 2209.3333333333335], [18.0, 2266.166666666667], [19.0, 2731.75], [20.0, 2685.5], [21.0, 3167.333333333333], [22.0, 3645.0], [23.0, 3227.090909090909], [24.0, 3462.230769230769], [25.0, 4983.4], [26.0, 5171.428571428572], [27.0, 4595.166666666667], [28.0, 4952.8], [29.0, 5241.4], [30.0, 4909.133333333333], [31.0, 5407.0], [32.0, 5281.0], [33.0, 6865.0], [34.0, 6419.0], [35.0, 6546.142857142857], [36.0, 7480.333333333333], [37.0, 6000.769230769231], [38.0, 6301.0], [39.0, 7126.888888888889], [40.0, 7106.333333333334], [41.0, 6697.428571428572], [42.0, 6832.3], [43.0, 7129.076923076924], [44.0, 7272.0], [45.0, 7700.5], [46.0, 7498.25], [47.0, 8327.666666666666], [48.0, 7723.571428571429], [49.0, 8515.0], [50.0, 8057.444444444446], [51.0, 9783.857142857143], [52.0, 12719.5], [53.0, 10647.900000000001], [54.0, 12009.8], [55.0, 8900.0], [56.0, 15301.25], [57.0, 18024.0], [58.0, 15538.8], [59.0, 9688.5], [60.0, 11524.9649122807]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[38.029982363315675, 6875.220458553794]], "isOverall": false, "label": "Directors by name-Aggregated", "isController": false}, {"data": [[3.0, 394.5], [4.0, 772.0], [5.0, 477.0], [6.0, 475.0], [7.0, 401.22222222222223], [8.0, 596.090909090909], [9.0, 626.2857142857142], [10.0, 616.9166666666666], [11.0, 776.75], [12.0, 560.0], [13.0, 844.2], [14.0, 859.642857142857], [15.0, 461.14285714285717], [16.0, 678.3333333333335], [17.0, 350.0], [18.0, 840.2222222222222], [19.0, 736.25], [20.0, 715.75], [21.0, 904.2857142857143], [22.0, 949.0], [23.0, 1036.923076923077], [24.0, 977.0833333333334], [25.0, 846.1428571428571], [26.0, 983.9999999999999], [27.0, 2426.125], [28.0, 1923.2857142857142], [29.0, 949.0833333333334], [30.0, 989.7142857142857], [31.0, 1275.6666666666667], [32.0, 2626.8999999999996], [33.0, 2123.1875], [34.0, 1335.076923076923], [35.0, 1278.6], [36.0, 1184.125], [37.0, 1964.1000000000001], [38.0, 1747.9090909090908], [39.0, 2041.8], [40.0, 1701.6428571428573], [41.0, 2156.6363636363635], [42.0, 2233.0], [43.0, 1725.125], [44.0, 1598.0833333333333], [45.0, 1540.4285714285713], [46.0, 1738.875], [47.0, 1665.090909090909], [48.0, 2146.875], [49.0, 1726.3846153846152], [50.0, 1676.6428571428573], [51.0, 3005.6], [52.0, 2324.0], [53.0, 2647.666666666667], [54.0, 3401.833333333333], [55.0, 3601.3076923076924], [56.0, 5011.75], [57.0, 3280.5], [58.0, 5448.25], [59.0, 3026.0], [60.0, 3886.857142857144], [1.0, 1780.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[37.896988906497604, 2020.5372424722648]], "isOverall": false, "label": "TitleBasics by primary_title-Aggregated", "isController": false}, {"data": [[2.0, 7453.0], [3.0, 5510.0], [4.0, 5561.0], [5.0, 14063.625], [6.0, 7847.285714285714], [7.0, 7492.124999999999], [8.0, 9759.666666666668], [9.0, 6167.4], [10.0, 6704.124999999999], [11.0, 10161.923076923074], [12.0, 10411.0], [13.0, 11315.571428571428], [14.0, 10699.076923076924], [15.0, 14217.5], [16.0, 10398.4], [17.0, 10759.75], [18.0, 11308.000000000002], [19.0, 16659.399999999998], [20.0, 15536.0], [21.0, 15765.0], [22.0, 16810.909090909092], [23.0, 14761.727272727272], [24.0, 20381.625], [25.0, 15959.4], [26.0, 17144.714285714286], [27.0, 18724.333333333332], [28.0, 17867.75], [29.0, 19227.428571428572], [30.0, 19522.1], [31.0, 20231.6], [32.0, 21963.833333333332], [33.0, 20371.933333333334], [34.0, 21236.85714285714], [35.0, 24147.5], [36.0, 22629.090909090908], [37.0, 23837.63636363636], [38.0, 24429.9], [39.0, 23627.833333333332], [41.0, 26748.777777777777], [40.0, 37741.0], [42.0, 29227.153846153848], [43.0, 27607.428571428572], [44.0, 29135.714285714286], [45.0, 28641.88888888889], [46.0, 29417.428571428572], [47.0, 30457.14285714286], [48.0, 31989.4], [49.0, 30861.11111111111], [50.0, 32143.736842105263], [51.0, 34315.57142857143], [52.0, 32745.42857142857], [53.0, 37729.0], [54.0, 33803.18749999999], [55.0, 31931.299999999996], [56.0, 37920.0], [57.0, 40509.0], [58.0, 34841.529411764706], [59.0, 33476.0], [60.0, 39022.20192307694], [1.0, 18258.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[37.52280130293162, 24870.112377850182]], "isOverall": false, "label": "Actors by name-Aggregated", "isController": false}, {"data": [[3.0, 304.75], [4.0, 214.0], [5.0, 268.0], [6.0, 112.28571428571428], [7.0, 136.0], [8.0, 319.0], [9.0, 280.0], [10.0, 136.2], [11.0, 245.8], [12.0, 216.0], [13.0, 231.00000000000003], [14.0, 198.4], [15.0, 157.0], [16.0, 194.25], [17.0, 194.4375], [18.0, 311.6363636363636], [19.0, 177.875], [20.0, 333.93333333333334], [21.0, 199.5], [22.0, 267.0], [23.0, 490.25000000000006], [24.0, 187.0], [25.0, 1760.0], [26.0, 140.27272727272728], [27.0, 331.5], [28.0, 362.0], [29.0, 164.75], [30.0, 108.0], [31.0, 183.35714285714286], [32.0, 239.66666666666666], [33.0, 470.61538461538464], [34.0, 1062.142857142857], [35.0, 170.0], [36.0, 224.1818181818182], [37.0, 357.20000000000005], [38.0, 578.3], [39.0, 904.2], [40.0, 227.1052631578947], [41.0, 678.8888888888889], [42.0, 230.91666666666666], [43.0, 598.9], [44.0, 1422.8333333333333], [45.0, 468.08333333333337], [46.0, 1100.4117647058824], [47.0, 233.0909090909091], [48.0, 183.90909090909093], [49.0, 356.85714285714283], [50.0, 171.6153846153846], [51.0, 212.28571428571428], [52.0, 470.4], [53.0, 711.3636363636364], [54.0, 282.6666666666667], [55.0, 419.29999999999995], [56.0, 468.5], [57.0, 616.2857142857142], [58.0, 314.4], [59.0, 1117.9375000000002], [60.0, 521.1530612244896]], "isOverall": false, "label": "TitleBasics by params", "isController": false}, {"data": [[36.72408026755853, 418.0150501672239]], "isOverall": false, "label": "TitleBasics by params-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 60.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 44.666666666666664, "minX": 1.7182632E12, "maxY": 19957.816666666666, "series": [{"data": [[1.7182635E12, 17988.983333333334], [1.71826332E12, 15472.1], [1.71826362E12, 16830.366666666665], [1.71826344E12, 13857.1], [1.71826326E12, 12278.933333333332], [1.71826374E12, 14367.516666666666], [1.71826356E12, 19957.816666666666], [1.71826338E12, 15092.716666666667], [1.7182638E12, 8574.75], [1.7182632E12, 963.9666666666667], [1.71826368E12, 14986.033333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7182635E12, 765.5166666666667], [1.71826332E12, 668.2166666666667], [1.71826362E12, 693.3666666666667], [1.71826344E12, 608.0], [1.71826326E12, 503.6333333333333], [1.71826374E12, 678.65], [1.71826356E12, 834.8333333333334], [1.71826338E12, 648.7666666666667], [1.7182638E12, 485.1166666666667], [1.7182632E12, 44.666666666666664], [1.71826368E12, 668.2333333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7182638E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 214.94339622641508, "minX": 1.7182632E12, "maxY": 37887.18309859156, "series": [{"data": [[1.7182635E12, 6521.586206896551], [1.71826332E12, 2003.0714285714287], [1.71826362E12, 9100.457627118643], [1.71826344E12, 4737.036363636364], [1.71826326E12, 1404.6046511627903], [1.71826374E12, 11997.666666666672], [1.71826356E12, 7221.038461538464], [1.71826338E12, 3208.090909090909], [1.7182638E12, 11094.860465116277], [1.7182632E12, 1398.0], [1.71826368E12, 10968.384615384617]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.7182635E12, 1484.629629629629], [1.71826332E12, 688.890625], [1.71826362E12, 2197.128571428572], [1.71826344E12, 1117.5666666666664], [1.71826326E12, 569.0212765957448], [1.71826374E12, 3917.1846153846145], [1.71826356E12, 1813.7666666666669], [1.71826338E12, 921.7636363636365], [1.7182638E12, 4409.6875], [1.7182632E12, 856.3333333333334], [1.71826368E12, 3918.5312500000005]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.7182635E12, 22358.014285714286], [1.71826332E12, 9380.800000000003], [1.71826362E12, 32384.733333333334], [1.71826344E12, 18825.65000000001], [1.71826326E12, 6186.48717948718], [1.71826374E12, 37887.18309859156], [1.71826356E12, 28292.346153846152], [1.71826338E12, 14013.816666666664], [1.7182638E12, 34744.16666666667], [1.7182632E12, 6481.5], [1.71826368E12, 34832.07575757577]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.7182635E12, 481.8676470588236], [1.71826332E12, 227.9672131147541], [1.71826362E12, 325.64615384615377], [1.71826344E12, 214.94339622641508], [1.71826326E12, 219.5090909090909], [1.71826374E12, 617.313725490196], [1.71826356E12, 611.0000000000001], [1.71826338E12, 376.485294117647], [1.7182638E12, 452.1333333333334], [1.7182632E12, 304.75], [1.71826368E12, 601.4666666666668]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7182638E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 209.11320754716982, "minX": 1.7182632E12, "maxY": 37887.05633802815, "series": [{"data": [[1.7182635E12, 6521.4827586206875], [1.71826332E12, 2002.9999999999998], [1.71826362E12, 9100.423728813555], [1.71826344E12, 4737.036363636364], [1.71826326E12, 1404.5348837209308], [1.71826374E12, 11997.555555555557], [1.71826356E12, 7221.000000000002], [1.71826338E12, 3208.0545454545454], [1.7182638E12, 11094.767441860464], [1.7182632E12, 1398.0], [1.71826368E12, 10968.326923076922]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.7182635E12, 1479.876543209877], [1.71826332E12, 682.828125], [1.71826362E12, 2192.8428571428567], [1.71826344E12, 1113.1166666666663], [1.71826326E12, 564.9361702127659], [1.71826374E12, 3910.738461538462], [1.71826356E12, 1809.7111111111114], [1.71826338E12, 918.0181818181818], [1.7182638E12, 4406.5], [1.7182632E12, 856.0], [1.71826368E12, 3912.2031249999995]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.7182635E12, 22357.928571428572], [1.71826332E12, 9380.433333333332], [1.71826362E12, 32384.616666666672], [1.71826344E12, 18825.166666666664], [1.71826326E12, 6186.410256410256], [1.71826374E12, 37887.05633802815], [1.71826356E12, 28292.03846153847], [1.71826338E12, 14013.249999999998], [1.7182638E12, 34743.6527777778], [1.7182632E12, 6481.5], [1.71826368E12, 34832.07575757577]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.7182635E12, 476.3088235294117], [1.71826332E12, 221.52459016393442], [1.71826362E12, 320.0153846153847], [1.71826344E12, 209.11320754716982], [1.71826326E12, 214.41818181818186], [1.71826374E12, 612.1764705882352], [1.71826356E12, 603.2048192771085], [1.71826338E12, 370.0735294117648], [1.7182638E12, 445.8333333333333], [1.7182632E12, 300.5], [1.71826368E12, 596.1666666666666]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7182638E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7182632E12, "maxY": 50.03174603174603, "series": [{"data": [[1.7182635E12, 4.741379310344827], [1.71826332E12, 3.964285714285714], [1.71826362E12, 7.796610169491523], [1.71826344E12, 3.109090909090909], [1.71826326E12, 6.558139534883722], [1.71826374E12, 50.03174603174603], [1.71826356E12, 3.051282051282051], [1.71826338E12, 2.9454545454545458], [1.7182638E12, 8.53488372093023], [1.7182632E12, 0.0], [1.71826368E12, 24.673076923076923]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.7182635E12, 14.54320987654321], [1.71826332E12, 5.250000000000001], [1.71826362E12, 8.385714285714283], [1.71826344E12, 21.233333333333334], [1.71826326E12, 25.91489361702127], [1.71826374E12, 29.87692307692308], [1.71826356E12, 12.788888888888888], [1.71826338E12, 3.8181818181818192], [1.7182638E12, 15.624999999999996], [1.7182632E12, 21.333333333333336], [1.71826368E12, 14.312500000000004]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.7182635E12, 14.67142857142857], [1.71826332E12, 4.9], [1.71826362E12, 6.449999999999999], [1.71826344E12, 20.333333333333336], [1.71826326E12, 0.8205128205128205], [1.71826374E12, 49.80281690140846], [1.71826356E12, 12.326923076923073], [1.71826338E12, 6.749999999999998], [1.7182638E12, 11.805555555555554], [1.7182632E12, 9.75], [1.71826368E12, 27.196969696969695]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.7182635E12, 18.617647058823533], [1.71826332E12, 1.7377049180327866], [1.71826362E12, 11.43076923076923], [1.71826344E12, 6.075471698113207], [1.71826326E12, 0.0], [1.71826374E12, 16.58823529411765], [1.71826356E12, 3.3975903614457827], [1.71826338E12, 4.117647058823529], [1.7182638E12, 11.299999999999999], [1.7182632E12, 14.500000000000002], [1.71826368E12, 2.6833333333333336]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7182638E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 107.0, "minX": 1.7182632E12, "maxY": 50224.0, "series": [{"data": [[1.7182635E12, 28594.0], [1.71826332E12, 11814.0], [1.71826362E12, 37906.0], [1.71826344E12, 23429.0], [1.71826326E12, 7354.0], [1.71826374E12, 50224.0], [1.71826356E12, 31440.0], [1.71826338E12, 16703.0], [1.7182638E12, 47022.0], [1.7182632E12, 9014.0], [1.71826368E12, 47760.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7182635E12, 122.0], [1.71826332E12, 113.0], [1.71826362E12, 117.0], [1.71826344E12, 126.0], [1.71826326E12, 107.0], [1.71826374E12, 124.0], [1.71826356E12, 128.0], [1.71826338E12, 133.0], [1.7182638E12, 120.0], [1.7182632E12, 164.0], [1.71826368E12, 145.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7182635E12, 23489.8], [1.71826332E12, 10025.0], [1.71826362E12, 32665.0], [1.71826344E12, 19597.5], [1.71826326E12, 6174.5], [1.71826374E12, 38559.0], [1.71826356E12, 28546.0], [1.71826338E12, 14683.100000000002], [1.7182638E12, 40690.2], [1.7182632E12, 6828.600000000002], [1.71826368E12, 35273.3]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7182635E12, 26549.600000000006], [1.71826332E12, 11627.4], [1.71826362E12, 37649.5], [1.71826344E12, 22540.989999999998], [1.71826326E12, 7097.23], [1.71826374E12, 47304.13999999999], [1.71826356E12, 30929.219999999994], [1.71826338E12, 16330.159999999996], [1.7182638E12, 46463.52], [1.7182632E12, 9014.0], [1.71826368E12, 44562.810000000005]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7182635E12, 2385.0], [1.71826332E12, 1360.0], [1.71826362E12, 4049.0], [1.71826344E12, 4231.5], [1.71826326E12, 1085.5], [1.71826374E12, 10589.0], [1.71826356E12, 2295.0], [1.71826338E12, 2286.5], [1.7182638E12, 11968.0], [1.7182632E12, 1183.5], [1.71826368E12, 6869.5]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.7182635E12, 24455.2], [1.71826332E12, 10900.0], [1.71826362E12, 34560.0], [1.71826344E12, 20358.75], [1.71826326E12, 6526.5], [1.71826374E12, 42742.4], [1.71826356E12, 29872.499999999996], [1.71826338E12, 15384.55], [1.7182638E12, 43608.8], [1.7182632E12, 9014.0], [1.71826368E12, 40091.149999999994]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7182638E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 34701.0, "series": [{"data": [[2.0, 1956.0], [8.0, 2883.5], [9.0, 7336.0], [10.0, 5892.5], [11.0, 10945.5], [3.0, 1968.5], [12.0, 7549.0], [13.0, 7167.0], [14.0, 21357.5], [15.0, 34701.0], [1.0, 3716.0], [4.0, 2648.0], [19.0, 31033.0], [5.0, 2276.5], [6.0, 2191.0], [7.0, 2099.0], [29.0, 32146.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 0.0], [2.0, 0.0], [8.0, 0.0], [1.0, 0.0], [9.0, 0.0], [5.0, 0.0], [10.0, 0.0], [11.0, 0.0], [6.0, 0.0], [3.0, 0.0], [13.0, 0.0], [7.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 29.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 34701.0, "series": [{"data": [[2.0, 1955.0], [8.0, 2873.5], [9.0, 7336.0], [10.0, 5891.5], [11.0, 10945.5], [3.0, 1968.5], [12.0, 7549.0], [13.0, 7167.0], [14.0, 21357.5], [15.0, 34701.0], [1.0, 3678.0], [4.0, 2643.0], [19.0, 31033.0], [5.0, 2272.5], [6.0, 2187.5], [7.0, 2096.0], [29.0, 32146.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 0.0], [2.0, 0.0], [8.0, 0.0], [1.0, 0.0], [9.0, 0.0], [5.0, 0.0], [10.0, 0.0], [11.0, 0.0], [6.0, 0.0], [3.0, 0.0], [13.0, 0.0], [7.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 29.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.3333333333333333, "minX": 1.7182632E12, "maxY": 5.166666666666667, "series": [{"data": [[1.7182635E12, 4.733333333333333], [1.71826332E12, 4.133333333333334], [1.71826362E12, 4.4], [1.71826344E12, 3.9], [1.71826326E12, 3.1666666666666665], [1.71826374E12, 4.166666666666667], [1.71826356E12, 5.166666666666667], [1.71826338E12, 4.083333333333333], [1.7182638E12, 1.9666666666666666], [1.7182632E12, 0.3333333333333333], [1.71826368E12, 4.116666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7182638E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.7182632E12, "maxY": 4.95, "series": [{"data": [[1.7182635E12, 4.583333333333333], [1.71826332E12, 3.9833333333333334], [1.71826362E12, 4.15], [1.71826344E12, 3.6666666666666665], [1.71826326E12, 3.0], [1.71826374E12, 4.083333333333333], [1.71826356E12, 4.95], [1.71826338E12, 3.8666666666666667], [1.7182638E12, 2.95], [1.7182632E12, 0.26666666666666666], [1.71826368E12, 4.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.7182635E12, 0.03333333333333333], [1.71826332E12, 0.03333333333333333], [1.71826362E12, 0.08333333333333333], [1.71826344E12, 0.13333333333333333], [1.71826326E12, 0.06666666666666667], [1.71826374E12, 0.08333333333333333], [1.71826356E12, 0.1], [1.71826338E12, 0.1], [1.71826368E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.URISyntaxException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7182638E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.7182632E12, "maxY": 1.5, "series": [{"data": [[1.7182635E12, 1.35], [1.71826332E12, 1.0666666666666667], [1.71826362E12, 1.1666666666666667], [1.71826344E12, 1.0], [1.71826326E12, 0.7833333333333333], [1.71826374E12, 1.0833333333333333], [1.71826356E12, 1.5], [1.71826338E12, 0.9166666666666666], [1.7182638E12, 0.5333333333333333], [1.7182632E12, 0.05], [1.71826368E12, 1.0666666666666667]], "isOverall": false, "label": "TitleBasics by primary_title-success", "isController": false}, {"data": [[1.7182635E12, 1.1666666666666667], [1.71826332E12, 1.0], [1.71826362E12, 1.0], [1.71826344E12, 1.0], [1.71826326E12, 0.65], [1.71826374E12, 1.1833333333333333], [1.71826356E12, 0.8666666666666667], [1.71826338E12, 1.0], [1.7182638E12, 1.2], [1.7182632E12, 0.06666666666666667], [1.71826368E12, 1.1]], "isOverall": false, "label": "Actors by name-success", "isController": false}, {"data": [[1.7182635E12, 0.03333333333333333], [1.71826332E12, 0.03333333333333333], [1.71826362E12, 0.08333333333333333], [1.71826344E12, 0.13333333333333333], [1.71826326E12, 0.06666666666666667], [1.71826374E12, 0.08333333333333333], [1.71826356E12, 0.1], [1.71826338E12, 0.1], [1.71826368E12, 0.03333333333333333]], "isOverall": false, "label": "TitleBasics by params-failure", "isController": false}, {"data": [[1.7182635E12, 1.1], [1.71826332E12, 0.9833333333333333], [1.71826362E12, 1.0], [1.71826344E12, 0.75], [1.71826326E12, 0.85], [1.71826374E12, 0.7666666666666667], [1.71826356E12, 1.2833333333333334], [1.71826338E12, 1.0333333333333334], [1.7182638E12, 0.5], [1.7182632E12, 0.06666666666666667], [1.71826368E12, 0.9666666666666667]], "isOverall": false, "label": "TitleBasics by params-success", "isController": false}, {"data": [[1.7182635E12, 0.9666666666666667], [1.71826332E12, 0.9333333333333333], [1.71826362E12, 0.9833333333333333], [1.71826344E12, 0.9166666666666666], [1.71826326E12, 0.7166666666666667], [1.71826374E12, 1.05], [1.71826356E12, 1.3], [1.71826338E12, 0.9166666666666666], [1.7182638E12, 0.7166666666666667], [1.7182632E12, 0.08333333333333333], [1.71826368E12, 0.8666666666666667]], "isOverall": false, "label": "Directors by name-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7182638E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.7182632E12, "maxY": 4.95, "series": [{"data": [[1.7182635E12, 4.583333333333333], [1.71826332E12, 3.9833333333333334], [1.71826362E12, 4.15], [1.71826344E12, 3.6666666666666665], [1.71826326E12, 3.0], [1.71826374E12, 4.083333333333333], [1.71826356E12, 4.95], [1.71826338E12, 3.8666666666666667], [1.7182638E12, 2.95], [1.7182632E12, 0.26666666666666666], [1.71826368E12, 4.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.7182635E12, 0.03333333333333333], [1.71826332E12, 0.03333333333333333], [1.71826362E12, 0.08333333333333333], [1.71826344E12, 0.13333333333333333], [1.71826326E12, 0.06666666666666667], [1.71826374E12, 0.08333333333333333], [1.71826356E12, 0.1], [1.71826338E12, 0.1], [1.71826368E12, 0.03333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7182638E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}


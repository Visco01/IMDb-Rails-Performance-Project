/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "maxY": 2971.0, "series": [{"data": [[0.0, 4.0], [0.1, 4.0], [0.2, 4.0], [0.3, 5.0], [0.4, 5.0], [0.5, 5.0], [0.6, 5.0], [0.7, 5.0], [0.8, 6.0], [0.9, 6.0], [1.0, 6.0], [1.1, 6.0], [1.2, 6.0], [1.3, 6.0], [1.4, 6.0], [1.5, 6.0], [1.6, 7.0], [1.7, 7.0], [1.8, 7.0], [1.9, 7.0], [2.0, 7.0], [2.1, 7.0], [2.2, 8.0], [2.3, 8.0], [2.4, 8.0], [2.5, 8.0], [2.6, 8.0], [2.7, 8.0], [2.8, 8.0], [2.9, 8.0], [3.0, 8.0], [3.1, 8.0], [3.2, 9.0], [3.3, 9.0], [3.4, 9.0], [3.5, 9.0], [3.6, 9.0], [3.7, 9.0], [3.8, 10.0], [3.9, 10.0], [4.0, 10.0], [4.1, 10.0], [4.2, 10.0], [4.3, 11.0], [4.4, 11.0], [4.5, 11.0], [4.6, 11.0], [4.7, 12.0], [4.8, 12.0], [4.9, 12.0], [5.0, 12.0], [5.1, 13.0], [5.2, 13.0], [5.3, 13.0], [5.4, 13.0], [5.5, 14.0], [5.6, 14.0], [5.7, 14.0], [5.8, 14.0], [5.9, 15.0], [6.0, 15.0], [6.1, 15.0], [6.2, 16.0], [6.3, 16.0], [6.4, 16.0], [6.5, 16.0], [6.6, 17.0], [6.7, 17.0], [6.8, 17.0], [6.9, 18.0], [7.0, 18.0], [7.1, 19.0], [7.2, 19.0], [7.3, 19.0], [7.4, 20.0], [7.5, 20.0], [7.6, 21.0], [7.7, 21.0], [7.8, 21.0], [7.9, 22.0], [8.0, 22.0], [8.1, 23.0], [8.2, 23.0], [8.3, 24.0], [8.4, 25.0], [8.5, 25.0], [8.6, 26.0], [8.7, 27.0], [8.8, 27.0], [8.9, 28.0], [9.0, 29.0], [9.1, 29.0], [9.2, 30.0], [9.3, 31.0], [9.4, 31.0], [9.5, 32.0], [9.6, 33.0], [9.7, 33.0], [9.8, 34.0], [9.9, 35.0], [10.0, 36.0], [10.1, 37.0], [10.2, 38.0], [10.3, 39.0], [10.4, 40.0], [10.5, 40.0], [10.6, 41.0], [10.7, 42.0], [10.8, 43.0], [10.9, 44.0], [11.0, 46.0], [11.1, 47.0], [11.2, 48.0], [11.3, 49.0], [11.4, 49.0], [11.5, 50.0], [11.6, 51.0], [11.7, 52.0], [11.8, 53.0], [11.9, 54.0], [12.0, 55.0], [12.1, 57.0], [12.2, 58.0], [12.3, 59.0], [12.4, 60.0], [12.5, 62.0], [12.6, 63.0], [12.7, 64.0], [12.8, 65.0], [12.9, 66.0], [13.0, 67.0], [13.1, 68.0], [13.2, 69.0], [13.3, 70.0], [13.4, 72.0], [13.5, 73.0], [13.6, 74.0], [13.7, 75.0], [13.8, 76.0], [13.9, 77.0], [14.0, 78.0], [14.1, 79.0], [14.2, 79.0], [14.3, 80.0], [14.4, 80.0], [14.5, 81.0], [14.6, 81.0], [14.7, 82.0], [14.8, 83.0], [14.9, 84.0], [15.0, 85.0], [15.1, 85.0], [15.2, 86.0], [15.3, 86.0], [15.4, 87.0], [15.5, 87.0], [15.6, 88.0], [15.7, 88.0], [15.8, 89.0], [15.9, 90.0], [16.0, 90.0], [16.1, 91.0], [16.2, 91.0], [16.3, 92.0], [16.4, 92.0], [16.5, 93.0], [16.6, 94.0], [16.7, 94.0], [16.8, 95.0], [16.9, 95.0], [17.0, 96.0], [17.1, 96.0], [17.2, 97.0], [17.3, 97.0], [17.4, 98.0], [17.5, 99.0], [17.6, 99.0], [17.7, 100.0], [17.8, 101.0], [17.9, 101.0], [18.0, 102.0], [18.1, 102.0], [18.2, 103.0], [18.3, 103.0], [18.4, 104.0], [18.5, 104.0], [18.6, 105.0], [18.7, 105.0], [18.8, 106.0], [18.9, 107.0], [19.0, 107.0], [19.1, 107.0], [19.2, 108.0], [19.3, 109.0], [19.4, 109.0], [19.5, 109.0], [19.6, 110.0], [19.7, 111.0], [19.8, 111.0], [19.9, 112.0], [20.0, 112.0], [20.1, 113.0], [20.2, 113.0], [20.3, 114.0], [20.4, 114.0], [20.5, 114.0], [20.6, 115.0], [20.7, 116.0], [20.8, 116.0], [20.9, 116.0], [21.0, 117.0], [21.1, 117.0], [21.2, 118.0], [21.3, 119.0], [21.4, 119.0], [21.5, 119.0], [21.6, 120.0], [21.7, 121.0], [21.8, 121.0], [21.9, 121.0], [22.0, 122.0], [22.1, 122.0], [22.2, 123.0], [22.3, 123.0], [22.4, 124.0], [22.5, 124.0], [22.6, 125.0], [22.7, 125.0], [22.8, 126.0], [22.9, 127.0], [23.0, 127.0], [23.1, 128.0], [23.2, 128.0], [23.3, 129.0], [23.4, 129.0], [23.5, 130.0], [23.6, 131.0], [23.7, 131.0], [23.8, 132.0], [23.9, 133.0], [24.0, 134.0], [24.1, 134.0], [24.2, 135.0], [24.3, 136.0], [24.4, 136.0], [24.5, 137.0], [24.6, 137.0], [24.7, 138.0], [24.8, 138.0], [24.9, 139.0], [25.0, 139.0], [25.1, 140.0], [25.2, 141.0], [25.3, 142.0], [25.4, 142.0], [25.5, 143.0], [25.6, 145.0], [25.7, 146.0], [25.8, 146.0], [25.9, 147.0], [26.0, 148.0], [26.1, 148.0], [26.2, 149.0], [26.3, 150.0], [26.4, 152.0], [26.5, 152.0], [26.6, 153.0], [26.7, 154.0], [26.8, 154.0], [26.9, 155.0], [27.0, 156.0], [27.1, 156.0], [27.2, 157.0], [27.3, 158.0], [27.4, 158.0], [27.5, 159.0], [27.6, 159.0], [27.7, 160.0], [27.8, 161.0], [27.9, 162.0], [28.0, 163.0], [28.1, 163.0], [28.2, 164.0], [28.3, 166.0], [28.4, 166.0], [28.5, 167.0], [28.6, 168.0], [28.7, 168.0], [28.8, 169.0], [28.9, 169.0], [29.0, 170.0], [29.1, 171.0], [29.2, 171.0], [29.3, 172.0], [29.4, 172.0], [29.5, 173.0], [29.6, 173.0], [29.7, 174.0], [29.8, 174.0], [29.9, 175.0], [30.0, 175.0], [30.1, 176.0], [30.2, 176.0], [30.3, 177.0], [30.4, 178.0], [30.5, 178.0], [30.6, 179.0], [30.7, 179.0], [30.8, 179.0], [30.9, 180.0], [31.0, 180.0], [31.1, 181.0], [31.2, 181.0], [31.3, 182.0], [31.4, 182.0], [31.5, 183.0], [31.6, 184.0], [31.7, 184.0], [31.8, 184.0], [31.9, 185.0], [32.0, 186.0], [32.1, 186.0], [32.2, 186.0], [32.3, 187.0], [32.4, 187.0], [32.5, 187.0], [32.6, 188.0], [32.7, 188.0], [32.8, 189.0], [32.9, 189.0], [33.0, 190.0], [33.1, 190.0], [33.2, 190.0], [33.3, 191.0], [33.4, 191.0], [33.5, 191.0], [33.6, 192.0], [33.7, 192.0], [33.8, 192.0], [33.9, 192.0], [34.0, 193.0], [34.1, 193.0], [34.2, 194.0], [34.3, 194.0], [34.4, 194.0], [34.5, 195.0], [34.6, 195.0], [34.7, 195.0], [34.8, 196.0], [34.9, 196.0], [35.0, 197.0], [35.1, 197.0], [35.2, 197.0], [35.3, 198.0], [35.4, 198.0], [35.5, 198.0], [35.6, 199.0], [35.7, 199.0], [35.8, 199.0], [35.9, 200.0], [36.0, 200.0], [36.1, 200.0], [36.2, 201.0], [36.3, 201.0], [36.4, 201.0], [36.5, 202.0], [36.6, 202.0], [36.7, 202.0], [36.8, 202.0], [36.9, 203.0], [37.0, 203.0], [37.1, 203.0], [37.2, 204.0], [37.3, 204.0], [37.4, 204.0], [37.5, 205.0], [37.6, 205.0], [37.7, 205.0], [37.8, 205.0], [37.9, 206.0], [38.0, 206.0], [38.1, 206.0], [38.2, 207.0], [38.3, 207.0], [38.4, 207.0], [38.5, 208.0], [38.6, 208.0], [38.7, 208.0], [38.8, 209.0], [38.9, 209.0], [39.0, 209.0], [39.1, 210.0], [39.2, 210.0], [39.3, 210.0], [39.4, 211.0], [39.5, 211.0], [39.6, 212.0], [39.7, 212.0], [39.8, 212.0], [39.9, 213.0], [40.0, 213.0], [40.1, 213.0], [40.2, 213.0], [40.3, 214.0], [40.4, 214.0], [40.5, 214.0], [40.6, 215.0], [40.7, 215.0], [40.8, 216.0], [40.9, 216.0], [41.0, 216.0], [41.1, 217.0], [41.2, 217.0], [41.3, 217.0], [41.4, 218.0], [41.5, 219.0], [41.6, 219.0], [41.7, 219.0], [41.8, 220.0], [41.9, 220.0], [42.0, 220.0], [42.1, 221.0], [42.2, 221.0], [42.3, 222.0], [42.4, 222.0], [42.5, 223.0], [42.6, 223.0], [42.7, 223.0], [42.8, 224.0], [42.9, 224.0], [43.0, 224.0], [43.1, 225.0], [43.2, 225.0], [43.3, 226.0], [43.4, 227.0], [43.5, 227.0], [43.6, 228.0], [43.7, 228.0], [43.8, 229.0], [43.9, 229.0], [44.0, 230.0], [44.1, 231.0], [44.2, 231.0], [44.3, 231.0], [44.4, 232.0], [44.5, 233.0], [44.6, 233.0], [44.7, 234.0], [44.8, 234.0], [44.9, 234.0], [45.0, 235.0], [45.1, 236.0], [45.2, 237.0], [45.3, 237.0], [45.4, 238.0], [45.5, 238.0], [45.6, 238.0], [45.7, 239.0], [45.8, 239.0], [45.9, 240.0], [46.0, 240.0], [46.1, 241.0], [46.2, 242.0], [46.3, 242.0], [46.4, 243.0], [46.5, 243.0], [46.6, 244.0], [46.7, 244.0], [46.8, 245.0], [46.9, 245.0], [47.0, 246.0], [47.1, 247.0], [47.2, 247.0], [47.3, 248.0], [47.4, 248.0], [47.5, 249.0], [47.6, 249.0], [47.7, 250.0], [47.8, 250.0], [47.9, 251.0], [48.0, 251.0], [48.1, 252.0], [48.2, 252.0], [48.3, 252.0], [48.4, 253.0], [48.5, 254.0], [48.6, 254.0], [48.7, 255.0], [48.8, 256.0], [48.9, 256.0], [49.0, 257.0], [49.1, 257.0], [49.2, 258.0], [49.3, 258.0], [49.4, 259.0], [49.5, 259.0], [49.6, 260.0], [49.7, 261.0], [49.8, 261.0], [49.9, 262.0], [50.0, 263.0], [50.1, 263.0], [50.2, 264.0], [50.3, 264.0], [50.4, 265.0], [50.5, 265.0], [50.6, 266.0], [50.7, 266.0], [50.8, 267.0], [50.9, 267.0], [51.0, 267.0], [51.1, 268.0], [51.2, 268.0], [51.3, 269.0], [51.4, 269.0], [51.5, 270.0], [51.6, 270.0], [51.7, 270.0], [51.8, 271.0], [51.9, 271.0], [52.0, 271.0], [52.1, 271.0], [52.2, 272.0], [52.3, 273.0], [52.4, 273.0], [52.5, 273.0], [52.6, 274.0], [52.7, 274.0], [52.8, 274.0], [52.9, 275.0], [53.0, 275.0], [53.1, 275.0], [53.2, 276.0], [53.3, 276.0], [53.4, 276.0], [53.5, 276.0], [53.6, 277.0], [53.7, 277.0], [53.8, 278.0], [53.9, 278.0], [54.0, 279.0], [54.1, 279.0], [54.2, 279.0], [54.3, 279.0], [54.4, 280.0], [54.5, 280.0], [54.6, 281.0], [54.7, 281.0], [54.8, 282.0], [54.9, 282.0], [55.0, 282.0], [55.1, 283.0], [55.2, 283.0], [55.3, 283.0], [55.4, 284.0], [55.5, 284.0], [55.6, 284.0], [55.7, 285.0], [55.8, 285.0], [55.9, 285.0], [56.0, 286.0], [56.1, 286.0], [56.2, 286.0], [56.3, 286.0], [56.4, 287.0], [56.5, 287.0], [56.6, 287.0], [56.7, 288.0], [56.8, 288.0], [56.9, 288.0], [57.0, 289.0], [57.1, 289.0], [57.2, 289.0], [57.3, 290.0], [57.4, 290.0], [57.5, 290.0], [57.6, 291.0], [57.7, 291.0], [57.8, 291.0], [57.9, 292.0], [58.0, 292.0], [58.1, 292.0], [58.2, 293.0], [58.3, 293.0], [58.4, 293.0], [58.5, 293.0], [58.6, 294.0], [58.7, 294.0], [58.8, 295.0], [58.9, 295.0], [59.0, 295.0], [59.1, 296.0], [59.2, 296.0], [59.3, 296.0], [59.4, 297.0], [59.5, 297.0], [59.6, 298.0], [59.7, 298.0], [59.8, 298.0], [59.9, 298.0], [60.0, 299.0], [60.1, 299.0], [60.2, 299.0], [60.3, 300.0], [60.4, 300.0], [60.5, 300.0], [60.6, 301.0], [60.7, 301.0], [60.8, 301.0], [60.9, 301.0], [61.0, 301.0], [61.1, 302.0], [61.2, 302.0], [61.3, 303.0], [61.4, 303.0], [61.5, 304.0], [61.6, 304.0], [61.7, 305.0], [61.8, 305.0], [61.9, 305.0], [62.0, 306.0], [62.1, 306.0], [62.2, 307.0], [62.3, 307.0], [62.4, 307.0], [62.5, 307.0], [62.6, 308.0], [62.7, 308.0], [62.8, 309.0], [62.9, 309.0], [63.0, 310.0], [63.1, 310.0], [63.2, 311.0], [63.3, 311.0], [63.4, 312.0], [63.5, 312.0], [63.6, 312.0], [63.7, 313.0], [63.8, 313.0], [63.9, 313.0], [64.0, 314.0], [64.1, 315.0], [64.2, 315.0], [64.3, 316.0], [64.4, 316.0], [64.5, 317.0], [64.6, 317.0], [64.7, 318.0], [64.8, 318.0], [64.9, 318.0], [65.0, 319.0], [65.1, 319.0], [65.2, 320.0], [65.3, 321.0], [65.4, 321.0], [65.5, 321.0], [65.6, 322.0], [65.7, 322.0], [65.8, 323.0], [65.9, 323.0], [66.0, 324.0], [66.1, 324.0], [66.2, 325.0], [66.3, 325.0], [66.4, 326.0], [66.5, 326.0], [66.6, 327.0], [66.7, 328.0], [66.8, 328.0], [66.9, 329.0], [67.0, 329.0], [67.1, 330.0], [67.2, 330.0], [67.3, 331.0], [67.4, 331.0], [67.5, 332.0], [67.6, 332.0], [67.7, 333.0], [67.8, 333.0], [67.9, 334.0], [68.0, 334.0], [68.1, 335.0], [68.2, 336.0], [68.3, 336.0], [68.4, 337.0], [68.5, 338.0], [68.6, 338.0], [68.7, 339.0], [68.8, 340.0], [68.9, 340.0], [69.0, 341.0], [69.1, 341.0], [69.2, 342.0], [69.3, 342.0], [69.4, 343.0], [69.5, 344.0], [69.6, 345.0], [69.7, 345.0], [69.8, 346.0], [69.9, 346.0], [70.0, 347.0], [70.1, 347.0], [70.2, 348.0], [70.3, 349.0], [70.4, 350.0], [70.5, 351.0], [70.6, 351.0], [70.7, 352.0], [70.8, 353.0], [70.9, 353.0], [71.0, 354.0], [71.1, 355.0], [71.2, 355.0], [71.3, 356.0], [71.4, 356.0], [71.5, 357.0], [71.6, 358.0], [71.7, 359.0], [71.8, 359.0], [71.9, 360.0], [72.0, 360.0], [72.1, 361.0], [72.2, 362.0], [72.3, 362.0], [72.4, 363.0], [72.5, 364.0], [72.6, 364.0], [72.7, 365.0], [72.8, 366.0], [72.9, 366.0], [73.0, 367.0], [73.1, 367.0], [73.2, 368.0], [73.3, 369.0], [73.4, 369.0], [73.5, 370.0], [73.6, 370.0], [73.7, 371.0], [73.8, 372.0], [73.9, 373.0], [74.0, 373.0], [74.1, 374.0], [74.2, 374.0], [74.3, 375.0], [74.4, 376.0], [74.5, 376.0], [74.6, 377.0], [74.7, 377.0], [74.8, 378.0], [74.9, 379.0], [75.0, 379.0], [75.1, 380.0], [75.2, 380.0], [75.3, 381.0], [75.4, 382.0], [75.5, 383.0], [75.6, 384.0], [75.7, 385.0], [75.8, 385.0], [75.9, 386.0], [76.0, 387.0], [76.1, 387.0], [76.2, 388.0], [76.3, 388.0], [76.4, 389.0], [76.5, 389.0], [76.6, 390.0], [76.7, 390.0], [76.8, 391.0], [76.9, 391.0], [77.0, 392.0], [77.1, 392.0], [77.2, 393.0], [77.3, 393.0], [77.4, 394.0], [77.5, 394.0], [77.6, 395.0], [77.7, 395.0], [77.8, 396.0], [77.9, 396.0], [78.0, 396.0], [78.1, 397.0], [78.2, 398.0], [78.3, 398.0], [78.4, 399.0], [78.5, 399.0], [78.6, 400.0], [78.7, 401.0], [78.8, 401.0], [78.9, 402.0], [79.0, 403.0], [79.1, 403.0], [79.2, 404.0], [79.3, 405.0], [79.4, 406.0], [79.5, 407.0], [79.6, 407.0], [79.7, 408.0], [79.8, 408.0], [79.9, 409.0], [80.0, 410.0], [80.1, 410.0], [80.2, 411.0], [80.3, 412.0], [80.4, 412.0], [80.5, 413.0], [80.6, 413.0], [80.7, 414.0], [80.8, 415.0], [80.9, 415.0], [81.0, 416.0], [81.1, 417.0], [81.2, 417.0], [81.3, 418.0], [81.4, 420.0], [81.5, 420.0], [81.6, 421.0], [81.7, 422.0], [81.8, 423.0], [81.9, 424.0], [82.0, 425.0], [82.1, 426.0], [82.2, 427.0], [82.3, 429.0], [82.4, 430.0], [82.5, 432.0], [82.6, 433.0], [82.7, 434.0], [82.8, 435.0], [82.9, 435.0], [83.0, 437.0], [83.1, 438.0], [83.2, 439.0], [83.3, 440.0], [83.4, 442.0], [83.5, 443.0], [83.6, 444.0], [83.7, 445.0], [83.8, 446.0], [83.9, 447.0], [84.0, 448.0], [84.1, 449.0], [84.2, 451.0], [84.3, 452.0], [84.4, 453.0], [84.5, 454.0], [84.6, 456.0], [84.7, 457.0], [84.8, 459.0], [84.9, 460.0], [85.0, 463.0], [85.1, 464.0], [85.2, 466.0], [85.3, 467.0], [85.4, 470.0], [85.5, 471.0], [85.6, 472.0], [85.7, 473.0], [85.8, 475.0], [85.9, 476.0], [86.0, 477.0], [86.1, 478.0], [86.2, 479.0], [86.3, 480.0], [86.4, 481.0], [86.5, 482.0], [86.6, 483.0], [86.7, 484.0], [86.8, 485.0], [86.9, 486.0], [87.0, 487.0], [87.1, 488.0], [87.2, 490.0], [87.3, 492.0], [87.4, 493.0], [87.5, 494.0], [87.6, 495.0], [87.7, 496.0], [87.8, 498.0], [87.9, 499.0], [88.0, 499.0], [88.1, 500.0], [88.2, 501.0], [88.3, 503.0], [88.4, 503.0], [88.5, 504.0], [88.6, 505.0], [88.7, 508.0], [88.8, 509.0], [88.9, 510.0], [89.0, 512.0], [89.1, 513.0], [89.2, 514.0], [89.3, 516.0], [89.4, 517.0], [89.5, 519.0], [89.6, 520.0], [89.7, 524.0], [89.8, 525.0], [89.9, 527.0], [90.0, 529.0], [90.1, 532.0], [90.2, 536.0], [90.3, 538.0], [90.4, 541.0], [90.5, 545.0], [90.6, 547.0], [90.7, 550.0], [90.8, 552.0], [90.9, 555.0], [91.0, 556.0], [91.1, 558.0], [91.2, 560.0], [91.3, 562.0], [91.4, 564.0], [91.5, 566.0], [91.6, 569.0], [91.7, 571.0], [91.8, 573.0], [91.9, 575.0], [92.0, 577.0], [92.1, 579.0], [92.2, 579.0], [92.3, 581.0], [92.4, 583.0], [92.5, 586.0], [92.6, 590.0], [92.7, 593.0], [92.8, 595.0], [92.9, 596.0], [93.0, 598.0], [93.1, 601.0], [93.2, 603.0], [93.3, 606.0], [93.4, 608.0], [93.5, 611.0], [93.6, 615.0], [93.7, 618.0], [93.8, 621.0], [93.9, 626.0], [94.0, 630.0], [94.1, 634.0], [94.2, 638.0], [94.3, 642.0], [94.4, 649.0], [94.5, 653.0], [94.6, 657.0], [94.7, 661.0], [94.8, 665.0], [94.9, 670.0], [95.0, 675.0], [95.1, 679.0], [95.2, 685.0], [95.3, 690.0], [95.4, 692.0], [95.5, 694.0], [95.6, 697.0], [95.7, 702.0], [95.8, 707.0], [95.9, 710.0], [96.0, 714.0], [96.1, 718.0], [96.2, 721.0], [96.3, 730.0], [96.4, 738.0], [96.5, 747.0], [96.6, 754.0], [96.7, 762.0], [96.8, 766.0], [96.9, 777.0], [97.0, 784.0], [97.1, 794.0], [97.2, 800.0], [97.3, 804.0], [97.4, 808.0], [97.5, 810.0], [97.6, 820.0], [97.7, 825.0], [97.8, 841.0], [97.9, 854.0], [98.0, 866.0], [98.1, 880.0], [98.2, 894.0], [98.3, 902.0], [98.4, 914.0], [98.5, 926.0], [98.6, 944.0], [98.7, 966.0], [98.8, 977.0], [98.9, 987.0], [99.0, 1002.0], [99.1, 1011.0], [99.2, 1034.0], [99.3, 1074.0], [99.4, 1103.0], [99.5, 1122.0], [99.6, 1166.0], [99.7, 1219.0], [99.8, 1296.0], [99.9, 1859.0], [100.0, 2725.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[0.0, 4.0], [0.1, 5.0], [0.2, 5.0], [0.3, 5.0], [0.4, 6.0], [0.5, 6.0], [0.6, 6.0], [0.7, 6.0], [0.8, 6.0], [0.9, 6.0], [1.0, 6.0], [1.1, 7.0], [1.2, 7.0], [1.3, 7.0], [1.4, 7.0], [1.5, 7.0], [1.6, 7.0], [1.7, 7.0], [1.8, 7.0], [1.9, 7.0], [2.0, 8.0], [2.1, 8.0], [2.2, 8.0], [2.3, 8.0], [2.4, 8.0], [2.5, 8.0], [2.6, 8.0], [2.7, 9.0], [2.8, 9.0], [2.9, 9.0], [3.0, 9.0], [3.1, 9.0], [3.2, 9.0], [3.3, 9.0], [3.4, 10.0], [3.5, 10.0], [3.6, 10.0], [3.7, 10.0], [3.8, 10.0], [3.9, 10.0], [4.0, 10.0], [4.1, 11.0], [4.2, 11.0], [4.3, 11.0], [4.4, 11.0], [4.5, 11.0], [4.6, 11.0], [4.7, 12.0], [4.8, 12.0], [4.9, 12.0], [5.0, 12.0], [5.1, 12.0], [5.2, 13.0], [5.3, 13.0], [5.4, 13.0], [5.5, 14.0], [5.6, 14.0], [5.7, 14.0], [5.8, 14.0], [5.9, 15.0], [6.0, 15.0], [6.1, 15.0], [6.2, 16.0], [6.3, 16.0], [6.4, 17.0], [6.5, 17.0], [6.6, 17.0], [6.7, 18.0], [6.8, 18.0], [6.9, 19.0], [7.0, 19.0], [7.1, 20.0], [7.2, 20.0], [7.3, 21.0], [7.4, 21.0], [7.5, 22.0], [7.6, 22.0], [7.7, 23.0], [7.8, 24.0], [7.9, 24.0], [8.0, 25.0], [8.1, 26.0], [8.2, 26.0], [8.3, 27.0], [8.4, 27.0], [8.5, 28.0], [8.6, 29.0], [8.7, 29.0], [8.8, 30.0], [8.9, 31.0], [9.0, 31.0], [9.1, 32.0], [9.2, 33.0], [9.3, 33.0], [9.4, 34.0], [9.5, 35.0], [9.6, 35.0], [9.7, 36.0], [9.8, 37.0], [9.9, 38.0], [10.0, 39.0], [10.1, 41.0], [10.2, 42.0], [10.3, 44.0], [10.4, 45.0], [10.5, 46.0], [10.6, 48.0], [10.7, 48.0], [10.8, 50.0], [10.9, 52.0], [11.0, 53.0], [11.1, 54.0], [11.2, 55.0], [11.3, 57.0], [11.4, 59.0], [11.5, 60.0], [11.6, 61.0], [11.7, 62.0], [11.8, 64.0], [11.9, 65.0], [12.0, 65.0], [12.1, 67.0], [12.2, 68.0], [12.3, 69.0], [12.4, 70.0], [12.5, 71.0], [12.6, 72.0], [12.7, 72.0], [12.8, 74.0], [12.9, 74.0], [13.0, 76.0], [13.1, 77.0], [13.2, 78.0], [13.3, 79.0], [13.4, 79.0], [13.5, 80.0], [13.6, 80.0], [13.7, 81.0], [13.8, 82.0], [13.9, 82.0], [14.0, 84.0], [14.1, 84.0], [14.2, 86.0], [14.3, 86.0], [14.4, 87.0], [14.5, 88.0], [14.6, 89.0], [14.7, 89.0], [14.8, 89.0], [14.9, 90.0], [15.0, 90.0], [15.1, 91.0], [15.2, 91.0], [15.3, 92.0], [15.4, 93.0], [15.5, 94.0], [15.6, 94.0], [15.7, 95.0], [15.8, 96.0], [15.9, 96.0], [16.0, 97.0], [16.1, 98.0], [16.2, 98.0], [16.3, 99.0], [16.4, 99.0], [16.5, 100.0], [16.6, 100.0], [16.7, 101.0], [16.8, 101.0], [16.9, 102.0], [17.0, 102.0], [17.1, 103.0], [17.2, 103.0], [17.3, 103.0], [17.4, 104.0], [17.5, 104.0], [17.6, 105.0], [17.7, 106.0], [17.8, 106.0], [17.9, 106.0], [18.0, 107.0], [18.1, 108.0], [18.2, 108.0], [18.3, 108.0], [18.4, 109.0], [18.5, 109.0], [18.6, 110.0], [18.7, 110.0], [18.8, 111.0], [18.9, 111.0], [19.0, 112.0], [19.1, 112.0], [19.2, 113.0], [19.3, 113.0], [19.4, 114.0], [19.5, 114.0], [19.6, 115.0], [19.7, 115.0], [19.8, 116.0], [19.9, 116.0], [20.0, 117.0], [20.1, 117.0], [20.2, 117.0], [20.3, 118.0], [20.4, 118.0], [20.5, 119.0], [20.6, 119.0], [20.7, 120.0], [20.8, 121.0], [20.9, 121.0], [21.0, 122.0], [21.1, 122.0], [21.2, 122.0], [21.3, 123.0], [21.4, 124.0], [21.5, 124.0], [21.6, 125.0], [21.7, 125.0], [21.8, 126.0], [21.9, 126.0], [22.0, 127.0], [22.1, 128.0], [22.2, 128.0], [22.3, 129.0], [22.4, 130.0], [22.5, 131.0], [22.6, 131.0], [22.7, 132.0], [22.8, 132.0], [22.9, 133.0], [23.0, 133.0], [23.1, 134.0], [23.2, 135.0], [23.3, 135.0], [23.4, 136.0], [23.5, 137.0], [23.6, 137.0], [23.7, 139.0], [23.8, 139.0], [23.9, 140.0], [24.0, 141.0], [24.1, 141.0], [24.2, 142.0], [24.3, 143.0], [24.4, 143.0], [24.5, 144.0], [24.6, 145.0], [24.7, 146.0], [24.8, 146.0], [24.9, 147.0], [25.0, 147.0], [25.1, 148.0], [25.2, 148.0], [25.3, 149.0], [25.4, 149.0], [25.5, 150.0], [25.6, 151.0], [25.7, 152.0], [25.8, 153.0], [25.9, 153.0], [26.0, 154.0], [26.1, 154.0], [26.2, 155.0], [26.3, 156.0], [26.4, 157.0], [26.5, 157.0], [26.6, 158.0], [26.7, 158.0], [26.8, 159.0], [26.9, 160.0], [27.0, 161.0], [27.1, 161.0], [27.2, 162.0], [27.3, 162.0], [27.4, 163.0], [27.5, 164.0], [27.6, 165.0], [27.7, 166.0], [27.8, 167.0], [27.9, 168.0], [28.0, 169.0], [28.1, 170.0], [28.2, 170.0], [28.3, 171.0], [28.4, 172.0], [28.5, 172.0], [28.6, 173.0], [28.7, 173.0], [28.8, 174.0], [28.9, 174.0], [29.0, 175.0], [29.1, 176.0], [29.2, 176.0], [29.3, 177.0], [29.4, 177.0], [29.5, 178.0], [29.6, 178.0], [29.7, 179.0], [29.8, 179.0], [29.9, 179.0], [30.0, 180.0], [30.1, 180.0], [30.2, 181.0], [30.3, 181.0], [30.4, 181.0], [30.5, 182.0], [30.6, 182.0], [30.7, 182.0], [30.8, 183.0], [30.9, 183.0], [31.0, 183.0], [31.1, 184.0], [31.2, 185.0], [31.3, 185.0], [31.4, 185.0], [31.5, 186.0], [31.6, 186.0], [31.7, 186.0], [31.8, 187.0], [31.9, 187.0], [32.0, 188.0], [32.1, 188.0], [32.2, 189.0], [32.3, 189.0], [32.4, 190.0], [32.5, 190.0], [32.6, 190.0], [32.7, 191.0], [32.8, 192.0], [32.9, 192.0], [33.0, 192.0], [33.1, 193.0], [33.2, 193.0], [33.3, 194.0], [33.4, 194.0], [33.5, 194.0], [33.6, 195.0], [33.7, 195.0], [33.8, 195.0], [33.9, 196.0], [34.0, 196.0], [34.1, 197.0], [34.2, 197.0], [34.3, 197.0], [34.4, 198.0], [34.5, 198.0], [34.6, 198.0], [34.7, 199.0], [34.8, 199.0], [34.9, 200.0], [35.0, 200.0], [35.1, 200.0], [35.2, 200.0], [35.3, 201.0], [35.4, 201.0], [35.5, 202.0], [35.6, 202.0], [35.7, 202.0], [35.8, 203.0], [35.9, 203.0], [36.0, 203.0], [36.1, 204.0], [36.2, 204.0], [36.3, 204.0], [36.4, 205.0], [36.5, 205.0], [36.6, 205.0], [36.7, 206.0], [36.8, 206.0], [36.9, 206.0], [37.0, 207.0], [37.1, 207.0], [37.2, 207.0], [37.3, 207.0], [37.4, 208.0], [37.5, 208.0], [37.6, 208.0], [37.7, 209.0], [37.8, 209.0], [37.9, 209.0], [38.0, 210.0], [38.1, 210.0], [38.2, 211.0], [38.3, 211.0], [38.4, 211.0], [38.5, 212.0], [38.6, 212.0], [38.7, 212.0], [38.8, 213.0], [38.9, 213.0], [39.0, 214.0], [39.1, 214.0], [39.2, 214.0], [39.3, 215.0], [39.4, 215.0], [39.5, 216.0], [39.6, 216.0], [39.7, 217.0], [39.8, 217.0], [39.9, 217.0], [40.0, 218.0], [40.1, 218.0], [40.2, 219.0], [40.3, 219.0], [40.4, 219.0], [40.5, 220.0], [40.6, 220.0], [40.7, 221.0], [40.8, 221.0], [40.9, 221.0], [41.0, 222.0], [41.1, 222.0], [41.2, 223.0], [41.3, 223.0], [41.4, 224.0], [41.5, 224.0], [41.6, 224.0], [41.7, 225.0], [41.8, 226.0], [41.9, 226.0], [42.0, 227.0], [42.1, 227.0], [42.2, 228.0], [42.3, 228.0], [42.4, 228.0], [42.5, 229.0], [42.6, 230.0], [42.7, 230.0], [42.8, 231.0], [42.9, 231.0], [43.0, 232.0], [43.1, 233.0], [43.2, 233.0], [43.3, 234.0], [43.4, 234.0], [43.5, 235.0], [43.6, 235.0], [43.7, 236.0], [43.8, 236.0], [43.9, 237.0], [44.0, 238.0], [44.1, 238.0], [44.2, 238.0], [44.3, 239.0], [44.4, 240.0], [44.5, 240.0], [44.6, 241.0], [44.7, 242.0], [44.8, 242.0], [44.9, 243.0], [45.0, 244.0], [45.1, 244.0], [45.2, 245.0], [45.3, 245.0], [45.4, 246.0], [45.5, 246.0], [45.6, 247.0], [45.7, 247.0], [45.8, 248.0], [45.9, 248.0], [46.0, 249.0], [46.1, 249.0], [46.2, 250.0], [46.3, 250.0], [46.4, 251.0], [46.5, 251.0], [46.6, 252.0], [46.7, 253.0], [46.8, 253.0], [46.9, 254.0], [47.0, 255.0], [47.1, 255.0], [47.2, 256.0], [47.3, 257.0], [47.4, 257.0], [47.5, 258.0], [47.6, 258.0], [47.7, 258.0], [47.8, 259.0], [47.9, 259.0], [48.0, 260.0], [48.1, 260.0], [48.2, 261.0], [48.3, 261.0], [48.4, 261.0], [48.5, 262.0], [48.6, 262.0], [48.7, 263.0], [48.8, 263.0], [48.9, 264.0], [49.0, 264.0], [49.1, 265.0], [49.2, 266.0], [49.3, 266.0], [49.4, 267.0], [49.5, 267.0], [49.6, 268.0], [49.7, 268.0], [49.8, 268.0], [49.9, 269.0], [50.0, 269.0], [50.1, 270.0], [50.2, 270.0], [50.3, 270.0], [50.4, 271.0], [50.5, 271.0], [50.6, 271.0], [50.7, 272.0], [50.8, 272.0], [50.9, 273.0], [51.0, 273.0], [51.1, 273.0], [51.2, 274.0], [51.3, 274.0], [51.4, 275.0], [51.5, 275.0], [51.6, 276.0], [51.7, 276.0], [51.8, 276.0], [51.9, 276.0], [52.0, 277.0], [52.1, 277.0], [52.2, 278.0], [52.3, 278.0], [52.4, 278.0], [52.5, 279.0], [52.6, 279.0], [52.7, 280.0], [52.8, 280.0], [52.9, 280.0], [53.0, 281.0], [53.1, 281.0], [53.2, 282.0], [53.3, 282.0], [53.4, 283.0], [53.5, 283.0], [53.6, 283.0], [53.7, 284.0], [53.8, 284.0], [53.9, 284.0], [54.0, 285.0], [54.1, 285.0], [54.2, 285.0], [54.3, 286.0], [54.4, 286.0], [54.5, 287.0], [54.6, 287.0], [54.7, 287.0], [54.8, 287.0], [54.9, 288.0], [55.0, 288.0], [55.1, 288.0], [55.2, 289.0], [55.3, 289.0], [55.4, 290.0], [55.5, 290.0], [55.6, 290.0], [55.7, 291.0], [55.8, 291.0], [55.9, 292.0], [56.0, 292.0], [56.1, 292.0], [56.2, 292.0], [56.3, 293.0], [56.4, 293.0], [56.5, 293.0], [56.6, 294.0], [56.7, 294.0], [56.8, 294.0], [56.9, 295.0], [57.0, 295.0], [57.1, 296.0], [57.2, 296.0], [57.3, 296.0], [57.4, 296.0], [57.5, 297.0], [57.6, 297.0], [57.7, 297.0], [57.8, 298.0], [57.9, 298.0], [58.0, 298.0], [58.1, 299.0], [58.2, 299.0], [58.3, 299.0], [58.4, 299.0], [58.5, 300.0], [58.6, 300.0], [58.7, 300.0], [58.8, 301.0], [58.9, 301.0], [59.0, 302.0], [59.1, 302.0], [59.2, 302.0], [59.3, 303.0], [59.4, 303.0], [59.5, 304.0], [59.6, 304.0], [59.7, 304.0], [59.8, 305.0], [59.9, 305.0], [60.0, 306.0], [60.1, 306.0], [60.2, 307.0], [60.3, 307.0], [60.4, 308.0], [60.5, 308.0], [60.6, 308.0], [60.7, 309.0], [60.8, 309.0], [60.9, 310.0], [61.0, 310.0], [61.1, 310.0], [61.2, 311.0], [61.3, 311.0], [61.4, 311.0], [61.5, 312.0], [61.6, 312.0], [61.7, 312.0], [61.8, 313.0], [61.9, 313.0], [62.0, 314.0], [62.1, 314.0], [62.2, 315.0], [62.3, 315.0], [62.4, 315.0], [62.5, 316.0], [62.6, 316.0], [62.7, 316.0], [62.8, 317.0], [62.9, 317.0], [63.0, 318.0], [63.1, 319.0], [63.2, 319.0], [63.3, 320.0], [63.4, 320.0], [63.5, 321.0], [63.6, 321.0], [63.7, 322.0], [63.8, 322.0], [63.9, 323.0], [64.0, 323.0], [64.1, 324.0], [64.2, 324.0], [64.3, 325.0], [64.4, 325.0], [64.5, 326.0], [64.6, 327.0], [64.7, 327.0], [64.8, 328.0], [64.9, 328.0], [65.0, 329.0], [65.1, 329.0], [65.2, 330.0], [65.3, 331.0], [65.4, 331.0], [65.5, 332.0], [65.6, 332.0], [65.7, 333.0], [65.8, 333.0], [65.9, 334.0], [66.0, 335.0], [66.1, 335.0], [66.2, 336.0], [66.3, 336.0], [66.4, 337.0], [66.5, 338.0], [66.6, 339.0], [66.7, 339.0], [66.8, 340.0], [66.9, 341.0], [67.0, 341.0], [67.1, 342.0], [67.2, 343.0], [67.3, 343.0], [67.4, 344.0], [67.5, 345.0], [67.6, 345.0], [67.7, 346.0], [67.8, 347.0], [67.9, 348.0], [68.0, 348.0], [68.1, 349.0], [68.2, 350.0], [68.3, 351.0], [68.4, 352.0], [68.5, 352.0], [68.6, 353.0], [68.7, 354.0], [68.8, 354.0], [68.9, 355.0], [69.0, 356.0], [69.1, 356.0], [69.2, 357.0], [69.3, 358.0], [69.4, 359.0], [69.5, 359.0], [69.6, 360.0], [69.7, 361.0], [69.8, 361.0], [69.9, 362.0], [70.0, 363.0], [70.1, 363.0], [70.2, 364.0], [70.3, 364.0], [70.4, 365.0], [70.5, 366.0], [70.6, 367.0], [70.7, 367.0], [70.8, 368.0], [70.9, 369.0], [71.0, 369.0], [71.1, 370.0], [71.2, 370.0], [71.3, 371.0], [71.4, 372.0], [71.5, 373.0], [71.6, 373.0], [71.7, 374.0], [71.8, 375.0], [71.9, 375.0], [72.0, 376.0], [72.1, 377.0], [72.2, 377.0], [72.3, 378.0], [72.4, 379.0], [72.5, 380.0], [72.6, 380.0], [72.7, 381.0], [72.8, 382.0], [72.9, 382.0], [73.0, 383.0], [73.1, 383.0], [73.2, 383.0], [73.3, 384.0], [73.4, 385.0], [73.5, 385.0], [73.6, 385.0], [73.7, 386.0], [73.8, 387.0], [73.9, 387.0], [74.0, 388.0], [74.1, 388.0], [74.2, 389.0], [74.3, 389.0], [74.4, 390.0], [74.5, 390.0], [74.6, 390.0], [74.7, 391.0], [74.8, 391.0], [74.9, 392.0], [75.0, 392.0], [75.1, 393.0], [75.2, 394.0], [75.3, 394.0], [75.4, 395.0], [75.5, 395.0], [75.6, 396.0], [75.7, 396.0], [75.8, 397.0], [75.9, 398.0], [76.0, 398.0], [76.1, 399.0], [76.2, 399.0], [76.3, 399.0], [76.4, 400.0], [76.5, 400.0], [76.6, 401.0], [76.7, 402.0], [76.8, 402.0], [76.9, 402.0], [77.0, 403.0], [77.1, 404.0], [77.2, 404.0], [77.3, 405.0], [77.4, 406.0], [77.5, 407.0], [77.6, 407.0], [77.7, 408.0], [77.8, 408.0], [77.9, 409.0], [78.0, 409.0], [78.1, 410.0], [78.2, 410.0], [78.3, 410.0], [78.4, 411.0], [78.5, 412.0], [78.6, 412.0], [78.7, 414.0], [78.8, 414.0], [78.9, 416.0], [79.0, 417.0], [79.1, 418.0], [79.2, 418.0], [79.3, 420.0], [79.4, 421.0], [79.5, 421.0], [79.6, 422.0], [79.7, 423.0], [79.8, 424.0], [79.9, 425.0], [80.0, 425.0], [80.1, 426.0], [80.2, 427.0], [80.3, 428.0], [80.4, 429.0], [80.5, 430.0], [80.6, 433.0], [80.7, 434.0], [80.8, 435.0], [80.9, 437.0], [81.0, 438.0], [81.1, 439.0], [81.2, 440.0], [81.3, 441.0], [81.4, 443.0], [81.5, 444.0], [81.6, 445.0], [81.7, 446.0], [81.8, 447.0], [81.9, 448.0], [82.0, 450.0], [82.1, 451.0], [82.2, 452.0], [82.3, 454.0], [82.4, 454.0], [82.5, 456.0], [82.6, 458.0], [82.7, 459.0], [82.8, 460.0], [82.9, 461.0], [83.0, 463.0], [83.1, 464.0], [83.2, 466.0], [83.3, 467.0], [83.4, 469.0], [83.5, 470.0], [83.6, 471.0], [83.7, 473.0], [83.8, 474.0], [83.9, 476.0], [84.0, 477.0], [84.1, 479.0], [84.2, 480.0], [84.3, 481.0], [84.4, 483.0], [84.5, 484.0], [84.6, 485.0], [84.7, 486.0], [84.8, 487.0], [84.9, 488.0], [85.0, 489.0], [85.1, 490.0], [85.2, 491.0], [85.3, 492.0], [85.4, 493.0], [85.5, 494.0], [85.6, 495.0], [85.7, 497.0], [85.8, 497.0], [85.9, 499.0], [86.0, 500.0], [86.1, 501.0], [86.2, 503.0], [86.3, 504.0], [86.4, 505.0], [86.5, 506.0], [86.6, 507.0], [86.7, 508.0], [86.8, 511.0], [86.9, 512.0], [87.0, 513.0], [87.1, 515.0], [87.2, 515.0], [87.3, 516.0], [87.4, 518.0], [87.5, 519.0], [87.6, 521.0], [87.7, 522.0], [87.8, 524.0], [87.9, 526.0], [88.0, 527.0], [88.1, 529.0], [88.2, 530.0], [88.3, 532.0], [88.4, 534.0], [88.5, 537.0], [88.6, 539.0], [88.7, 541.0], [88.8, 543.0], [88.9, 546.0], [89.0, 548.0], [89.1, 552.0], [89.2, 556.0], [89.3, 559.0], [89.4, 562.0], [89.5, 564.0], [89.6, 566.0], [89.7, 568.0], [89.8, 570.0], [89.9, 572.0], [90.0, 573.0], [90.1, 577.0], [90.2, 578.0], [90.3, 580.0], [90.4, 581.0], [90.5, 584.0], [90.6, 588.0], [90.7, 591.0], [90.8, 593.0], [90.9, 594.0], [91.0, 597.0], [91.1, 598.0], [91.2, 600.0], [91.3, 602.0], [91.4, 605.0], [91.5, 606.0], [91.6, 608.0], [91.7, 611.0], [91.8, 613.0], [91.9, 614.0], [92.0, 618.0], [92.1, 620.0], [92.2, 624.0], [92.3, 627.0], [92.4, 631.0], [92.5, 633.0], [92.6, 637.0], [92.7, 640.0], [92.8, 644.0], [92.9, 647.0], [93.0, 650.0], [93.1, 653.0], [93.2, 656.0], [93.3, 660.0], [93.4, 664.0], [93.5, 669.0], [93.6, 673.0], [93.7, 677.0], [93.8, 680.0], [93.9, 683.0], [94.0, 689.0], [94.1, 693.0], [94.2, 696.0], [94.3, 701.0], [94.4, 703.0], [94.5, 707.0], [94.6, 713.0], [94.7, 717.0], [94.8, 720.0], [94.9, 724.0], [95.0, 729.0], [95.1, 734.0], [95.2, 740.0], [95.3, 747.0], [95.4, 751.0], [95.5, 761.0], [95.6, 768.0], [95.7, 773.0], [95.8, 778.0], [95.9, 780.0], [96.0, 788.0], [96.1, 797.0], [96.2, 800.0], [96.3, 805.0], [96.4, 811.0], [96.5, 817.0], [96.6, 822.0], [96.7, 826.0], [96.8, 836.0], [96.9, 846.0], [97.0, 868.0], [97.1, 876.0], [97.2, 884.0], [97.3, 898.0], [97.4, 901.0], [97.5, 910.0], [97.6, 920.0], [97.7, 934.0], [97.8, 944.0], [97.9, 953.0], [98.0, 965.0], [98.1, 980.0], [98.2, 987.0], [98.3, 998.0], [98.4, 1008.0], [98.5, 1025.0], [98.6, 1043.0], [98.7, 1061.0], [98.8, 1081.0], [98.9, 1108.0], [99.0, 1132.0], [99.1, 1179.0], [99.2, 1206.0], [99.3, 1230.0], [99.4, 1311.0], [99.5, 1369.0], [99.6, 1435.0], [99.7, 1508.0], [99.8, 1625.0], [99.9, 2041.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[0.0, 4.0], [0.1, 4.0], [0.2, 5.0], [0.3, 5.0], [0.4, 5.0], [0.5, 5.0], [0.6, 5.0], [0.7, 6.0], [0.8, 6.0], [0.9, 6.0], [1.0, 6.0], [1.1, 6.0], [1.2, 6.0], [1.3, 6.0], [1.4, 6.0], [1.5, 7.0], [1.6, 7.0], [1.7, 7.0], [1.8, 7.0], [1.9, 7.0], [2.0, 8.0], [2.1, 8.0], [2.2, 8.0], [2.3, 8.0], [2.4, 8.0], [2.5, 8.0], [2.6, 8.0], [2.7, 8.0], [2.8, 8.0], [2.9, 8.0], [3.0, 9.0], [3.1, 9.0], [3.2, 9.0], [3.3, 9.0], [3.4, 9.0], [3.5, 10.0], [3.6, 10.0], [3.7, 10.0], [3.8, 10.0], [3.9, 10.0], [4.0, 11.0], [4.1, 11.0], [4.2, 11.0], [4.3, 11.0], [4.4, 11.0], [4.5, 11.0], [4.6, 12.0], [4.7, 12.0], [4.8, 12.0], [4.9, 12.0], [5.0, 12.0], [5.1, 13.0], [5.2, 13.0], [5.3, 13.0], [5.4, 13.0], [5.5, 13.0], [5.6, 14.0], [5.7, 14.0], [5.8, 14.0], [5.9, 15.0], [6.0, 15.0], [6.1, 16.0], [6.2, 16.0], [6.3, 16.0], [6.4, 16.0], [6.5, 17.0], [6.6, 17.0], [6.7, 17.0], [6.8, 18.0], [6.9, 18.0], [7.0, 19.0], [7.1, 19.0], [7.2, 19.0], [7.3, 20.0], [7.4, 21.0], [7.5, 21.0], [7.6, 22.0], [7.7, 23.0], [7.8, 23.0], [7.9, 24.0], [8.0, 24.0], [8.1, 25.0], [8.2, 25.0], [8.3, 26.0], [8.4, 26.0], [8.5, 27.0], [8.6, 28.0], [8.7, 29.0], [8.8, 29.0], [8.9, 30.0], [9.0, 31.0], [9.1, 32.0], [9.2, 33.0], [9.3, 34.0], [9.4, 35.0], [9.5, 35.0], [9.6, 36.0], [9.7, 37.0], [9.8, 38.0], [9.9, 39.0], [10.0, 40.0], [10.1, 41.0], [10.2, 42.0], [10.3, 43.0], [10.4, 44.0], [10.5, 45.0], [10.6, 46.0], [10.7, 47.0], [10.8, 49.0], [10.9, 50.0], [11.0, 51.0], [11.1, 52.0], [11.2, 52.0], [11.3, 54.0], [11.4, 55.0], [11.5, 57.0], [11.6, 58.0], [11.7, 59.0], [11.8, 60.0], [11.9, 62.0], [12.0, 63.0], [12.1, 64.0], [12.2, 65.0], [12.3, 66.0], [12.4, 67.0], [12.5, 68.0], [12.6, 69.0], [12.7, 70.0], [12.8, 71.0], [12.9, 71.0], [13.0, 72.0], [13.1, 73.0], [13.2, 74.0], [13.3, 75.0], [13.4, 76.0], [13.5, 76.0], [13.6, 77.0], [13.7, 78.0], [13.8, 79.0], [13.9, 79.0], [14.0, 80.0], [14.1, 81.0], [14.2, 81.0], [14.3, 82.0], [14.4, 83.0], [14.5, 83.0], [14.6, 84.0], [14.7, 85.0], [14.8, 85.0], [14.9, 86.0], [15.0, 86.0], [15.1, 87.0], [15.2, 87.0], [15.3, 88.0], [15.4, 88.0], [15.5, 89.0], [15.6, 90.0], [15.7, 90.0], [15.8, 91.0], [15.9, 91.0], [16.0, 92.0], [16.1, 92.0], [16.2, 93.0], [16.3, 94.0], [16.4, 94.0], [16.5, 95.0], [16.6, 95.0], [16.7, 96.0], [16.8, 96.0], [16.9, 97.0], [17.0, 97.0], [17.1, 98.0], [17.2, 99.0], [17.3, 99.0], [17.4, 99.0], [17.5, 100.0], [17.6, 100.0], [17.7, 101.0], [17.8, 101.0], [17.9, 102.0], [18.0, 102.0], [18.1, 103.0], [18.2, 104.0], [18.3, 104.0], [18.4, 105.0], [18.5, 105.0], [18.6, 106.0], [18.7, 106.0], [18.8, 107.0], [18.9, 107.0], [19.0, 108.0], [19.1, 108.0], [19.2, 109.0], [19.3, 110.0], [19.4, 110.0], [19.5, 110.0], [19.6, 111.0], [19.7, 111.0], [19.8, 112.0], [19.9, 113.0], [20.0, 113.0], [20.1, 113.0], [20.2, 114.0], [20.3, 114.0], [20.4, 115.0], [20.5, 115.0], [20.6, 116.0], [20.7, 116.0], [20.8, 116.0], [20.9, 117.0], [21.0, 117.0], [21.1, 118.0], [21.2, 118.0], [21.3, 119.0], [21.4, 120.0], [21.5, 120.0], [21.6, 121.0], [21.7, 122.0], [21.8, 122.0], [21.9, 122.0], [22.0, 122.0], [22.1, 123.0], [22.2, 123.0], [22.3, 124.0], [22.4, 125.0], [22.5, 125.0], [22.6, 126.0], [22.7, 127.0], [22.8, 127.0], [22.9, 128.0], [23.0, 129.0], [23.1, 130.0], [23.2, 130.0], [23.3, 131.0], [23.4, 131.0], [23.5, 132.0], [23.6, 133.0], [23.7, 133.0], [23.8, 134.0], [23.9, 135.0], [24.0, 136.0], [24.1, 136.0], [24.2, 137.0], [24.3, 137.0], [24.4, 138.0], [24.5, 139.0], [24.6, 140.0], [24.7, 140.0], [24.8, 141.0], [24.9, 142.0], [25.0, 143.0], [25.1, 144.0], [25.2, 144.0], [25.3, 145.0], [25.4, 146.0], [25.5, 147.0], [25.6, 147.0], [25.7, 148.0], [25.8, 149.0], [25.9, 149.0], [26.0, 150.0], [26.1, 150.0], [26.2, 151.0], [26.3, 152.0], [26.4, 152.0], [26.5, 153.0], [26.6, 154.0], [26.7, 154.0], [26.8, 155.0], [26.9, 155.0], [27.0, 156.0], [27.1, 157.0], [27.2, 158.0], [27.3, 158.0], [27.4, 159.0], [27.5, 160.0], [27.6, 160.0], [27.7, 161.0], [27.8, 161.0], [27.9, 162.0], [28.0, 164.0], [28.1, 164.0], [28.2, 165.0], [28.3, 165.0], [28.4, 166.0], [28.5, 166.0], [28.6, 167.0], [28.7, 168.0], [28.8, 169.0], [28.9, 169.0], [29.0, 170.0], [29.1, 171.0], [29.2, 172.0], [29.3, 172.0], [29.4, 173.0], [29.5, 173.0], [29.6, 174.0], [29.7, 174.0], [29.8, 175.0], [29.9, 175.0], [30.0, 176.0], [30.1, 176.0], [30.2, 177.0], [30.3, 178.0], [30.4, 178.0], [30.5, 179.0], [30.6, 180.0], [30.7, 180.0], [30.8, 181.0], [30.9, 181.0], [31.0, 181.0], [31.1, 182.0], [31.2, 182.0], [31.3, 183.0], [31.4, 184.0], [31.5, 184.0], [31.6, 184.0], [31.7, 185.0], [31.8, 185.0], [31.9, 186.0], [32.0, 186.0], [32.1, 187.0], [32.2, 187.0], [32.3, 187.0], [32.4, 187.0], [32.5, 188.0], [32.6, 188.0], [32.7, 188.0], [32.8, 189.0], [32.9, 189.0], [33.0, 190.0], [33.1, 190.0], [33.2, 190.0], [33.3, 191.0], [33.4, 191.0], [33.5, 191.0], [33.6, 192.0], [33.7, 192.0], [33.8, 193.0], [33.9, 193.0], [34.0, 193.0], [34.1, 194.0], [34.2, 194.0], [34.3, 194.0], [34.4, 195.0], [34.5, 195.0], [34.6, 196.0], [34.7, 196.0], [34.8, 197.0], [34.9, 197.0], [35.0, 197.0], [35.1, 198.0], [35.2, 198.0], [35.3, 198.0], [35.4, 199.0], [35.5, 199.0], [35.6, 199.0], [35.7, 200.0], [35.8, 200.0], [35.9, 200.0], [36.0, 201.0], [36.1, 201.0], [36.2, 202.0], [36.3, 202.0], [36.4, 202.0], [36.5, 203.0], [36.6, 203.0], [36.7, 203.0], [36.8, 203.0], [36.9, 204.0], [37.0, 204.0], [37.1, 204.0], [37.2, 205.0], [37.3, 205.0], [37.4, 205.0], [37.5, 206.0], [37.6, 206.0], [37.7, 207.0], [37.8, 207.0], [37.9, 207.0], [38.0, 208.0], [38.1, 208.0], [38.2, 208.0], [38.3, 208.0], [38.4, 209.0], [38.5, 209.0], [38.6, 209.0], [38.7, 210.0], [38.8, 210.0], [38.9, 210.0], [39.0, 210.0], [39.1, 211.0], [39.2, 211.0], [39.3, 212.0], [39.4, 212.0], [39.5, 212.0], [39.6, 213.0], [39.7, 213.0], [39.8, 213.0], [39.9, 214.0], [40.0, 214.0], [40.1, 214.0], [40.2, 215.0], [40.3, 215.0], [40.4, 216.0], [40.5, 216.0], [40.6, 217.0], [40.7, 217.0], [40.8, 217.0], [40.9, 218.0], [41.0, 218.0], [41.1, 219.0], [41.2, 219.0], [41.3, 219.0], [41.4, 220.0], [41.5, 220.0], [41.6, 220.0], [41.7, 221.0], [41.8, 221.0], [41.9, 221.0], [42.0, 222.0], [42.1, 222.0], [42.2, 223.0], [42.3, 223.0], [42.4, 224.0], [42.5, 224.0], [42.6, 224.0], [42.7, 224.0], [42.8, 225.0], [42.9, 225.0], [43.0, 226.0], [43.1, 226.0], [43.2, 226.0], [43.3, 227.0], [43.4, 227.0], [43.5, 228.0], [43.6, 228.0], [43.7, 228.0], [43.8, 229.0], [43.9, 230.0], [44.0, 230.0], [44.1, 231.0], [44.2, 231.0], [44.3, 232.0], [44.4, 232.0], [44.5, 233.0], [44.6, 233.0], [44.7, 234.0], [44.8, 234.0], [44.9, 235.0], [45.0, 236.0], [45.1, 236.0], [45.2, 237.0], [45.3, 237.0], [45.4, 238.0], [45.5, 239.0], [45.6, 239.0], [45.7, 239.0], [45.8, 240.0], [45.9, 240.0], [46.0, 241.0], [46.1, 242.0], [46.2, 242.0], [46.3, 243.0], [46.4, 243.0], [46.5, 244.0], [46.6, 245.0], [46.7, 245.0], [46.8, 246.0], [46.9, 246.0], [47.0, 247.0], [47.1, 248.0], [47.2, 248.0], [47.3, 249.0], [47.4, 250.0], [47.5, 250.0], [47.6, 251.0], [47.7, 251.0], [47.8, 252.0], [47.9, 252.0], [48.0, 253.0], [48.1, 254.0], [48.2, 255.0], [48.3, 255.0], [48.4, 256.0], [48.5, 256.0], [48.6, 257.0], [48.7, 258.0], [48.8, 259.0], [48.9, 259.0], [49.0, 260.0], [49.1, 260.0], [49.2, 261.0], [49.3, 261.0], [49.4, 262.0], [49.5, 262.0], [49.6, 263.0], [49.7, 263.0], [49.8, 263.0], [49.9, 264.0], [50.0, 265.0], [50.1, 265.0], [50.2, 266.0], [50.3, 266.0], [50.4, 267.0], [50.5, 267.0], [50.6, 268.0], [50.7, 268.0], [50.8, 268.0], [50.9, 268.0], [51.0, 269.0], [51.1, 269.0], [51.2, 270.0], [51.3, 270.0], [51.4, 271.0], [51.5, 271.0], [51.6, 272.0], [51.7, 272.0], [51.8, 273.0], [51.9, 273.0], [52.0, 274.0], [52.1, 274.0], [52.2, 274.0], [52.3, 275.0], [52.4, 275.0], [52.5, 276.0], [52.6, 276.0], [52.7, 276.0], [52.8, 277.0], [52.9, 277.0], [53.0, 278.0], [53.1, 278.0], [53.2, 278.0], [53.3, 279.0], [53.4, 279.0], [53.5, 279.0], [53.6, 280.0], [53.7, 280.0], [53.8, 280.0], [53.9, 281.0], [54.0, 281.0], [54.1, 281.0], [54.2, 282.0], [54.3, 282.0], [54.4, 282.0], [54.5, 283.0], [54.6, 283.0], [54.7, 283.0], [54.8, 284.0], [54.9, 284.0], [55.0, 284.0], [55.1, 285.0], [55.2, 285.0], [55.3, 285.0], [55.4, 286.0], [55.5, 286.0], [55.6, 286.0], [55.7, 287.0], [55.8, 287.0], [55.9, 287.0], [56.0, 287.0], [56.1, 288.0], [56.2, 288.0], [56.3, 288.0], [56.4, 289.0], [56.5, 289.0], [56.6, 289.0], [56.7, 290.0], [56.8, 290.0], [56.9, 291.0], [57.0, 291.0], [57.1, 291.0], [57.2, 292.0], [57.3, 292.0], [57.4, 292.0], [57.5, 293.0], [57.6, 293.0], [57.7, 293.0], [57.8, 294.0], [57.9, 294.0], [58.0, 294.0], [58.1, 294.0], [58.2, 295.0], [58.3, 295.0], [58.4, 295.0], [58.5, 296.0], [58.6, 296.0], [58.7, 296.0], [58.8, 297.0], [58.9, 297.0], [59.0, 297.0], [59.1, 298.0], [59.2, 298.0], [59.3, 298.0], [59.4, 299.0], [59.5, 299.0], [59.6, 299.0], [59.7, 299.0], [59.8, 300.0], [59.9, 300.0], [60.0, 300.0], [60.1, 301.0], [60.2, 301.0], [60.3, 301.0], [60.4, 302.0], [60.5, 302.0], [60.6, 302.0], [60.7, 303.0], [60.8, 303.0], [60.9, 304.0], [61.0, 304.0], [61.1, 304.0], [61.2, 304.0], [61.3, 305.0], [61.4, 305.0], [61.5, 305.0], [61.6, 306.0], [61.7, 306.0], [61.8, 306.0], [61.9, 306.0], [62.0, 307.0], [62.1, 307.0], [62.2, 308.0], [62.3, 308.0], [62.4, 308.0], [62.5, 309.0], [62.6, 309.0], [62.7, 310.0], [62.8, 310.0], [62.9, 310.0], [63.0, 311.0], [63.1, 311.0], [63.2, 311.0], [63.3, 312.0], [63.4, 312.0], [63.5, 312.0], [63.6, 313.0], [63.7, 313.0], [63.8, 313.0], [63.9, 313.0], [64.0, 314.0], [64.1, 314.0], [64.2, 315.0], [64.3, 315.0], [64.4, 316.0], [64.5, 316.0], [64.6, 316.0], [64.7, 316.0], [64.8, 317.0], [64.9, 317.0], [65.0, 317.0], [65.1, 318.0], [65.2, 318.0], [65.3, 318.0], [65.4, 319.0], [65.5, 319.0], [65.6, 320.0], [65.7, 320.0], [65.8, 321.0], [65.9, 321.0], [66.0, 322.0], [66.1, 322.0], [66.2, 323.0], [66.3, 324.0], [66.4, 324.0], [66.5, 324.0], [66.6, 325.0], [66.7, 326.0], [66.8, 326.0], [66.9, 326.0], [67.0, 327.0], [67.1, 327.0], [67.2, 328.0], [67.3, 328.0], [67.4, 329.0], [67.5, 329.0], [67.6, 330.0], [67.7, 330.0], [67.8, 331.0], [67.9, 332.0], [68.0, 333.0], [68.1, 333.0], [68.2, 334.0], [68.3, 334.0], [68.4, 335.0], [68.5, 336.0], [68.6, 336.0], [68.7, 337.0], [68.8, 338.0], [68.9, 338.0], [69.0, 339.0], [69.1, 340.0], [69.2, 340.0], [69.3, 341.0], [69.4, 341.0], [69.5, 342.0], [69.6, 342.0], [69.7, 343.0], [69.8, 344.0], [69.9, 345.0], [70.0, 345.0], [70.1, 346.0], [70.2, 346.0], [70.3, 347.0], [70.4, 347.0], [70.5, 348.0], [70.6, 349.0], [70.7, 349.0], [70.8, 350.0], [70.9, 351.0], [71.0, 352.0], [71.1, 352.0], [71.2, 353.0], [71.3, 353.0], [71.4, 354.0], [71.5, 355.0], [71.6, 355.0], [71.7, 356.0], [71.8, 356.0], [71.9, 357.0], [72.0, 358.0], [72.1, 359.0], [72.2, 359.0], [72.3, 360.0], [72.4, 361.0], [72.5, 361.0], [72.6, 362.0], [72.7, 363.0], [72.8, 364.0], [72.9, 364.0], [73.0, 365.0], [73.1, 365.0], [73.2, 366.0], [73.3, 367.0], [73.4, 367.0], [73.5, 368.0], [73.6, 368.0], [73.7, 369.0], [73.8, 370.0], [73.9, 370.0], [74.0, 371.0], [74.1, 371.0], [74.2, 372.0], [74.3, 372.0], [74.4, 373.0], [74.5, 374.0], [74.6, 375.0], [74.7, 375.0], [74.8, 376.0], [74.9, 377.0], [75.0, 377.0], [75.1, 378.0], [75.2, 378.0], [75.3, 379.0], [75.4, 379.0], [75.5, 380.0], [75.6, 380.0], [75.7, 381.0], [75.8, 381.0], [75.9, 382.0], [76.0, 382.0], [76.1, 383.0], [76.2, 383.0], [76.3, 384.0], [76.4, 384.0], [76.5, 385.0], [76.6, 385.0], [76.7, 386.0], [76.8, 386.0], [76.9, 387.0], [77.0, 388.0], [77.1, 388.0], [77.2, 389.0], [77.3, 389.0], [77.4, 389.0], [77.5, 390.0], [77.6, 390.0], [77.7, 391.0], [77.8, 391.0], [77.9, 392.0], [78.0, 392.0], [78.1, 393.0], [78.2, 394.0], [78.3, 394.0], [78.4, 395.0], [78.5, 396.0], [78.6, 396.0], [78.7, 397.0], [78.8, 398.0], [78.9, 398.0], [79.0, 399.0], [79.1, 399.0], [79.2, 400.0], [79.3, 400.0], [79.4, 401.0], [79.5, 402.0], [79.6, 402.0], [79.7, 403.0], [79.8, 403.0], [79.9, 404.0], [80.0, 404.0], [80.1, 405.0], [80.2, 406.0], [80.3, 407.0], [80.4, 407.0], [80.5, 408.0], [80.6, 408.0], [80.7, 409.0], [80.8, 409.0], [80.9, 410.0], [81.0, 411.0], [81.1, 411.0], [81.2, 412.0], [81.3, 413.0], [81.4, 413.0], [81.5, 414.0], [81.6, 414.0], [81.7, 415.0], [81.8, 416.0], [81.9, 416.0], [82.0, 417.0], [82.1, 418.0], [82.2, 419.0], [82.3, 420.0], [82.4, 420.0], [82.5, 421.0], [82.6, 422.0], [82.7, 423.0], [82.8, 423.0], [82.9, 424.0], [83.0, 425.0], [83.1, 426.0], [83.2, 427.0], [83.3, 428.0], [83.4, 429.0], [83.5, 430.0], [83.6, 432.0], [83.7, 432.0], [83.8, 433.0], [83.9, 434.0], [84.0, 435.0], [84.1, 436.0], [84.2, 438.0], [84.3, 439.0], [84.4, 440.0], [84.5, 441.0], [84.6, 442.0], [84.7, 443.0], [84.8, 444.0], [84.9, 446.0], [85.0, 448.0], [85.1, 450.0], [85.2, 451.0], [85.3, 452.0], [85.4, 453.0], [85.5, 454.0], [85.6, 456.0], [85.7, 458.0], [85.8, 459.0], [85.9, 460.0], [86.0, 462.0], [86.1, 463.0], [86.2, 464.0], [86.3, 465.0], [86.4, 466.0], [86.5, 467.0], [86.6, 468.0], [86.7, 470.0], [86.8, 471.0], [86.9, 473.0], [87.0, 474.0], [87.1, 474.0], [87.2, 475.0], [87.3, 477.0], [87.4, 478.0], [87.5, 479.0], [87.6, 481.0], [87.7, 483.0], [87.8, 485.0], [87.9, 486.0], [88.0, 488.0], [88.1, 489.0], [88.2, 490.0], [88.3, 491.0], [88.4, 493.0], [88.5, 494.0], [88.6, 495.0], [88.7, 497.0], [88.8, 499.0], [88.9, 500.0], [89.0, 502.0], [89.1, 503.0], [89.2, 503.0], [89.3, 506.0], [89.4, 507.0], [89.5, 508.0], [89.6, 511.0], [89.7, 512.0], [89.8, 513.0], [89.9, 516.0], [90.0, 517.0], [90.1, 519.0], [90.2, 520.0], [90.3, 522.0], [90.4, 524.0], [90.5, 526.0], [90.6, 527.0], [90.7, 532.0], [90.8, 535.0], [90.9, 537.0], [91.0, 540.0], [91.1, 545.0], [91.2, 547.0], [91.3, 553.0], [91.4, 556.0], [91.5, 559.0], [91.6, 561.0], [91.7, 564.0], [91.8, 565.0], [91.9, 568.0], [92.0, 571.0], [92.1, 574.0], [92.2, 575.0], [92.3, 578.0], [92.4, 581.0], [92.5, 583.0], [92.6, 586.0], [92.7, 588.0], [92.8, 590.0], [92.9, 594.0], [93.0, 597.0], [93.1, 600.0], [93.2, 603.0], [93.3, 606.0], [93.4, 610.0], [93.5, 613.0], [93.6, 616.0], [93.7, 620.0], [93.8, 623.0], [93.9, 627.0], [94.0, 632.0], [94.1, 637.0], [94.2, 644.0], [94.3, 648.0], [94.4, 653.0], [94.5, 660.0], [94.6, 664.0], [94.7, 669.0], [94.8, 672.0], [94.9, 678.0], [95.0, 682.0], [95.1, 686.0], [95.2, 693.0], [95.3, 698.0], [95.4, 701.0], [95.5, 708.0], [95.6, 714.0], [95.7, 718.0], [95.8, 722.0], [95.9, 727.0], [96.0, 731.0], [96.1, 740.0], [96.2, 746.0], [96.3, 752.0], [96.4, 762.0], [96.5, 771.0], [96.6, 774.0], [96.7, 783.0], [96.8, 790.0], [96.9, 795.0], [97.0, 800.0], [97.1, 808.0], [97.2, 812.0], [97.3, 817.0], [97.4, 830.0], [97.5, 839.0], [97.6, 849.0], [97.7, 859.0], [97.8, 867.0], [97.9, 878.0], [98.0, 893.0], [98.1, 908.0], [98.2, 914.0], [98.3, 929.0], [98.4, 939.0], [98.5, 948.0], [98.6, 961.0], [98.7, 969.0], [98.8, 985.0], [98.9, 994.0], [99.0, 999.0], [99.1, 1012.0], [99.2, 1028.0], [99.3, 1061.0], [99.4, 1083.0], [99.5, 1109.0], [99.6, 1153.0], [99.7, 1180.0], [99.8, 1234.0], [99.9, 1313.0], [100.0, 2400.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[0.0, 4.0], [0.1, 5.0], [0.2, 6.0], [0.3, 6.0], [0.4, 6.0], [0.5, 7.0], [0.6, 7.0], [0.7, 7.0], [0.8, 7.0], [0.9, 7.0], [1.0, 8.0], [1.1, 8.0], [1.2, 8.0], [1.3, 8.0], [1.4, 8.0], [1.5, 9.0], [1.6, 9.0], [1.7, 9.0], [1.8, 9.0], [1.9, 10.0], [2.0, 10.0], [2.1, 10.0], [2.2, 10.0], [2.3, 10.0], [2.4, 10.0], [2.5, 10.0], [2.6, 10.0], [2.7, 10.0], [2.8, 11.0], [2.9, 11.0], [3.0, 11.0], [3.1, 11.0], [3.2, 12.0], [3.3, 12.0], [3.4, 12.0], [3.5, 12.0], [3.6, 13.0], [3.7, 13.0], [3.8, 13.0], [3.9, 13.0], [4.0, 14.0], [4.1, 14.0], [4.2, 14.0], [4.3, 14.0], [4.4, 14.0], [4.5, 15.0], [4.6, 15.0], [4.7, 15.0], [4.8, 15.0], [4.9, 16.0], [5.0, 16.0], [5.1, 17.0], [5.2, 17.0], [5.3, 17.0], [5.4, 18.0], [5.5, 18.0], [5.6, 18.0], [5.7, 19.0], [5.8, 19.0], [5.9, 20.0], [6.0, 21.0], [6.1, 21.0], [6.2, 21.0], [6.3, 22.0], [6.4, 22.0], [6.5, 23.0], [6.6, 23.0], [6.7, 24.0], [6.8, 25.0], [6.9, 26.0], [7.0, 27.0], [7.1, 28.0], [7.2, 29.0], [7.3, 30.0], [7.4, 30.0], [7.5, 31.0], [7.6, 32.0], [7.7, 32.0], [7.8, 33.0], [7.9, 34.0], [8.0, 35.0], [8.1, 36.0], [8.2, 37.0], [8.3, 38.0], [8.4, 39.0], [8.5, 40.0], [8.6, 42.0], [8.7, 43.0], [8.8, 44.0], [8.9, 45.0], [9.0, 46.0], [9.1, 48.0], [9.2, 49.0], [9.3, 50.0], [9.4, 52.0], [9.5, 54.0], [9.6, 56.0], [9.7, 57.0], [9.8, 58.0], [9.9, 60.0], [10.0, 62.0], [10.1, 63.0], [10.2, 65.0], [10.3, 66.0], [10.4, 67.0], [10.5, 69.0], [10.6, 71.0], [10.7, 72.0], [10.8, 73.0], [10.9, 74.0], [11.0, 75.0], [11.1, 75.0], [11.2, 76.0], [11.3, 77.0], [11.4, 77.0], [11.5, 79.0], [11.6, 80.0], [11.7, 81.0], [11.8, 82.0], [11.9, 83.0], [12.0, 84.0], [12.1, 85.0], [12.2, 86.0], [12.3, 87.0], [12.4, 88.0], [12.5, 89.0], [12.6, 89.0], [12.7, 90.0], [12.8, 90.0], [12.9, 91.0], [13.0, 91.0], [13.1, 92.0], [13.2, 93.0], [13.3, 93.0], [13.4, 94.0], [13.5, 95.0], [13.6, 96.0], [13.7, 96.0], [13.8, 97.0], [13.9, 97.0], [14.0, 98.0], [14.1, 98.0], [14.2, 99.0], [14.3, 100.0], [14.4, 100.0], [14.5, 101.0], [14.6, 101.0], [14.7, 101.0], [14.8, 102.0], [14.9, 103.0], [15.0, 103.0], [15.1, 103.0], [15.2, 104.0], [15.3, 104.0], [15.4, 105.0], [15.5, 105.0], [15.6, 106.0], [15.7, 106.0], [15.8, 107.0], [15.9, 108.0], [16.0, 108.0], [16.1, 109.0], [16.2, 109.0], [16.3, 110.0], [16.4, 110.0], [16.5, 111.0], [16.6, 112.0], [16.7, 113.0], [16.8, 113.0], [16.9, 114.0], [17.0, 114.0], [17.1, 115.0], [17.2, 115.0], [17.3, 116.0], [17.4, 116.0], [17.5, 117.0], [17.6, 117.0], [17.7, 118.0], [17.8, 118.0], [17.9, 119.0], [18.0, 120.0], [18.1, 120.0], [18.2, 121.0], [18.3, 121.0], [18.4, 122.0], [18.5, 123.0], [18.6, 123.0], [18.7, 124.0], [18.8, 124.0], [18.9, 125.0], [19.0, 125.0], [19.1, 126.0], [19.2, 126.0], [19.3, 127.0], [19.4, 128.0], [19.5, 128.0], [19.6, 129.0], [19.7, 131.0], [19.8, 131.0], [19.9, 132.0], [20.0, 132.0], [20.1, 133.0], [20.2, 134.0], [20.3, 134.0], [20.4, 135.0], [20.5, 135.0], [20.6, 136.0], [20.7, 137.0], [20.8, 137.0], [20.9, 138.0], [21.0, 139.0], [21.1, 139.0], [21.2, 140.0], [21.3, 141.0], [21.4, 142.0], [21.5, 142.0], [21.6, 143.0], [21.7, 144.0], [21.8, 144.0], [21.9, 146.0], [22.0, 146.0], [22.1, 147.0], [22.2, 148.0], [22.3, 148.0], [22.4, 149.0], [22.5, 150.0], [22.6, 151.0], [22.7, 152.0], [22.8, 153.0], [22.9, 154.0], [23.0, 155.0], [23.1, 155.0], [23.2, 156.0], [23.3, 157.0], [23.4, 158.0], [23.5, 158.0], [23.6, 159.0], [23.7, 160.0], [23.8, 160.0], [23.9, 161.0], [24.0, 162.0], [24.1, 163.0], [24.2, 164.0], [24.3, 165.0], [24.4, 165.0], [24.5, 166.0], [24.6, 167.0], [24.7, 167.0], [24.8, 168.0], [24.9, 169.0], [25.0, 169.0], [25.1, 170.0], [25.2, 171.0], [25.3, 171.0], [25.4, 172.0], [25.5, 172.0], [25.6, 173.0], [25.7, 173.0], [25.8, 174.0], [25.9, 175.0], [26.0, 176.0], [26.1, 177.0], [26.2, 177.0], [26.3, 178.0], [26.4, 179.0], [26.5, 179.0], [26.6, 180.0], [26.7, 181.0], [26.8, 181.0], [26.9, 182.0], [27.0, 182.0], [27.1, 182.0], [27.2, 183.0], [27.3, 184.0], [27.4, 184.0], [27.5, 185.0], [27.6, 185.0], [27.7, 186.0], [27.8, 186.0], [27.9, 187.0], [28.0, 187.0], [28.1, 188.0], [28.2, 188.0], [28.3, 189.0], [28.4, 189.0], [28.5, 190.0], [28.6, 190.0], [28.7, 190.0], [28.8, 191.0], [28.9, 191.0], [29.0, 191.0], [29.1, 192.0], [29.2, 192.0], [29.3, 193.0], [29.4, 193.0], [29.5, 194.0], [29.6, 194.0], [29.7, 194.0], [29.8, 195.0], [29.9, 195.0], [30.0, 195.0], [30.1, 196.0], [30.2, 196.0], [30.3, 197.0], [30.4, 197.0], [30.5, 197.0], [30.6, 198.0], [30.7, 198.0], [30.8, 198.0], [30.9, 199.0], [31.0, 199.0], [31.1, 199.0], [31.2, 200.0], [31.3, 200.0], [31.4, 200.0], [31.5, 201.0], [31.6, 201.0], [31.7, 201.0], [31.8, 202.0], [31.9, 202.0], [32.0, 202.0], [32.1, 202.0], [32.2, 203.0], [32.3, 203.0], [32.4, 203.0], [32.5, 204.0], [32.6, 204.0], [32.7, 205.0], [32.8, 205.0], [32.9, 205.0], [33.0, 206.0], [33.1, 206.0], [33.2, 206.0], [33.3, 207.0], [33.4, 207.0], [33.5, 207.0], [33.6, 207.0], [33.7, 208.0], [33.8, 208.0], [33.9, 209.0], [34.0, 209.0], [34.1, 210.0], [34.2, 210.0], [34.3, 210.0], [34.4, 211.0], [34.5, 211.0], [34.6, 212.0], [34.7, 212.0], [34.8, 212.0], [34.9, 213.0], [35.0, 213.0], [35.1, 214.0], [35.2, 214.0], [35.3, 214.0], [35.4, 215.0], [35.5, 215.0], [35.6, 215.0], [35.7, 215.0], [35.8, 216.0], [35.9, 216.0], [36.0, 217.0], [36.1, 217.0], [36.2, 218.0], [36.3, 218.0], [36.4, 218.0], [36.5, 219.0], [36.6, 220.0], [36.7, 220.0], [36.8, 220.0], [36.9, 221.0], [37.0, 221.0], [37.1, 221.0], [37.2, 222.0], [37.3, 222.0], [37.4, 223.0], [37.5, 223.0], [37.6, 224.0], [37.7, 224.0], [37.8, 224.0], [37.9, 225.0], [38.0, 225.0], [38.1, 226.0], [38.2, 226.0], [38.3, 227.0], [38.4, 227.0], [38.5, 227.0], [38.6, 228.0], [38.7, 228.0], [38.8, 229.0], [38.9, 229.0], [39.0, 230.0], [39.1, 230.0], [39.2, 231.0], [39.3, 231.0], [39.4, 232.0], [39.5, 233.0], [39.6, 233.0], [39.7, 234.0], [39.8, 234.0], [39.9, 235.0], [40.0, 235.0], [40.1, 236.0], [40.2, 236.0], [40.3, 237.0], [40.4, 238.0], [40.5, 238.0], [40.6, 239.0], [40.7, 239.0], [40.8, 240.0], [40.9, 241.0], [41.0, 241.0], [41.1, 242.0], [41.2, 243.0], [41.3, 243.0], [41.4, 244.0], [41.5, 245.0], [41.6, 245.0], [41.7, 246.0], [41.8, 246.0], [41.9, 247.0], [42.0, 248.0], [42.1, 248.0], [42.2, 249.0], [42.3, 249.0], [42.4, 250.0], [42.5, 250.0], [42.6, 251.0], [42.7, 251.0], [42.8, 252.0], [42.9, 253.0], [43.0, 253.0], [43.1, 254.0], [43.2, 254.0], [43.3, 255.0], [43.4, 255.0], [43.5, 256.0], [43.6, 257.0], [43.7, 257.0], [43.8, 258.0], [43.9, 259.0], [44.0, 259.0], [44.1, 260.0], [44.2, 260.0], [44.3, 261.0], [44.4, 262.0], [44.5, 262.0], [44.6, 262.0], [44.7, 263.0], [44.8, 264.0], [44.9, 264.0], [45.0, 265.0], [45.1, 265.0], [45.2, 266.0], [45.3, 266.0], [45.4, 267.0], [45.5, 268.0], [45.6, 268.0], [45.7, 269.0], [45.8, 269.0], [45.9, 269.0], [46.0, 270.0], [46.1, 270.0], [46.2, 271.0], [46.3, 271.0], [46.4, 272.0], [46.5, 272.0], [46.6, 272.0], [46.7, 273.0], [46.8, 273.0], [46.9, 273.0], [47.0, 274.0], [47.1, 274.0], [47.2, 275.0], [47.3, 275.0], [47.4, 275.0], [47.5, 276.0], [47.6, 276.0], [47.7, 277.0], [47.8, 277.0], [47.9, 277.0], [48.0, 277.0], [48.1, 278.0], [48.2, 278.0], [48.3, 279.0], [48.4, 279.0], [48.5, 280.0], [48.6, 280.0], [48.7, 280.0], [48.8, 281.0], [48.9, 281.0], [49.0, 281.0], [49.1, 282.0], [49.2, 282.0], [49.3, 282.0], [49.4, 283.0], [49.5, 283.0], [49.6, 284.0], [49.7, 284.0], [49.8, 285.0], [49.9, 285.0], [50.0, 286.0], [50.1, 286.0], [50.2, 287.0], [50.3, 287.0], [50.4, 287.0], [50.5, 288.0], [50.6, 288.0], [50.7, 289.0], [50.8, 289.0], [50.9, 289.0], [51.0, 290.0], [51.1, 290.0], [51.2, 290.0], [51.3, 291.0], [51.4, 291.0], [51.5, 291.0], [51.6, 292.0], [51.7, 292.0], [51.8, 292.0], [51.9, 292.0], [52.0, 293.0], [52.1, 293.0], [52.2, 293.0], [52.3, 294.0], [52.4, 294.0], [52.5, 294.0], [52.6, 295.0], [52.7, 295.0], [52.8, 295.0], [52.9, 296.0], [53.0, 297.0], [53.1, 297.0], [53.2, 298.0], [53.3, 298.0], [53.4, 298.0], [53.5, 299.0], [53.6, 299.0], [53.7, 299.0], [53.8, 300.0], [53.9, 300.0], [54.0, 300.0], [54.1, 301.0], [54.2, 301.0], [54.3, 301.0], [54.4, 302.0], [54.5, 302.0], [54.6, 302.0], [54.7, 303.0], [54.8, 303.0], [54.9, 303.0], [55.0, 304.0], [55.1, 304.0], [55.2, 304.0], [55.3, 305.0], [55.4, 305.0], [55.5, 305.0], [55.6, 305.0], [55.7, 306.0], [55.8, 306.0], [55.9, 306.0], [56.0, 307.0], [56.1, 307.0], [56.2, 308.0], [56.3, 308.0], [56.4, 308.0], [56.5, 308.0], [56.6, 309.0], [56.7, 309.0], [56.8, 310.0], [56.9, 310.0], [57.0, 310.0], [57.1, 311.0], [57.2, 311.0], [57.3, 312.0], [57.4, 312.0], [57.5, 312.0], [57.6, 313.0], [57.7, 313.0], [57.8, 313.0], [57.9, 314.0], [58.0, 314.0], [58.1, 315.0], [58.2, 315.0], [58.3, 315.0], [58.4, 316.0], [58.5, 316.0], [58.6, 316.0], [58.7, 317.0], [58.8, 317.0], [58.9, 317.0], [59.0, 318.0], [59.1, 318.0], [59.2, 319.0], [59.3, 319.0], [59.4, 319.0], [59.5, 320.0], [59.6, 320.0], [59.7, 321.0], [59.8, 322.0], [59.9, 322.0], [60.0, 322.0], [60.1, 323.0], [60.2, 323.0], [60.3, 324.0], [60.4, 324.0], [60.5, 325.0], [60.6, 325.0], [60.7, 326.0], [60.8, 327.0], [60.9, 327.0], [61.0, 328.0], [61.1, 328.0], [61.2, 329.0], [61.3, 330.0], [61.4, 330.0], [61.5, 331.0], [61.6, 331.0], [61.7, 332.0], [61.8, 332.0], [61.9, 333.0], [62.0, 334.0], [62.1, 334.0], [62.2, 335.0], [62.3, 335.0], [62.4, 336.0], [62.5, 336.0], [62.6, 337.0], [62.7, 337.0], [62.8, 338.0], [62.9, 339.0], [63.0, 340.0], [63.1, 341.0], [63.2, 342.0], [63.3, 342.0], [63.4, 343.0], [63.5, 344.0], [63.6, 345.0], [63.7, 346.0], [63.8, 346.0], [63.9, 347.0], [64.0, 348.0], [64.1, 348.0], [64.2, 349.0], [64.3, 350.0], [64.4, 351.0], [64.5, 352.0], [64.6, 353.0], [64.7, 353.0], [64.8, 353.0], [64.9, 354.0], [65.0, 355.0], [65.1, 355.0], [65.2, 356.0], [65.3, 357.0], [65.4, 357.0], [65.5, 358.0], [65.6, 358.0], [65.7, 359.0], [65.8, 359.0], [65.9, 360.0], [66.0, 360.0], [66.1, 361.0], [66.2, 361.0], [66.3, 362.0], [66.4, 362.0], [66.5, 363.0], [66.6, 363.0], [66.7, 364.0], [66.8, 364.0], [66.9, 364.0], [67.0, 365.0], [67.1, 366.0], [67.2, 366.0], [67.3, 367.0], [67.4, 367.0], [67.5, 368.0], [67.6, 369.0], [67.7, 370.0], [67.8, 370.0], [67.9, 371.0], [68.0, 372.0], [68.1, 372.0], [68.2, 373.0], [68.3, 374.0], [68.4, 374.0], [68.5, 375.0], [68.6, 376.0], [68.7, 376.0], [68.8, 377.0], [68.9, 377.0], [69.0, 377.0], [69.1, 378.0], [69.2, 379.0], [69.3, 379.0], [69.4, 380.0], [69.5, 380.0], [69.6, 381.0], [69.7, 381.0], [69.8, 382.0], [69.9, 383.0], [70.0, 383.0], [70.1, 384.0], [70.2, 385.0], [70.3, 385.0], [70.4, 386.0], [70.5, 387.0], [70.6, 387.0], [70.7, 388.0], [70.8, 388.0], [70.9, 389.0], [71.0, 390.0], [71.1, 390.0], [71.2, 391.0], [71.3, 391.0], [71.4, 391.0], [71.5, 392.0], [71.6, 393.0], [71.7, 393.0], [71.8, 394.0], [71.9, 394.0], [72.0, 395.0], [72.1, 396.0], [72.2, 396.0], [72.3, 397.0], [72.4, 398.0], [72.5, 398.0], [72.6, 399.0], [72.7, 399.0], [72.8, 400.0], [72.9, 401.0], [73.0, 401.0], [73.1, 402.0], [73.2, 402.0], [73.3, 402.0], [73.4, 403.0], [73.5, 404.0], [73.6, 405.0], [73.7, 405.0], [73.8, 405.0], [73.9, 406.0], [74.0, 406.0], [74.1, 407.0], [74.2, 407.0], [74.3, 408.0], [74.4, 409.0], [74.5, 409.0], [74.6, 410.0], [74.7, 411.0], [74.8, 411.0], [74.9, 411.0], [75.0, 412.0], [75.1, 413.0], [75.2, 413.0], [75.3, 414.0], [75.4, 415.0], [75.5, 415.0], [75.6, 416.0], [75.7, 416.0], [75.8, 417.0], [75.9, 418.0], [76.0, 419.0], [76.1, 419.0], [76.2, 420.0], [76.3, 421.0], [76.4, 422.0], [76.5, 423.0], [76.6, 424.0], [76.7, 424.0], [76.8, 425.0], [76.9, 426.0], [77.0, 427.0], [77.1, 427.0], [77.2, 428.0], [77.3, 429.0], [77.4, 430.0], [77.5, 431.0], [77.6, 432.0], [77.7, 433.0], [77.8, 435.0], [77.9, 436.0], [78.0, 437.0], [78.1, 439.0], [78.2, 440.0], [78.3, 441.0], [78.4, 442.0], [78.5, 444.0], [78.6, 446.0], [78.7, 446.0], [78.8, 448.0], [78.9, 450.0], [79.0, 451.0], [79.1, 453.0], [79.2, 455.0], [79.3, 456.0], [79.4, 458.0], [79.5, 458.0], [79.6, 459.0], [79.7, 461.0], [79.8, 462.0], [79.9, 462.0], [80.0, 464.0], [80.1, 464.0], [80.2, 465.0], [80.3, 467.0], [80.4, 469.0], [80.5, 470.0], [80.6, 471.0], [80.7, 472.0], [80.8, 474.0], [80.9, 476.0], [81.0, 478.0], [81.1, 478.0], [81.2, 480.0], [81.3, 480.0], [81.4, 481.0], [81.5, 482.0], [81.6, 483.0], [81.7, 485.0], [81.8, 486.0], [81.9, 487.0], [82.0, 488.0], [82.1, 489.0], [82.2, 490.0], [82.3, 492.0], [82.4, 493.0], [82.5, 494.0], [82.6, 496.0], [82.7, 497.0], [82.8, 498.0], [82.9, 499.0], [83.0, 500.0], [83.1, 501.0], [83.2, 502.0], [83.3, 503.0], [83.4, 505.0], [83.5, 507.0], [83.6, 508.0], [83.7, 509.0], [83.8, 511.0], [83.9, 512.0], [84.0, 513.0], [84.1, 515.0], [84.2, 518.0], [84.3, 519.0], [84.4, 520.0], [84.5, 522.0], [84.6, 525.0], [84.7, 526.0], [84.8, 528.0], [84.9, 530.0], [85.0, 533.0], [85.1, 534.0], [85.2, 538.0], [85.3, 540.0], [85.4, 544.0], [85.5, 547.0], [85.6, 550.0], [85.7, 554.0], [85.8, 557.0], [85.9, 560.0], [86.0, 563.0], [86.1, 567.0], [86.2, 569.0], [86.3, 571.0], [86.4, 574.0], [86.5, 576.0], [86.6, 578.0], [86.7, 581.0], [86.8, 583.0], [86.9, 585.0], [87.0, 587.0], [87.1, 589.0], [87.2, 591.0], [87.3, 592.0], [87.4, 594.0], [87.5, 596.0], [87.6, 598.0], [87.7, 601.0], [87.8, 602.0], [87.9, 603.0], [88.0, 605.0], [88.1, 607.0], [88.2, 609.0], [88.3, 613.0], [88.4, 615.0], [88.5, 619.0], [88.6, 623.0], [88.7, 627.0], [88.8, 631.0], [88.9, 633.0], [89.0, 636.0], [89.1, 641.0], [89.2, 645.0], [89.3, 649.0], [89.4, 653.0], [89.5, 657.0], [89.6, 659.0], [89.7, 663.0], [89.8, 668.0], [89.9, 671.0], [90.0, 674.0], [90.1, 679.0], [90.2, 682.0], [90.3, 685.0], [90.4, 689.0], [90.5, 692.0], [90.6, 695.0], [90.7, 699.0], [90.8, 702.0], [90.9, 705.0], [91.0, 708.0], [91.1, 711.0], [91.2, 715.0], [91.3, 718.0], [91.4, 721.0], [91.5, 726.0], [91.6, 729.0], [91.7, 736.0], [91.8, 740.0], [91.9, 745.0], [92.0, 749.0], [92.1, 754.0], [92.2, 759.0], [92.3, 763.0], [92.4, 768.0], [92.5, 773.0], [92.6, 778.0], [92.7, 783.0], [92.8, 786.0], [92.9, 790.0], [93.0, 793.0], [93.1, 797.0], [93.2, 800.0], [93.3, 803.0], [93.4, 807.0], [93.5, 810.0], [93.6, 816.0], [93.7, 822.0], [93.8, 829.0], [93.9, 834.0], [94.0, 840.0], [94.1, 849.0], [94.2, 858.0], [94.3, 867.0], [94.4, 877.0], [94.5, 886.0], [94.6, 893.0], [94.7, 902.0], [94.8, 908.0], [94.9, 917.0], [95.0, 923.0], [95.1, 936.0], [95.2, 943.0], [95.3, 954.0], [95.4, 966.0], [95.5, 972.0], [95.6, 982.0], [95.7, 990.0], [95.8, 997.0], [95.9, 1008.0], [96.0, 1018.0], [96.1, 1035.0], [96.2, 1048.0], [96.3, 1066.0], [96.4, 1077.0], [96.5, 1084.0], [96.6, 1094.0], [96.7, 1108.0], [96.8, 1115.0], [96.9, 1132.0], [97.0, 1148.0], [97.1, 1171.0], [97.2, 1193.0], [97.3, 1212.0], [97.4, 1235.0], [97.5, 1257.0], [97.6, 1273.0], [97.7, 1305.0], [97.8, 1330.0], [97.9, 1362.0], [98.0, 1424.0], [98.1, 1468.0], [98.2, 1531.0], [98.3, 1558.0], [98.4, 1605.0], [98.5, 1637.0], [98.6, 1680.0], [98.7, 1709.0], [98.8, 1779.0], [98.9, 1854.0], [99.0, 1934.0], [99.1, 1988.0], [99.2, 2043.0], [99.3, 2107.0], [99.4, 2179.0], [99.5, 2245.0], [99.6, 2298.0], [99.7, 2436.0], [99.8, 2535.0], [99.9, 2659.0], [100.0, 2971.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 2396.0, "series": [{"data": [[0.0, 1733.0], [2100.0, 2.0], [600.0, 256.0], [2400.0, 1.0], [2600.0, 1.0], [700.0, 153.0], [2700.0, 1.0], [200.0, 2396.0], [800.0, 107.0], [900.0, 68.0], [1000.0, 41.0], [1100.0, 26.0], [300.0, 1790.0], [1200.0, 14.0], [1300.0, 5.0], [1400.0, 3.0], [1500.0, 1.0], [100.0, 1789.0], [400.0, 935.0], [1800.0, 2.0], [500.0, 492.0], [2000.0, 3.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[0.0, 1606.0], [600.0, 301.0], [700.0, 187.0], [800.0, 115.0], [900.0, 96.0], [1000.0, 52.0], [1100.0, 31.0], [1200.0, 19.0], [1300.0, 18.0], [1400.0, 10.0], [1500.0, 11.0], [100.0, 1805.0], [1600.0, 6.0], [1700.0, 2.0], [1800.0, 1.0], [1900.0, 2.0], [2000.0, 5.0], [2100.0, 3.0], [2200.0, 1.0], [2400.0, 1.0], [2800.0, 1.0], [200.0, 2298.0], [300.0, 1750.0], [400.0, 941.0], [500.0, 513.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[0.0, 1733.0], [2100.0, 1.0], [2200.0, 1.0], [600.0, 225.0], [2400.0, 1.0], [700.0, 161.0], [200.0, 2386.0], [800.0, 103.0], [900.0, 97.0], [1000.0, 47.0], [1100.0, 26.0], [300.0, 1928.0], [1200.0, 16.0], [1300.0, 3.0], [1400.0, 1.0], [1500.0, 1.0], [100.0, 1810.0], [400.0, 963.0], [500.0, 421.0], [2000.0, 2.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[0.0, 1424.0], [600.0, 301.0], [700.0, 245.0], [800.0, 151.0], [900.0, 114.0], [1000.0, 81.0], [1100.0, 61.0], [1200.0, 45.0], [1300.0, 28.0], [1400.0, 19.0], [1500.0, 23.0], [100.0, 1683.0], [1600.0, 28.0], [1700.0, 15.0], [1800.0, 13.0], [1900.0, 16.0], [2000.0, 15.0], [2100.0, 17.0], [2200.0, 17.0], [2300.0, 7.0], [2400.0, 8.0], [2500.0, 6.0], [2600.0, 11.0], [2700.0, 4.0], [2800.0, 1.0], [2900.0, 2.0], [200.0, 2252.0], [300.0, 1896.0], [400.0, 1019.0], [500.0, 472.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 233.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 34174.0, "series": [{"data": [[0.0, 34174.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 5087.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 233.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 86.88944099378872, "minX": 1.71922788E12, "maxY": 100.0, "series": [{"data": [[1.71922806E12, 100.0], [1.71922788E12, 86.88944099378872], [1.71922836E12, 100.0], [1.71922818E12, 100.0], [1.719228E12, 100.0], [1.7192283E12, 100.0], [1.71922848E12, 98.28956461644782], [1.71922812E12, 100.0], [1.71922794E12, 100.0], [1.71922842E12, 100.0], [1.71922824E12, 100.0]], "isOverall": false, "label": "MixedTest", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71922848E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 5.5, "minX": 1.0, "maxY": 749.0, "series": [{"data": [[11.0, 579.0], [17.0, 66.0], [18.0, 15.0], [20.0, 16.0], [21.0, 12.0], [22.0, 309.5], [24.0, 38.0], [26.0, 10.0], [28.0, 14.0], [29.0, 81.0], [31.0, 8.0], [33.0, 482.0], [36.0, 7.0], [37.0, 13.0], [38.0, 10.0], [41.0, 13.0], [43.0, 182.0], [42.0, 435.0], [44.0, 137.5], [45.0, 11.666666666666666], [47.0, 313.0], [48.0, 9.0], [50.0, 13.0], [51.0, 255.5], [52.0, 137.5], [55.0, 197.0], [56.0, 85.66666666666667], [59.0, 199.66666666666669], [60.0, 7.0], [62.0, 196.5], [64.0, 7.0], [66.0, 15.0], [68.0, 22.0], [71.0, 249.0], [72.0, 102.0], [73.0, 114.66666666666667], [74.0, 6.0], [76.0, 10.333333333333334], [77.0, 8.0], [78.0, 16.0], [79.0, 10.0], [83.0, 270.0], [82.0, 415.0], [84.0, 291.0], [87.0, 234.0], [86.0, 433.0], [88.0, 317.0], [89.0, 358.0], [90.0, 259.16666666666663], [91.0, 163.0], [92.0, 319.5], [93.0, 231.0], [95.0, 9.5], [96.0, 236.5], [97.0, 23.0], [98.0, 8.0], [99.0, 8.0], [100.0, 286.5889734622501]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[99.64894592117321, 285.2202871982894]], "isOverall": false, "label": "Directors by name-Aggregated", "isController": false}, {"data": [[3.0, 340.0], [5.0, 331.0], [8.0, 441.0], [13.0, 515.0], [16.0, 628.0], [17.0, 310.0], [18.0, 594.0], [19.0, 14.0], [21.0, 599.0], [26.0, 547.0], [27.0, 301.5], [28.0, 611.0], [29.0, 570.0], [30.0, 79.0], [33.0, 82.0], [35.0, 227.0], [37.0, 473.0], [36.0, 454.0], [39.0, 11.0], [40.0, 10.0], [41.0, 594.0], [43.0, 189.0], [44.0, 330.66666666666663], [45.0, 376.0], [46.0, 13.0], [47.0, 6.0], [48.0, 10.0], [49.0, 242.0], [51.0, 10.0], [52.0, 6.0], [53.0, 11.0], [55.0, 16.0], [56.0, 56.0], [58.0, 168.0], [59.0, 116.0], [60.0, 9.0], [61.0, 10.0], [62.0, 12.75], [63.0, 6.5], [65.0, 10.0], [66.0, 11.0], [67.0, 26.0], [68.0, 17.333333333333332], [72.0, 203.33333333333331], [73.0, 120.5], [74.0, 28.0], [75.0, 410.0], [76.0, 11.0], [79.0, 12.0], [80.0, 12.0], [82.0, 196.0], [83.0, 273.0], [85.0, 214.0], [86.0, 231.0], [87.0, 409.5], [84.0, 487.0], [88.0, 314.0], [89.0, 347.0], [90.0, 364.0], [91.0, 238.33333333333331], [92.0, 400.0], [93.0, 112.5], [94.0, 14.5], [95.0, 8.5], [96.0, 28.0], [97.0, 242.5], [99.0, 103.75], [100.0, 302.59693613497535]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[99.58496163682854, 301.317340153452]], "isOverall": false, "label": "TitleBasics by primary_title-Aggregated", "isController": false}, {"data": [[2.0, 326.0], [4.0, 353.0], [10.0, 517.0], [14.0, 583.0], [15.0, 600.0], [16.0, 177.5], [17.0, 603.0], [19.0, 608.0], [20.0, 614.0], [30.0, 60.5], [31.0, 261.0], [33.0, 17.0], [38.0, 14.0], [39.0, 245.0], [40.0, 217.5], [43.0, 181.5], [44.0, 128.5], [46.0, 115.66666666666667], [47.0, 15.0], [49.0, 11.0], [48.0, 323.0], [50.0, 17.0], [52.0, 13.0], [53.0, 9.0], [55.0, 16.0], [54.0, 287.0], [56.0, 37.333333333333336], [57.0, 297.0], [58.0, 185.4], [59.0, 134.0], [60.0, 138.0], [61.0, 355.0], [64.0, 203.5], [65.0, 13.0], [67.0, 212.5], [68.0, 11.0], [70.0, 9.5], [71.0, 101.0], [69.0, 404.0], [72.0, 116.0], [73.0, 194.5], [74.0, 79.0], [75.0, 8.5], [77.0, 8.0], [79.0, 166.0], [83.0, 348.0], [81.0, 354.0], [80.0, 381.0], [84.0, 276.0], [85.0, 315.0], [86.0, 253.33333333333334], [87.0, 267.5], [88.0, 378.0], [90.0, 323.5], [91.0, 192.5], [92.0, 653.5], [93.0, 188.0], [94.0, 14.0], [95.0, 221.5], [96.0, 17.0], [97.0, 25.5], [98.0, 13.0], [100.0, 285.3621269226858], [1.0, 336.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[99.59651420511783, 284.4363288333672]], "isOverall": false, "label": "Actors by name-Aggregated", "isController": false}, {"data": [[6.0, 393.0], [7.0, 393.0], [9.0, 649.0], [12.0, 590.0], [23.0, 749.0], [24.0, 462.5], [25.0, 226.0], [29.0, 93.0], [30.0, 159.0], [32.0, 260.0], [33.0, 19.0], [34.0, 127.33333333333333], [36.0, 11.5], [37.0, 17.0], [38.0, 498.0], [43.0, 461.0], [44.0, 135.0], [45.0, 10.0], [48.0, 8.5], [49.0, 16.5], [50.0, 237.0], [51.0, 15.0], [53.0, 280.0], [54.0, 17.0], [57.0, 42.0], [58.0, 187.5], [60.0, 10.0], [61.0, 17.0], [63.0, 140.66666666666666], [64.0, 11.5], [65.0, 204.5], [66.0, 404.0], [68.0, 269.0], [69.0, 8.666666666666666], [70.0, 200.5], [71.0, 164.66666666666666], [72.0, 117.0], [73.0, 163.0], [74.0, 97.2], [75.0, 11.333333333333334], [77.0, 211.0], [78.0, 105.0], [76.0, 412.0], [80.0, 32.0], [83.0, 241.5], [84.0, 246.0], [85.0, 185.0], [86.0, 484.0], [87.0, 241.0], [88.0, 389.0], [89.0, 366.5], [90.0, 272.8], [91.0, 115.0], [92.0, 103.0], [93.0, 253.33333333333331], [94.0, 426.0], [96.0, 43.0], [97.0, 25.0], [98.0, 158.0], [99.0, 5.5], [100.0, 351.8929765886291]], "isOverall": false, "label": "TitleBasics by params", "isController": false}, {"data": [[99.59945859234045, 350.1356526970101]], "isOverall": false, "label": "TitleBasics by params-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2202.116666666667, "minX": 1.71922788E12, "maxY": 270595.61666666664, "series": [{"data": [[1.71922806E12, 241452.31666666668], [1.71922788E12, 46824.1], [1.71922836E12, 248660.96666666667], [1.71922818E12, 239128.2], [1.719228E12, 253537.16666666666], [1.7192283E12, 232646.53333333333], [1.71922848E12, 156374.85], [1.71922812E12, 230963.85], [1.71922794E12, 245166.7], [1.71922842E12, 270595.61666666664], [1.71922824E12, 230590.03333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71922806E12, 11549.9], [1.71922788E12, 2202.116666666667], [1.71922836E12, 10667.083333333334], [1.71922818E12, 10593.866666666667], [1.719228E12, 11347.433333333332], [1.7192283E12, 10550.433333333332], [1.71922848E12, 7921.766666666666], [1.71922812E12, 10668.4], [1.71922794E12, 11561.683333333332], [1.71922842E12, 10890.416666666666], [1.71922824E12, 10579.683333333332]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71922848E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 137.8837209302326, "minX": 1.71922788E12, "maxY": 416.17577706323647, "series": [{"data": [[1.71922806E12, 225.41642788920697], [1.71922788E12, 137.8837209302326], [1.71922836E12, 305.1987767584094], [1.71922818E12, 339.35881104033945], [1.719228E12, 238.32947976878606], [1.7192283E12, 364.907444668008], [1.71922848E12, 271.13648293963297], [1.71922812E12, 308.7342733188724], [1.71922794E12, 229.2774566473989], [1.71922842E12, 290.50438596491244], [1.71922824E12, 321.8522727272732]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.71922806E12, 222.24951456310666], [1.71922788E12, 150.42051282051278], [1.71922836E12, 320.10198019801993], [1.71922818E12, 361.64668094218433], [1.719228E12, 247.38976377952747], [1.7192283E12, 382.1675447839832], [1.71922848E12, 286.49999999999994], [1.71922812E12, 349.791932059448], [1.71922794E12, 242.6660287081341], [1.71922842E12, 311.0696324951644], [1.71922824E12, 333.51089324618727]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.71922806E12, 216.96931407942242], [1.71922788E12, 146.1724137931035], [1.71922836E12, 321.15621788283636], [1.71922818E12, 333.330992978937], [1.719228E12, 237.92413793103438], [1.7192283E12, 330.0172043010753], [1.71922848E12, 270.558495821727], [1.71922812E12, 331.1233299075025], [1.71922794E12, 240.1190243902439], [1.71922842E12, 290.8856275303639], [1.71922824E12, 311.2991967871487]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.71922806E12, 243.46334310850435], [1.71922788E12, 164.25], [1.71922836E12, 416.17577706323647], [1.71922818E12, 392.828689370485], [1.719228E12, 278.1448730009409], [1.7192283E12, 407.91170431211503], [1.71922848E12, 412.8721910112364], [1.71922812E12, 393.30341463414675], [1.71922794E12, 259.75187265917555], [1.71922842E12, 357.6347656249999], [1.71922824E12, 412.7174571140263]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71922848E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 137.87441860465128, "minX": 1.71922788E12, "maxY": 416.1682743837083, "series": [{"data": [[1.71922806E12, 225.41642788920697], [1.71922788E12, 137.87441860465128], [1.71922836E12, 305.1987767584094], [1.71922818E12, 339.35881104033945], [1.719228E12, 238.3285163776493], [1.7192283E12, 364.9064386317905], [1.71922848E12, 271.13648293963297], [1.71922812E12, 308.73210412147483], [1.71922794E12, 229.27456647398824], [1.71922842E12, 290.5032894736844], [1.71922824E12, 321.8522727272732]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.71922806E12, 222.24563106796128], [1.71922788E12, 150.41025641025644], [1.71922836E12, 320.09801980198023], [1.71922818E12, 361.64239828693746], [1.719228E12, 247.38681102362216], [1.7192283E12, 382.16227608008455], [1.71922848E12, 286.4985754985758], [1.71922812E12, 349.78450106157106], [1.71922794E12, 242.6602870813398], [1.71922842E12, 311.04448742746627], [1.71922824E12, 333.5087145969495]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.71922806E12, 216.9675090252706], [1.71922788E12, 146.1724137931035], [1.71922836E12, 321.1551901336076], [1.71922818E12, 333.3289869608829], [1.719228E12, 237.92413793103438], [1.7192283E12, 330.0161290322582], [1.71922848E12, 270.55710306406723], [1.71922812E12, 331.1202466598152], [1.71922794E12, 240.1170731707318], [1.71922842E12, 290.88461538461524], [1.71922824E12, 311.2971887550196]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.71922806E12, 243.45454545454552], [1.71922788E12, 164.2395833333334], [1.71922836E12, 416.1682743837083], [1.71922818E12, 392.82146542827707], [1.719228E12, 278.14205079962335], [1.7192283E12, 407.90759753593477], [1.71922848E12, 412.8679775280898], [1.71922812E12, 393.2975609756098], [1.71922794E12, 259.7425093632963], [1.71922842E12, 357.626953125], [1.71922824E12, 412.7154389505553]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71922848E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.71922788E12, "maxY": 0.10256410256410248, "series": [{"data": [[1.71922806E12, 0.006685768863419297], [1.71922788E12, 0.06511627906976747], [1.71922836E12, 0.006116207951070339], [1.71922818E12, 0.0021231422505307877], [1.719228E12, 0.004816955684007704], [1.7192283E12, 0.007042253521126763], [1.71922848E12, 0.0013123359580052498], [1.71922812E12, 0.007592190889370937], [1.71922794E12, 0.010597302504816948], [1.71922842E12, 0.006578947368421054], [1.71922824E12, 0.007231404958677687]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.71922806E12, 0.009708737864077673], [1.71922788E12, 0.10256410256410248], [1.71922836E12, 0.005940594059405941], [1.71922818E12, 0.0042826552462526795], [1.719228E12, 0.004921259842519687], [1.7192283E12, 0.008429926238145419], [1.71922848E12, 0.0], [1.71922812E12, 0.005307855626326963], [1.71922794E12, 0.00478468899521531], [1.71922842E12, 0.004835589941972923], [1.71922824E12, 0.007625272331154687]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.71922806E12, 0.0072202166064981995], [1.71922788E12, 0.07389162561576355], [1.71922836E12, 0.00719424460431655], [1.71922818E12, 0.0050150451354062184], [1.719228E12, 0.004926108374384238], [1.7192283E12, 0.01075268817204301], [1.71922848E12, 0.0013927576601671314], [1.71922812E12, 0.008221993833504623], [1.71922794E12, 0.011707317073170733], [1.71922842E12, 0.0020242914979757077], [1.71922824E12, 0.0050200803212851405]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.71922806E12, 0.003910068426197459], [1.71922788E12, 0.05208333333333329], [1.71922836E12, 0.004287245444801717], [1.71922818E12, 0.009287925696594432], [1.719228E12, 0.00940733772342427], [1.7192283E12, 0.009240246406570844], [1.71922848E12, 0.0014044943820224723], [1.71922812E12, 0.006829268292682929], [1.71922794E12, 0.008426966292134824], [1.71922842E12, 0.009765625], [1.71922824E12, 0.005045408678102924]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71922848E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.71922788E12, "maxY": 2971.0, "series": [{"data": [[1.71922806E12, 1270.0], [1.71922788E12, 717.0], [1.71922836E12, 2446.0], [1.71922818E12, 2434.0], [1.719228E12, 1787.0], [1.7192283E12, 2898.0], [1.71922848E12, 2971.0], [1.71922812E12, 2423.0], [1.71922794E12, 1818.0], [1.71922842E12, 2921.0], [1.71922824E12, 2303.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71922806E12, 4.0], [1.71922788E12, 4.0], [1.71922836E12, 4.0], [1.71922818E12, 4.0], [1.719228E12, 4.0], [1.7192283E12, 5.0], [1.71922848E12, 4.0], [1.71922812E12, 4.0], [1.71922794E12, 4.0], [1.71922842E12, 4.0], [1.71922824E12, 4.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71922806E12, 405.0], [1.71922788E12, 303.4], [1.71922836E12, 707.2000000000003], [1.71922818E12, 690.0], [1.719228E12, 432.0], [1.7192283E12, 603.0], [1.71922848E12, 565.0], [1.71922812E12, 810.7000000000003], [1.71922794E12, 405.0], [1.71922842E12, 568.0], [1.71922824E12, 710.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71922806E12, 683.8199999999997], [1.71922788E12, 506.5599999999986], [1.71922836E12, 1545.8399999999992], [1.71922818E12, 1207.8500000000008], [1.719228E12, 881.3400000000001], [1.7192283E12, 1474.999999999999], [1.71922848E12, 2024.900000000007], [1.71922812E12, 1485.37], [1.71922794E12, 569.9099999999926], [1.71922842E12, 1195.4099999999999], [1.71922824E12, 1352.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71922806E12, 208.0], [1.71922788E12, 140.0], [1.71922836E12, 281.0], [1.71922818E12, 307.0], [1.719228E12, 242.0], [1.7192283E12, 335.0], [1.71922848E12, 267.0], [1.71922812E12, 267.0], [1.71922794E12, 249.0], [1.71922842E12, 288.0], [1.71922824E12, 287.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.71922806E12, 479.0], [1.71922788E12, 365.0], [1.71922836E12, 888.2999999999997], [1.71922818E12, 926.3999999999996], [1.719228E12, 540.3499999999999], [1.7192283E12, 741.1999999999998], [1.71922848E12, 706.25], [1.71922812E12, 1007.8499999999999], [1.71922794E12, 447.2999999999993], [1.71922842E12, 688.0499999999997], [1.71922824E12, 880.2999999999997]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71922848E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 15.0, "minX": 5.0, "maxY": 718.5, "series": [{"data": [[5.0, 250.0], [10.0, 15.0], [23.0, 17.0], [30.0, 258.0], [31.0, 360.0], [32.0, 104.0], [33.0, 464.0], [34.0, 419.5], [36.0, 432.0], [37.0, 86.0], [38.0, 392.5], [39.0, 486.0], [40.0, 401.5], [41.0, 296.0], [43.0, 403.5], [42.0, 718.5], [44.0, 488.0], [47.0, 441.0], [46.0, 439.0], [48.0, 424.5], [49.0, 306.0], [51.0, 353.0], [50.0, 318.0], [52.0, 382.5], [53.0, 561.0], [55.0, 354.0], [54.0, 455.5], [56.0, 349.0], [57.0, 368.0], [59.0, 323.5], [58.0, 286.5], [61.0, 297.5], [60.0, 302.5], [63.0, 251.5], [62.0, 305.0], [67.0, 224.0], [65.0, 296.0], [64.0, 287.0], [66.0, 213.5], [70.0, 291.0], [69.0, 213.0], [68.0, 279.0], [71.0, 229.0], [74.0, 313.0], [73.0, 263.0], [72.0, 214.5], [75.0, 234.0], [79.0, 199.0], [78.0, 220.0], [77.0, 241.0], [76.0, 260.0], [80.0, 212.5], [81.0, 220.0], [82.0, 287.0], [83.0, 154.0], [84.0, 304.0], [86.0, 249.0], [87.0, 264.0], [85.0, 360.5], [90.0, 63.5], [88.0, 97.0], [93.0, 222.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 93.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 15.0, "minX": 5.0, "maxY": 718.5, "series": [{"data": [[5.0, 250.0], [10.0, 15.0], [23.0, 17.0], [30.0, 258.0], [31.0, 360.0], [32.0, 104.0], [33.0, 464.0], [34.0, 419.5], [36.0, 432.0], [37.0, 86.0], [38.0, 392.5], [39.0, 486.0], [40.0, 401.5], [41.0, 296.0], [43.0, 403.5], [42.0, 718.5], [44.0, 488.0], [47.0, 441.0], [46.0, 439.0], [48.0, 424.5], [49.0, 306.0], [51.0, 353.0], [50.0, 318.0], [52.0, 382.5], [53.0, 561.0], [55.0, 354.0], [54.0, 455.5], [56.0, 349.0], [57.0, 368.0], [59.0, 323.5], [58.0, 286.5], [61.0, 297.5], [60.0, 302.5], [63.0, 251.5], [62.0, 305.0], [67.0, 224.0], [65.0, 296.0], [64.0, 287.0], [66.0, 213.5], [70.0, 291.0], [69.0, 213.0], [68.0, 279.0], [71.0, 229.0], [74.0, 313.0], [73.0, 263.0], [72.0, 214.5], [75.0, 234.0], [79.0, 199.0], [78.0, 220.0], [77.0, 241.0], [76.0, 260.0], [80.0, 212.5], [81.0, 220.0], [82.0, 287.0], [83.0, 154.0], [84.0, 304.0], [86.0, 249.0], [87.0, 264.0], [85.0, 360.5], [90.0, 63.5], [88.0, 97.0], [93.0, 222.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 93.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 13.933333333333334, "minX": 1.71922788E12, "maxY": 70.13333333333334, "series": [{"data": [[1.71922806E12, 70.13333333333334], [1.71922788E12, 13.933333333333334], [1.71922836E12, 64.88333333333334], [1.71922818E12, 64.35], [1.719228E12, 68.83333333333333], [1.7192283E12, 63.53333333333333], [1.71922848E12, 47.85], [1.71922812E12, 64.71666666666667], [1.71922794E12, 69.11666666666666], [1.71922842E12, 66.31666666666666], [1.71922824E12, 64.56666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71922848E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 13.416666666666666, "minX": 1.71922788E12, "maxY": 70.13333333333334, "series": [{"data": [[1.71922806E12, 70.13333333333334], [1.71922788E12, 13.416666666666666], [1.71922836E12, 64.95], [1.71922818E12, 64.03333333333333], [1.719228E12, 68.86666666666666], [1.7192283E12, 64.11666666666666], [1.71922848E12, 48.233333333333334], [1.71922812E12, 64.36666666666666], [1.71922794E12, 69.6], [1.71922842E12, 65.96666666666667], [1.71922824E12, 64.55]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71922848E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 3.2, "minX": 1.71922788E12, "maxY": 18.466666666666665, "series": [{"data": [[1.71922806E12, 17.166666666666668], [1.71922788E12, 3.25], [1.71922836E12, 16.833333333333332], [1.71922818E12, 15.566666666666666], [1.719228E12, 16.933333333333334], [1.7192283E12, 15.816666666666666], [1.71922848E12, 11.7], [1.71922812E12, 15.7], [1.71922794E12, 17.416666666666668], [1.71922842E12, 17.233333333333334], [1.71922824E12, 15.3]], "isOverall": false, "label": "TitleBasics by primary_title-success", "isController": false}, {"data": [[1.71922806E12, 18.466666666666665], [1.71922788E12, 3.3833333333333333], [1.71922836E12, 16.216666666666665], [1.71922818E12, 16.616666666666667], [1.719228E12, 16.916666666666668], [1.7192283E12, 15.5], [1.71922848E12, 11.966666666666667], [1.71922812E12, 16.216666666666665], [1.71922794E12, 17.083333333333332], [1.71922842E12, 16.466666666666665], [1.71922824E12, 16.6]], "isOverall": false, "label": "Actors by name-success", "isController": false}, {"data": [[1.71922806E12, 17.45], [1.71922788E12, 3.5833333333333335], [1.71922836E12, 16.35], [1.71922818E12, 15.7], [1.719228E12, 17.3], [1.7192283E12, 16.566666666666666], [1.71922848E12, 12.7], [1.71922812E12, 15.366666666666667], [1.71922794E12, 17.3], [1.71922842E12, 15.2], [1.71922824E12, 16.133333333333333]], "isOverall": false, "label": "Directors by name-success", "isController": false}, {"data": [[1.71922806E12, 17.05], [1.71922788E12, 3.2], [1.71922836E12, 15.55], [1.71922818E12, 16.15], [1.719228E12, 17.716666666666665], [1.7192283E12, 16.233333333333334], [1.71922848E12, 11.866666666666667], [1.71922812E12, 17.083333333333332], [1.71922794E12, 17.8], [1.71922842E12, 17.066666666666666], [1.71922824E12, 16.516666666666666]], "isOverall": false, "label": "TitleBasics by params-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71922848E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 13.416666666666666, "minX": 1.71922788E12, "maxY": 70.13333333333334, "series": [{"data": [[1.71922806E12, 70.13333333333334], [1.71922788E12, 13.416666666666666], [1.71922836E12, 64.95], [1.71922818E12, 64.03333333333333], [1.719228E12, 68.86666666666666], [1.7192283E12, 64.11666666666666], [1.71922848E12, 48.233333333333334], [1.71922812E12, 64.36666666666666], [1.71922794E12, 69.6], [1.71922842E12, 65.96666666666667], [1.71922824E12, 64.55]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71922848E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}


/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1082.0, "minX": 0.0, "maxY": 245133.0, "series": [{"data": [[0.0, 1082.0], [0.1, 1128.0], [0.2, 1142.0], [0.3, 1150.0], [0.4, 1155.0], [0.5, 1158.0], [0.6, 1162.0], [0.7, 1167.0], [0.8, 1173.0], [0.9, 1179.0], [1.0, 1184.0], [1.1, 1189.0], [1.2, 1192.0], [1.3, 1201.0], [1.4, 1214.0], [1.5, 1220.0], [1.6, 1244.0], [1.7, 1263.0], [1.8, 1313.0], [1.9, 1365.0], [2.0, 1403.0], [2.1, 1437.0], [2.2, 1456.0], [2.3, 1464.0], [2.4, 1478.0], [2.5, 1498.0], [2.6, 1508.0], [2.7, 1516.0], [2.8, 1521.0], [2.9, 1524.0], [3.0, 1528.0], [3.1, 1533.0], [3.2, 1536.0], [3.3, 1539.0], [3.4, 1543.0], [3.5, 1546.0], [3.6, 1550.0], [3.7, 1552.0], [3.8, 1554.0], [3.9, 1556.0], [4.0, 1557.0], [4.1, 1559.0], [4.2, 1561.0], [4.3, 1562.0], [4.4, 1563.0], [4.5, 1565.0], [4.6, 1566.0], [4.7, 1567.0], [4.8, 1569.0], [4.9, 1570.0], [5.0, 1572.0], [5.1, 1574.0], [5.2, 1575.0], [5.3, 1577.0], [5.4, 1579.0], [5.5, 1582.0], [5.6, 1584.0], [5.7, 1587.0], [5.8, 1591.0], [5.9, 1596.0], [6.0, 1599.0], [6.1, 1603.0], [6.2, 1609.0], [6.3, 1615.0], [6.4, 1624.0], [6.5, 1636.0], [6.6, 1642.0], [6.7, 1645.0], [6.8, 1648.0], [6.9, 1650.0], [7.0, 1652.0], [7.1, 1654.0], [7.2, 1655.0], [7.3, 1656.0], [7.4, 1657.0], [7.5, 1658.0], [7.6, 1659.0], [7.7, 1660.0], [7.8, 1661.0], [7.9, 1662.0], [8.0, 1662.0], [8.1, 1663.0], [8.2, 1664.0], [8.3, 1665.0], [8.4, 1665.0], [8.5, 1666.0], [8.6, 1667.0], [8.7, 1667.0], [8.8, 1668.0], [8.9, 1669.0], [9.0, 1669.0], [9.1, 1670.0], [9.2, 1671.0], [9.3, 1671.0], [9.4, 1672.0], [9.5, 1673.0], [9.6, 1674.0], [9.7, 1675.0], [9.8, 1675.0], [9.9, 1676.0], [10.0, 1678.0], [10.1, 1679.0], [10.2, 1679.0], [10.3, 1681.0], [10.4, 1683.0], [10.5, 1685.0], [10.6, 1689.0], [10.7, 1694.0], [10.8, 1703.0], [10.9, 1716.0], [11.0, 1747.0], [11.1, 1757.0], [11.2, 1764.0], [11.3, 1768.0], [11.4, 1776.0], [11.5, 1785.0], [11.6, 1801.0], [11.7, 1851.0], [11.8, 1972.0], [11.9, 2166.0], [12.0, 2467.0], [12.1, 2729.0], [12.2, 2914.0], [12.3, 3191.0], [12.4, 3235.0], [12.5, 3288.0], [12.6, 3306.0], [12.7, 3313.0], [12.8, 3333.0], [12.9, 3357.0], [13.0, 3390.0], [13.1, 3402.0], [13.2, 3413.0], [13.3, 3419.0], [13.4, 3424.0], [13.5, 3431.0], [13.6, 3436.0], [13.7, 3443.0], [13.8, 3452.0], [13.9, 3457.0], [14.0, 3465.0], [14.1, 3471.0], [14.2, 3478.0], [14.3, 3482.0], [14.4, 3486.0], [14.5, 3489.0], [14.6, 3491.0], [14.7, 3492.0], [14.8, 3494.0], [14.9, 3495.0], [15.0, 3495.0], [15.1, 3496.0], [15.2, 3497.0], [15.3, 3498.0], [15.4, 3499.0], [15.5, 3500.0], [15.6, 3500.0], [15.7, 3501.0], [15.8, 3501.0], [15.9, 3502.0], [16.0, 3502.0], [16.1, 3503.0], [16.2, 3503.0], [16.3, 3504.0], [16.4, 3504.0], [16.5, 3504.0], [16.6, 3505.0], [16.7, 3505.0], [16.8, 3505.0], [16.9, 3506.0], [17.0, 3506.0], [17.1, 3506.0], [17.2, 3507.0], [17.3, 3507.0], [17.4, 3508.0], [17.5, 3508.0], [17.6, 3508.0], [17.7, 3509.0], [17.8, 3509.0], [17.9, 3509.0], [18.0, 3510.0], [18.1, 3510.0], [18.2, 3510.0], [18.3, 3511.0], [18.4, 3511.0], [18.5, 3511.0], [18.6, 3512.0], [18.7, 3512.0], [18.8, 3512.0], [18.9, 3513.0], [19.0, 3513.0], [19.1, 3513.0], [19.2, 3514.0], [19.3, 3514.0], [19.4, 3514.0], [19.5, 3515.0], [19.6, 3515.0], [19.7, 3515.0], [19.8, 3516.0], [19.9, 3516.0], [20.0, 3517.0], [20.1, 3517.0], [20.2, 3517.0], [20.3, 3518.0], [20.4, 3518.0], [20.5, 3519.0], [20.6, 3519.0], [20.7, 3519.0], [20.8, 3520.0], [20.9, 3520.0], [21.0, 3521.0], [21.1, 3521.0], [21.2, 3522.0], [21.3, 3522.0], [21.4, 3523.0], [21.5, 3524.0], [21.6, 3525.0], [21.7, 3526.0], [21.8, 3527.0], [21.9, 3529.0], [22.0, 3531.0], [22.1, 3532.0], [22.2, 3535.0], [22.3, 3538.0], [22.4, 3544.0], [22.5, 3555.0], [22.6, 3567.0], [22.7, 3579.0], [22.8, 3590.0], [22.9, 3594.0], [23.0, 3602.0], [23.1, 3605.0], [23.2, 3608.0], [23.3, 3610.0], [23.4, 3613.0], [23.5, 3616.0], [23.6, 3620.0], [23.7, 3624.0], [23.8, 3631.0], [23.9, 3646.0], [24.0, 3690.0], [24.1, 3701.0], [24.2, 3706.0], [24.3, 3709.0], [24.4, 3711.0], [24.5, 3714.0], [24.6, 3717.0], [24.7, 3719.0], [24.8, 3722.0], [24.9, 3726.0], [25.0, 3736.0], [25.1, 3966.0], [25.2, 5133.0], [25.3, 5740.0], [25.4, 6164.0], [25.5, 6382.0], [25.6, 6572.0], [25.7, 6775.0], [25.8, 6903.0], [25.9, 7021.0], [26.0, 7090.0], [26.1, 7195.0], [26.2, 7292.0], [26.3, 7307.0], [26.4, 7355.0], [26.5, 7497.0], [26.6, 7576.0], [26.7, 7592.0], [26.8, 7614.0], [26.9, 7706.0], [27.0, 7732.0], [27.1, 7790.0], [27.2, 7808.0], [27.3, 7823.0], [27.4, 7909.0], [27.5, 7935.0], [27.6, 7982.0], [27.7, 8004.0], [27.8, 8015.0], [27.9, 8020.0], [28.0, 8027.0], [28.1, 8046.0], [28.2, 8098.0], [28.3, 8132.0], [28.4, 8212.0], [28.5, 8225.0], [28.6, 8308.0], [28.7, 8407.0], [28.8, 8526.0], [28.9, 8612.0], [29.0, 8619.0], [29.1, 8623.0], [29.2, 8624.0], [29.3, 8627.0], [29.4, 8629.0], [29.5, 8632.0], [29.6, 8635.0], [29.7, 8637.0], [29.8, 8641.0], [29.9, 8647.0], [30.0, 8656.0], [30.1, 8663.0], [30.2, 8670.0], [30.3, 8677.0], [30.4, 8690.0], [30.5, 8702.0], [30.6, 8712.0], [30.7, 8720.0], [30.8, 8724.0], [30.9, 8727.0], [31.0, 8729.0], [31.1, 8733.0], [31.2, 8735.0], [31.3, 8738.0], [31.4, 8742.0], [31.5, 8747.0], [31.6, 8759.0], [31.7, 8768.0], [31.8, 8776.0], [31.9, 8786.0], [32.0, 8792.0], [32.1, 8800.0], [32.2, 8806.0], [32.3, 8811.0], [32.4, 8814.0], [32.5, 8817.0], [32.6, 8819.0], [32.7, 8820.0], [32.8, 8822.0], [32.9, 8823.0], [33.0, 8824.0], [33.1, 8825.0], [33.2, 8826.0], [33.3, 8827.0], [33.4, 8828.0], [33.5, 8829.0], [33.6, 8830.0], [33.7, 8830.0], [33.8, 8831.0], [33.9, 8832.0], [34.0, 8832.0], [34.1, 8833.0], [34.2, 8834.0], [34.3, 8834.0], [34.4, 8835.0], [34.5, 8835.0], [34.6, 8836.0], [34.7, 8836.0], [34.8, 8837.0], [34.9, 8838.0], [35.0, 8839.0], [35.1, 8839.0], [35.2, 8840.0], [35.3, 8841.0], [35.4, 8842.0], [35.5, 8842.0], [35.6, 8843.0], [35.7, 8844.0], [35.8, 8845.0], [35.9, 8847.0], [36.0, 8848.0], [36.1, 8849.0], [36.2, 8850.0], [36.3, 8852.0], [36.4, 8856.0], [36.5, 8864.0], [36.6, 8910.0], [36.7, 8929.0], [36.8, 8939.0], [36.9, 8943.0], [37.0, 8949.0], [37.1, 8970.0], [37.2, 9019.0], [37.3, 9038.0], [37.4, 9049.0], [37.5, 9142.0], [37.6, 9247.0], [37.7, 9436.0], [37.8, 9545.0], [37.9, 9578.0], [38.0, 9855.0], [38.1, 15916.0], [38.2, 24517.0], [38.3, 26041.0], [38.4, 27377.0], [38.5, 28354.0], [38.6, 28524.0], [38.7, 28867.0], [38.8, 28885.0], [38.9, 28899.0], [39.0, 28920.0], [39.1, 29333.0], [39.2, 29376.0], [39.3, 30019.0], [39.4, 30098.0], [39.5, 30807.0], [39.6, 30846.0], [39.7, 30861.0], [39.8, 32005.0], [39.9, 32414.0], [40.0, 32492.0], [40.1, 32511.0], [40.2, 32526.0], [40.3, 32535.0], [40.4, 32544.0], [40.5, 32550.0], [40.6, 32560.0], [40.7, 32581.0], [40.8, 32632.0], [40.9, 32672.0], [41.0, 32685.0], [41.1, 32691.0], [41.2, 32696.0], [41.3, 32699.0], [41.4, 32704.0], [41.5, 32708.0], [41.6, 32711.0], [41.7, 32714.0], [41.8, 32719.0], [41.9, 32723.0], [42.0, 32727.0], [42.1, 32732.0], [42.2, 32735.0], [42.3, 32737.0], [42.4, 32740.0], [42.5, 32742.0], [42.6, 32744.0], [42.7, 32747.0], [42.8, 32748.0], [42.9, 32751.0], [43.0, 32755.0], [43.1, 32757.0], [43.2, 32759.0], [43.3, 32761.0], [43.4, 32764.0], [43.5, 32767.0], [43.6, 32772.0], [43.7, 32773.0], [43.8, 32776.0], [43.9, 32779.0], [44.0, 32781.0], [44.1, 32783.0], [44.2, 32785.0], [44.3, 32787.0], [44.4, 32789.0], [44.5, 32790.0], [44.6, 32791.0], [44.7, 32792.0], [44.8, 32793.0], [44.9, 32795.0], [45.0, 32795.0], [45.1, 32796.0], [45.2, 32798.0], [45.3, 32798.0], [45.4, 32799.0], [45.5, 32801.0], [45.6, 32801.0], [45.7, 32802.0], [45.8, 32803.0], [45.9, 32804.0], [46.0, 32805.0], [46.1, 32806.0], [46.2, 32807.0], [46.3, 32808.0], [46.4, 32810.0], [46.5, 32812.0], [46.6, 32813.0], [46.7, 32815.0], [46.8, 32816.0], [46.9, 32819.0], [47.0, 32820.0], [47.1, 32823.0], [47.2, 32826.0], [47.3, 32828.0], [47.4, 32831.0], [47.5, 32833.0], [47.6, 32837.0], [47.7, 32838.0], [47.8, 32840.0], [47.9, 32842.0], [48.0, 32845.0], [48.1, 32846.0], [48.2, 32848.0], [48.3, 32850.0], [48.4, 32852.0], [48.5, 32853.0], [48.6, 32855.0], [48.7, 32858.0], [48.8, 32860.0], [48.9, 32862.0], [49.0, 32864.0], [49.1, 32867.0], [49.2, 32870.0], [49.3, 32873.0], [49.4, 32876.0], [49.5, 32878.0], [49.6, 32880.0], [49.7, 32882.0], [49.8, 32884.0], [49.9, 32885.0], [50.0, 32887.0], [50.1, 32889.0], [50.2, 32890.0], [50.3, 32891.0], [50.4, 32893.0], [50.5, 32895.0], [50.6, 32896.0], [50.7, 32898.0], [50.8, 32899.0], [50.9, 32901.0], [51.0, 32902.0], [51.1, 32904.0], [51.2, 32906.0], [51.3, 32908.0], [51.4, 32910.0], [51.5, 32913.0], [51.6, 32915.0], [51.7, 32922.0], [51.8, 32928.0], [51.9, 33025.0], [52.0, 33064.0], [52.1, 33097.0], [52.2, 33104.0], [52.3, 33109.0], [52.4, 33115.0], [52.5, 33124.0], [52.6, 33154.0], [52.7, 33844.0], [52.8, 33941.0], [52.9, 34205.0], [53.0, 35037.0], [53.1, 35072.0], [53.2, 35764.0], [53.3, 35811.0], [53.4, 36004.0], [53.5, 37497.0], [53.6, 37566.0], [53.7, 37619.0], [53.8, 37706.0], [53.9, 37746.0], [54.0, 38047.0], [54.1, 38125.0], [54.2, 38297.0], [54.3, 38319.0], [54.4, 38336.0], [54.5, 38448.0], [54.6, 38508.0], [54.7, 38520.0], [54.8, 38922.0], [54.9, 38942.0], [55.0, 38950.0], [55.1, 38961.0], [55.2, 38980.0], [55.3, 39009.0], [55.4, 39029.0], [55.5, 39059.0], [55.6, 39095.0], [55.7, 39113.0], [55.8, 39438.0], [55.9, 39786.0], [56.0, 39850.0], [56.1, 40182.0], [56.2, 40209.0], [56.3, 40240.0], [56.4, 40324.0], [56.5, 40349.0], [56.6, 40380.0], [56.7, 40416.0], [56.8, 40465.0], [56.9, 40478.0], [57.0, 40497.0], [57.1, 40578.0], [57.2, 40608.0], [57.3, 40653.0], [57.4, 40682.0], [57.5, 40696.0], [57.6, 40781.0], [57.7, 40791.0], [57.8, 40799.0], [57.9, 40806.0], [58.0, 40810.0], [58.1, 40813.0], [58.2, 40816.0], [58.3, 40822.0], [58.4, 40824.0], [58.5, 40828.0], [58.6, 40834.0], [58.7, 40842.0], [58.8, 40850.0], [58.9, 40861.0], [59.0, 40868.0], [59.1, 40876.0], [59.2, 40882.0], [59.3, 40888.0], [59.4, 40893.0], [59.5, 40898.0], [59.6, 40900.0], [59.7, 40905.0], [59.8, 40911.0], [59.9, 40916.0], [60.0, 40920.0], [60.1, 40925.0], [60.2, 40929.0], [60.3, 40931.0], [60.4, 40936.0], [60.5, 40939.0], [60.6, 40942.0], [60.7, 40945.0], [60.8, 40949.0], [60.9, 40952.0], [61.0, 40957.0], [61.1, 40961.0], [61.2, 40965.0], [61.3, 40970.0], [61.4, 40973.0], [61.5, 40976.0], [61.6, 40978.0], [61.7, 40981.0], [61.8, 40981.0], [61.9, 40983.0], [62.0, 40984.0], [62.1, 40986.0], [62.2, 40987.0], [62.3, 40988.0], [62.4, 40989.0], [62.5, 40991.0], [62.6, 40992.0], [62.7, 40994.0], [62.8, 40995.0], [62.9, 40997.0], [63.0, 40998.0], [63.1, 40999.0], [63.2, 41001.0], [63.3, 41004.0], [63.4, 41007.0], [63.5, 41009.0], [63.6, 41012.0], [63.7, 41019.0], [63.8, 41025.0], [63.9, 41035.0], [64.0, 41044.0], [64.1, 41127.0], [64.2, 41147.0], [64.3, 41153.0], [64.4, 41160.0], [64.5, 41166.0], [64.6, 41171.0], [64.7, 41175.0], [64.8, 41182.0], [64.9, 41184.0], [65.0, 41187.0], [65.1, 41190.0], [65.2, 41192.0], [65.3, 41194.0], [65.4, 41196.0], [65.5, 41199.0], [65.6, 41201.0], [65.7, 41204.0], [65.8, 41207.0], [65.9, 41212.0], [66.0, 41215.0], [66.1, 41220.0], [66.2, 41226.0], [66.3, 41231.0], [66.4, 41237.0], [66.5, 41247.0], [66.6, 41263.0], [66.7, 41287.0], [66.8, 41304.0], [66.9, 41368.0], [67.0, 41392.0], [67.1, 41496.0], [67.2, 41701.0], [67.3, 41761.0], [67.4, 41873.0], [67.5, 42424.0], [67.6, 42597.0], [67.7, 43108.0], [67.8, 44206.0], [67.9, 44947.0], [68.0, 46102.0], [68.1, 49506.0], [68.2, 63153.0], [68.3, 66162.0], [68.4, 67796.0], [68.5, 68977.0], [68.6, 69039.0], [68.7, 69049.0], [68.8, 69119.0], [68.9, 69356.0], [69.0, 70201.0], [69.1, 71555.0], [69.2, 73090.0], [69.3, 75251.0], [69.4, 77177.0], [69.5, 77384.0], [69.6, 77454.0], [69.7, 77477.0], [69.8, 77507.0], [69.9, 77546.0], [70.0, 77792.0], [70.1, 79842.0], [70.2, 79986.0], [70.3, 80397.0], [70.4, 80752.0], [70.5, 81030.0], [70.6, 81116.0], [70.7, 81211.0], [70.8, 81240.0], [70.9, 81283.0], [71.0, 81308.0], [71.1, 81333.0], [71.2, 81337.0], [71.3, 81346.0], [71.4, 81387.0], [71.5, 81413.0], [71.6, 81428.0], [71.7, 81438.0], [71.8, 81447.0], [71.9, 81457.0], [72.0, 81465.0], [72.1, 81470.0], [72.2, 81477.0], [72.3, 81485.0], [72.4, 81490.0], [72.5, 81495.0], [72.6, 81499.0], [72.7, 81503.0], [72.8, 81508.0], [72.9, 81512.0], [73.0, 81520.0], [73.1, 81526.0], [73.2, 81531.0], [73.3, 81538.0], [73.4, 81542.0], [73.5, 81546.0], [73.6, 81550.0], [73.7, 81556.0], [73.8, 81561.0], [73.9, 81565.0], [74.0, 81570.0], [74.1, 81575.0], [74.2, 81579.0], [74.3, 81585.0], [74.4, 81591.0], [74.5, 81597.0], [74.6, 81602.0], [74.7, 81607.0], [74.8, 81613.0], [74.9, 81616.0], [75.0, 81620.0], [75.1, 81626.0], [75.2, 81630.0], [75.3, 81634.0], [75.4, 81638.0], [75.5, 81641.0], [75.6, 81644.0], [75.7, 81647.0], [75.8, 81651.0], [75.9, 81654.0], [76.0, 81657.0], [76.1, 81659.0], [76.2, 81664.0], [76.3, 81667.0], [76.4, 81671.0], [76.5, 81675.0], [76.6, 81678.0], [76.7, 81682.0], [76.8, 81686.0], [76.9, 81691.0], [77.0, 81695.0], [77.1, 81699.0], [77.2, 81703.0], [77.3, 81708.0], [77.4, 81711.0], [77.5, 81716.0], [77.6, 81719.0], [77.7, 81724.0], [77.8, 81730.0], [77.9, 81734.0], [78.0, 81736.0], [78.1, 81740.0], [78.2, 81743.0], [78.3, 81746.0], [78.4, 81753.0], [78.5, 81758.0], [78.6, 81762.0], [78.7, 81769.0], [78.8, 81775.0], [78.9, 81780.0], [79.0, 81784.0], [79.1, 81790.0], [79.2, 81795.0], [79.3, 81801.0], [79.4, 81805.0], [79.5, 81811.0], [79.6, 81819.0], [79.7, 81823.0], [79.8, 81830.0], [79.9, 81837.0], [80.0, 81843.0], [80.1, 81850.0], [80.2, 81856.0], [80.3, 81864.0], [80.4, 81877.0], [80.5, 81886.0], [80.6, 81895.0], [80.7, 81906.0], [80.8, 81914.0], [80.9, 81928.0], [81.0, 81947.0], [81.1, 81965.0], [81.2, 81978.0], [81.3, 81993.0], [81.4, 82001.0], [81.5, 82011.0], [81.6, 82020.0], [81.7, 82033.0], [81.8, 82047.0], [81.9, 82084.0], [82.0, 82105.0], [82.1, 82128.0], [82.2, 82163.0], [82.3, 82229.0], [82.4, 82249.0], [82.5, 82264.0], [82.6, 82290.0], [82.7, 82343.0], [82.8, 82362.0], [82.9, 82375.0], [83.0, 82426.0], [83.1, 82519.0], [83.2, 86698.0], [83.3, 87012.0], [83.4, 90597.0], [83.5, 90855.0], [83.6, 102286.0], [83.7, 103777.0], [83.8, 105130.0], [83.9, 105573.0], [84.0, 107760.0], [84.1, 108438.0], [84.2, 109239.0], [84.3, 109988.0], [84.4, 110657.0], [84.5, 111152.0], [84.6, 111675.0], [84.7, 112123.0], [84.8, 112614.0], [84.9, 113178.0], [85.0, 114066.0], [85.1, 115449.0], [85.2, 118785.0], [85.3, 118868.0], [85.4, 118925.0], [85.5, 120769.0], [85.6, 120824.0], [85.7, 120868.0], [85.8, 120904.0], [85.9, 120927.0], [86.0, 120952.0], [86.1, 120970.0], [86.2, 120996.0], [86.3, 121033.0], [86.4, 121043.0], [86.5, 121056.0], [86.6, 121064.0], [86.7, 121068.0], [86.8, 121073.0], [86.9, 121077.0], [87.0, 121083.0], [87.1, 121095.0], [87.2, 121107.0], [87.3, 121120.0], [87.4, 121142.0], [87.5, 121153.0], [87.6, 121166.0], [87.7, 121179.0], [87.8, 121193.0], [87.9, 121212.0], [88.0, 121243.0], [88.1, 121260.0], [88.2, 121282.0], [88.3, 121297.0], [88.4, 121323.0], [88.5, 121340.0], [88.6, 121355.0], [88.7, 121364.0], [88.8, 121372.0], [88.9, 121381.0], [89.0, 121396.0], [89.1, 121416.0], [89.2, 121442.0], [89.3, 121459.0], [89.4, 121474.0], [89.5, 121488.0], [89.6, 121571.0], [89.7, 121687.0], [89.8, 121704.0], [89.9, 121721.0], [90.0, 121739.0], [90.1, 121751.0], [90.2, 121762.0], [90.3, 121769.0], [90.4, 121782.0], [90.5, 121791.0], [90.6, 121804.0], [90.7, 121817.0], [90.8, 121827.0], [90.9, 121839.0], [91.0, 121850.0], [91.1, 121868.0], [91.2, 121881.0], [91.3, 121889.0], [91.4, 121908.0], [91.5, 121931.0], [91.6, 121957.0], [91.7, 121977.0], [91.8, 121998.0], [91.9, 122016.0], [92.0, 122039.0], [92.1, 122051.0], [92.2, 122071.0], [92.3, 122096.0], [92.4, 122127.0], [92.5, 122171.0], [92.6, 122203.0], [92.7, 122245.0], [92.8, 122275.0], [92.9, 123729.0], [93.0, 123740.0], [93.1, 123792.0], [93.2, 123988.0], [93.3, 125543.0], [93.4, 125604.0], [93.5, 125666.0], [93.6, 125717.0], [93.7, 128628.0], [93.8, 128693.0], [93.9, 130598.0], [94.0, 130705.0], [94.1, 130765.0], [94.2, 131032.0], [94.3, 131107.0], [94.4, 131194.0], [94.5, 134674.0], [94.6, 136827.0], [94.7, 162631.0], [94.8, 162649.0], [94.9, 162940.0], [95.0, 162956.0], [95.1, 162965.0], [95.2, 163265.0], [95.3, 205483.0], [95.4, 206216.0], [95.5, 206862.0], [95.6, 207587.0], [95.7, 208332.0], [95.8, 227858.0], [95.9, 228135.0], [96.0, 228197.0], [96.1, 228250.0], [96.2, 228334.0], [96.3, 228526.0], [96.4, 228686.0], [96.5, 228797.0], [96.6, 229156.0], [96.7, 237873.0], [96.8, 241357.0], [96.9, 242882.0], [97.0, 242974.0], [97.1, 243023.0], [97.2, 243048.0], [97.3, 243095.0], [97.4, 243124.0], [97.5, 243154.0], [97.6, 243185.0], [97.7, 243329.0], [97.8, 243431.0], [97.9, 243450.0], [98.0, 243542.0], [98.1, 243584.0], [98.2, 243626.0], [98.3, 243785.0], [98.4, 243848.0], [98.5, 243891.0], [98.6, 243945.0], [98.7, 243972.0], [98.8, 244016.0], [98.9, 244173.0], [99.0, 244207.0], [99.1, 244226.0], [99.2, 244249.0], [99.3, 244463.0], [99.4, 244518.0], [99.5, 244540.0], [99.6, 244619.0], [99.7, 244725.0], [99.8, 244838.0], [99.9, 244909.0]], "isOverall": false, "label": "Directors by name", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 1000.0, "maxY": 2842.0, "series": [{"data": [[205600.0, 10.0], [208800.0, 4.0], [228000.0, 12.0], [237600.0, 8.0], [240800.0, 2.0], [244000.0, 18.0], [206500.0, 4.0], [244900.0, 28.0], [66700.0, 2.0], [68300.0, 4.0], [71500.0, 4.0], [69900.0, 2.0], [76300.0, 2.0], [74700.0, 2.0], [79500.0, 6.0], [77900.0, 2.0], [81100.0, 36.0], [101900.0, 4.0], [105100.0, 6.0], [103500.0, 2.0], [109900.0, 6.0], [108300.0, 4.0], [111500.0, 4.0], [113100.0, 6.0], [116300.0, 2.0], [114700.0, 4.0], [121100.0, 262.0], [124300.0, 2.0], [130700.0, 58.0], [162600.0, 58.0], [204200.0, 4.0], [207400.0, 10.0], [32900.0, 396.0], [33700.0, 2.0], [34500.0, 10.0], [131500.0, 2.0], [134700.0, 10.0], [36100.0, 6.0], [36900.0, 2.0], [38500.0, 88.0], [37700.0, 52.0], [40100.0, 26.0], [40900.0, 1354.0], [42500.0, 10.0], [41700.0, 64.0], [44100.0, 2.0], [44900.0, 34.0], [43300.0, 6.0], [50500.0, 2.0], [208300.0, 8.0], [205100.0, 2.0], [243500.0, 80.0], [64900.0, 2.0], [64100.0, 2.0], [65800.0, 2.0], [67400.0, 2.0], [69000.0, 92.0], [70600.0, 2.0], [77000.0, 6.0], [80200.0, 12.0], [81800.0, 522.0], [86600.0, 30.0], [104200.0, 4.0], [102600.0, 2.0], [109000.0, 4.0], [107400.0, 8.0], [110600.0, 4.0], [112200.0, 10.0], [113800.0, 2.0], [115400.0, 2.0], [121800.0, 312.0], [206000.0, 2.0], [228400.0, 8.0], [241200.0, 16.0], [244400.0, 18.0], [1000.0, 10.0], [1100.0, 482.0], [1200.0, 182.0], [1300.0, 84.0], [1400.0, 196.0], [1500.0, 1332.0], [1600.0, 1802.0], [1700.0, 320.0], [1800.0, 70.0], [1900.0, 20.0], [2000.0, 24.0], [2100.0, 8.0], [2200.0, 10.0], [2300.0, 4.0], [2400.0, 26.0], [2500.0, 8.0], [2600.0, 16.0], [2800.0, 18.0], [2700.0, 18.0], [2900.0, 20.0], [3000.0, 14.0], [3100.0, 16.0], [3300.0, 206.0], [3200.0, 86.0], [206900.0, 4.0], [3400.0, 916.0], [3500.0, 2842.0], [3600.0, 414.0], [3700.0, 370.0], [3800.0, 24.0], [3900.0, 2.0], [4000.0, 2.0], [4300.0, 2.0], [68100.0, 2.0], [66500.0, 4.0], [4400.0, 4.0], [4600.0, 4.0], [69700.0, 4.0], [72900.0, 4.0], [71300.0, 4.0], [4800.0, 10.0], [76100.0, 2.0], [74500.0, 2.0], [77700.0, 20.0], [5100.0, 14.0], [4900.0, 14.0], [5200.0, 2.0], [82500.0, 12.0], [5400.0, 2.0], [5800.0, 16.0], [5700.0, 32.0], [90500.0, 28.0], [6000.0, 4.0], [6100.0, 14.0], [95300.0, 8.0], [6300.0, 22.0], [6200.0, 18.0], [6400.0, 22.0], [6600.0, 16.0], [6500.0, 16.0], [103300.0, 2.0], [104900.0, 2.0], [6900.0, 30.0], [6700.0, 30.0], [6800.0, 20.0], [108100.0, 8.0], [109700.0, 2.0], [7100.0, 34.0], [7000.0, 54.0], [112900.0, 10.0], [111300.0, 8.0], [114500.0, 4.0], [7200.0, 52.0], [7400.0, 32.0], [7300.0, 68.0], [116100.0, 2.0], [7500.0, 90.0], [7600.0, 46.0], [122500.0, 2.0], [120900.0, 164.0], [7700.0, 114.0], [7900.0, 106.0], [7800.0, 84.0], [125700.0, 32.0], [8000.0, 204.0], [8100.0, 56.0], [130500.0, 26.0], [8400.0, 34.0], [8200.0, 82.0], [8600.0, 624.0], [9000.0, 112.0], [9200.0, 40.0], [8800.0, 1698.0], [9400.0, 20.0], [9600.0, 6.0], [9800.0, 8.0], [10400.0, 2.0], [13000.0, 2.0], [12800.0, 2.0], [207800.0, 2.0], [14400.0, 2.0], [243000.0, 106.0], [15400.0, 4.0], [16400.0, 4.0], [24400.0, 4.0], [26400.0, 2.0], [26000.0, 4.0], [27200.0, 10.0], [28000.0, 2.0], [28400.0, 26.0], [28800.0, 110.0], [29200.0, 2.0], [30000.0, 40.0], [30800.0, 104.0], [31600.0, 2.0], [32000.0, 6.0], [32400.0, 58.0], [32800.0, 2056.0], [36000.0, 10.0], [38400.0, 34.0], [37600.0, 38.0], [40800.0, 664.0], [41600.0, 8.0], [42400.0, 40.0], [44000.0, 6.0], [44800.0, 2.0], [45600.0, 4.0], [50400.0, 2.0], [52800.0, 2.0], [52000.0, 2.0], [208700.0, 2.0], [205500.0, 2.0], [227900.0, 4.0], [237500.0, 2.0], [243900.0, 106.0], [65600.0, 4.0], [67200.0, 2.0], [73600.0, 2.0], [72000.0, 2.0], [70400.0, 4.0], [75200.0, 2.0], [80000.0, 4.0], [81600.0, 968.0], [104000.0, 4.0], [105600.0, 4.0], [110400.0, 4.0], [108800.0, 4.0], [107200.0, 4.0], [112000.0, 8.0], [113600.0, 4.0], [115200.0, 4.0], [121600.0, 48.0], [131200.0, 4.0], [163200.0, 6.0], [204800.0, 6.0], [208000.0, 2.0], [243200.0, 22.0], [135300.0, 2.0], [205700.0, 4.0], [208900.0, 2.0], [228100.0, 64.0], [237700.0, 12.0], [244100.0, 50.0], [68700.0, 2.0], [67100.0, 2.0], [70300.0, 2.0], [71900.0, 4.0], [73500.0, 2.0], [76700.0, 2.0], [79900.0, 28.0], [81500.0, 732.0], [83100.0, 2.0], [84700.0, 2.0], [102300.0, 2.0], [105500.0, 16.0], [103900.0, 2.0], [108700.0, 6.0], [110300.0, 6.0], [111900.0, 10.0], [113500.0, 2.0], [116700.0, 2.0], [115100.0, 2.0], [121500.0, 40.0], [206600.0, 6.0], [245000.0, 6.0], [33100.0, 196.0], [33900.0, 32.0], [137100.0, 2.0], [37900.0, 4.0], [39500.0, 6.0], [40300.0, 132.0], [41100.0, 548.0], [42700.0, 2.0], [41900.0, 2.0], [44300.0, 8.0], [45900.0, 4.0], [47500.0, 2.0], [204300.0, 2.0], [52300.0, 2.0], [207500.0, 4.0], [67800.0, 4.0], [66200.0, 2.0], [71000.0, 4.0], [77400.0, 96.0], [75800.0, 2.0], [79000.0, 2.0], [80600.0, 14.0], [82200.0, 138.0], [87000.0, 14.0], [103000.0, 2.0], [107800.0, 8.0], [109400.0, 4.0], [111000.0, 8.0], [112600.0, 2.0], [114200.0, 2.0], [119000.0, 2.0], [122200.0, 102.0], [123800.0, 30.0], [128600.0, 46.0], [208400.0, 4.0], [205200.0, 2.0], [237200.0, 2.0], [243600.0, 60.0], [209300.0, 2.0], [206100.0, 6.0], [228500.0, 28.0], [241300.0, 16.0], [244500.0, 96.0], [66900.0, 2.0], [70100.0, 2.0], [71700.0, 4.0], [73300.0, 2.0], [76500.0, 2.0], [79700.0, 2.0], [81300.0, 184.0], [90900.0, 2.0], [105300.0, 6.0], [103700.0, 2.0], [108500.0, 4.0], [110100.0, 6.0], [111700.0, 10.0], [113300.0, 4.0], [114900.0, 4.0], [121300.0, 264.0], [124500.0, 2.0], [130900.0, 8.0], [207000.0, 4.0], [22100.0, 2.0], [22500.0, 4.0], [24500.0, 14.0], [24100.0, 2.0], [23700.0, 4.0], [25300.0, 2.0], [24900.0, 2.0], [26500.0, 4.0], [25700.0, 2.0], [27300.0, 4.0], [26900.0, 4.0], [27700.0, 4.0], [28500.0, 4.0], [28100.0, 4.0], [28900.0, 56.0], [29300.0, 78.0], [30100.0, 2.0], [31300.0, 2.0], [32500.0, 274.0], [34600.0, 4.0], [33000.0, 100.0], [33800.0, 12.0], [131100.0, 48.0], [35400.0, 2.0], [38600.0, 2.0], [37800.0, 2.0], [39400.0, 34.0], [40200.0, 66.0], [41000.0, 366.0], [41800.0, 14.0], [42600.0, 24.0], [45000.0, 4.0], [44200.0, 4.0], [43400.0, 2.0], [46600.0, 2.0], [49800.0, 2.0], [204700.0, 2.0], [52200.0, 2.0], [207900.0, 10.0], [54600.0, 2.0], [243100.0, 114.0], [63400.0, 2.0], [65000.0, 2.0], [66000.0, 2.0], [67600.0, 6.0], [69200.0, 12.0], [70800.0, 2.0], [74000.0, 2.0], [75600.0, 2.0], [77200.0, 14.0], [80400.0, 4.0], [82000.0, 220.0], [88400.0, 2.0], [102800.0, 2.0], [104400.0, 8.0], [107600.0, 2.0], [109200.0, 2.0], [112400.0, 6.0], [110800.0, 8.0], [114000.0, 6.0], [115600.0, 4.0], [122000.0, 194.0], [118800.0, 46.0], [128400.0, 4.0], [136800.0, 26.0], [207200.0, 2.0], [134500.0, 4.0], [131300.0, 16.0], [208100.0, 6.0], [243300.0, 36.0], [69100.0, 26.0], [65900.0, 2.0], [70700.0, 4.0], [72300.0, 4.0], [75500.0, 2.0], [73900.0, 4.0], [77100.0, 12.0], [80300.0, 14.0], [81900.0, 276.0], [86700.0, 18.0], [102700.0, 2.0], [105900.0, 2.0], [107500.0, 4.0], [109100.0, 2.0], [112300.0, 8.0], [110700.0, 6.0], [113900.0, 2.0], [115500.0, 2.0], [118700.0, 12.0], [121900.0, 166.0], [209000.0, 2.0], [205800.0, 4.0], [228200.0, 58.0], [237800.0, 12.0], [244200.0, 122.0], [34100.0, 30.0], [36500.0, 2.0], [34900.0, 4.0], [35700.0, 64.0], [38900.0, 186.0], [37300.0, 2.0], [38100.0, 56.0], [40500.0, 62.0], [39700.0, 28.0], [42900.0, 2.0], [42100.0, 2.0], [41300.0, 86.0], [43700.0, 4.0], [44500.0, 2.0], [46900.0, 2.0], [45300.0, 2.0], [46100.0, 24.0], [47700.0, 2.0], [50100.0, 2.0], [49300.0, 2.0], [52500.0, 2.0], [206700.0, 6.0], [229100.0, 2.0], [245100.0, 12.0], [62900.0, 2.0], [65300.0, 2.0], [63700.0, 2.0], [66600.0, 2.0], [69800.0, 6.0], [71400.0, 2.0], [73000.0, 2.0], [76200.0, 2.0], [74600.0, 2.0], [77800.0, 8.0], [81000.0, 50.0], [90600.0, 30.0], [101800.0, 2.0], [105000.0, 2.0], [103400.0, 2.0], [108200.0, 2.0], [109800.0, 6.0], [111400.0, 8.0], [113000.0, 4.0], [116200.0, 6.0], [121000.0, 358.0], [130600.0, 30.0], [137200.0, 2.0], [204400.0, 4.0], [207600.0, 4.0], [242800.0, 26.0], [134900.0, 8.0], [147700.0, 2.0], [205300.0, 2.0], [208500.0, 2.0], [243700.0, 20.0], [67300.0, 4.0], [65700.0, 2.0], [68900.0, 28.0], [72100.0, 6.0], [70500.0, 4.0], [73700.0, 2.0], [75300.0, 2.0], [76900.0, 2.0], [80100.0, 4.0], [81700.0, 826.0], [83300.0, 2.0], [104100.0, 2.0], [102500.0, 4.0], [105700.0, 2.0], [108900.0, 8.0], [110500.0, 8.0], [107300.0, 2.0], [112100.0, 4.0], [113700.0, 8.0], [115300.0, 2.0], [121700.0, 302.0], [8500.0, 20.0], [8700.0, 616.0], [8300.0, 48.0], [9100.0, 24.0], [8900.0, 238.0], [9500.0, 70.0], [9700.0, 26.0], [9300.0, 8.0], [9900.0, 2.0], [10900.0, 2.0], [12700.0, 2.0], [12300.0, 2.0], [12900.0, 2.0], [206200.0, 8.0], [14300.0, 2.0], [228600.0, 20.0], [14700.0, 2.0], [15100.0, 2.0], [241400.0, 8.0], [244600.0, 38.0], [15500.0, 2.0], [15900.0, 2.0], [22200.0, 2.0], [24200.0, 4.0], [24600.0, 2.0], [25400.0, 4.0], [25000.0, 4.0], [26200.0, 4.0], [26600.0, 4.0], [25800.0, 2.0], [27000.0, 4.0], [27400.0, 2.0], [27800.0, 2.0], [29400.0, 6.0], [29000.0, 2.0], [29800.0, 2.0], [32600.0, 218.0], [33200.0, 14.0], [34000.0, 4.0], [136700.0, 2.0], [36400.0, 2.0], [38000.0, 28.0], [37200.0, 2.0], [38800.0, 2.0], [39600.0, 8.0], [40400.0, 126.0], [41200.0, 478.0], [42800.0, 6.0], [44400.0, 2.0], [43600.0, 2.0], [50800.0, 2.0], [53200.0, 2.0], [51600.0, 2.0], [207100.0, 10.0], [54000.0, 2.0], [65200.0, 2.0], [64400.0, 2.0], [66400.0, 2.0], [68000.0, 4.0], [69600.0, 2.0], [72800.0, 2.0], [74400.0, 2.0], [77600.0, 8.0], [80800.0, 4.0], [82400.0, 48.0], [95200.0, 18.0], [103200.0, 2.0], [104800.0, 2.0], [109600.0, 8.0], [108000.0, 6.0], [111200.0, 12.0], [112800.0, 8.0], [114400.0, 2.0], [116000.0, 2.0], [122400.0, 2.0], [120800.0, 86.0], [124000.0, 2.0], [125600.0, 68.0], [127200.0, 2.0], [206400.0, 4.0], [209600.0, 2.0], [228800.0, 32.0], [244800.0, 54.0], [136900.0, 8.0], [204100.0, 2.0], [207300.0, 4.0], [69500.0, 6.0], [66300.0, 4.0], [67900.0, 2.0], [71100.0, 2.0], [72700.0, 4.0], [74300.0, 2.0], [75900.0, 2.0], [77500.0, 58.0], [80700.0, 30.0], [82300.0, 130.0], [104700.0, 4.0], [103100.0, 2.0], [106300.0, 2.0], [109500.0, 6.0], [107900.0, 4.0], [112700.0, 10.0], [111100.0, 8.0], [114300.0, 8.0], [115900.0, 8.0], [122300.0, 4.0], [120700.0, 26.0], [123900.0, 2.0], [125500.0, 62.0], [128700.0, 10.0], [134600.0, 12.0], [131400.0, 2.0], [205000.0, 4.0], [208200.0, 4.0], [237000.0, 2.0], [243400.0, 60.0], [33500.0, 2.0], [34300.0, 2.0], [35100.0, 8.0], [35900.0, 26.0], [37500.0, 66.0], [38300.0, 94.0], [39100.0, 44.0], [40700.0, 112.0], [42300.0, 14.0], [41500.0, 24.0], [44700.0, 4.0], [43900.0, 10.0], [43100.0, 6.0], [45500.0, 2.0], [49500.0, 2.0], [205900.0, 8.0], [209100.0, 2.0], [228300.0, 40.0], [237900.0, 8.0], [63100.0, 2.0], [63900.0, 2.0], [65500.0, 2.0], [68600.0, 4.0], [67000.0, 2.0], [70200.0, 4.0], [73400.0, 2.0], [75000.0, 4.0], [79800.0, 28.0], [81400.0, 446.0], [102200.0, 2.0], [105400.0, 12.0], [103800.0, 4.0], [108600.0, 6.0], [110200.0, 4.0], [113400.0, 2.0], [111800.0, 8.0], [115000.0, 2.0], [121400.0, 192.0], [131000.0, 38.0], [206800.0, 6.0], [162900.0, 136.0], [204500.0, 2.0], [207700.0, 6.0], [242900.0, 44.0], [66100.0, 4.0], [67700.0, 2.0], [69300.0, 22.0], [70900.0, 2.0], [72500.0, 4.0], [74100.0, 2.0], [77300.0, 30.0], [78900.0, 2.0], [80500.0, 4.0], [82100.0, 114.0], [86900.0, 10.0], [104500.0, 2.0], [102900.0, 6.0], [109300.0, 6.0], [107700.0, 6.0], [110900.0, 8.0], [112500.0, 10.0], [115700.0, 2.0], [122100.0, 104.0], [118900.0, 54.0], [123700.0, 90.0], [125300.0, 2.0], [128500.0, 4.0], [131800.0, 2.0], [135000.0, 2.0], [208600.0, 8.0], [205400.0, 4.0], [227800.0, 4.0], [243800.0, 62.0], [23500.0, 2.0], [24300.0, 2.0], [25100.0, 6.0], [24700.0, 4.0], [25500.0, 2.0], [26300.0, 2.0], [27500.0, 6.0], [28300.0, 22.0], [27900.0, 2.0], [29100.0, 2.0], [28700.0, 4.0], [30700.0, 22.0], [29900.0, 2.0], [31100.0, 2.0], [32300.0, 20.0], [31900.0, 14.0], [32700.0, 1558.0], [34200.0, 18.0], [33400.0, 2.0], [35800.0, 6.0], [35000.0, 40.0], [37400.0, 24.0], [38200.0, 22.0], [39800.0, 54.0], [40600.0, 132.0], [39000.0, 128.0], [42200.0, 8.0], [43000.0, 2.0], [41400.0, 40.0], [46200.0, 4.0], [48600.0, 2.0], [49400.0, 2.0], [51000.0, 2.0], [52600.0, 2.0], [206300.0, 6.0], [228700.0, 36.0], [241500.0, 4.0], [244700.0, 22.0], [63000.0, 2.0], [64600.0, 2.0], [68400.0, 2.0], [73200.0, 2.0], [71600.0, 2.0], [74800.0, 2.0], [78000.0, 4.0], [81200.0, 110.0], [90800.0, 10.0], [103600.0, 6.0], [105200.0, 2.0], [108400.0, 8.0], [110000.0, 8.0], [111600.0, 4.0], [113200.0, 8.0], [114800.0, 2.0], [116400.0, 2.0], [121200.0, 182.0], [124400.0, 2.0], [126000.0, 2.0], [130800.0, 8.0]], "isOverall": false, "label": "Directors by name", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 245100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 962.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 37040.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 962.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 37040.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 3.4666666666666655, "minX": 1.71889788E12, "maxY": 400.0, "series": [{"data": [[1.71890256E12, 80.0], [1.7189016E12, 80.0], [1.71890226E12, 80.0], [1.71890196E12, 80.0], [1.71890262E12, 80.0], [1.71890166E12, 80.0], [1.71890232E12, 80.0], [1.71890202E12, 80.0], [1.71890268E12, 68.96249999999998], [1.71890172E12, 80.0], [1.71890238E12, 80.0], [1.71890208E12, 80.0], [1.71890178E12, 80.0], [1.71890244E12, 80.0], [1.71890148E12, 36.00000000000001], [1.71890214E12, 80.0], [1.71890184E12, 80.0], [1.7189025E12, 80.0], [1.71890154E12, 80.0], [1.7189022E12, 80.0], [1.7189019E12, 80.0]], "isOverall": false, "label": "Directors by name D", "isController": false}, {"data": [[1.71890046E12, 20.0], [1.71890076E12, 20.0], [1.7189013E12, 20.0], [1.71890106E12, 20.0], [1.7189004E12, 20.0], [1.7189007E12, 20.0], [1.71890136E12, 20.0], [1.718901E12, 20.0], [1.71890034E12, 19.935779816513747], [1.71890064E12, 20.0], [1.71890142E12, 20.0], [1.71890094E12, 20.0], [1.71890028E12, 10.041666666666666], [1.71890124E12, 20.0], [1.71890058E12, 20.0], [1.71890148E12, 20.0], [1.71890088E12, 20.0], [1.71890118E12, 20.0], [1.71890052E12, 20.0], [1.71890082E12, 20.0], [1.71890112E12, 20.0]], "isOverall": false, "label": "Directors by name C", "isController": false}, {"data": [[1.7188995E12, 10.0], [1.7188998E12, 10.0], [1.7189001E12, 10.0], [1.71889914E12, 9.992424242424239], [1.71889944E12, 10.0], [1.71889908E12, 6.071428571428571], [1.71889974E12, 10.0], [1.71890004E12, 10.0], [1.71889938E12, 10.0], [1.71889968E12, 10.0], [1.71889998E12, 10.0], [1.71890028E12, 10.0], [1.71889932E12, 10.0], [1.71889962E12, 10.0], [1.71889992E12, 10.0], [1.71889926E12, 10.0], [1.71890022E12, 10.0], [1.71889956E12, 10.0], [1.71889986E12, 10.0], [1.7188992E12, 10.0], [1.71890016E12, 10.0]], "isOverall": false, "label": "Directors by name B", "isController": false}, {"data": [[1.71889884E12, 5.0], [1.71889788E12, 3.4666666666666655], [1.71889854E12, 5.0], [1.71889848E12, 5.0], [1.71889818E12, 5.0], [1.71889908E12, 5.0], [1.71889812E12, 5.0], [1.71889878E12, 5.0], [1.71889872E12, 5.0], [1.71889842E12, 5.0], [1.71889836E12, 5.0], [1.71889902E12, 5.0], [1.71889806E12, 5.0], [1.71889896E12, 5.0], [1.718898E12, 5.0], [1.71889866E12, 5.0], [1.7188986E12, 5.0], [1.7188983E12, 5.0], [1.71889824E12, 5.0], [1.7188989E12, 5.0], [1.71889794E12, 5.0]], "isOverall": false, "label": "Directors by name A", "isController": false}, {"data": [[1.71890772E12, 400.0], [1.7189082E12, 400.0], [1.71890784E12, 400.0], [1.71890832E12, 400.0], [1.71890748E12, 400.0], [1.71890862E12, 64.22], [1.71890796E12, 400.0], [1.71890844E12, 400.0], [1.7189076E12, 400.0], [1.71890808E12, 400.0], [1.71890856E12, 252.0600000000001]], "isOverall": false, "label": "Directors by name G", "isController": false}, {"data": [[1.71890676E12, 200.0], [1.71890646E12, 200.0], [1.71890736E12, 101.56000000000002], [1.7189061E12, 41.0], [1.71890652E12, 200.0], [1.71890718E12, 200.0], [1.71890622E12, 200.0], [1.71890712E12, 200.0], [1.71890616E12, 195.54838709677415], [1.71890628E12, 200.0], [1.71890694E12, 200.0], [1.71890688E12, 200.0], [1.718907E12, 200.0], [1.7189067E12, 200.0], [1.71890664E12, 200.0], [1.7189073E12, 200.0], [1.71890634E12, 200.0]], "isOverall": false, "label": "Directors by name F", "isController": false}, {"data": [[1.71890322E12, 100.0], [1.71890352E12, 100.0], [1.71890292E12, 100.0], [1.71890358E12, 100.0], [1.71890388E12, 90.025], [1.71890328E12, 100.0], [1.71890298E12, 100.0], [1.71890268E12, 13.5], [1.71890334E12, 100.0], [1.71890364E12, 100.0], [1.71890304E12, 100.0], [1.7189037E12, 100.0], [1.71890274E12, 95.9247311827957], [1.7189031E12, 100.0], [1.7189034E12, 100.0], [1.7189028E12, 100.0], [1.71890346E12, 100.0], [1.71890376E12, 100.0], [1.71890316E12, 100.0], [1.71890382E12, 100.0], [1.71890286E12, 100.0]], "isOverall": false, "label": "Directors by name E", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71890862E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1181.5454545454545, "minX": 1.0, "maxY": 245132.0, "series": [{"data": [[2.0, 10150.333333333332], [3.0, 1181.5454545454545], [4.0, 10718.882352941177], [5.0, 1602.7591206735303], [6.0, 62010.31250000001], [7.0, 1481.5454545454547], [8.0, 20027.615384615383], [9.0, 28507.166666666664], [10.0, 3690.398104265407], [11.0, 17564.0], [12.0, 2096.5714285714284], [13.0, 69304.25], [14.0, 28813.333333333332], [15.0, 18727.6], [16.0, 26029.380952380954], [17.0, 110326.0], [18.0, 50853.200000000004], [19.0, 19486.833333333332], [20.0, 8452.968377823408], [21.0, 135867.33333333334], [23.0, 42780.0], [25.0, 56091.333333333336], [27.0, 81646.0], [30.0, 81729.0], [33.0, 51488.8], [34.0, 44989.5], [37.0, 8983.5], [36.0, 81726.0], [39.0, 81708.33333333333], [40.0, 7146.0], [41.0, 56001.333333333336], [42.0, 4839.0], [44.0, 9253.0], [45.0, 97940.8], [47.0, 162972.0], [46.0, 162948.5], [49.0, 12978.0], [48.0, 45077.0], [50.0, 108197.22222222222], [51.0, 32899.0], [53.0, 79014.33333333333], [52.0, 81649.0], [56.0, 83627.33333333334], [57.0, 89875.2], [59.0, 32492.5], [58.0, 76250.33333333333], [60.0, 83714.08333333333], [63.0, 66605.57142857143], [62.0, 57314.0], [66.0, 45084.25], [65.0, 38430.0], [64.0, 38429.0], [67.0, 138545.6], [71.0, 76243.0], [69.0, 72372.14285714286], [70.0, 36246.2], [68.0, 162939.0], [75.0, 58671.33333333333], [72.0, 81725.83333333334], [73.0, 9143.0], [74.0, 162959.0], [78.0, 102070.5], [77.0, 108765.66666666666], [79.0, 162632.0], [76.0, 162908.3333333333], [80.0, 32537.02116212338], [82.0, 41191.0], [81.0, 73611.0], [87.0, 41193.0], [86.0, 114251.0], [84.0, 41162.8], [85.0, 81628.0], [90.0, 31681.5], [89.0, 73573.20000000001], [92.0, 52060.0], [94.0, 41202.5], [99.0, 41123.0], [97.0, 41193.0], [96.0, 68170.16666666667], [100.0, 41864.56225611913], [103.0, 106066.79999999999], [102.0, 81720.0], [106.0, 101962.33333333334], [107.0, 122296.0], [110.0, 81672.25], [111.0, 163128.33333333334], [108.0, 122263.0], [112.0, 95187.0], [115.0, 163204.33333333334], [116.0, 81646.75], [117.0, 122272.0], [123.0, 81658.5], [121.0, 81678.0], [120.0, 116578.0], [122.0, 122268.5], [127.0, 81656.0], [124.0, 81573.0], [125.0, 163144.33333333334], [135.0, 122422.66666666667], [132.0, 122341.33333333334], [129.0, 138642.2], [128.0, 81533.0], [142.0, 81618.66666666667], [139.0, 116527.85714285713], [143.0, 122264.0], [140.0, 245132.0], [138.0, 122266.0], [149.0, 81585.75], [145.0, 81535.0], [150.0, 122219.24999999999], [146.0, 163097.3333333333], [157.0, 136005.0], [153.0, 81561.25], [158.0, 245110.0], [154.0, 183540.5], [152.0, 244960.5], [165.0, 149536.33333333334], [164.0, 81608.0], [161.0, 134095.7142857143], [167.0, 183617.5], [163.0, 183676.5], [172.0, 81642.66666666666], [169.0, 115558.66666666666], [174.0, 162981.66666666666], [171.0, 122164.0], [170.0, 244978.0], [183.0, 114193.8], [179.0, 122289.83333333334], [176.0, 95117.33333333334], [182.0, 122076.0], [181.0, 183431.0], [189.0, 133562.8333333333], [187.0, 81605.25000000001], [190.0, 244694.0], [186.0, 183515.5], [184.0, 122118.0], [199.0, 142586.25], [198.0, 81630.0], [197.0, 81531.0], [196.0, 89630.8], [192.0, 81594.66666666667], [195.0, 122043.0], [194.0, 122110.0], [193.0, 203886.66666666666], [200.0, 80859.13634732655], [206.0, 244643.0], [205.0, 163005.6666666667], [202.0, 244806.0], [215.0, 183346.0], [213.0, 152774.75], [209.0, 244653.0], [208.0, 122080.0], [221.0, 122028.24999999999], [217.0, 122029.5], [229.0, 152757.75], [225.0, 152754.25], [237.0, 183406.5], [233.0, 183454.75], [244.0, 162915.0], [241.0, 122016.5], [253.0, 183472.0], [251.0, 162983.33333333334], [248.0, 152734.75], [271.0, 183317.5], [267.0, 162950.0], [265.0, 121999.0], [263.0, 203840.66666666666], [260.0, 122017.33333333333], [257.0, 152653.0], [287.0, 162856.3333333333], [284.0, 183307.75], [280.0, 203756.66666666666], [277.0, 162962.33333333334], [274.0, 122037.0], [273.0, 121978.0], [303.0, 152617.75], [299.0, 121970.33333333333], [298.0, 121949.0], [295.0, 183441.24999999997], [291.0, 162920.3333333333], [288.0, 122049.0], [318.0, 121989.5], [314.0, 213920.75000000003], [310.0, 183322.75], [306.0, 203867.66666666666], [335.0, 121950.0], [333.0, 121975.0], [332.0, 121949.5], [330.0, 183397.0], [329.0, 244768.0], [328.0, 121985.0], [326.0, 152593.0], [322.0, 183339.5], [351.0, 244808.0], [350.0, 121957.0], [349.0, 121937.5], [347.0, 183246.0], [343.0, 152655.5], [339.0, 152609.75], [367.0, 162871.0], [365.0, 244516.0], [363.0, 183216.0], [362.0, 121864.0], [360.0, 244501.0], [359.0, 121950.0], [358.0, 121950.0], [355.0, 121912.5], [353.0, 183361.0], [380.0, 121870.0], [379.0, 183176.5], [377.0, 121846.0], [376.0, 121886.25], [372.0, 121832.0], [371.0, 121885.33333333333], [368.0, 121930.0], [400.0, 155565.20561092693], [1.0, 21450.75]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[122.62359875795946, 50795.66380716794]], "isOverall": false, "label": "Directors by name-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 400.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 16.1, "minX": 1.71889788E12, "maxY": 11938.733333333334, "series": [{"data": [[1.71889884E12, 4640.1], [1.71890226E12, 3380.4333333333334], [1.71890772E12, 11445.4], [1.71890106E12, 4565.033333333334], [1.71890328E12, 7500.933333333333], [1.71890652E12, 7493.333333333333], [1.71890004E12, 5397.8], [1.71889902E12, 4465.166666666667], [1.71890124E12, 4974.333333333333], [1.71890244E12, 6030.433333333333], [1.71890688E12, 7456.066666666667], [1.718898E12, 5043.5], [1.71890022E12, 5019.5], [1.71890346E12, 7877.433333333333], [1.7189067E12, 7388.366666666667], [1.7188992E12, 5089.633333333333], [1.7188995E12, 5074.9], [1.71889848E12, 4667.9], [1.71890292E12, 7508.866666666667], [1.71890736E12, 6964.866666666667], [1.7189007E12, 4969.666666666667], [1.71890718E12, 7690.766666666666], [1.71890172E12, 5918.033333333334], [1.71890616E12, 1135.1333333333334], [1.71889968E12, 5361.633333333333], [1.71890208E12, 6094.366666666667], [1.71889866E12, 4078.233333333333], [1.71890088E12, 4488.6], [1.7189031E12, 3753.866666666667], [1.71889986E12, 5580.666666666667], [1.7189019E12, 6019.466666666666], [1.71890634E12, 7966.133333333333], [1.71890856E12, 11136.233333333334], [1.71890256E12, 5947.566666666667], [1.71890358E12, 7702.033333333334], [1.71889914E12, 4980.333333333333], [1.71889812E12, 4076.0333333333333], [1.71890136E12, 4583.9], [1.71890034E12, 4092.633333333333], [1.71890238E12, 6040.733333333334], [1.71890274E12, 3417.2], [1.71889932E12, 4904.9], [1.7189082E12, 11226.633333333333], [1.718907E12, 7691.233333333334], [1.7188983E12, 4675.3], [1.71890052E12, 5819.066666666667], [1.71890154E12, 5148.066666666667], [1.71890376E12, 8023.1], [1.71890322E12, 3749.0666666666666], [1.7188998E12, 5895.2], [1.71890646E12, 7709.866666666667], [1.71890748E12, 10592.966666666667], [1.71889878E12, 4755.733333333334], [1.718901E12, 4523.933333333333], [1.71890202E12, 2894.5], [1.71889998E12, 5108.233333333334], [1.71889896E12, 4164.6], [1.7189034E12, 3765.5], [1.71890784E12, 11938.733333333334], [1.71890118E12, 4778.0], [1.71890664E12, 7395.9], [1.7189022E12, 6243.1], [1.71889794E12, 4847.266666666666], [1.71890016E12, 5369.366666666667], [1.71890046E12, 5523.966666666666], [1.71889944E12, 4900.933333333333], [1.71890166E12, 5988.5], [1.71890388E12, 7529.466666666666], [1.7189061E12, 109.36666666666666], [1.71890832E12, 11143.733333333334], [1.71890268E12, 6249.0], [1.71890712E12, 7378.533333333334], [1.71889842E12, 4320.866666666667], [1.71890064E12, 5801.433333333333], [1.71890304E12, 7415.166666666667], [1.71890628E12, 7334.533333333334], [1.71889962E12, 4952.033333333334], [1.7188986E12, 4505.7], [1.71890184E12, 6050.533333333334], [1.71890082E12, 4961.433333333333], [1.71890286E12, 3917.733333333333], [1.7189073E12, 7667.0], [1.71890676E12, 7393.533333333334], [1.71889788E12, 1125.4666666666667], [1.7189013E12, 4629.666666666667], [1.71890352E12, 4260.866666666667], [1.7189001E12, 5875.2], [1.71889908E12, 4470.8], [1.71890232E12, 6924.9], [1.71890334E12, 3583.4666666666667], [1.7189037E12, 4569.0], [1.71890028E12, 5114.8], [1.71890694E12, 7544.266666666666], [1.71889806E12, 4059.2], [1.71890148E12, 4088.266666666667], [1.71889926E12, 5064.4], [1.7189025E12, 3015.5333333333333], [1.71890796E12, 11656.333333333334], [1.71889824E12, 4275.8], [1.71889854E12, 4328.8], [1.71890076E12, 4831.466666666666], [1.71890196E12, 5963.9], [1.71889974E12, 5231.933333333333], [1.71890298E12, 3694.4], [1.71890622E12, 5816.033333333334], [1.71890844E12, 11122.533333333333], [1.71889872E12, 5117.466666666666], [1.71890094E12, 4501.633333333333], [1.71889992E12, 5670.2], [1.71890214E12, 6630.1], [1.71890862E12, 3706.0333333333333], [1.71890316E12, 7584.166666666667], [1.7188989E12, 4596.833333333333], [1.71890112E12, 4548.666666666667], [1.7189076E12, 11118.633333333333], [1.7189016E12, 5513.266666666666], [1.71889818E12, 4081.4], [1.7189004E12, 4903.4], [1.71890262E12, 5955.433333333333], [1.71889938E12, 5072.133333333333], [1.71890142E12, 4547.733333333334], [1.71890364E12, 4152.133333333333], [1.71890808E12, 11372.7], [1.71889836E12, 4837.6], [1.71890178E12, 2982.633333333333], [1.71890058E12, 4722.333333333333], [1.7189028E12, 6005.233333333334], [1.71889956E12, 4846.833333333333], [1.71890382E12, 3785.8]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71889884E12, 595.9666666666667], [1.71890226E12, 423.96666666666664], [1.71890772E12, 1567.8], [1.71890106E12, 640.4], [1.71890328E12, 1091.0], [1.71890652E12, 1092.8], [1.71890004E12, 703.9666666666667], [1.71889902E12, 584.6], [1.71890124E12, 640.5333333333333], [1.71890244E12, 855.3], [1.71890688E12, 1046.4666666666667], [1.718898E12, 675.5666666666667], [1.71890022E12, 695.0666666666667], [1.71890346E12, 1072.0666666666666], [1.7189067E12, 1041.8666666666666], [1.7188992E12, 696.7333333333333], [1.7188995E12, 702.0666666666667], [1.71889848E12, 553.5333333333333], [1.71890292E12, 1084.1333333333334], [1.71890736E12, 1082.8], [1.7189007E12, 642.7], [1.71890718E12, 1055.6], [1.71890172E12, 837.1333333333333], [1.71890616E12, 165.96666666666667], [1.71889968E12, 698.3333333333334], [1.71890208E12, 862.1666666666666], [1.71889866E12, 560.3666666666667], [1.71890088E12, 635.7], [1.7189031E12, 526.8], [1.71889986E12, 695.4666666666667], [1.7189019E12, 854.0666666666667], [1.71890634E12, 1070.9333333333334], [1.71890856E12, 1566.0], [1.71890256E12, 870.6666666666666], [1.71890358E12, 1071.7], [1.71889914E12, 705.5], [1.71889812E12, 558.7666666666667], [1.71890136E12, 642.8], [1.71890034E12, 580.4], [1.71890238E12, 849.6333333333333], [1.71890274E12, 496.5], [1.71889932E12, 643.6333333333333], [1.7189082E12, 1621.2], [1.718907E12, 1066.2], [1.7188983E12, 559.4], [1.71890052E12, 791.9333333333333], [1.71890154E12, 731.3], [1.71890376E12, 1073.7333333333333], [1.71890322E12, 533.1333333333333], [1.7188998E12, 650.7], [1.71890646E12, 1091.9333333333334], [1.71890748E12, 1550.9666666666667], [1.71889878E12, 564.9], [1.718901E12, 638.4666666666667], [1.71890202E12, 431.6], [1.71889998E12, 644.2], [1.71889896E12, 556.6333333333333], [1.7189034E12, 540.3666666666667], [1.71890784E12, 1616.9], [1.71890118E12, 637.4333333333333], [1.71890664E12, 1068.0], [1.7189022E12, 855.6333333333333], [1.71889794E12, 674.9], [1.71890016E12, 637.3666666666667], [1.71890046E12, 759.0666666666667], [1.71889944E12, 692.3333333333334], [1.71890166E12, 864.1333333333333], [1.71890388E12, 1067.3], [1.7189061E12, 16.1], [1.71890832E12, 1594.0], [1.71890268E12, 897.1], [1.71890712E12, 1066.4], [1.71889842E12, 555.5333333333333], [1.71890064E12, 778.4666666666667], [1.71890304E12, 1042.7666666666667], [1.71890628E12, 1020.8333333333334], [1.71889962E12, 699.0666666666667], [1.7188986E12, 585.5], [1.71890184E12, 847.5666666666667], [1.71890082E12, 638.6333333333333], [1.71890286E12, 541.1], [1.7189073E12, 1114.5333333333333], [1.71890676E12, 1040.1333333333334], [1.71889788E12, 159.66666666666666], [1.7189013E12, 647.3], [1.71890352E12, 541.0], [1.7189001E12, 684.1], [1.71889908E12, 543.8], [1.71890232E12, 858.9], [1.71890334E12, 540.0666666666667], [1.7189037E12, 532.0666666666667], [1.71890028E12, 681.8666666666667], [1.71890694E12, 1059.2], [1.71889806E12, 563.3666666666667], [1.71890148E12, 568.8666666666667], [1.71889926E12, 697.5666666666667], [1.7189025E12, 432.4], [1.71890796E12, 1632.0], [1.71889824E12, 560.3], [1.71889854E12, 563.2], [1.71890076E12, 644.2666666666667], [1.71890196E12, 873.6666666666666], [1.71889974E12, 691.8], [1.71890298E12, 527.1333333333333], [1.71890622E12, 852.9], [1.71890844E12, 1574.8333333333333], [1.71889872E12, 557.5666666666667], [1.71890094E12, 638.8333333333334], [1.71889992E12, 706.2333333333333], [1.71890214E12, 861.3333333333334], [1.71890862E12, 521.5666666666667], [1.71890316E12, 1064.7666666666667], [1.7188989E12, 558.0333333333333], [1.71890112E12, 638.0666666666667], [1.7189076E12, 1572.2], [1.7189016E12, 762.8666666666667], [1.71889818E12, 563.8333333333334], [1.7189004E12, 697.8], [1.71890262E12, 854.1333333333333], [1.71889938E12, 690.1], [1.71890142E12, 645.2333333333333], [1.71890364E12, 530.5666666666667], [1.71890808E12, 1635.3333333333333], [1.71889836E12, 590.5666666666667], [1.71890178E12, 418.6333333333333], [1.71890058E12, 681.6], [1.7189028E12, 831.7333333333333], [1.71889956E12, 641.5666666666667], [1.71890382E12, 529.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71890862E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1183.8174603174614, "minX": 1.71889788E12, "maxY": 162955.9799999998, "series": [{"data": [[1.71889884E12, 1551.3693693693685], [1.71890226E12, 32929.06250000001], [1.71890772E12, 160416.1066666665], [1.71890106E12, 8819.133333333322], [1.71890328E12, 40731.775000000016], [1.71890652E12, 81716.71500000007], [1.71890004E12, 3369.6691729323306], [1.71889902E12, 1606.1818181818185], [1.71890124E12, 8802.291666666664], [1.71890244E12, 32793.20625], [1.71890688E12, 81711.32999999996], [1.718898E12, 1189.2698412698412], [1.71890022E12, 3475.5648854961855], [1.71890346E12, 40991.17499999998], [1.7189067E12, 81811.93500000006], [1.7188992E12, 3542.353846153847], [1.7188995E12, 3393.363636363636], [1.71889848E12, 1659.190476190476], [1.71890292E12, 39430.80999999996], [1.71890736E12, 81670.75000000006], [1.7189007E12, 8637.15000000001], [1.71890718E12, 81653.27], [1.71890172E12, 32651.500000000004], [1.71890616E12, 46699.35483870969], [1.71889968E12, 3458.5343511450383], [1.71890208E12, 32819.199999999975], [1.71889866E12, 1631.5523809523809], [1.71890088E12, 8811.116666666663], [1.7189031E12, 39727.16000000001], [1.71889986E12, 3540.1230769230783], [1.7189019E12, 32771.675], [1.71890634E12, 81346.17999999998], [1.71890856E12, 162955.9799999998], [1.71890256E12, 32796.45625000002], [1.71890358E12, 41188.86999999998], [1.71889914E12, 3179.757575757577], [1.71889812E12, 1676.3047619047632], [1.71890136E12, 8852.408333333338], [1.71890034E12, 9167.366972477064], [1.71890238E12, 32946.087500000016], [1.71890274E12, 34266.27956989246], [1.71889932E12, 3528.1916666666675], [1.7189082E12, 161892.27333333332], [1.718907E12, 81516.64500000006], [1.7188983E12, 1650.5523809523804], [1.71890052E12, 7146.648648648643], [1.71890154E12, 30221.666666666664], [1.71890376E12, 40849.85], [1.71890322E12, 40916.21999999997], [1.7188998E12, 3409.5327868852464], [1.71890646E12, 81740.86999999997], [1.71890748E12, 110138.63321799305], [1.71889878E12, 1596.2169811320762], [1.718901E12, 8800.350000000004], [1.71890202E12, 32821.237499999996], [1.71889998E12, 3453.319672131148], [1.71889896E12, 1600.5714285714282], [1.7189034E12, 40942.19000000001], [1.71890784E12, 158002.8099999999], [1.71890118E12, 8749.650000000001], [1.71890664E12, 81377.72000000004], [1.7189022E12, 32830.71875000002], [1.71889794E12, 1183.8174603174614], [1.71890016E12, 3561.183333333334], [1.71890046E12, 7145.326241134752], [1.71889944E12, 3525.7769230769245], [1.71890166E12, 31900.11250000001], [1.71890388E12, 41019.425000000025], [1.7189061E12, 4647.333333333333], [1.71890832E12, 161689.19666666663], [1.71890268E12, 31357.404761904763], [1.71890712E12, 81945.34500000007], [1.71889842E12, 1648.8666666666663], [1.71890064E12, 7612.517241379311], [1.71890304E12, 39523.02500000003], [1.71890628E12, 82383.1421319797], [1.71889962E12, 3511.0230769230775], [1.7188986E12, 1626.1454545454546], [1.71890184E12, 32898.21250000002], [1.71890082E12, 8773.141666666666], [1.71890286E12, 39871.580000000016], [1.7189073E12, 82254.84999999999], [1.71890676E12, 81653.06000000013], [1.71889788E12, 1188.8], [1.7189013E12, 8835.183333333334], [1.71890352E12, 40982.67], [1.7189001E12, 3558.1615384615384], [1.71889908E12, 1564.245098039216], [1.71890232E12, 32774.33749999995], [1.71890334E12, 41226.82000000001], [1.7189037E12, 41072.77999999995], [1.71890028E12, 3073.9765625000036], [1.71890694E12, 81574.50000000003], [1.71889806E12, 1567.9716981132076], [1.71890148E12, 8903.16822429907], [1.71889926E12, 3534.6846153846163], [1.7189025E12, 32800.287500000006], [1.71890796E12, 162707.58999999994], [1.71889824E12, 1632.5238095238092], [1.71889854E12, 1561.8113207547176], [1.71890076E12, 8766.883333333333], [1.71890196E12, 32810.55], [1.71889974E12, 3510.299999999999], [1.71890298E12, 39378.33000000001], [1.71890622E12, 71231.1006289308], [1.71890844E12, 162440.61999999997], [1.71889872E12, 1634.9714285714288], [1.71890094E12, 8766.05], [1.71889992E12, 3498.5954198473282], [1.71890214E12, 32810.50624999998], [1.71890862E12, 162872.09000000005], [1.71890316E12, 40890.37500000002], [1.7188989E12, 1648.8952380952383], [1.71890112E12, 8783.633333333335], [1.7189076E12, 158009.26999999996], [1.7189016E12, 31067.33802816902], [1.71889818E12, 1637.0285714285717], [1.7189004E12, 8241.694656488555], [1.71890262E12, 32795.83124999998], [1.71889938E12, 3543.276923076925], [1.71890142E12, 8783.691666666664], [1.71890364E12, 41221.68000000001], [1.71890808E12, 162097.69333333336], [1.71889836E12, 1602.2090909090912], [1.71890178E12, 32574.175000000007], [1.71890058E12, 7512.094488188976], [1.7189028E12, 39613.854430379775], [1.71889956E12, 3543.608333333334], [1.71890382E12, 40921.75000000004]], "isOverall": false, "label": "Directors by name", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71890862E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1183.761904761904, "minX": 1.71889788E12, "maxY": 162955.97666666665, "series": [{"data": [[1.71889884E12, 1551.351351351351], [1.71890226E12, 32929.06250000001], [1.71890772E12, 160416.1066666665], [1.71890106E12, 8819.133333333322], [1.71890328E12, 40731.775000000016], [1.71890652E12, 81716.71500000007], [1.71890004E12, 3369.6691729323306], [1.71889902E12, 1606.1636363636364], [1.71890124E12, 8802.283333333333], [1.71890244E12, 32793.20625], [1.71890688E12, 81711.32999999996], [1.718898E12, 1189.2619047619057], [1.71890022E12, 3475.5648854961855], [1.71890346E12, 40991.17499999998], [1.7189067E12, 81811.93500000006], [1.7188992E12, 3542.353846153847], [1.7188995E12, 3393.3560606060605], [1.71889848E12, 1659.190476190476], [1.71890292E12, 39430.80999999996], [1.71890736E12, 81670.74500000007], [1.7189007E12, 8637.15000000001], [1.71890718E12, 81653.26500000001], [1.71890172E12, 32651.500000000004], [1.71890616E12, 46699.35483870969], [1.71889968E12, 3458.5343511450383], [1.71890208E12, 32819.19375], [1.71889866E12, 1631.5428571428565], [1.71890088E12, 8811.116666666663], [1.7189031E12, 39727.16000000001], [1.71889986E12, 3540.1076923076926], [1.7189019E12, 32771.675], [1.71890634E12, 81346.17999999998], [1.71890856E12, 162955.97666666665], [1.71890256E12, 32796.45625000002], [1.71890358E12, 41188.86999999998], [1.71889914E12, 3179.757575757577], [1.71889812E12, 1676.3047619047632], [1.71890136E12, 8852.408333333338], [1.71890034E12, 9167.34862385321], [1.71890238E12, 32946.087500000016], [1.71890274E12, 34266.27956989246], [1.71889932E12, 3528.1833333333316], [1.7189082E12, 161892.26666666658], [1.718907E12, 81516.63499999998], [1.7188983E12, 1650.5523809523804], [1.71890052E12, 7146.6418918918935], [1.71890154E12, 30221.666666666664], [1.71890376E12, 40849.83500000002], [1.71890322E12, 40916.21999999997], [1.7188998E12, 3409.5163934426223], [1.71890646E12, 81740.86999999997], [1.71890748E12, 110138.6297577855], [1.71889878E12, 1596.2169811320762], [1.718901E12, 8800.350000000004], [1.71890202E12, 32821.237499999996], [1.71889998E12, 3453.319672131148], [1.71889896E12, 1600.5714285714282], [1.7189034E12, 40942.18000000001], [1.71890784E12, 158002.8033333333], [1.71890118E12, 8749.64166666667], [1.71890664E12, 81377.70999999998], [1.7189022E12, 32830.71875000002], [1.71889794E12, 1183.761904761904], [1.71890016E12, 3561.149999999999], [1.71890046E12, 7145.326241134752], [1.71889944E12, 3525.7769230769245], [1.71890166E12, 31900.11250000001], [1.71890388E12, 41019.425000000025], [1.7189061E12, 4647.333333333333], [1.71890832E12, 161689.19666666663], [1.71890268E12, 31357.404761904763], [1.71890712E12, 81945.33000000006], [1.71889842E12, 1648.8476190476197], [1.71890064E12, 7612.510344827585], [1.71890304E12, 39523.02500000003], [1.71890628E12, 82383.12182741116], [1.71889962E12, 3511.0230769230775], [1.7188986E12, 1626.1454545454546], [1.71890184E12, 32898.21250000002], [1.71890082E12, 8773.133333333337], [1.71890286E12, 39871.580000000016], [1.7189073E12, 82254.84999999999], [1.71890676E12, 81653.06000000013], [1.71889788E12, 1188.8], [1.7189013E12, 8835.175], [1.71890352E12, 40982.67], [1.7189001E12, 3558.146153846155], [1.71889908E12, 1564.245098039216], [1.71890232E12, 32774.331250000025], [1.71890334E12, 41226.82000000001], [1.7189037E12, 41072.76999999999], [1.71890028E12, 3073.9765625000036], [1.71890694E12, 81574.48999999999], [1.71889806E12, 1567.9716981132076], [1.71890148E12, 8903.16822429907], [1.71889926E12, 3534.66923076923], [1.7189025E12, 32800.287500000006], [1.71890796E12, 162707.58999999994], [1.71889824E12, 1632.5238095238092], [1.71889854E12, 1561.8113207547176], [1.71890076E12, 8766.883333333333], [1.71890196E12, 32810.55], [1.71889974E12, 3510.299999999999], [1.71890298E12, 39378.33000000001], [1.71890622E12, 71231.0880503144], [1.71890844E12, 162440.61999999997], [1.71889872E12, 1634.9714285714288], [1.71890094E12, 8766.05], [1.71889992E12, 3498.5954198473282], [1.71890214E12, 32810.50624999998], [1.71890862E12, 162872.08000000002], [1.71890316E12, 40890.37500000002], [1.7188989E12, 1648.8952380952383], [1.71890112E12, 8783.633333333335], [1.7189076E12, 158009.26999999996], [1.7189016E12, 31067.33802816902], [1.71889818E12, 1637.0285714285717], [1.7189004E12, 8241.694656488555], [1.71890262E12, 32795.83124999998], [1.71889938E12, 3543.2692307692305], [1.71890142E12, 8783.691666666664], [1.71890364E12, 41221.68000000001], [1.71890808E12, 162097.69333333336], [1.71889836E12, 1602.1818181818176], [1.71890178E12, 32574.175000000007], [1.71890058E12, 7512.094488188976], [1.7189028E12, 39613.854430379775], [1.71889956E12, 3543.608333333334], [1.71890382E12, 40921.75000000004]], "isOverall": false, "label": "Directors by name", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71890862E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 1.2380952380952381, "minX": 1.71889788E12, "maxY": 95.575, "series": [{"data": [[1.71889884E12, 1.549549549549548], [1.71890226E12, 11.349999999999994], [1.71890772E12, 87.52333333333341], [1.71890106E12, 3.3166666666666678], [1.71890328E12, 28.955000000000016], [1.71890652E12, 58.67999999999997], [1.71890004E12, 3.2255639097744413], [1.71889902E12, 1.50909090909091], [1.71890124E12, 6.191666666666668], [1.71890244E12, 95.575], [1.71890688E12, 49.60000000000002], [1.718898E12, 1.801587301587302], [1.71890022E12, 4.839694656488544], [1.71890346E12, 19.35999999999999], [1.7189067E12, 55.18499999999997], [1.7188992E12, 2.576923076923076], [1.7188995E12, 3.0227272727272734], [1.71889848E12, 1.7238095238095232], [1.71890292E12, 17.204999999999984], [1.71890736E12, 50.04000000000003], [1.7189007E12, 6.216666666666665], [1.71890718E12, 52.644999999999946], [1.71890172E12, 16.94375], [1.71890616E12, 35.54838709677419], [1.71889968E12, 3.114503816793893], [1.71890208E12, 17.0], [1.71889866E12, 1.619047619047619], [1.71890088E12, 5.658333333333332], [1.7189031E12, 18.700000000000006], [1.71889986E12, 2.6076923076923064], [1.7189019E12, 19.56250000000001], [1.71890634E12, 33.79999999999998], [1.71890856E12, 51.33666666666662], [1.71890256E12, 17.625000000000025], [1.71890358E12, 17.41500000000001], [1.71889914E12, 3.9772727272727284], [1.71889812E12, 1.5999999999999996], [1.71890136E12, 7.0666666666666655], [1.71890034E12, 4.431192660550459], [1.71890238E12, 64.375], [1.71890274E12, 30.75268817204301], [1.71889932E12, 2.6416666666666657], [1.7189082E12, 38.80000000000002], [1.718907E12, 38.69500000000002], [1.7188983E12, 1.3809523809523812], [1.71890052E12, 4.614864864864869], [1.71890154E12, 16.88405797101451], [1.71890376E12, 17.43499999999999], [1.71890322E12, 15.650000000000002], [1.7188998E12, 4.303278688524593], [1.71890646E12, 45.784999999999975], [1.71890748E12, 37.041522491349546], [1.71889878E12, 1.5849056603773604], [1.718901E12, 5.741666666666669], [1.71890202E12, 22.4125], [1.71889998E12, 3.0327868852459017], [1.71889896E12, 2.8095238095238093], [1.7189034E12, 15.120000000000001], [1.71890784E12, 35.54333333333331], [1.71890118E12, 6.025000000000001], [1.71890664E12, 47.05000000000006], [1.7189022E12, 17.46249999999998], [1.71889794E12, 1.3174603174603174], [1.71890016E12, 4.066666666666668], [1.71890046E12, 4.354609929078013], [1.71889944E12, 2.684615384615384], [1.71890166E12, 18.243749999999995], [1.71890388E12, 20.060000000000006], [1.7189061E12, 77.33333333333334], [1.71890832E12, 36.2633333333333], [1.71890268E12, 18.797619047619047], [1.71890712E12, 41.24500000000001], [1.71889842E12, 1.647619047619048], [1.71890064E12, 4.662068965517244], [1.71890304E12, 17.625000000000014], [1.71890628E12, 35.29949238578682], [1.71889962E12, 2.5846153846153883], [1.7188986E12, 1.854545454545456], [1.71890184E12, 50.83749999999998], [1.71890082E12, 7.933333333333334], [1.71890286E12, 32.550000000000004], [1.7189073E12, 34.860000000000035], [1.71890676E12, 36.714999999999996], [1.71889788E12, 6.533333333333334], [1.7189013E12, 5.558333333333334], [1.71890352E12, 18.960000000000004], [1.7189001E12, 2.576923076923079], [1.71889908E12, 4.431372549019608], [1.71890232E12, 16.875000000000004], [1.71890334E12, 18.690000000000015], [1.7189037E12, 20.09999999999999], [1.71890028E12, 6.117187500000001], [1.71890694E12, 34.72499999999999], [1.71889806E12, 1.6603773584905668], [1.71890148E12, 38.05607476635514], [1.71889926E12, 2.7846153846153854], [1.7189025E12, 22.725000000000005], [1.71890796E12, 39.14333333333341], [1.71889824E12, 1.5714285714285718], [1.71889854E12, 1.2452830188679245], [1.71890076E12, 5.558333333333331], [1.71890196E12, 19.456249999999994], [1.71889974E12, 2.7384615384615376], [1.71890298E12, 16.590000000000003], [1.71890622E12, 38.32075471698114], [1.71890844E12, 36.52000000000003], [1.71889872E12, 1.2380952380952381], [1.71890094E12, 4.383333333333335], [1.71889992E12, 3.4198473282442765], [1.71890214E12, 17.599999999999998], [1.71890862E12, 53.38], [1.71890316E12, 17.209999999999987], [1.7188989E12, 1.752380952380951], [1.71890112E12, 5.616666666666668], [1.7189076E12, 86.43333333333322], [1.7189016E12, 23.183098591549296], [1.71889818E12, 1.428571428571429], [1.7189004E12, 6.404580152671758], [1.71890262E12, 19.556250000000006], [1.71889938E12, 2.5076923076923068], [1.71890142E12, 5.733333333333334], [1.71890364E12, 19.029999999999998], [1.71890808E12, 41.30333333333331], [1.71889836E12, 1.5545454545454545], [1.71890178E12, 11.437500000000002], [1.71890058E12, 5.236220472440943], [1.7189028E12, 13.65822784810126], [1.71889956E12, 2.2333333333333347], [1.71890382E12, 15.43]], "isOverall": false, "label": "Directors by name", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71890862E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1082.0, "minX": 1.71889788E12, "maxY": 245133.0, "series": [{"data": [[1.71889884E12, 1870.0], [1.71890226E12, 33181.0], [1.71890772E12, 237981.0], [1.71890106E12, 8961.0], [1.71890328E12, 41317.0], [1.71890652E12, 82053.0], [1.71890004E12, 3890.0], [1.71889902E12, 1773.0], [1.71890124E12, 8867.0], [1.71890244E12, 33078.0], [1.71890688E12, 82163.0], [1.718898E12, 1383.0], [1.71890022E12, 3728.0], [1.71890346E12, 41197.0], [1.7189067E12, 82452.0], [1.7188992E12, 3733.0], [1.7188995E12, 3604.0], [1.71889848E12, 1768.0], [1.71890292E12, 42460.0], [1.71890736E12, 82065.0], [1.7189007E12, 8858.0], [1.71890718E12, 82128.0], [1.71890172E12, 32849.0], [1.71890616E12, 54612.0], [1.71889968E12, 3728.0], [1.71890208E12, 32873.0], [1.71889866E12, 1801.0], [1.71890088E12, 8919.0], [1.7189031E12, 41481.0], [1.71889986E12, 3739.0], [1.7189019E12, 32855.0], [1.71890634E12, 147705.0], [1.71890856E12, 245133.0], [1.71890256E12, 32825.0], [1.71890358E12, 41517.0], [1.71889914E12, 3721.0], [1.71889812E12, 2008.0], [1.71890136E12, 9058.0], [1.71890034E12, 10440.0], [1.71890238E12, 33131.0], [1.71890274E12, 47787.0], [1.71889932E12, 3728.0], [1.7189082E12, 243451.0], [1.718907E12, 81800.0], [1.7188983E12, 1782.0], [1.71890052E12, 8037.0], [1.71890154E12, 42217.0], [1.71890376E12, 41218.0], [1.71890322E12, 41015.0], [1.7188998E12, 3744.0], [1.71890646E12, 82155.0], [1.71890748E12, 116786.0], [1.71889878E12, 2272.0], [1.718901E12, 8856.0], [1.71890202E12, 32941.0], [1.71889998E12, 3664.0], [1.71889896E12, 1706.0], [1.7189034E12, 41050.0], [1.71890784E12, 241549.0], [1.71890118E12, 8853.0], [1.71890664E12, 81651.0], [1.7189022E12, 33116.0], [1.71889794E12, 1603.0], [1.71890016E12, 3729.0], [1.71890046E12, 8043.0], [1.71889944E12, 3622.0], [1.71890166E12, 39540.0], [1.71890388E12, 41531.0], [1.7189061E12, 4839.0], [1.71890832E12, 243584.0], [1.71890268E12, 32922.0], [1.71890712E12, 82378.0], [1.71889842E12, 1874.0], [1.71890064E12, 8229.0], [1.71890304E12, 40386.0], [1.71890628E12, 127245.0], [1.71889962E12, 3600.0], [1.7188986E12, 1783.0], [1.71890184E12, 32933.0], [1.71890082E12, 8869.0], [1.71890286E12, 41078.0], [1.7189073E12, 82541.0], [1.71890676E12, 81900.0], [1.71889788E12, 1553.0], [1.7189013E12, 8961.0], [1.71890352E12, 41041.0], [1.7189001E12, 3728.0], [1.71889908E12, 2200.0], [1.71890232E12, 33216.0], [1.71890334E12, 41506.0], [1.7189037E12, 41318.0], [1.71890028E12, 5271.0], [1.71890694E12, 81990.0], [1.71889806E12, 1867.0], [1.71890148E12, 15916.0], [1.71889926E12, 3828.0], [1.7189025E12, 32864.0], [1.71890796E12, 244551.0], [1.71889824E12, 1803.0], [1.71889854E12, 1707.0], [1.71890076E12, 8860.0], [1.71890196E12, 32882.0], [1.71889974E12, 3581.0], [1.71890298E12, 39880.0], [1.71890622E12, 88407.0], [1.71890844E12, 244206.0], [1.71889872E12, 1776.0], [1.71890094E12, 8970.0], [1.71889992E12, 3732.0], [1.71890214E12, 32907.0], [1.71890862E12, 163266.0], [1.71890316E12, 41009.0], [1.7188989E12, 1793.0], [1.71890112E12, 8949.0], [1.7189076E12, 209609.0], [1.7189016E12, 35072.0], [1.71889818E12, 1807.0], [1.7189004E12, 9257.0], [1.71890262E12, 32912.0], [1.71889938E12, 3729.0], [1.71890142E12, 9054.0], [1.71890364E12, 41299.0], [1.71890808E12, 244265.0], [1.71889836E12, 1684.0], [1.71890178E12, 32669.0], [1.71890058E12, 8329.0], [1.7189028E12, 48610.0], [1.71889956E12, 3726.0], [1.71890382E12, 40966.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71889884E12, 1095.0], [1.71890226E12, 32680.0], [1.71890772E12, 118745.0], [1.71890106E12, 8714.0], [1.71890328E12, 40235.0], [1.71890652E12, 81287.0], [1.71890004E12, 1155.0], [1.71889902E12, 1484.0], [1.71890124E12, 8669.0], [1.71890244E12, 32509.0], [1.71890688E12, 81466.0], [1.718898E12, 1115.0], [1.71890022E12, 1776.0], [1.71890346E12, 40930.0], [1.7189067E12, 81423.0], [1.7188992E12, 2895.0], [1.7188995E12, 1509.0], [1.71889848E12, 1546.0], [1.71890292E12, 37641.0], [1.71890736E12, 81465.0], [1.7189007E12, 7914.0], [1.71890718E12, 81116.0], [1.71890172E12, 32389.0], [1.71890616E12, 9143.0], [1.71889968E12, 1427.0], [1.71890208E12, 32747.0], [1.71889866E12, 1468.0], [1.71890088E12, 8611.0], [1.7189031E12, 38429.0], [1.71889986E12, 3454.0], [1.7189019E12, 32686.0], [1.71890634E12, 77096.0], [1.71890856E12, 121829.0], [1.71890256E12, 32732.0], [1.71890358E12, 40880.0], [1.71889914E12, 1492.0], [1.71889812E12, 1505.0], [1.71890136E12, 8637.0], [1.71890034E12, 6395.0], [1.71890238E12, 32755.0], [1.71890274E12, 6194.0], [1.71889932E12, 3413.0], [1.7189082E12, 121034.0], [1.718907E12, 81194.0], [1.7188983E12, 1501.0], [1.71890052E12, 5713.0], [1.71890154E12, 23559.0], [1.71890376E12, 40594.0], [1.71890322E12, 40790.0], [1.7188998E12, 1188.0], [1.71890646E12, 81373.0], [1.71890748E12, 101844.0], [1.71889878E12, 1121.0], [1.718901E12, 8622.0], [1.71890202E12, 32749.0], [1.71889998E12, 1202.0], [1.71889896E12, 1508.0], [1.7189034E12, 40666.0], [1.71890784E12, 121151.0], [1.71890118E12, 8613.0], [1.71890664E12, 81012.0], [1.7189022E12, 32672.0], [1.71889794E12, 1132.0], [1.71890016E12, 3416.0], [1.71890046E12, 5456.0], [1.71889944E12, 3415.0], [1.71890166E12, 29314.0], [1.71890388E12, 40763.0], [1.7189061E12, 4487.0], [1.71890832E12, 120769.0], [1.71890268E12, 1208.0], [1.71890712E12, 81642.0], [1.71889842E12, 1512.0], [1.71890064E12, 3311.0], [1.71890304E12, 38922.0], [1.71890628E12, 68954.0], [1.71889962E12, 3414.0], [1.7188986E12, 1514.0], [1.71890184E12, 32849.0], [1.71890082E12, 8615.0], [1.71890286E12, 37482.0], [1.7189073E12, 81542.0], [1.71890676E12, 81066.0], [1.71889788E12, 1082.0], [1.7189013E12, 8746.0], [1.71890352E12, 40784.0], [1.7189001E12, 3488.0], [1.71889908E12, 1128.0], [1.71890232E12, 32393.0], [1.71890334E12, 41142.0], [1.7189037E12, 40890.0], [1.71890028E12, 1110.0], [1.71890694E12, 81111.0], [1.71889806E12, 1173.0], [1.71890148E12, 1191.0], [1.71889926E12, 3421.0], [1.7189025E12, 32771.0], [1.71890796E12, 121700.0], [1.71889824E12, 1490.0], [1.71889854E12, 1160.0], [1.71890076E12, 8605.0], [1.71890196E12, 32641.0], [1.71889974E12, 3390.0], [1.71890298E12, 38999.0], [1.71890622E12, 62998.0], [1.71890844E12, 121673.0], [1.71889872E12, 1502.0], [1.71890094E12, 8637.0], [1.71889992E12, 1633.0], [1.71890214E12, 32714.0], [1.71890862E12, 162613.0], [1.71890316E12, 40416.0], [1.7188989E12, 1532.0], [1.71890112E12, 8607.0], [1.7189076E12, 123727.0], [1.7189016E12, 28798.0], [1.71889818E12, 1518.0], [1.7189004E12, 6382.0], [1.71890262E12, 32671.0], [1.71889938E12, 3481.0], [1.71890142E12, 8611.0], [1.71890364E12, 41172.0], [1.71890808E12, 120784.0], [1.71889836E12, 1507.0], [1.71890178E12, 32527.0], [1.71890058E12, 4922.0], [1.7189028E12, 33834.0], [1.71889956E12, 3399.0], [1.71890382E12, 40834.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71889884E12, 1722.0000000000002], [1.71890226E12, 33145.6], [1.71890772E12, 228845.8], [1.71890106E12, 8939.9], [1.71890328E12, 41035.0], [1.71890652E12, 81952.5], [1.71890004E12, 3711.3], [1.71889902E12, 1677.0], [1.71890124E12, 8845.9], [1.71890244E12, 32862.9], [1.71890688E12, 81847.9], [1.718898E12, 1246.0], [1.71890022E12, 3567.1000000000004], [1.71890346E12, 41018.8], [1.7189067E12, 82099.9], [1.7188992E12, 3645.7], [1.7188995E12, 3530.5], [1.71889848E12, 1687.0], [1.71890292E12, 42402.7], [1.71890736E12, 81780.9], [1.7189007E12, 8842.9], [1.71890718E12, 81970.0], [1.71890172E12, 32820.0], [1.71890616E12, 53114.3], [1.71889968E12, 3615.0], [1.71890208E12, 32858.0], [1.71889866E12, 1693.0], [1.71890088E12, 8906.9], [1.7189031E12, 41388.5], [1.71889986E12, 3685.2], [1.7189019E12, 32838.9], [1.71890634E12, 90623.9], [1.71890856E12, 244864.0], [1.71890256E12, 32815.0], [1.71890358E12, 41230.0], [1.71889914E12, 3526.5], [1.71889812E12, 1835.0], [1.71890136E12, 9039.8], [1.71890034E12, 9764.0], [1.71890238E12, 33118.0], [1.71890274E12, 44750.200000000004], [1.71889932E12, 3639.6], [1.7189082E12, 243386.0], [1.718907E12, 81687.6], [1.7188983E12, 1735.0], [1.71890052E12, 7826.0], [1.71890154E12, 36926.0], [1.71890376E12, 40996.9], [1.71890322E12, 40990.0], [1.7188998E12, 3622.0], [1.71890646E12, 81904.9], [1.71890748E12, 114593.0], [1.71889878E12, 1755.0], [1.718901E12, 8847.0], [1.71890202E12, 32866.9], [1.71889998E12, 3622.5], [1.71889896E12, 1681.0], [1.7189034E12, 40997.9], [1.71890784E12, 228454.4], [1.71890118E12, 8839.9], [1.71890664E12, 81612.9], [1.7189022E12, 32916.9], [1.71889794E12, 1227.0], [1.71890016E12, 3714.0], [1.71890046E12, 7770.1], [1.71889944E12, 3608.0], [1.71890166E12, 39424.8], [1.71890388E12, 41208.8], [1.7189061E12, 4839.0], [1.71890832E12, 243118.4], [1.71890268E12, 32902.0], [1.71890712E12, 82041.7], [1.71889842E12, 1783.0], [1.71890064E12, 8198.0], [1.71890304E12, 40336.8], [1.71890628E12, 105506.0], [1.71889962E12, 3526.8], [1.7188986E12, 1679.0], [1.71890184E12, 32923.9], [1.71890082E12, 8851.9], [1.71890286E12, 40988.2], [1.7189073E12, 82439.5], [1.71890676E12, 81833.9], [1.71889788E12, 1475.3], [1.7189013E12, 8933.0], [1.71890352E12, 41017.8], [1.7189001E12, 3712.7], [1.71889908E12, 1761.5], [1.71890232E12, 32883.9], [1.71890334E12, 41248.9], [1.7189037E12, 41297.0], [1.71890028E12, 3724.0], [1.71890694E12, 81760.0], [1.71889806E12, 1681.0], [1.71890148E12, 12880.0], [1.71889926E12, 3622.0], [1.7189025E12, 32838.9], [1.71890796E12, 244508.0], [1.71889824E12, 1757.0], [1.71889854E12, 1685.0], [1.71890076E12, 8846.0], [1.71890196E12, 32861.0], [1.71889974E12, 3559.7], [1.71890298E12, 39861.9], [1.71890622E12, 77459.0], [1.71890844E12, 243647.8], [1.71889872E12, 1680.0], [1.71890094E12, 8947.9], [1.71889992E12, 3634.4], [1.71890214E12, 32886.9], [1.71890862E12, 162972.0], [1.71890316E12, 40987.0], [1.7188989E12, 1692.0], [1.71890112E12, 8939.0], [1.7189076E12, 207906.8], [1.7189016E12, 35043.5], [1.71889818E12, 1684.0], [1.7189004E12, 8830.5], [1.71890262E12, 32905.0], [1.71889938E12, 3713.7], [1.71890142E12, 9038.0], [1.71890364E12, 41274.9], [1.71890808E12, 244002.9], [1.71889836E12, 1677.8], [1.71890178E12, 32657.4], [1.71890058E12, 8097.0], [1.7189028E12, 46100.0], [1.71889956E12, 3713.9], [1.71890382E12, 40949.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71889884E12, 1869.77], [1.71890226E12, 33181.0], [1.71890772E12, 237940.97], [1.71890106E12, 8956.9], [1.71890328E12, 41073.91], [1.71890652E12, 82051.0], [1.71890004E12, 3879.95], [1.71889902E12, 1772.37], [1.71890124E12, 8863.72], [1.71890244E12, 33075.0], [1.71890688E12, 82121.0], [1.718898E12, 1357.56], [1.71890022E12, 3726.11], [1.71890346E12, 41182.92], [1.7189067E12, 82440.73], [1.7188992E12, 3728.73], [1.7188995E12, 3575.400000000001], [1.71889848E12, 1767.78], [1.71890292E12, 42453.95], [1.71890736E12, 82060.87], [1.7189007E12, 8854.72], [1.71890718E12, 82112.9], [1.71890172E12, 32839.0], [1.71890616E12, 54612.0], [1.71889968E12, 3724.2200000000003], [1.71890208E12, 32870.0], [1.71889866E12, 1800.12], [1.71890088E12, 8918.18], [1.7189031E12, 41480.91], [1.71889986E12, 3730.46], [1.7189019E12, 32855.0], [1.71890634E12, 131864.48], [1.71890856E12, 245117.9], [1.71890256E12, 32823.0], [1.71890358E12, 41505.98], [1.71889914E12, 3659.2500000000023], [1.71889812E12, 2006.4599999999998], [1.71890136E12, 9055.54], [1.71890034E12, 10348.230000000001], [1.71890238E12, 33128.0], [1.71890274E12, 47787.0], [1.71889932E12, 3725.95], [1.7189082E12, 243450.0], [1.718907E12, 81783.92], [1.7188983E12, 1781.78], [1.71890052E12, 8037.0], [1.71890154E12, 40261.970000000045], [1.71890376E12, 41214.94], [1.71890322E12, 41014.92], [1.7188998E12, 3735.0], [1.71890646E12, 82138.83], [1.71890748E12, 116366.0], [1.71889878E12, 2247.300000000001], [1.718901E12, 8856.0], [1.71890202E12, 32941.0], [1.71889998E12, 3663.1], [1.71889896E12, 1705.34], [1.7189034E12, 41049.94], [1.71890784E12, 241494.83], [1.71890118E12, 8851.77], [1.71890664E12, 81647.98], [1.7189022E12, 33113.0], [1.71889794E12, 1549.4699999999998], [1.71890016E12, 3728.18], [1.71890046E12, 8034.7], [1.71889944E12, 3620.7799999999997], [1.71890166E12, 39529.0], [1.71890388E12, 41520.95], [1.7189061E12, 4839.0], [1.71890832E12, 243348.96], [1.71890268E12, 32912.0], [1.71890712E12, 82364.97], [1.71889842E12, 1873.78], [1.71890064E12, 8219.9], [1.71890304E12, 40377.81], [1.71890628E12, 125644.0], [1.71889962E12, 3566.4499999999994], [1.7188986E12, 1782.79], [1.71890184E12, 32928.0], [1.71890082E12, 8868.18], [1.71890286E12, 41077.89], [1.7189073E12, 82538.95], [1.71890676E12, 81898.0], [1.71889788E12, 1553.0], [1.7189013E12, 8955.26], [1.71890352E12, 41040.99], [1.7189001E12, 3727.39], [1.71889908E12, 2199.5], [1.71890232E12, 33214.0], [1.71890334E12, 41505.9], [1.7189037E12, 41317.97], [1.71890028E12, 5046.420000000003], [1.71890694E12, 81985.85], [1.71889806E12, 1866.22], [1.71890148E12, 15861.999999999998], [1.71889926E12, 3823.12], [1.7189025E12, 32864.0], [1.71890796E12, 244540.99], [1.71889824E12, 1802.4499999999998], [1.71889854E12, 1706.74], [1.71890076E12, 8858.77], [1.71890196E12, 32870.0], [1.71889974E12, 3579.7799999999997], [1.71890298E12, 39879.97], [1.71890622E12, 84772.0], [1.71890844E12, 243952.97], [1.71889872E12, 1773.1399999999996], [1.71890094E12, 8969.18], [1.71889992E12, 3730.11], [1.71890214E12, 32903.0], [1.71890862E12, 163265.99], [1.71890316E12, 41007.98], [1.7188989E12, 1792.8899999999999], [1.71890112E12, 8948.18], [1.7189076E12, 209141.1], [1.7189016E12, 35070.3], [1.71889818E12, 1806.4499999999998], [1.7189004E12, 9253.85], [1.71890262E12, 32912.0], [1.71889938E12, 3727.7799999999997], [1.71890142E12, 9053.59], [1.71890364E12, 41298.98], [1.71890808E12, 244261.0], [1.71889836E12, 1684.0], [1.71890178E12, 32669.0], [1.71890058E12, 8327.9], [1.7189028E12, 47599.0], [1.71889956E12, 3725.59], [1.71890382E12, 40965.97]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71889884E12, 1565.0], [1.71890226E12, 32905.0], [1.71890772E12, 130597.5], [1.71890106E12, 8829.5], [1.71890328E12, 40722.5], [1.71890652E12, 81693.0], [1.71890004E12, 3495.0], [1.71889902E12, 1592.5], [1.71890124E12, 8830.0], [1.71890244E12, 32773.5], [1.71890688E12, 81704.5], [1.718898E12, 1183.5], [1.71890022E12, 3510.0], [1.71890346E12, 40989.0], [1.7189067E12, 81807.0], [1.7188992E12, 3514.0], [1.7188995E12, 3504.0], [1.71889848E12, 1665.0], [1.71890292E12, 38319.0], [1.71890736E12, 81652.5], [1.7189007E12, 8730.5], [1.71890718E12, 81641.5], [1.71890172E12, 32662.0], [1.71890616E12, 49828.0], [1.71889968E12, 3510.0], [1.71890208E12, 32813.0], [1.71889866E12, 1653.0], [1.71890088E12, 8833.0], [1.7189031E12, 38535.0], [1.71889986E12, 3514.0], [1.7189019E12, 32769.5], [1.71890634E12, 77564.5], [1.71890856E12, 122130.0], [1.71890256E12, 32797.5], [1.71890358E12, 41188.5], [1.71889914E12, 3492.0], [1.71889812E12, 1665.0], [1.71890136E12, 8819.0], [1.71890034E12, 9251.0], [1.71890238E12, 33037.5], [1.71890274E12, 35850.0], [1.71889932E12, 3510.5], [1.7189082E12, 121432.5], [1.718907E12, 81511.5], [1.7188983E12, 1666.0], [1.71890052E12, 7307.0], [1.71890154E12, 28413.0], [1.71890376E12, 40824.5], [1.71890322E12, 40901.5], [1.7188998E12, 3499.5], [1.71890646E12, 81761.5], [1.71890748E12, 110816.0], [1.71889878E12, 1646.0], [1.718901E12, 8832.0], [1.71890202E12, 32831.0], [1.71889998E12, 3508.0], [1.71889896E12, 1584.0], [1.7189034E12, 40954.0], [1.71890784E12, 121445.0], [1.71890118E12, 8768.0], [1.71890664E12, 81346.0], [1.7189022E12, 32845.5], [1.71889794E12, 1165.0], [1.71890016E12, 3518.0], [1.71890046E12, 7174.0], [1.71889944E12, 3514.0], [1.71890166E12, 30807.5], [1.71890388E12, 41004.0], [1.7189061E12, 4616.0], [1.71890832E12, 121045.0], [1.71890268E12, 32825.0], [1.71890712E12, 81942.0], [1.71889842E12, 1655.0], [1.71890064E12, 7940.0], [1.71890304E12, 39057.5], [1.71890628E12, 79899.0], [1.71889962E12, 3511.0], [1.7188986E12, 1654.5], [1.71890184E12, 32899.0], [1.71890082E12, 8797.0], [1.71890286E12, 40595.5], [1.7189073E12, 82277.5], [1.71890676E12, 81702.0], [1.71889788E12, 1133.5], [1.7189013E12, 8830.0], [1.71890352E12, 40986.5], [1.7189001E12, 3517.0], [1.71889908E12, 1569.0], [1.71890232E12, 32796.5], [1.71890334E12, 41211.5], [1.7189037E12, 40992.5], [1.71890028E12, 3504.5], [1.71890694E12, 81566.5], [1.71889806E12, 1583.0], [1.71890148E12, 8838.0], [1.71889926E12, 3512.0], [1.7189025E12, 32797.0], [1.71890796E12, 122051.0], [1.71889824E12, 1653.0], [1.71889854E12, 1578.5], [1.71890076E12, 8822.0], [1.71890196E12, 32833.0], [1.71889974E12, 3511.5], [1.71890298E12, 39113.0], [1.71890622E12, 70700.0], [1.71890844E12, 121864.0], [1.71889872E12, 1659.0], [1.71890094E12, 8725.0], [1.71889992E12, 3511.0], [1.71890214E12, 32806.5], [1.71890862E12, 162945.5], [1.71890316E12, 40902.0], [1.7188989E12, 1662.0], [1.71890112E12, 8784.0], [1.7189076E12, 132988.5], [1.7189016E12, 28917.5], [1.71889818E12, 1662.0], [1.7189004E12, 8306.0], [1.71890262E12, 32798.0], [1.71889938E12, 3515.0], [1.71890142E12, 8778.0], [1.71890364E12, 41206.5], [1.71890808E12, 121329.5], [1.71889836E12, 1584.5], [1.71890178E12, 32559.0], [1.71890058E12, 7976.0], [1.7189028E12, 37601.0], [1.71889956E12, 3514.0], [1.71890382E12, 40925.5]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.71889884E12, 1775.0], [1.71890226E12, 33153.9], [1.71890772E12, 237726.35], [1.71890106E12, 8943.0], [1.71890328E12, 41044.0], [1.71890652E12, 82000.9], [1.71890004E12, 3736.0], [1.71889902E12, 1690.0], [1.71890124E12, 8850.95], [1.71890244E12, 33032.5], [1.71890688E12, 82006.85], [1.718898E12, 1282.25], [1.71890022E12, 3710.0], [1.71890346E12, 41033.0], [1.7189067E12, 82108.0], [1.7188992E12, 3708.0], [1.7188995E12, 3537.0], [1.71889848E12, 1731.9999999999995], [1.71890292E12, 42432.9], [1.71890736E12, 81900.95], [1.7189007E12, 8845.95], [1.71890718E12, 82019.0], [1.71890172E12, 32827.95], [1.71890616E12, 54007.0], [1.71889968E12, 3703.0], [1.71890208E12, 32864.0], [1.71889866E12, 1770.45], [1.71890088E12, 8910.95], [1.7189031E12, 41403.85], [1.71889986E12, 3700.0], [1.7189019E12, 32846.0], [1.71890634E12, 90693.35], [1.71890856E12, 244929.9], [1.71890256E12, 32819.0], [1.71890358E12, 41237.95], [1.71889914E12, 3610.0], [1.71889812E12, 1903.2999999999984], [1.71890136E12, 9048.0], [1.71890034E12, 9855.15], [1.71890238E12, 33123.95], [1.71890274E12, 45618.0], [1.71889932E12, 3713.85], [1.7189082E12, 243437.95], [1.718907E12, 81707.95], [1.7188983E12, 1766.45], [1.71890052E12, 8021.0], [1.71890154E12, 38448.0], [1.71890376E12, 41004.95], [1.71890322E12, 40999.85], [1.7188998E12, 3709.75], [1.71890646E12, 81936.75], [1.71890748E12, 115615.45], [1.71889878E12, 1849.7], [1.718901E12, 8850.0], [1.71890202E12, 32877.75], [1.71889998E12, 3650.0], [1.71889896E12, 1686.45], [1.7189034E12, 41032.7], [1.71890784E12, 241296.8], [1.71890118E12, 8845.95], [1.71890664E12, 81626.95], [1.7189022E12, 33104.95], [1.71889794E12, 1255.35], [1.71890016E12, 3721.9], [1.71890046E12, 7803.099999999999], [1.71889944E12, 3612.0], [1.71890166E12, 39435.85], [1.71890388E12, 41465.899999999994], [1.7189061E12, 4839.0], [1.71890832E12, 243322.85], [1.71890268E12, 32904.0], [1.71890712E12, 82239.3], [1.71889842E12, 1820.7499999999993], [1.71890064E12, 8211.45], [1.71890304E12, 40349.0], [1.71890628E12, 122301.0], [1.71889962E12, 3531.0], [1.7188986E12, 1689.0], [1.71890184E12, 32925.95], [1.71890082E12, 8856.0], [1.71890286E12, 41010.6], [1.7189073E12, 82487.85], [1.71890676E12, 81859.8], [1.71889788E12, 1483.0], [1.7189013E12, 8940.95], [1.71890352E12, 41029.85], [1.7189001E12, 3719.0], [1.71889908E12, 1999.5], [1.71890232E12, 33196.75], [1.71890334E12, 41474.6], [1.7189037E12, 41304.95], [1.71890028E12, 4105.1499999999905], [1.71890694E12, 81891.55], [1.71889806E12, 1755.1999999999998], [1.71890148E12, 14889.5], [1.71889926E12, 3815.0], [1.7189025E12, 32849.9], [1.71890796E12, 244524.95], [1.71889824E12, 1791.45], [1.71889854E12, 1690.35], [1.71890076E12, 8849.0], [1.71890196E12, 32863.9], [1.71889974E12, 3567.0], [1.71890298E12, 39867.95], [1.71890622E12, 79558.0], [1.71890844E12, 243872.6], [1.71889872E12, 1705.9], [1.71890094E12, 8959.7], [1.71889992E12, 3716.0], [1.71890214E12, 32892.95], [1.71890862E12, 162973.0], [1.71890316E12, 40997.0], [1.7188989E12, 1768.05], [1.71890112E12, 8943.95], [1.7189076E12, 208403.6], [1.7189016E12, 35054.75], [1.71889818E12, 1781.8], [1.7189004E12, 9059.0], [1.71890262E12, 32909.95], [1.71889938E12, 3722.0], [1.71890142E12, 9048.95], [1.71890364E12, 41286.9], [1.71890808E12, 244179.85], [1.71889836E12, 1679.0], [1.71890178E12, 32665.95], [1.71890058E12, 8124.0], [1.7189028E12, 46115.0], [1.71889956E12, 3716.95], [1.71890382E12, 40953.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71890862E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1257.0, "minX": 2.0, "maxY": 131149.0, "series": [{"data": [[2.0, 1637.5], [594.0, 130597.0], [600.0, 121852.0], [4.0, 1257.0], [6.0, 1368.0], [8.0, 1496.5], [10.0, 1656.0], [12.0, 7641.5], [14.0, 7282.0], [16.0, 7021.5], [18.0, 3436.0], [20.0, 3513.0], [22.0, 7302.5], [24.0, 7512.5], [26.0, 7736.0], [28.0, 44992.5], [30.0, 8022.0], [32.0, 42311.5], [36.0, 32802.5], [38.0, 51616.0], [40.0, 8824.0], [42.0, 34215.5], [44.0, 113790.0], [46.0, 104418.0], [52.0, 40845.5], [54.0, 41193.0], [56.0, 86699.0], [64.0, 35771.0], [68.0, 68518.5], [70.0, 70938.0], [72.0, 66238.0], [76.0, 81849.0], [82.0, 31970.0], [84.0, 40201.0], [92.0, 121287.0], [110.0, 95484.5], [116.0, 38961.0], [124.0, 30038.0], [130.0, 69047.0], [134.0, 122081.0], [146.0, 41239.0], [150.0, 131149.0], [158.0, 78285.5], [156.0, 110232.5], [160.0, 32807.0], [166.0, 81663.0], [162.0, 120950.5], [168.0, 73019.0], [180.0, 41192.0], [198.0, 40469.0], [200.0, 40982.0], [234.0, 81765.0], [324.0, 81673.5], [370.0, 81648.0], [390.0, 81757.0], [398.0, 81641.0], [392.0, 82275.0], [400.0, 81616.5], [466.0, 121887.0], [508.0, 121455.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 600.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1257.0, "minX": 2.0, "maxY": 131149.0, "series": [{"data": [[2.0, 1637.5], [594.0, 130597.0], [600.0, 121852.0], [4.0, 1257.0], [6.0, 1368.0], [8.0, 1496.5], [10.0, 1656.0], [12.0, 7641.5], [14.0, 7282.0], [16.0, 7021.5], [18.0, 3436.0], [20.0, 3513.0], [22.0, 7302.5], [24.0, 7512.5], [26.0, 7736.0], [28.0, 44992.5], [30.0, 8022.0], [32.0, 42311.5], [36.0, 32802.5], [38.0, 51616.0], [40.0, 8824.0], [42.0, 34215.5], [44.0, 113790.0], [46.0, 104418.0], [52.0, 40845.5], [54.0, 41193.0], [56.0, 86699.0], [64.0, 35771.0], [68.0, 68518.5], [70.0, 70937.0], [72.0, 66238.0], [76.0, 81849.0], [82.0, 31970.0], [84.0, 40201.0], [92.0, 121287.0], [110.0, 95484.5], [116.0, 38961.0], [124.0, 30038.0], [130.0, 69047.0], [134.0, 122081.0], [146.0, 41239.0], [150.0, 131149.0], [158.0, 78285.5], [156.0, 110232.5], [160.0, 32807.0], [166.0, 81663.0], [162.0, 120950.5], [168.0, 73019.0], [180.0, 41192.0], [198.0, 40469.0], [200.0, 40982.0], [234.0, 81765.0], [324.0, 81673.5], [370.0, 81648.0], [390.0, 81757.0], [398.0, 81641.0], [392.0, 82275.0], [400.0, 81616.5], [466.0, 121887.0], [508.0, 121455.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 600.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.0666666666666667, "minX": 1.71889788E12, "maxY": 11.866666666666667, "series": [{"data": [[1.71889884E12, 3.533333333333333], [1.71890226E12, 2.6666666666666665], [1.71890772E12, 10.0], [1.71890106E12, 4.0], [1.71890328E12, 3.3333333333333335], [1.71890652E12, 6.666666666666667], [1.71890004E12, 4.466666666666667], [1.71889902E12, 3.5], [1.71890124E12, 4.0], [1.71890244E12, 5.333333333333333], [1.71890688E12, 6.666666666666667], [1.718898E12, 4.2], [1.71890022E12, 4.366666666666666], [1.71890346E12, 6.666666666666667], [1.7189067E12, 6.666666666666667], [1.7188992E12, 4.333333333333333], [1.7188995E12, 4.4], [1.71889848E12, 3.5], [1.71890292E12, 6.666666666666667], [1.71890736E12, 11.866666666666667], [1.7189007E12, 4.0], [1.71890718E12, 6.666666666666667], [1.71890172E12, 2.6666666666666665], [1.71890616E12, 6.133333333333334], [1.71889968E12, 4.366666666666666], [1.71890208E12, 5.333333333333333], [1.71889866E12, 3.5], [1.71890088E12, 4.0], [1.7189031E12, 3.3333333333333335], [1.71889986E12, 4.333333333333333], [1.7189019E12, 5.333333333333333], [1.71890634E12, 6.666666666666667], [1.71890256E12, 5.333333333333333], [1.71890358E12, 6.666666666666667], [1.71889914E12, 4.5], [1.71889812E12, 3.5], [1.71890136E12, 4.0], [1.71890034E12, 3.8333333333333335], [1.71890238E12, 5.333333333333333], [1.71890274E12, 5.633333333333334], [1.71889932E12, 4.333333333333333], [1.7189082E12, 10.0], [1.7188983E12, 3.5], [1.71890052E12, 4.933333333333334], [1.71890154E12, 5.2], [1.71890376E12, 6.666666666666667], [1.71890322E12, 3.3333333333333335], [1.7188998E12, 4.4], [1.71890646E12, 6.666666666666667], [1.71890748E12, 9.633333333333333], [1.71889878E12, 3.533333333333333], [1.718901E12, 4.0], [1.71890202E12, 2.6666666666666665], [1.71889998E12, 4.366666666666666], [1.71889896E12, 3.6666666666666665], [1.7189034E12, 3.3333333333333335], [1.71890784E12, 10.0], [1.71890118E12, 4.0], [1.71890664E12, 6.666666666666667], [1.7189022E12, 5.333333333333333], [1.71889794E12, 4.166666666666667], [1.71890016E12, 4.0], [1.71890046E12, 4.8], [1.71889944E12, 4.0], [1.71890166E12, 5.333333333333333], [1.71890388E12, 3.3333333333333335], [1.7189061E12, 1.6666666666666667], [1.71890832E12, 10.0], [1.71890268E12, 3.7333333333333334], [1.71890712E12, 6.666666666666667], [1.71889842E12, 3.5], [1.71890064E12, 4.833333333333333], [1.71890304E12, 6.666666666666667], [1.71890628E12, 6.566666666666666], [1.71889962E12, 4.333333333333333], [1.7188986E12, 3.5], [1.71890184E12, 5.333333333333333], [1.71890082E12, 4.0], [1.71890286E12, 3.3333333333333335], [1.7189073E12, 6.666666666666667], [1.71890676E12, 6.666666666666667], [1.71889788E12, 1.0666666666666667], [1.7189013E12, 4.0], [1.71890352E12, 3.3333333333333335], [1.7189001E12, 4.333333333333333], [1.71889908E12, 3.6333333333333333], [1.71890232E12, 5.333333333333333], [1.71890334E12, 6.666666666666667], [1.7189037E12, 3.3333333333333335], [1.71890028E12, 4.4], [1.71890694E12, 6.666666666666667], [1.71889806E12, 3.6666666666666665], [1.71890148E12, 4.966666666666667], [1.71889926E12, 4.0], [1.7189025E12, 2.6666666666666665], [1.71890796E12, 10.0], [1.71889824E12, 3.5], [1.71889854E12, 3.7], [1.71890076E12, 4.0], [1.71890742E12, 1.4666666666666666], [1.71890196E12, 5.333333333333333], [1.71889974E12, 4.0], [1.71890298E12, 3.3333333333333335], [1.71890622E12, 5.3], [1.71890844E12, 10.0], [1.71889872E12, 3.6666666666666665], [1.71890094E12, 4.0], [1.71889992E12, 4.033333333333333], [1.71890214E12, 5.333333333333333], [1.71890316E12, 6.666666666666667], [1.7188989E12, 3.5], [1.71890112E12, 4.0], [1.7189076E12, 10.0], [1.7189016E12, 4.733333333333333], [1.71889818E12, 3.5], [1.7189004E12, 4.266666666666667], [1.71890262E12, 5.333333333333333], [1.71890706E12, 6.666666666666667], [1.71889938E12, 4.333333333333333], [1.71890142E12, 4.0], [1.71890364E12, 3.3333333333333335], [1.71890808E12, 10.0], [1.71889836E12, 3.5], [1.71890178E12, 5.333333333333333], [1.71890058E12, 4.233333333333333], [1.7189028E12, 5.266666666666667], [1.71889956E12, 4.333333333333333], [1.71890382E12, 3.3333333333333335]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71890844E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.71889788E12, "maxY": 10.0, "series": [{"data": [[1.71889884E12, 3.7], [1.71890226E12, 2.6666666666666665], [1.71890772E12, 10.0], [1.71890106E12, 4.0], [1.71890328E12, 6.666666666666667], [1.71890652E12, 6.666666666666667], [1.71890004E12, 4.433333333333334], [1.71889902E12, 3.6666666666666665], [1.71890124E12, 4.0], [1.71890244E12, 5.333333333333333], [1.71890688E12, 6.666666666666667], [1.718898E12, 4.2], [1.71890022E12, 4.366666666666666], [1.71890346E12, 6.666666666666667], [1.7189067E12, 6.666666666666667], [1.7188992E12, 4.333333333333333], [1.7188995E12, 4.4], [1.71889848E12, 3.5], [1.71890292E12, 6.666666666666667], [1.71890736E12, 6.666666666666667], [1.7189007E12, 4.0], [1.71890718E12, 6.666666666666667], [1.71890172E12, 5.333333333333333], [1.71890616E12, 1.0333333333333334], [1.71889968E12, 4.366666666666666], [1.71890208E12, 5.333333333333333], [1.71889866E12, 3.5], [1.71890088E12, 4.0], [1.7189031E12, 3.3333333333333335], [1.71889986E12, 4.333333333333333], [1.7189019E12, 5.333333333333333], [1.71890634E12, 6.666666666666667], [1.71890856E12, 10.0], [1.71890256E12, 5.333333333333333], [1.71890358E12, 6.666666666666667], [1.71889914E12, 4.4], [1.71889812E12, 3.5], [1.71890136E12, 4.0], [1.71890034E12, 3.6333333333333333], [1.71890238E12, 5.333333333333333], [1.71890274E12, 3.1], [1.71889932E12, 4.0], [1.7189082E12, 10.0], [1.718907E12, 6.666666666666667], [1.7188983E12, 3.5], [1.71890052E12, 4.933333333333334], [1.71890154E12, 4.6], [1.71890376E12, 6.666666666666667], [1.71890322E12, 3.3333333333333335], [1.7188998E12, 4.066666666666666], [1.71890646E12, 6.666666666666667], [1.71890748E12, 9.633333333333333], [1.71889878E12, 3.533333333333333], [1.718901E12, 4.0], [1.71890202E12, 2.6666666666666665], [1.71889998E12, 4.066666666666666], [1.71889896E12, 3.5], [1.7189034E12, 3.3333333333333335], [1.71890784E12, 10.0], [1.71890118E12, 4.0], [1.71890664E12, 6.666666666666667], [1.7189022E12, 5.333333333333333], [1.71889794E12, 4.2], [1.71890016E12, 4.0], [1.71890046E12, 4.7], [1.71889944E12, 4.333333333333333], [1.71890166E12, 5.333333333333333], [1.71890388E12, 6.666666666666667], [1.7189061E12, 0.1], [1.71890832E12, 10.0], [1.71890268E12, 5.6], [1.71890712E12, 6.666666666666667], [1.71889842E12, 3.5], [1.71890064E12, 4.833333333333333], [1.71890304E12, 6.666666666666667], [1.71890628E12, 6.566666666666666], [1.71889962E12, 4.333333333333333], [1.7188986E12, 3.6666666666666665], [1.71890184E12, 5.333333333333333], [1.71890082E12, 4.0], [1.71890286E12, 3.3333333333333335], [1.7189073E12, 6.666666666666667], [1.71890676E12, 6.666666666666667], [1.71889788E12, 1.0], [1.7189013E12, 4.0], [1.71890352E12, 3.3333333333333335], [1.7189001E12, 4.333333333333333], [1.71889908E12, 3.4], [1.71890232E12, 5.333333333333333], [1.71890334E12, 3.3333333333333335], [1.7189037E12, 3.3333333333333335], [1.71890028E12, 4.266666666666667], [1.71890694E12, 6.666666666666667], [1.71889806E12, 3.533333333333333], [1.71890148E12, 3.566666666666667], [1.71889926E12, 4.333333333333333], [1.7189025E12, 2.6666666666666665], [1.71890796E12, 10.0], [1.71889824E12, 3.5], [1.71889854E12, 3.533333333333333], [1.71890076E12, 4.0], [1.71890196E12, 5.333333333333333], [1.71889974E12, 4.333333333333333], [1.71890298E12, 3.3333333333333335], [1.71890622E12, 5.3], [1.71890844E12, 10.0], [1.71889872E12, 3.5], [1.71890094E12, 4.0], [1.71889992E12, 4.366666666666666], [1.71890214E12, 5.333333333333333], [1.71890862E12, 3.3333333333333335], [1.71890316E12, 6.666666666666667], [1.7188989E12, 3.5], [1.71890112E12, 4.0], [1.7189076E12, 10.0], [1.7189016E12, 4.733333333333333], [1.71889818E12, 3.5], [1.7189004E12, 4.366666666666666], [1.71890262E12, 5.333333333333333], [1.71889938E12, 4.333333333333333], [1.71890142E12, 4.0], [1.71890364E12, 3.3333333333333335], [1.71890808E12, 10.0], [1.71889836E12, 3.6666666666666665], [1.71890178E12, 2.6666666666666665], [1.71890058E12, 4.233333333333333], [1.7189028E12, 5.266666666666667], [1.71889956E12, 4.0], [1.71890382E12, 3.3333333333333335]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71890862E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.71889788E12, "maxY": 10.0, "series": [{"data": [[1.71889884E12, 3.7], [1.71890226E12, 2.6666666666666665], [1.71890772E12, 10.0], [1.71890106E12, 4.0], [1.71890328E12, 6.666666666666667], [1.71890652E12, 6.666666666666667], [1.71890004E12, 4.433333333333334], [1.71889902E12, 3.6666666666666665], [1.71890124E12, 4.0], [1.71890244E12, 5.333333333333333], [1.71890688E12, 6.666666666666667], [1.718898E12, 4.2], [1.71890022E12, 4.366666666666666], [1.71890346E12, 6.666666666666667], [1.7189067E12, 6.666666666666667], [1.7188992E12, 4.333333333333333], [1.7188995E12, 4.4], [1.71889848E12, 3.5], [1.71890292E12, 6.666666666666667], [1.71890736E12, 6.666666666666667], [1.7189007E12, 4.0], [1.71890718E12, 6.666666666666667], [1.71890172E12, 5.333333333333333], [1.71890616E12, 1.0333333333333334], [1.71889968E12, 4.366666666666666], [1.71890208E12, 5.333333333333333], [1.71889866E12, 3.5], [1.71890088E12, 4.0], [1.7189031E12, 3.3333333333333335], [1.71889986E12, 4.333333333333333], [1.7189019E12, 5.333333333333333], [1.71890634E12, 6.666666666666667], [1.71890856E12, 10.0], [1.71890256E12, 5.333333333333333], [1.71890358E12, 6.666666666666667], [1.71889914E12, 4.4], [1.71889812E12, 3.5], [1.71890136E12, 4.0], [1.71890034E12, 3.6333333333333333], [1.71890238E12, 5.333333333333333], [1.71890274E12, 3.1], [1.71889932E12, 4.0], [1.7189082E12, 10.0], [1.718907E12, 6.666666666666667], [1.7188983E12, 3.5], [1.71890052E12, 4.933333333333334], [1.71890154E12, 4.6], [1.71890376E12, 6.666666666666667], [1.71890322E12, 3.3333333333333335], [1.7188998E12, 4.066666666666666], [1.71890646E12, 6.666666666666667], [1.71890748E12, 9.633333333333333], [1.71889878E12, 3.533333333333333], [1.718901E12, 4.0], [1.71890202E12, 2.6666666666666665], [1.71889998E12, 4.066666666666666], [1.71889896E12, 3.5], [1.7189034E12, 3.3333333333333335], [1.71890784E12, 10.0], [1.71890118E12, 4.0], [1.71890664E12, 6.666666666666667], [1.7189022E12, 5.333333333333333], [1.71889794E12, 4.2], [1.71890016E12, 4.0], [1.71890046E12, 4.7], [1.71889944E12, 4.333333333333333], [1.71890166E12, 5.333333333333333], [1.71890388E12, 6.666666666666667], [1.7189061E12, 0.1], [1.71890832E12, 10.0], [1.71890268E12, 5.6], [1.71890712E12, 6.666666666666667], [1.71889842E12, 3.5], [1.71890064E12, 4.833333333333333], [1.71890304E12, 6.666666666666667], [1.71890628E12, 6.566666666666666], [1.71889962E12, 4.333333333333333], [1.7188986E12, 3.6666666666666665], [1.71890184E12, 5.333333333333333], [1.71890082E12, 4.0], [1.71890286E12, 3.3333333333333335], [1.7189073E12, 6.666666666666667], [1.71890676E12, 6.666666666666667], [1.71889788E12, 1.0], [1.7189013E12, 4.0], [1.71890352E12, 3.3333333333333335], [1.7189001E12, 4.333333333333333], [1.71889908E12, 3.4], [1.71890232E12, 5.333333333333333], [1.71890334E12, 3.3333333333333335], [1.7189037E12, 3.3333333333333335], [1.71890028E12, 4.266666666666667], [1.71890694E12, 6.666666666666667], [1.71889806E12, 3.533333333333333], [1.71890148E12, 3.566666666666667], [1.71889926E12, 4.333333333333333], [1.7189025E12, 2.6666666666666665], [1.71890796E12, 10.0], [1.71889824E12, 3.5], [1.71889854E12, 3.533333333333333], [1.71890076E12, 4.0], [1.71890196E12, 5.333333333333333], [1.71889974E12, 4.333333333333333], [1.71890298E12, 3.3333333333333335], [1.71890622E12, 5.3], [1.71890844E12, 10.0], [1.71889872E12, 3.5], [1.71890094E12, 4.0], [1.71889992E12, 4.366666666666666], [1.71890214E12, 5.333333333333333], [1.71890862E12, 3.3333333333333335], [1.71890316E12, 6.666666666666667], [1.7188989E12, 3.5], [1.71890112E12, 4.0], [1.7189076E12, 10.0], [1.7189016E12, 4.733333333333333], [1.71889818E12, 3.5], [1.7189004E12, 4.366666666666666], [1.71890262E12, 5.333333333333333], [1.71889938E12, 4.333333333333333], [1.71890142E12, 4.0], [1.71890364E12, 3.3333333333333335], [1.71890808E12, 10.0], [1.71889836E12, 3.6666666666666665], [1.71890178E12, 2.6666666666666665], [1.71890058E12, 4.233333333333333], [1.7189028E12, 5.266666666666667], [1.71889956E12, 4.0], [1.71890382E12, 3.3333333333333335]], "isOverall": false, "label": "Directors by name-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71890862E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.71889788E12, "maxY": 10.0, "series": [{"data": [[1.71889884E12, 3.7], [1.71890226E12, 2.6666666666666665], [1.71890772E12, 10.0], [1.71890106E12, 4.0], [1.71890328E12, 6.666666666666667], [1.71890652E12, 6.666666666666667], [1.71890004E12, 4.433333333333334], [1.71889902E12, 3.6666666666666665], [1.71890124E12, 4.0], [1.71890244E12, 5.333333333333333], [1.71890688E12, 6.666666666666667], [1.718898E12, 4.2], [1.71890022E12, 4.366666666666666], [1.71890346E12, 6.666666666666667], [1.7189067E12, 6.666666666666667], [1.7188992E12, 4.333333333333333], [1.7188995E12, 4.4], [1.71889848E12, 3.5], [1.71890292E12, 6.666666666666667], [1.71890736E12, 6.666666666666667], [1.7189007E12, 4.0], [1.71890718E12, 6.666666666666667], [1.71890172E12, 5.333333333333333], [1.71890616E12, 1.0333333333333334], [1.71889968E12, 4.366666666666666], [1.71890208E12, 5.333333333333333], [1.71889866E12, 3.5], [1.71890088E12, 4.0], [1.7189031E12, 3.3333333333333335], [1.71889986E12, 4.333333333333333], [1.7189019E12, 5.333333333333333], [1.71890634E12, 6.666666666666667], [1.71890856E12, 10.0], [1.71890256E12, 5.333333333333333], [1.71890358E12, 6.666666666666667], [1.71889914E12, 4.4], [1.71889812E12, 3.5], [1.71890136E12, 4.0], [1.71890034E12, 3.6333333333333333], [1.71890238E12, 5.333333333333333], [1.71890274E12, 3.1], [1.71889932E12, 4.0], [1.7189082E12, 10.0], [1.718907E12, 6.666666666666667], [1.7188983E12, 3.5], [1.71890052E12, 4.933333333333334], [1.71890154E12, 4.6], [1.71890376E12, 6.666666666666667], [1.71890322E12, 3.3333333333333335], [1.7188998E12, 4.066666666666666], [1.71890646E12, 6.666666666666667], [1.71890748E12, 9.633333333333333], [1.71889878E12, 3.533333333333333], [1.718901E12, 4.0], [1.71890202E12, 2.6666666666666665], [1.71889998E12, 4.066666666666666], [1.71889896E12, 3.5], [1.7189034E12, 3.3333333333333335], [1.71890784E12, 10.0], [1.71890118E12, 4.0], [1.71890664E12, 6.666666666666667], [1.7189022E12, 5.333333333333333], [1.71889794E12, 4.2], [1.71890016E12, 4.0], [1.71890046E12, 4.7], [1.71889944E12, 4.333333333333333], [1.71890166E12, 5.333333333333333], [1.71890388E12, 6.666666666666667], [1.7189061E12, 0.1], [1.71890832E12, 10.0], [1.71890268E12, 5.6], [1.71890712E12, 6.666666666666667], [1.71889842E12, 3.5], [1.71890064E12, 4.833333333333333], [1.71890304E12, 6.666666666666667], [1.71890628E12, 6.566666666666666], [1.71889962E12, 4.333333333333333], [1.7188986E12, 3.6666666666666665], [1.71890184E12, 5.333333333333333], [1.71890082E12, 4.0], [1.71890286E12, 3.3333333333333335], [1.7189073E12, 6.666666666666667], [1.71890676E12, 6.666666666666667], [1.71889788E12, 1.0], [1.7189013E12, 4.0], [1.71890352E12, 3.3333333333333335], [1.7189001E12, 4.333333333333333], [1.71889908E12, 3.4], [1.71890232E12, 5.333333333333333], [1.71890334E12, 3.3333333333333335], [1.7189037E12, 3.3333333333333335], [1.71890028E12, 4.266666666666667], [1.71890694E12, 6.666666666666667], [1.71889806E12, 3.533333333333333], [1.71890148E12, 3.566666666666667], [1.71889926E12, 4.333333333333333], [1.7189025E12, 2.6666666666666665], [1.71890796E12, 10.0], [1.71889824E12, 3.5], [1.71889854E12, 3.533333333333333], [1.71890076E12, 4.0], [1.71890196E12, 5.333333333333333], [1.71889974E12, 4.333333333333333], [1.71890298E12, 3.3333333333333335], [1.71890622E12, 5.3], [1.71890844E12, 10.0], [1.71889872E12, 3.5], [1.71890094E12, 4.0], [1.71889992E12, 4.366666666666666], [1.71890214E12, 5.333333333333333], [1.71890862E12, 3.3333333333333335], [1.71890316E12, 6.666666666666667], [1.7188989E12, 3.5], [1.71890112E12, 4.0], [1.7189076E12, 10.0], [1.7189016E12, 4.733333333333333], [1.71889818E12, 3.5], [1.7189004E12, 4.366666666666666], [1.71890262E12, 5.333333333333333], [1.71889938E12, 4.333333333333333], [1.71890142E12, 4.0], [1.71890364E12, 3.3333333333333335], [1.71890808E12, 10.0], [1.71889836E12, 3.6666666666666665], [1.71890178E12, 2.6666666666666665], [1.71890058E12, 4.233333333333333], [1.7189028E12, 5.266666666666667], [1.71889956E12, 4.0], [1.71890382E12, 3.3333333333333335]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71890862E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}


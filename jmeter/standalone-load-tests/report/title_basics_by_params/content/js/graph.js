/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 16209.0, "series": [{"data": [[0.0, 745.0], [0.1, 745.0], [0.2, 745.0], [0.3, 745.0], [0.4, 745.0], [0.5, 745.0], [0.6, 745.0], [0.7, 745.0], [0.8, 745.0], [0.9, 745.0], [1.0, 745.0], [1.1, 745.0], [1.2, 745.0], [1.3, 745.0], [1.4, 745.0], [1.5, 745.0], [1.6, 745.0], [1.7, 745.0], [1.8, 745.0], [1.9, 745.0], [2.0, 745.0], [2.1, 745.0], [2.2, 1123.0], [2.3, 1123.0], [2.4, 1123.0], [2.5, 1123.0], [2.6, 1123.0], [2.7, 1123.0], [2.8, 1123.0], [2.9, 1123.0], [3.0, 1123.0], [3.1, 1123.0], [3.2, 1123.0], [3.3, 1123.0], [3.4, 1123.0], [3.5, 1123.0], [3.6, 1123.0], [3.7, 1123.0], [3.8, 1123.0], [3.9, 1123.0], [4.0, 1123.0], [4.1, 1123.0], [4.2, 1123.0], [4.3, 1123.0], [4.4, 1156.0], [4.5, 1156.0], [4.6, 1156.0], [4.7, 1156.0], [4.8, 1156.0], [4.9, 1156.0], [5.0, 1156.0], [5.1, 1156.0], [5.2, 1156.0], [5.3, 1156.0], [5.4, 1156.0], [5.5, 1156.0], [5.6, 1156.0], [5.7, 1156.0], [5.8, 1156.0], [5.9, 1156.0], [6.0, 1156.0], [6.1, 1156.0], [6.2, 1156.0], [6.3, 1156.0], [6.4, 1156.0], [6.5, 1156.0], [6.6, 1159.0], [6.7, 1159.0], [6.8, 1159.0], [6.9, 1159.0], [7.0, 1159.0], [7.1, 1159.0], [7.2, 1159.0], [7.3, 1159.0], [7.4, 1159.0], [7.5, 1159.0], [7.6, 1159.0], [7.7, 1159.0], [7.8, 1159.0], [7.9, 1159.0], [8.0, 1159.0], [8.1, 1159.0], [8.2, 1159.0], [8.3, 1159.0], [8.4, 1159.0], [8.5, 1159.0], [8.6, 1159.0], [8.7, 1171.0], [8.8, 1171.0], [8.9, 1171.0], [9.0, 1171.0], [9.1, 1171.0], [9.2, 1171.0], [9.3, 1171.0], [9.4, 1171.0], [9.5, 1171.0], [9.6, 1171.0], [9.7, 1171.0], [9.8, 1171.0], [9.9, 1171.0], [10.0, 1171.0], [10.1, 1171.0], [10.2, 1171.0], [10.3, 1171.0], [10.4, 1171.0], [10.5, 1171.0], [10.6, 1171.0], [10.7, 1171.0], [10.8, 1171.0], [10.9, 1176.0], [11.0, 1176.0], [11.1, 1176.0], [11.2, 1176.0], [11.3, 1176.0], [11.4, 1176.0], [11.5, 1176.0], [11.6, 1176.0], [11.7, 1176.0], [11.8, 1176.0], [11.9, 1176.0], [12.0, 1176.0], [12.1, 1176.0], [12.2, 1176.0], [12.3, 1176.0], [12.4, 1176.0], [12.5, 1176.0], [12.6, 1176.0], [12.7, 1176.0], [12.8, 1176.0], [12.9, 1176.0], [13.0, 1176.0], [13.1, 1228.0], [13.2, 1228.0], [13.3, 1228.0], [13.4, 1228.0], [13.5, 1228.0], [13.6, 1228.0], [13.7, 1228.0], [13.8, 1228.0], [13.9, 1228.0], [14.0, 1228.0], [14.1, 1228.0], [14.2, 1228.0], [14.3, 1228.0], [14.4, 1228.0], [14.5, 1228.0], [14.6, 1228.0], [14.7, 1228.0], [14.8, 1228.0], [14.9, 1228.0], [15.0, 1228.0], [15.1, 1228.0], [15.2, 1228.0], [15.3, 1239.0], [15.4, 1239.0], [15.5, 1239.0], [15.6, 1239.0], [15.7, 1239.0], [15.8, 1239.0], [15.9, 1239.0], [16.0, 1239.0], [16.1, 1239.0], [16.2, 1239.0], [16.3, 1239.0], [16.4, 1239.0], [16.5, 1239.0], [16.6, 1239.0], [16.7, 1239.0], [16.8, 1239.0], [16.9, 1239.0], [17.0, 1239.0], [17.1, 1239.0], [17.2, 1239.0], [17.3, 1239.0], [17.4, 1254.0], [17.5, 1254.0], [17.6, 1254.0], [17.7, 1254.0], [17.8, 1254.0], [17.9, 1254.0], [18.0, 1254.0], [18.1, 1254.0], [18.2, 1254.0], [18.3, 1254.0], [18.4, 1254.0], [18.5, 1254.0], [18.6, 1254.0], [18.7, 1254.0], [18.8, 1254.0], [18.9, 1254.0], [19.0, 1254.0], [19.1, 1254.0], [19.2, 1254.0], [19.3, 1254.0], [19.4, 1254.0], [19.5, 1254.0], [19.6, 1275.0], [19.7, 1275.0], [19.8, 1275.0], [19.9, 1275.0], [20.0, 1275.0], [20.1, 1275.0], [20.2, 1275.0], [20.3, 1275.0], [20.4, 1275.0], [20.5, 1275.0], [20.6, 1275.0], [20.7, 1275.0], [20.8, 1275.0], [20.9, 1275.0], [21.0, 1275.0], [21.1, 1275.0], [21.2, 1275.0], [21.3, 1275.0], [21.4, 1275.0], [21.5, 1275.0], [21.6, 1275.0], [21.7, 1275.0], [21.8, 1318.0], [21.9, 1318.0], [22.0, 1318.0], [22.1, 1318.0], [22.2, 1318.0], [22.3, 1318.0], [22.4, 1318.0], [22.5, 1318.0], [22.6, 1318.0], [22.7, 1318.0], [22.8, 1318.0], [22.9, 1318.0], [23.0, 1318.0], [23.1, 1318.0], [23.2, 1318.0], [23.3, 1318.0], [23.4, 1318.0], [23.5, 1318.0], [23.6, 1318.0], [23.7, 1318.0], [23.8, 1318.0], [23.9, 1318.0], [24.0, 1345.0], [24.1, 1345.0], [24.2, 1345.0], [24.3, 1345.0], [24.4, 1345.0], [24.5, 1345.0], [24.6, 1345.0], [24.7, 1345.0], [24.8, 1345.0], [24.9, 1345.0], [25.0, 1345.0], [25.1, 1345.0], [25.2, 1345.0], [25.3, 1345.0], [25.4, 1345.0], [25.5, 1345.0], [25.6, 1345.0], [25.7, 1345.0], [25.8, 1345.0], [25.9, 1345.0], [26.0, 1345.0], [26.1, 1348.0], [26.2, 1348.0], [26.3, 1348.0], [26.4, 1348.0], [26.5, 1348.0], [26.6, 1348.0], [26.7, 1348.0], [26.8, 1348.0], [26.9, 1348.0], [27.0, 1348.0], [27.1, 1348.0], [27.2, 1348.0], [27.3, 1348.0], [27.4, 1348.0], [27.5, 1348.0], [27.6, 1348.0], [27.7, 1348.0], [27.8, 1348.0], [27.9, 1348.0], [28.0, 1348.0], [28.1, 1348.0], [28.2, 1348.0], [28.3, 1364.0], [28.4, 1364.0], [28.5, 1364.0], [28.6, 1364.0], [28.7, 1364.0], [28.8, 1364.0], [28.9, 1364.0], [29.0, 1364.0], [29.1, 1364.0], [29.2, 1364.0], [29.3, 1364.0], [29.4, 1364.0], [29.5, 1364.0], [29.6, 1364.0], [29.7, 1364.0], [29.8, 1364.0], [29.9, 1364.0], [30.0, 1364.0], [30.1, 1364.0], [30.2, 1364.0], [30.3, 1364.0], [30.4, 1364.0], [30.5, 1385.0], [30.6, 1385.0], [30.7, 1385.0], [30.8, 1385.0], [30.9, 1385.0], [31.0, 1385.0], [31.1, 1385.0], [31.2, 1385.0], [31.3, 1385.0], [31.4, 1385.0], [31.5, 1385.0], [31.6, 1385.0], [31.7, 1385.0], [31.8, 1385.0], [31.9, 1385.0], [32.0, 1385.0], [32.1, 1385.0], [32.2, 1385.0], [32.3, 1385.0], [32.4, 1385.0], [32.5, 1385.0], [32.6, 1385.0], [32.7, 1417.0], [32.8, 1417.0], [32.9, 1417.0], [33.0, 1417.0], [33.1, 1417.0], [33.2, 1417.0], [33.3, 1417.0], [33.4, 1417.0], [33.5, 1417.0], [33.6, 1417.0], [33.7, 1417.0], [33.8, 1417.0], [33.9, 1417.0], [34.0, 1417.0], [34.1, 1417.0], [34.2, 1417.0], [34.3, 1417.0], [34.4, 1417.0], [34.5, 1417.0], [34.6, 1417.0], [34.7, 1417.0], [34.8, 1424.0], [34.9, 1424.0], [35.0, 1424.0], [35.1, 1424.0], [35.2, 1424.0], [35.3, 1424.0], [35.4, 1424.0], [35.5, 1424.0], [35.6, 1424.0], [35.7, 1424.0], [35.8, 1424.0], [35.9, 1424.0], [36.0, 1424.0], [36.1, 1424.0], [36.2, 1424.0], [36.3, 1424.0], [36.4, 1424.0], [36.5, 1424.0], [36.6, 1424.0], [36.7, 1424.0], [36.8, 1424.0], [36.9, 1424.0], [37.0, 1617.0], [37.1, 1617.0], [37.2, 1617.0], [37.3, 1617.0], [37.4, 1617.0], [37.5, 1617.0], [37.6, 1617.0], [37.7, 1617.0], [37.8, 1617.0], [37.9, 1617.0], [38.0, 1617.0], [38.1, 1617.0], [38.2, 1617.0], [38.3, 1617.0], [38.4, 1617.0], [38.5, 1617.0], [38.6, 1617.0], [38.7, 1617.0], [38.8, 1617.0], [38.9, 1617.0], [39.0, 1617.0], [39.1, 1617.0], [39.2, 1697.0], [39.3, 1697.0], [39.4, 1697.0], [39.5, 1697.0], [39.6, 1697.0], [39.7, 1697.0], [39.8, 1697.0], [39.9, 1697.0], [40.0, 1697.0], [40.1, 1697.0], [40.2, 1697.0], [40.3, 1697.0], [40.4, 1697.0], [40.5, 1697.0], [40.6, 1697.0], [40.7, 1697.0], [40.8, 1697.0], [40.9, 1697.0], [41.0, 1697.0], [41.1, 1697.0], [41.2, 1697.0], [41.3, 1697.0], [41.4, 1720.0], [41.5, 1720.0], [41.6, 1720.0], [41.7, 1720.0], [41.8, 1720.0], [41.9, 1720.0], [42.0, 1720.0], [42.1, 1720.0], [42.2, 1720.0], [42.3, 1720.0], [42.4, 1720.0], [42.5, 1720.0], [42.6, 1720.0], [42.7, 1720.0], [42.8, 1720.0], [42.9, 1720.0], [43.0, 1720.0], [43.1, 1720.0], [43.2, 1720.0], [43.3, 1720.0], [43.4, 1720.0], [43.5, 1937.0], [43.6, 1937.0], [43.7, 1937.0], [43.8, 1937.0], [43.9, 1937.0], [44.0, 1937.0], [44.1, 1937.0], [44.2, 1937.0], [44.3, 1937.0], [44.4, 1937.0], [44.5, 1937.0], [44.6, 1937.0], [44.7, 1937.0], [44.8, 1937.0], [44.9, 1937.0], [45.0, 1937.0], [45.1, 1937.0], [45.2, 1937.0], [45.3, 1937.0], [45.4, 1937.0], [45.5, 1937.0], [45.6, 1937.0], [45.7, 2118.0], [45.8, 2118.0], [45.9, 2118.0], [46.0, 2118.0], [46.1, 2118.0], [46.2, 2118.0], [46.3, 2118.0], [46.4, 2118.0], [46.5, 2118.0], [46.6, 2118.0], [46.7, 2118.0], [46.8, 2118.0], [46.9, 2118.0], [47.0, 2118.0], [47.1, 2118.0], [47.2, 2118.0], [47.3, 2118.0], [47.4, 2118.0], [47.5, 2118.0], [47.6, 2118.0], [47.7, 2118.0], [47.8, 2118.0], [47.9, 2154.0], [48.0, 2154.0], [48.1, 2154.0], [48.2, 2154.0], [48.3, 2154.0], [48.4, 2154.0], [48.5, 2154.0], [48.6, 2154.0], [48.7, 2154.0], [48.8, 2154.0], [48.9, 2154.0], [49.0, 2154.0], [49.1, 2154.0], [49.2, 2154.0], [49.3, 2154.0], [49.4, 2154.0], [49.5, 2154.0], [49.6, 2154.0], [49.7, 2154.0], [49.8, 2154.0], [49.9, 2154.0], [50.0, 2284.0], [50.1, 2284.0], [50.2, 2284.0], [50.3, 2284.0], [50.4, 2284.0], [50.5, 2284.0], [50.6, 2284.0], [50.7, 2284.0], [50.8, 2284.0], [50.9, 2284.0], [51.0, 2284.0], [51.1, 2284.0], [51.2, 2284.0], [51.3, 2284.0], [51.4, 2284.0], [51.5, 2284.0], [51.6, 2284.0], [51.7, 2284.0], [51.8, 2284.0], [51.9, 2284.0], [52.0, 2284.0], [52.1, 2284.0], [52.2, 2293.0], [52.3, 2293.0], [52.4, 2293.0], [52.5, 2293.0], [52.6, 2293.0], [52.7, 2293.0], [52.8, 2293.0], [52.9, 2293.0], [53.0, 2293.0], [53.1, 2293.0], [53.2, 2293.0], [53.3, 2293.0], [53.4, 2293.0], [53.5, 2293.0], [53.6, 2293.0], [53.7, 2293.0], [53.8, 2293.0], [53.9, 2293.0], [54.0, 2293.0], [54.1, 2293.0], [54.2, 2293.0], [54.3, 2293.0], [54.4, 2306.0], [54.5, 2306.0], [54.6, 2306.0], [54.7, 2306.0], [54.8, 2306.0], [54.9, 2306.0], [55.0, 2306.0], [55.1, 2306.0], [55.2, 2306.0], [55.3, 2306.0], [55.4, 2306.0], [55.5, 2306.0], [55.6, 2306.0], [55.7, 2306.0], [55.8, 2306.0], [55.9, 2306.0], [56.0, 2306.0], [56.1, 2306.0], [56.2, 2306.0], [56.3, 2306.0], [56.4, 2306.0], [56.5, 2306.0], [56.6, 2306.0], [56.7, 2306.0], [56.8, 2306.0], [56.9, 2306.0], [57.0, 2306.0], [57.1, 2306.0], [57.2, 2306.0], [57.3, 2306.0], [57.4, 2306.0], [57.5, 2306.0], [57.6, 2306.0], [57.7, 2306.0], [57.8, 2306.0], [57.9, 2306.0], [58.0, 2306.0], [58.1, 2306.0], [58.2, 2306.0], [58.3, 2306.0], [58.4, 2306.0], [58.5, 2306.0], [58.6, 2306.0], [58.7, 2329.0], [58.8, 2329.0], [58.9, 2329.0], [59.0, 2329.0], [59.1, 2329.0], [59.2, 2329.0], [59.3, 2329.0], [59.4, 2329.0], [59.5, 2329.0], [59.6, 2329.0], [59.7, 2329.0], [59.8, 2329.0], [59.9, 2329.0], [60.0, 2329.0], [60.1, 2329.0], [60.2, 2329.0], [60.3, 2329.0], [60.4, 2329.0], [60.5, 2329.0], [60.6, 2329.0], [60.7, 2329.0], [60.8, 2329.0], [60.9, 2418.0], [61.0, 2418.0], [61.1, 2418.0], [61.2, 2418.0], [61.3, 2418.0], [61.4, 2418.0], [61.5, 2418.0], [61.6, 2418.0], [61.7, 2418.0], [61.8, 2418.0], [61.9, 2418.0], [62.0, 2418.0], [62.1, 2418.0], [62.2, 2418.0], [62.3, 2418.0], [62.4, 2418.0], [62.5, 2418.0], [62.6, 2418.0], [62.7, 2418.0], [62.8, 2418.0], [62.9, 2418.0], [63.0, 2418.0], [63.1, 2433.0], [63.2, 2433.0], [63.3, 2433.0], [63.4, 2433.0], [63.5, 2433.0], [63.6, 2433.0], [63.7, 2433.0], [63.8, 2433.0], [63.9, 2433.0], [64.0, 2433.0], [64.1, 2433.0], [64.2, 2433.0], [64.3, 2433.0], [64.4, 2433.0], [64.5, 2433.0], [64.6, 2433.0], [64.7, 2433.0], [64.8, 2433.0], [64.9, 2433.0], [65.0, 2433.0], [65.1, 2433.0], [65.2, 2433.0], [65.3, 2756.0], [65.4, 2756.0], [65.5, 2756.0], [65.6, 2756.0], [65.7, 2756.0], [65.8, 2756.0], [65.9, 2756.0], [66.0, 2756.0], [66.1, 2756.0], [66.2, 2756.0], [66.3, 2756.0], [66.4, 2756.0], [66.5, 2756.0], [66.6, 2756.0], [66.7, 2756.0], [66.8, 2756.0], [66.9, 2756.0], [67.0, 2756.0], [67.1, 2756.0], [67.2, 2756.0], [67.3, 2756.0], [67.4, 2767.0], [67.5, 2767.0], [67.6, 2767.0], [67.7, 2767.0], [67.8, 2767.0], [67.9, 2767.0], [68.0, 2767.0], [68.1, 2767.0], [68.2, 2767.0], [68.3, 2767.0], [68.4, 2767.0], [68.5, 2767.0], [68.6, 2767.0], [68.7, 2767.0], [68.8, 2767.0], [68.9, 2767.0], [69.0, 2767.0], [69.1, 2767.0], [69.2, 2767.0], [69.3, 2767.0], [69.4, 2767.0], [69.5, 2767.0], [69.6, 2891.0], [69.7, 2891.0], [69.8, 2891.0], [69.9, 2891.0], [70.0, 2891.0], [70.1, 2891.0], [70.2, 2891.0], [70.3, 2891.0], [70.4, 2891.0], [70.5, 2891.0], [70.6, 2891.0], [70.7, 2891.0], [70.8, 2891.0], [70.9, 2891.0], [71.0, 2891.0], [71.1, 2891.0], [71.2, 2891.0], [71.3, 2891.0], [71.4, 2891.0], [71.5, 2891.0], [71.6, 2891.0], [71.7, 2891.0], [71.8, 3136.0], [71.9, 3136.0], [72.0, 3136.0], [72.1, 3136.0], [72.2, 3136.0], [72.3, 3136.0], [72.4, 3136.0], [72.5, 3136.0], [72.6, 3136.0], [72.7, 3136.0], [72.8, 3136.0], [72.9, 3136.0], [73.0, 3136.0], [73.1, 3136.0], [73.2, 3136.0], [73.3, 3136.0], [73.4, 3136.0], [73.5, 3136.0], [73.6, 3136.0], [73.7, 3136.0], [73.8, 3136.0], [73.9, 3136.0], [74.0, 3627.0], [74.1, 3627.0], [74.2, 3627.0], [74.3, 3627.0], [74.4, 3627.0], [74.5, 3627.0], [74.6, 3627.0], [74.7, 3627.0], [74.8, 3627.0], [74.9, 3627.0], [75.0, 3627.0], [75.1, 3627.0], [75.2, 3627.0], [75.3, 3627.0], [75.4, 3627.0], [75.5, 3627.0], [75.6, 3627.0], [75.7, 3627.0], [75.8, 3627.0], [75.9, 3627.0], [76.0, 3627.0], [76.1, 3678.0], [76.2, 3678.0], [76.3, 3678.0], [76.4, 3678.0], [76.5, 3678.0], [76.6, 3678.0], [76.7, 3678.0], [76.8, 3678.0], [76.9, 3678.0], [77.0, 3678.0], [77.1, 3678.0], [77.2, 3678.0], [77.3, 3678.0], [77.4, 3678.0], [77.5, 3678.0], [77.6, 3678.0], [77.7, 3678.0], [77.8, 3678.0], [77.9, 3678.0], [78.0, 3678.0], [78.1, 3678.0], [78.2, 3678.0], [78.3, 4042.0], [78.4, 4042.0], [78.5, 4042.0], [78.6, 4042.0], [78.7, 4042.0], [78.8, 4042.0], [78.9, 4042.0], [79.0, 4042.0], [79.1, 4042.0], [79.2, 4042.0], [79.3, 4042.0], [79.4, 4042.0], [79.5, 4042.0], [79.6, 4042.0], [79.7, 4042.0], [79.8, 4042.0], [79.9, 4042.0], [80.0, 4042.0], [80.1, 4042.0], [80.2, 4042.0], [80.3, 4042.0], [80.4, 4042.0], [80.5, 4142.0], [80.6, 4142.0], [80.7, 4142.0], [80.8, 4142.0], [80.9, 4142.0], [81.0, 4142.0], [81.1, 4142.0], [81.2, 4142.0], [81.3, 4142.0], [81.4, 4142.0], [81.5, 4142.0], [81.6, 4142.0], [81.7, 4142.0], [81.8, 4142.0], [81.9, 4142.0], [82.0, 4142.0], [82.1, 4142.0], [82.2, 4142.0], [82.3, 4142.0], [82.4, 4142.0], [82.5, 4142.0], [82.6, 4142.0], [82.7, 4147.0], [82.8, 4147.0], [82.9, 4147.0], [83.0, 4147.0], [83.1, 4147.0], [83.2, 4147.0], [83.3, 4147.0], [83.4, 4147.0], [83.5, 4147.0], [83.6, 4147.0], [83.7, 4147.0], [83.8, 4147.0], [83.9, 4147.0], [84.0, 4147.0], [84.1, 4147.0], [84.2, 4147.0], [84.3, 4147.0], [84.4, 4147.0], [84.5, 4147.0], [84.6, 4147.0], [84.7, 4147.0], [84.8, 4372.0], [84.9, 4372.0], [85.0, 4372.0], [85.1, 4372.0], [85.2, 4372.0], [85.3, 4372.0], [85.4, 4372.0], [85.5, 4372.0], [85.6, 4372.0], [85.7, 4372.0], [85.8, 4372.0], [85.9, 4372.0], [86.0, 4372.0], [86.1, 4372.0], [86.2, 4372.0], [86.3, 4372.0], [86.4, 4372.0], [86.5, 4372.0], [86.6, 4372.0], [86.7, 4372.0], [86.8, 4372.0], [86.9, 4372.0], [87.0, 4406.0], [87.1, 4406.0], [87.2, 4406.0], [87.3, 4406.0], [87.4, 4406.0], [87.5, 4406.0], [87.6, 4406.0], [87.7, 4406.0], [87.8, 4406.0], [87.9, 4406.0], [88.0, 4406.0], [88.1, 4406.0], [88.2, 4406.0], [88.3, 4406.0], [88.4, 4406.0], [88.5, 4406.0], [88.6, 4406.0], [88.7, 4406.0], [88.8, 4406.0], [88.9, 4406.0], [89.0, 4406.0], [89.1, 4406.0], [89.2, 4457.0], [89.3, 4457.0], [89.4, 4457.0], [89.5, 4457.0], [89.6, 4457.0], [89.7, 4457.0], [89.8, 4457.0], [89.9, 4457.0], [90.0, 4457.0], [90.1, 4457.0], [90.2, 4457.0], [90.3, 4457.0], [90.4, 4457.0], [90.5, 4457.0], [90.6, 4457.0], [90.7, 4457.0], [90.8, 4457.0], [90.9, 4457.0], [91.0, 4457.0], [91.1, 4457.0], [91.2, 4457.0], [91.3, 4457.0], [91.4, 4508.0], [91.5, 4508.0], [91.6, 4508.0], [91.7, 4508.0], [91.8, 4508.0], [91.9, 4508.0], [92.0, 4508.0], [92.1, 4508.0], [92.2, 4508.0], [92.3, 4508.0], [92.4, 4508.0], [92.5, 4508.0], [92.6, 4508.0], [92.7, 4508.0], [92.8, 4508.0], [92.9, 4508.0], [93.0, 4508.0], [93.1, 4508.0], [93.2, 4508.0], [93.3, 4508.0], [93.4, 4508.0], [93.5, 4668.0], [93.6, 4668.0], [93.7, 4668.0], [93.8, 4668.0], [93.9, 4668.0], [94.0, 4668.0], [94.1, 4668.0], [94.2, 4668.0], [94.3, 4668.0], [94.4, 4668.0], [94.5, 4668.0], [94.6, 4668.0], [94.7, 4668.0], [94.8, 4668.0], [94.9, 4668.0], [95.0, 4668.0], [95.1, 4668.0], [95.2, 4668.0], [95.3, 4668.0], [95.4, 4668.0], [95.5, 4668.0], [95.6, 4668.0], [95.7, 4961.0], [95.8, 4961.0], [95.9, 4961.0], [96.0, 4961.0], [96.1, 4961.0], [96.2, 4961.0], [96.3, 4961.0], [96.4, 4961.0], [96.5, 4961.0], [96.6, 4961.0], [96.7, 4961.0], [96.8, 4961.0], [96.9, 4961.0], [97.0, 4961.0], [97.1, 4961.0], [97.2, 4961.0], [97.3, 4961.0], [97.4, 4961.0], [97.5, 4961.0], [97.6, 4961.0], [97.7, 4961.0], [97.8, 4961.0], [97.9, 4966.0], [98.0, 4966.0], [98.1, 4966.0], [98.2, 4966.0], [98.3, 4966.0], [98.4, 4966.0], [98.5, 4966.0], [98.6, 4966.0], [98.7, 4966.0], [98.8, 4966.0], [98.9, 4966.0], [99.0, 4966.0], [99.1, 4966.0], [99.2, 4966.0], [99.3, 4966.0], [99.4, 4966.0], [99.5, 4966.0], [99.6, 4966.0], [99.7, 4966.0], [99.8, 4966.0], [99.9, 4966.0], [100.0, 4966.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[0.0, 109.0], [0.1, 109.0], [0.2, 109.0], [0.3, 109.0], [0.4, 109.0], [0.5, 109.0], [0.6, 109.0], [0.7, 109.0], [0.8, 109.0], [0.9, 109.0], [1.0, 109.0], [1.1, 109.0], [1.2, 109.0], [1.3, 109.0], [1.4, 109.0], [1.5, 109.0], [1.6, 109.0], [1.7, 120.0], [1.8, 120.0], [1.9, 120.0], [2.0, 120.0], [2.1, 120.0], [2.2, 120.0], [2.3, 120.0], [2.4, 120.0], [2.5, 120.0], [2.6, 120.0], [2.7, 120.0], [2.8, 120.0], [2.9, 120.0], [3.0, 120.0], [3.1, 120.0], [3.2, 120.0], [3.3, 120.0], [3.4, 129.0], [3.5, 129.0], [3.6, 129.0], [3.7, 129.0], [3.8, 129.0], [3.9, 129.0], [4.0, 129.0], [4.1, 129.0], [4.2, 129.0], [4.3, 129.0], [4.4, 129.0], [4.5, 129.0], [4.6, 129.0], [4.7, 129.0], [4.8, 129.0], [4.9, 129.0], [5.0, 129.0], [5.1, 166.0], [5.2, 166.0], [5.3, 166.0], [5.4, 166.0], [5.5, 166.0], [5.6, 166.0], [5.7, 166.0], [5.8, 166.0], [5.9, 166.0], [6.0, 166.0], [6.1, 166.0], [6.2, 166.0], [6.3, 166.0], [6.4, 166.0], [6.5, 166.0], [6.6, 166.0], [6.7, 166.0], [6.8, 167.0], [6.9, 167.0], [7.0, 167.0], [7.1, 167.0], [7.2, 167.0], [7.3, 167.0], [7.4, 167.0], [7.5, 167.0], [7.6, 167.0], [7.7, 167.0], [7.8, 167.0], [7.9, 167.0], [8.0, 167.0], [8.1, 167.0], [8.2, 167.0], [8.3, 167.0], [8.4, 167.0], [8.5, 171.0], [8.6, 171.0], [8.7, 171.0], [8.8, 171.0], [8.9, 171.0], [9.0, 171.0], [9.1, 171.0], [9.2, 171.0], [9.3, 171.0], [9.4, 171.0], [9.5, 171.0], [9.6, 171.0], [9.7, 171.0], [9.8, 171.0], [9.9, 171.0], [10.0, 171.0], [10.1, 171.0], [10.2, 198.0], [10.3, 198.0], [10.4, 198.0], [10.5, 198.0], [10.6, 198.0], [10.7, 198.0], [10.8, 198.0], [10.9, 198.0], [11.0, 198.0], [11.1, 198.0], [11.2, 198.0], [11.3, 198.0], [11.4, 198.0], [11.5, 198.0], [11.6, 198.0], [11.7, 198.0], [11.8, 198.0], [11.9, 199.0], [12.0, 199.0], [12.1, 199.0], [12.2, 199.0], [12.3, 199.0], [12.4, 199.0], [12.5, 199.0], [12.6, 199.0], [12.7, 199.0], [12.8, 199.0], [12.9, 199.0], [13.0, 199.0], [13.1, 199.0], [13.2, 199.0], [13.3, 199.0], [13.4, 199.0], [13.5, 199.0], [13.6, 201.0], [13.7, 201.0], [13.8, 201.0], [13.9, 201.0], [14.0, 201.0], [14.1, 201.0], [14.2, 201.0], [14.3, 201.0], [14.4, 201.0], [14.5, 201.0], [14.6, 201.0], [14.7, 201.0], [14.8, 201.0], [14.9, 201.0], [15.0, 201.0], [15.1, 201.0], [15.2, 201.0], [15.3, 209.0], [15.4, 209.0], [15.5, 209.0], [15.6, 209.0], [15.7, 209.0], [15.8, 209.0], [15.9, 209.0], [16.0, 209.0], [16.1, 209.0], [16.2, 209.0], [16.3, 209.0], [16.4, 209.0], [16.5, 209.0], [16.6, 209.0], [16.7, 209.0], [16.8, 209.0], [16.9, 209.0], [17.0, 213.0], [17.1, 213.0], [17.2, 213.0], [17.3, 213.0], [17.4, 213.0], [17.5, 213.0], [17.6, 213.0], [17.7, 213.0], [17.8, 213.0], [17.9, 213.0], [18.0, 213.0], [18.1, 213.0], [18.2, 213.0], [18.3, 213.0], [18.4, 213.0], [18.5, 213.0], [18.6, 213.0], [18.7, 230.0], [18.8, 230.0], [18.9, 230.0], [19.0, 230.0], [19.1, 230.0], [19.2, 230.0], [19.3, 230.0], [19.4, 230.0], [19.5, 230.0], [19.6, 230.0], [19.7, 230.0], [19.8, 230.0], [19.9, 230.0], [20.0, 230.0], [20.1, 230.0], [20.2, 230.0], [20.3, 230.0], [20.4, 254.0], [20.5, 254.0], [20.6, 254.0], [20.7, 254.0], [20.8, 254.0], [20.9, 254.0], [21.0, 254.0], [21.1, 254.0], [21.2, 254.0], [21.3, 254.0], [21.4, 254.0], [21.5, 254.0], [21.6, 254.0], [21.7, 254.0], [21.8, 254.0], [21.9, 254.0], [22.0, 254.0], [22.1, 267.0], [22.2, 267.0], [22.3, 267.0], [22.4, 267.0], [22.5, 267.0], [22.6, 267.0], [22.7, 267.0], [22.8, 267.0], [22.9, 267.0], [23.0, 267.0], [23.1, 267.0], [23.2, 267.0], [23.3, 267.0], [23.4, 267.0], [23.5, 267.0], [23.6, 267.0], [23.7, 267.0], [23.8, 278.0], [23.9, 278.0], [24.0, 278.0], [24.1, 278.0], [24.2, 278.0], [24.3, 278.0], [24.4, 278.0], [24.5, 278.0], [24.6, 278.0], [24.7, 278.0], [24.8, 278.0], [24.9, 278.0], [25.0, 278.0], [25.1, 278.0], [25.2, 278.0], [25.3, 278.0], [25.4, 278.0], [25.5, 297.0], [25.6, 297.0], [25.7, 297.0], [25.8, 297.0], [25.9, 297.0], [26.0, 297.0], [26.1, 297.0], [26.2, 297.0], [26.3, 297.0], [26.4, 297.0], [26.5, 297.0], [26.6, 297.0], [26.7, 297.0], [26.8, 297.0], [26.9, 297.0], [27.0, 297.0], [27.1, 297.0], [27.2, 324.0], [27.3, 324.0], [27.4, 324.0], [27.5, 324.0], [27.6, 324.0], [27.7, 324.0], [27.8, 324.0], [27.9, 324.0], [28.0, 324.0], [28.1, 324.0], [28.2, 324.0], [28.3, 324.0], [28.4, 324.0], [28.5, 324.0], [28.6, 324.0], [28.7, 324.0], [28.8, 324.0], [28.9, 351.0], [29.0, 351.0], [29.1, 351.0], [29.2, 351.0], [29.3, 351.0], [29.4, 351.0], [29.5, 351.0], [29.6, 351.0], [29.7, 351.0], [29.8, 351.0], [29.9, 351.0], [30.0, 351.0], [30.1, 351.0], [30.2, 351.0], [30.3, 351.0], [30.4, 351.0], [30.5, 351.0], [30.6, 421.0], [30.7, 421.0], [30.8, 421.0], [30.9, 421.0], [31.0, 421.0], [31.1, 421.0], [31.2, 421.0], [31.3, 421.0], [31.4, 421.0], [31.5, 421.0], [31.6, 421.0], [31.7, 421.0], [31.8, 421.0], [31.9, 421.0], [32.0, 421.0], [32.1, 421.0], [32.2, 421.0], [32.3, 426.0], [32.4, 426.0], [32.5, 426.0], [32.6, 426.0], [32.7, 426.0], [32.8, 426.0], [32.9, 426.0], [33.0, 426.0], [33.1, 426.0], [33.2, 426.0], [33.3, 426.0], [33.4, 426.0], [33.5, 426.0], [33.6, 426.0], [33.7, 426.0], [33.8, 426.0], [33.9, 463.0], [34.0, 463.0], [34.1, 463.0], [34.2, 463.0], [34.3, 463.0], [34.4, 463.0], [34.5, 463.0], [34.6, 463.0], [34.7, 463.0], [34.8, 463.0], [34.9, 463.0], [35.0, 463.0], [35.1, 463.0], [35.2, 463.0], [35.3, 463.0], [35.4, 463.0], [35.5, 463.0], [35.6, 513.0], [35.7, 513.0], [35.8, 513.0], [35.9, 513.0], [36.0, 513.0], [36.1, 513.0], [36.2, 513.0], [36.3, 513.0], [36.4, 513.0], [36.5, 513.0], [36.6, 513.0], [36.7, 513.0], [36.8, 513.0], [36.9, 513.0], [37.0, 513.0], [37.1, 513.0], [37.2, 513.0], [37.3, 516.0], [37.4, 516.0], [37.5, 516.0], [37.6, 516.0], [37.7, 516.0], [37.8, 516.0], [37.9, 516.0], [38.0, 516.0], [38.1, 516.0], [38.2, 516.0], [38.3, 516.0], [38.4, 516.0], [38.5, 516.0], [38.6, 516.0], [38.7, 516.0], [38.8, 516.0], [38.9, 516.0], [39.0, 541.0], [39.1, 541.0], [39.2, 541.0], [39.3, 541.0], [39.4, 541.0], [39.5, 541.0], [39.6, 541.0], [39.7, 541.0], [39.8, 541.0], [39.9, 541.0], [40.0, 541.0], [40.1, 541.0], [40.2, 541.0], [40.3, 541.0], [40.4, 541.0], [40.5, 541.0], [40.6, 541.0], [40.7, 546.0], [40.8, 546.0], [40.9, 546.0], [41.0, 546.0], [41.1, 546.0], [41.2, 546.0], [41.3, 546.0], [41.4, 546.0], [41.5, 546.0], [41.6, 546.0], [41.7, 546.0], [41.8, 546.0], [41.9, 546.0], [42.0, 546.0], [42.1, 546.0], [42.2, 546.0], [42.3, 546.0], [42.4, 560.0], [42.5, 560.0], [42.6, 560.0], [42.7, 560.0], [42.8, 560.0], [42.9, 560.0], [43.0, 560.0], [43.1, 560.0], [43.2, 560.0], [43.3, 560.0], [43.4, 560.0], [43.5, 560.0], [43.6, 560.0], [43.7, 560.0], [43.8, 560.0], [43.9, 560.0], [44.0, 560.0], [44.1, 597.0], [44.2, 597.0], [44.3, 597.0], [44.4, 597.0], [44.5, 597.0], [44.6, 597.0], [44.7, 597.0], [44.8, 597.0], [44.9, 597.0], [45.0, 597.0], [45.1, 597.0], [45.2, 597.0], [45.3, 597.0], [45.4, 597.0], [45.5, 597.0], [45.6, 597.0], [45.7, 597.0], [45.8, 604.0], [45.9, 604.0], [46.0, 604.0], [46.1, 604.0], [46.2, 604.0], [46.3, 604.0], [46.4, 604.0], [46.5, 604.0], [46.6, 604.0], [46.7, 604.0], [46.8, 604.0], [46.9, 604.0], [47.0, 604.0], [47.1, 604.0], [47.2, 604.0], [47.3, 604.0], [47.4, 604.0], [47.5, 647.0], [47.6, 647.0], [47.7, 647.0], [47.8, 647.0], [47.9, 647.0], [48.0, 647.0], [48.1, 647.0], [48.2, 647.0], [48.3, 647.0], [48.4, 647.0], [48.5, 647.0], [48.6, 647.0], [48.7, 647.0], [48.8, 647.0], [48.9, 647.0], [49.0, 647.0], [49.1, 647.0], [49.2, 676.0], [49.3, 676.0], [49.4, 676.0], [49.5, 676.0], [49.6, 676.0], [49.7, 676.0], [49.8, 676.0], [49.9, 676.0], [50.0, 676.0], [50.1, 676.0], [50.2, 676.0], [50.3, 676.0], [50.4, 676.0], [50.5, 676.0], [50.6, 676.0], [50.7, 676.0], [50.8, 676.0], [50.9, 691.0], [51.0, 691.0], [51.1, 691.0], [51.2, 691.0], [51.3, 691.0], [51.4, 691.0], [51.5, 691.0], [51.6, 691.0], [51.7, 691.0], [51.8, 691.0], [51.9, 691.0], [52.0, 691.0], [52.1, 691.0], [52.2, 691.0], [52.3, 691.0], [52.4, 691.0], [52.5, 691.0], [52.6, 719.0], [52.7, 719.0], [52.8, 719.0], [52.9, 719.0], [53.0, 719.0], [53.1, 719.0], [53.2, 719.0], [53.3, 719.0], [53.4, 719.0], [53.5, 719.0], [53.6, 719.0], [53.7, 719.0], [53.8, 719.0], [53.9, 719.0], [54.0, 719.0], [54.1, 719.0], [54.2, 719.0], [54.3, 749.0], [54.4, 749.0], [54.5, 749.0], [54.6, 749.0], [54.7, 749.0], [54.8, 749.0], [54.9, 749.0], [55.0, 749.0], [55.1, 749.0], [55.2, 749.0], [55.3, 749.0], [55.4, 749.0], [55.5, 749.0], [55.6, 749.0], [55.7, 749.0], [55.8, 749.0], [55.9, 749.0], [56.0, 784.0], [56.1, 784.0], [56.2, 784.0], [56.3, 784.0], [56.4, 784.0], [56.5, 784.0], [56.6, 784.0], [56.7, 784.0], [56.8, 784.0], [56.9, 784.0], [57.0, 784.0], [57.1, 784.0], [57.2, 784.0], [57.3, 784.0], [57.4, 784.0], [57.5, 784.0], [57.6, 784.0], [57.7, 816.0], [57.8, 816.0], [57.9, 816.0], [58.0, 816.0], [58.1, 816.0], [58.2, 816.0], [58.3, 816.0], [58.4, 816.0], [58.5, 816.0], [58.6, 816.0], [58.7, 816.0], [58.8, 816.0], [58.9, 816.0], [59.0, 816.0], [59.1, 816.0], [59.2, 816.0], [59.3, 816.0], [59.4, 826.0], [59.5, 826.0], [59.6, 826.0], [59.7, 826.0], [59.8, 826.0], [59.9, 826.0], [60.0, 826.0], [60.1, 826.0], [60.2, 826.0], [60.3, 826.0], [60.4, 826.0], [60.5, 826.0], [60.6, 826.0], [60.7, 826.0], [60.8, 826.0], [60.9, 826.0], [61.0, 826.0], [61.1, 858.0], [61.2, 858.0], [61.3, 858.0], [61.4, 858.0], [61.5, 858.0], [61.6, 858.0], [61.7, 858.0], [61.8, 858.0], [61.9, 858.0], [62.0, 858.0], [62.1, 858.0], [62.2, 858.0], [62.3, 858.0], [62.4, 858.0], [62.5, 858.0], [62.6, 858.0], [62.7, 858.0], [62.8, 859.0], [62.9, 859.0], [63.0, 859.0], [63.1, 859.0], [63.2, 859.0], [63.3, 859.0], [63.4, 859.0], [63.5, 859.0], [63.6, 859.0], [63.7, 859.0], [63.8, 859.0], [63.9, 859.0], [64.0, 859.0], [64.1, 859.0], [64.2, 859.0], [64.3, 859.0], [64.4, 859.0], [64.5, 862.0], [64.6, 862.0], [64.7, 862.0], [64.8, 862.0], [64.9, 862.0], [65.0, 862.0], [65.1, 862.0], [65.2, 862.0], [65.3, 862.0], [65.4, 862.0], [65.5, 862.0], [65.6, 862.0], [65.7, 862.0], [65.8, 862.0], [65.9, 862.0], [66.0, 862.0], [66.1, 862.0], [66.2, 864.0], [66.3, 864.0], [66.4, 864.0], [66.5, 864.0], [66.6, 864.0], [66.7, 864.0], [66.8, 864.0], [66.9, 864.0], [67.0, 864.0], [67.1, 864.0], [67.2, 864.0], [67.3, 864.0], [67.4, 864.0], [67.5, 864.0], [67.6, 864.0], [67.7, 864.0], [67.8, 866.0], [67.9, 866.0], [68.0, 866.0], [68.1, 866.0], [68.2, 866.0], [68.3, 866.0], [68.4, 866.0], [68.5, 866.0], [68.6, 866.0], [68.7, 866.0], [68.8, 866.0], [68.9, 866.0], [69.0, 866.0], [69.1, 866.0], [69.2, 866.0], [69.3, 866.0], [69.4, 866.0], [69.5, 893.0], [69.6, 893.0], [69.7, 893.0], [69.8, 893.0], [69.9, 893.0], [70.0, 893.0], [70.1, 893.0], [70.2, 893.0], [70.3, 893.0], [70.4, 893.0], [70.5, 893.0], [70.6, 893.0], [70.7, 893.0], [70.8, 893.0], [70.9, 893.0], [71.0, 893.0], [71.1, 893.0], [71.2, 964.0], [71.3, 964.0], [71.4, 964.0], [71.5, 964.0], [71.6, 964.0], [71.7, 964.0], [71.8, 964.0], [71.9, 964.0], [72.0, 964.0], [72.1, 964.0], [72.2, 964.0], [72.3, 964.0], [72.4, 964.0], [72.5, 964.0], [72.6, 964.0], [72.7, 964.0], [72.8, 964.0], [72.9, 997.0], [73.0, 997.0], [73.1, 997.0], [73.2, 997.0], [73.3, 997.0], [73.4, 997.0], [73.5, 997.0], [73.6, 997.0], [73.7, 997.0], [73.8, 997.0], [73.9, 997.0], [74.0, 997.0], [74.1, 997.0], [74.2, 997.0], [74.3, 997.0], [74.4, 997.0], [74.5, 997.0], [74.6, 1005.0], [74.7, 1005.0], [74.8, 1005.0], [74.9, 1005.0], [75.0, 1005.0], [75.1, 1005.0], [75.2, 1005.0], [75.3, 1005.0], [75.4, 1005.0], [75.5, 1005.0], [75.6, 1005.0], [75.7, 1005.0], [75.8, 1005.0], [75.9, 1005.0], [76.0, 1005.0], [76.1, 1005.0], [76.2, 1005.0], [76.3, 1010.0], [76.4, 1010.0], [76.5, 1010.0], [76.6, 1010.0], [76.7, 1010.0], [76.8, 1010.0], [76.9, 1010.0], [77.0, 1010.0], [77.1, 1010.0], [77.2, 1010.0], [77.3, 1010.0], [77.4, 1010.0], [77.5, 1010.0], [77.6, 1010.0], [77.7, 1010.0], [77.8, 1010.0], [77.9, 1010.0], [78.0, 1030.0], [78.1, 1030.0], [78.2, 1030.0], [78.3, 1030.0], [78.4, 1030.0], [78.5, 1030.0], [78.6, 1030.0], [78.7, 1030.0], [78.8, 1030.0], [78.9, 1030.0], [79.0, 1030.0], [79.1, 1030.0], [79.2, 1030.0], [79.3, 1030.0], [79.4, 1030.0], [79.5, 1030.0], [79.6, 1030.0], [79.7, 1093.0], [79.8, 1093.0], [79.9, 1093.0], [80.0, 1093.0], [80.1, 1093.0], [80.2, 1093.0], [80.3, 1093.0], [80.4, 1093.0], [80.5, 1093.0], [80.6, 1093.0], [80.7, 1093.0], [80.8, 1093.0], [80.9, 1093.0], [81.0, 1093.0], [81.1, 1093.0], [81.2, 1093.0], [81.3, 1093.0], [81.4, 1234.0], [81.5, 1234.0], [81.6, 1234.0], [81.7, 1234.0], [81.8, 1234.0], [81.9, 1234.0], [82.0, 1234.0], [82.1, 1234.0], [82.2, 1234.0], [82.3, 1234.0], [82.4, 1234.0], [82.5, 1234.0], [82.6, 1234.0], [82.7, 1234.0], [82.8, 1234.0], [82.9, 1234.0], [83.0, 1234.0], [83.1, 1317.0], [83.2, 1317.0], [83.3, 1317.0], [83.4, 1317.0], [83.5, 1317.0], [83.6, 1317.0], [83.7, 1317.0], [83.8, 1317.0], [83.9, 1317.0], [84.0, 1317.0], [84.1, 1317.0], [84.2, 1317.0], [84.3, 1317.0], [84.4, 1317.0], [84.5, 1317.0], [84.6, 1317.0], [84.7, 1317.0], [84.8, 1334.0], [84.9, 1334.0], [85.0, 1334.0], [85.1, 1334.0], [85.2, 1334.0], [85.3, 1334.0], [85.4, 1334.0], [85.5, 1334.0], [85.6, 1334.0], [85.7, 1334.0], [85.8, 1334.0], [85.9, 1334.0], [86.0, 1334.0], [86.1, 1334.0], [86.2, 1334.0], [86.3, 1334.0], [86.4, 1334.0], [86.5, 1367.0], [86.6, 1367.0], [86.7, 1367.0], [86.8, 1367.0], [86.9, 1367.0], [87.0, 1367.0], [87.1, 1367.0], [87.2, 1367.0], [87.3, 1367.0], [87.4, 1367.0], [87.5, 1367.0], [87.6, 1367.0], [87.7, 1367.0], [87.8, 1367.0], [87.9, 1367.0], [88.0, 1367.0], [88.1, 1367.0], [88.2, 1374.0], [88.3, 1374.0], [88.4, 1374.0], [88.5, 1374.0], [88.6, 1374.0], [88.7, 1374.0], [88.8, 1374.0], [88.9, 1374.0], [89.0, 1374.0], [89.1, 1374.0], [89.2, 1374.0], [89.3, 1374.0], [89.4, 1374.0], [89.5, 1374.0], [89.6, 1374.0], [89.7, 1374.0], [89.8, 1374.0], [89.9, 1385.0], [90.0, 1385.0], [90.1, 1385.0], [90.2, 1385.0], [90.3, 1385.0], [90.4, 1385.0], [90.5, 1385.0], [90.6, 1385.0], [90.7, 1385.0], [90.8, 1385.0], [90.9, 1385.0], [91.0, 1385.0], [91.1, 1385.0], [91.2, 1385.0], [91.3, 1385.0], [91.4, 1385.0], [91.5, 1385.0], [91.6, 1476.0], [91.7, 1476.0], [91.8, 1476.0], [91.9, 1476.0], [92.0, 1476.0], [92.1, 1476.0], [92.2, 1476.0], [92.3, 1476.0], [92.4, 1476.0], [92.5, 1476.0], [92.6, 1476.0], [92.7, 1476.0], [92.8, 1476.0], [92.9, 1476.0], [93.0, 1476.0], [93.1, 1476.0], [93.2, 1476.0], [93.3, 1574.0], [93.4, 1574.0], [93.5, 1574.0], [93.6, 1574.0], [93.7, 1574.0], [93.8, 1574.0], [93.9, 1574.0], [94.0, 1574.0], [94.1, 1574.0], [94.2, 1574.0], [94.3, 1574.0], [94.4, 1574.0], [94.5, 1574.0], [94.6, 1574.0], [94.7, 1574.0], [94.8, 1574.0], [94.9, 1574.0], [95.0, 1731.0], [95.1, 1731.0], [95.2, 1731.0], [95.3, 1731.0], [95.4, 1731.0], [95.5, 1731.0], [95.6, 1731.0], [95.7, 1731.0], [95.8, 1731.0], [95.9, 1731.0], [96.0, 1731.0], [96.1, 1731.0], [96.2, 1731.0], [96.3, 1731.0], [96.4, 1731.0], [96.5, 1731.0], [96.6, 1731.0], [96.7, 2026.0], [96.8, 2026.0], [96.9, 2026.0], [97.0, 2026.0], [97.1, 2026.0], [97.2, 2026.0], [97.3, 2026.0], [97.4, 2026.0], [97.5, 2026.0], [97.6, 2026.0], [97.7, 2026.0], [97.8, 2026.0], [97.9, 2026.0], [98.0, 2026.0], [98.1, 2026.0], [98.2, 2026.0], [98.3, 2026.0], [98.4, 2436.0], [98.5, 2436.0], [98.6, 2436.0], [98.7, 2436.0], [98.8, 2436.0], [98.9, 2436.0], [99.0, 2436.0], [99.1, 2436.0], [99.2, 2436.0], [99.3, 2436.0], [99.4, 2436.0], [99.5, 2436.0], [99.6, 2436.0], [99.7, 2436.0], [99.8, 2436.0], [99.9, 2436.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[0.0, 666.0], [0.1, 666.0], [0.2, 666.0], [0.3, 666.0], [0.4, 666.0], [0.5, 666.0], [0.6, 666.0], [0.7, 666.0], [0.8, 666.0], [0.9, 666.0], [1.0, 666.0], [1.1, 666.0], [1.2, 666.0], [1.3, 666.0], [1.4, 666.0], [1.5, 666.0], [1.6, 666.0], [1.7, 666.0], [1.8, 666.0], [1.9, 666.0], [2.0, 666.0], [2.1, 746.0], [2.2, 746.0], [2.3, 746.0], [2.4, 746.0], [2.5, 746.0], [2.6, 746.0], [2.7, 746.0], [2.8, 746.0], [2.9, 746.0], [3.0, 746.0], [3.1, 746.0], [3.2, 746.0], [3.3, 746.0], [3.4, 746.0], [3.5, 746.0], [3.6, 746.0], [3.7, 746.0], [3.8, 746.0], [3.9, 746.0], [4.0, 746.0], [4.1, 1051.0], [4.2, 1051.0], [4.3, 1051.0], [4.4, 1051.0], [4.5, 1051.0], [4.6, 1051.0], [4.7, 1051.0], [4.8, 1051.0], [4.9, 1051.0], [5.0, 1051.0], [5.1, 1051.0], [5.2, 1051.0], [5.3, 1051.0], [5.4, 1051.0], [5.5, 1051.0], [5.6, 1051.0], [5.7, 1051.0], [5.8, 1051.0], [5.9, 1051.0], [6.0, 1051.0], [6.1, 1051.0], [6.2, 1091.0], [6.3, 1091.0], [6.4, 1091.0], [6.5, 1091.0], [6.6, 1091.0], [6.7, 1091.0], [6.8, 1091.0], [6.9, 1091.0], [7.0, 1091.0], [7.1, 1091.0], [7.2, 1091.0], [7.3, 1091.0], [7.4, 1091.0], [7.5, 1091.0], [7.6, 1091.0], [7.7, 1091.0], [7.8, 1091.0], [7.9, 1091.0], [8.0, 1091.0], [8.1, 1091.0], [8.2, 1442.0], [8.3, 1442.0], [8.4, 1442.0], [8.5, 1442.0], [8.6, 1442.0], [8.7, 1442.0], [8.8, 1442.0], [8.9, 1442.0], [9.0, 1442.0], [9.1, 1442.0], [9.2, 1442.0], [9.3, 1442.0], [9.4, 1442.0], [9.5, 1442.0], [9.6, 1442.0], [9.7, 1442.0], [9.8, 1442.0], [9.9, 1442.0], [10.0, 1442.0], [10.1, 1442.0], [10.2, 1442.0], [10.3, 3274.0], [10.4, 3274.0], [10.5, 3274.0], [10.6, 3274.0], [10.7, 3274.0], [10.8, 3274.0], [10.9, 3274.0], [11.0, 3274.0], [11.1, 3274.0], [11.2, 3274.0], [11.3, 3274.0], [11.4, 3274.0], [11.5, 3274.0], [11.6, 3274.0], [11.7, 3274.0], [11.8, 3274.0], [11.9, 3274.0], [12.0, 3274.0], [12.1, 3274.0], [12.2, 3274.0], [12.3, 3408.0], [12.4, 3408.0], [12.5, 3408.0], [12.6, 3408.0], [12.7, 3408.0], [12.8, 3408.0], [12.9, 3408.0], [13.0, 3408.0], [13.1, 3408.0], [13.2, 3408.0], [13.3, 3408.0], [13.4, 3408.0], [13.5, 3408.0], [13.6, 3408.0], [13.7, 3408.0], [13.8, 3408.0], [13.9, 3408.0], [14.0, 3408.0], [14.1, 3408.0], [14.2, 3408.0], [14.3, 3432.0], [14.4, 3432.0], [14.5, 3432.0], [14.6, 3432.0], [14.7, 3432.0], [14.8, 3432.0], [14.9, 3432.0], [15.0, 3432.0], [15.1, 3432.0], [15.2, 3432.0], [15.3, 3432.0], [15.4, 3432.0], [15.5, 3432.0], [15.6, 3432.0], [15.7, 3432.0], [15.8, 3432.0], [15.9, 3432.0], [16.0, 3432.0], [16.1, 3432.0], [16.2, 3432.0], [16.3, 3432.0], [16.4, 5108.0], [16.5, 5108.0], [16.6, 5108.0], [16.7, 5108.0], [16.8, 5108.0], [16.9, 5108.0], [17.0, 5108.0], [17.1, 5108.0], [17.2, 5108.0], [17.3, 5108.0], [17.4, 5108.0], [17.5, 5108.0], [17.6, 5108.0], [17.7, 5108.0], [17.8, 5108.0], [17.9, 5108.0], [18.0, 5108.0], [18.1, 5108.0], [18.2, 5108.0], [18.3, 5108.0], [18.4, 5648.0], [18.5, 5648.0], [18.6, 5648.0], [18.7, 5648.0], [18.8, 5648.0], [18.9, 5648.0], [19.0, 5648.0], [19.1, 5648.0], [19.2, 5648.0], [19.3, 5648.0], [19.4, 5648.0], [19.5, 5648.0], [19.6, 5648.0], [19.7, 5648.0], [19.8, 5648.0], [19.9, 5648.0], [20.0, 5648.0], [20.1, 5648.0], [20.2, 5648.0], [20.3, 5648.0], [20.4, 5648.0], [20.5, 5761.0], [20.6, 5761.0], [20.7, 5761.0], [20.8, 5761.0], [20.9, 5761.0], [21.0, 5761.0], [21.1, 5761.0], [21.2, 5761.0], [21.3, 5761.0], [21.4, 5761.0], [21.5, 5761.0], [21.6, 5761.0], [21.7, 5761.0], [21.8, 5761.0], [21.9, 5761.0], [22.0, 5761.0], [22.1, 5761.0], [22.2, 5761.0], [22.3, 5761.0], [22.4, 5761.0], [22.5, 6042.0], [22.6, 6042.0], [22.7, 6042.0], [22.8, 6042.0], [22.9, 6042.0], [23.0, 6042.0], [23.1, 6042.0], [23.2, 6042.0], [23.3, 6042.0], [23.4, 6042.0], [23.5, 6042.0], [23.6, 6042.0], [23.7, 6042.0], [23.8, 6042.0], [23.9, 6042.0], [24.0, 6042.0], [24.1, 6042.0], [24.2, 6042.0], [24.3, 6042.0], [24.4, 6042.0], [24.5, 6151.0], [24.6, 6151.0], [24.7, 6151.0], [24.8, 6151.0], [24.9, 6151.0], [25.0, 6151.0], [25.1, 6151.0], [25.2, 6151.0], [25.3, 6151.0], [25.4, 6151.0], [25.5, 6151.0], [25.6, 6151.0], [25.7, 6151.0], [25.8, 6151.0], [25.9, 6151.0], [26.0, 6151.0], [26.1, 6151.0], [26.2, 6151.0], [26.3, 6151.0], [26.4, 6151.0], [26.5, 6151.0], [26.6, 6310.0], [26.7, 6310.0], [26.8, 6310.0], [26.9, 6310.0], [27.0, 6310.0], [27.1, 6310.0], [27.2, 6310.0], [27.3, 6310.0], [27.4, 6310.0], [27.5, 6310.0], [27.6, 6310.0], [27.7, 6310.0], [27.8, 6310.0], [27.9, 6310.0], [28.0, 6310.0], [28.1, 6310.0], [28.2, 6310.0], [28.3, 6310.0], [28.4, 6310.0], [28.5, 6310.0], [28.6, 6416.0], [28.7, 6416.0], [28.8, 6416.0], [28.9, 6416.0], [29.0, 6416.0], [29.1, 6416.0], [29.2, 6416.0], [29.3, 6416.0], [29.4, 6416.0], [29.5, 6416.0], [29.6, 6416.0], [29.7, 6416.0], [29.8, 6416.0], [29.9, 6416.0], [30.0, 6416.0], [30.1, 6416.0], [30.2, 6416.0], [30.3, 6416.0], [30.4, 6416.0], [30.5, 6416.0], [30.6, 6416.0], [30.7, 6470.0], [30.8, 6470.0], [30.9, 6470.0], [31.0, 6470.0], [31.1, 6470.0], [31.2, 6470.0], [31.3, 6470.0], [31.4, 6470.0], [31.5, 6470.0], [31.6, 6470.0], [31.7, 6470.0], [31.8, 6470.0], [31.9, 6470.0], [32.0, 6470.0], [32.1, 6470.0], [32.2, 6470.0], [32.3, 6470.0], [32.4, 6470.0], [32.5, 6470.0], [32.6, 6470.0], [32.7, 6591.0], [32.8, 6591.0], [32.9, 6591.0], [33.0, 6591.0], [33.1, 6591.0], [33.2, 6591.0], [33.3, 6591.0], [33.4, 6591.0], [33.5, 6591.0], [33.6, 6591.0], [33.7, 6591.0], [33.8, 6591.0], [33.9, 6591.0], [34.0, 6591.0], [34.1, 6591.0], [34.2, 6591.0], [34.3, 6591.0], [34.4, 6591.0], [34.5, 6591.0], [34.6, 6591.0], [34.7, 6616.0], [34.8, 6616.0], [34.9, 6616.0], [35.0, 6616.0], [35.1, 6616.0], [35.2, 6616.0], [35.3, 6616.0], [35.4, 6616.0], [35.5, 6616.0], [35.6, 6616.0], [35.7, 6616.0], [35.8, 6616.0], [35.9, 6616.0], [36.0, 6616.0], [36.1, 6616.0], [36.2, 6616.0], [36.3, 6616.0], [36.4, 6616.0], [36.5, 6616.0], [36.6, 6616.0], [36.7, 6616.0], [36.8, 6941.0], [36.9, 6941.0], [37.0, 6941.0], [37.1, 6941.0], [37.2, 6941.0], [37.3, 6941.0], [37.4, 6941.0], [37.5, 6941.0], [37.6, 6941.0], [37.7, 6941.0], [37.8, 6941.0], [37.9, 6941.0], [38.0, 6941.0], [38.1, 6941.0], [38.2, 6941.0], [38.3, 6941.0], [38.4, 6941.0], [38.5, 6941.0], [38.6, 6941.0], [38.7, 6941.0], [38.8, 7612.0], [38.9, 7612.0], [39.0, 7612.0], [39.1, 7612.0], [39.2, 7612.0], [39.3, 7612.0], [39.4, 7612.0], [39.5, 7612.0], [39.6, 7612.0], [39.7, 7612.0], [39.8, 7612.0], [39.9, 7612.0], [40.0, 7612.0], [40.1, 7612.0], [40.2, 7612.0], [40.3, 7612.0], [40.4, 7612.0], [40.5, 7612.0], [40.6, 7612.0], [40.7, 7612.0], [40.8, 7612.0], [40.9, 8175.0], [41.0, 8175.0], [41.1, 8175.0], [41.2, 8175.0], [41.3, 8175.0], [41.4, 8175.0], [41.5, 8175.0], [41.6, 8175.0], [41.7, 8175.0], [41.8, 8175.0], [41.9, 8175.0], [42.0, 8175.0], [42.1, 8175.0], [42.2, 8175.0], [42.3, 8175.0], [42.4, 8175.0], [42.5, 8175.0], [42.6, 8175.0], [42.7, 8175.0], [42.8, 8175.0], [42.9, 9483.0], [43.0, 9483.0], [43.1, 9483.0], [43.2, 9483.0], [43.3, 9483.0], [43.4, 9483.0], [43.5, 9483.0], [43.6, 9483.0], [43.7, 9483.0], [43.8, 9483.0], [43.9, 9483.0], [44.0, 9483.0], [44.1, 9483.0], [44.2, 9483.0], [44.3, 9483.0], [44.4, 9483.0], [44.5, 9483.0], [44.6, 9483.0], [44.7, 9483.0], [44.8, 9483.0], [44.9, 9684.0], [45.0, 9684.0], [45.1, 9684.0], [45.2, 9684.0], [45.3, 9684.0], [45.4, 9684.0], [45.5, 9684.0], [45.6, 9684.0], [45.7, 9684.0], [45.8, 9684.0], [45.9, 9684.0], [46.0, 9684.0], [46.1, 9684.0], [46.2, 9684.0], [46.3, 9684.0], [46.4, 9684.0], [46.5, 9684.0], [46.6, 9684.0], [46.7, 9684.0], [46.8, 9684.0], [46.9, 9684.0], [47.0, 10447.0], [47.1, 10447.0], [47.2, 10447.0], [47.3, 10447.0], [47.4, 10447.0], [47.5, 10447.0], [47.6, 10447.0], [47.7, 10447.0], [47.8, 10447.0], [47.9, 10447.0], [48.0, 10447.0], [48.1, 10447.0], [48.2, 10447.0], [48.3, 10447.0], [48.4, 10447.0], [48.5, 10447.0], [48.6, 10447.0], [48.7, 10447.0], [48.8, 10447.0], [48.9, 10447.0], [49.0, 10669.0], [49.1, 10669.0], [49.2, 10669.0], [49.3, 10669.0], [49.4, 10669.0], [49.5, 10669.0], [49.6, 10669.0], [49.7, 10669.0], [49.8, 10669.0], [49.9, 10669.0], [50.0, 10669.0], [50.1, 10669.0], [50.2, 10669.0], [50.3, 10669.0], [50.4, 10669.0], [50.5, 10669.0], [50.6, 10669.0], [50.7, 10669.0], [50.8, 10669.0], [50.9, 10669.0], [51.0, 10669.0], [51.1, 11386.0], [51.2, 11386.0], [51.3, 11386.0], [51.4, 11386.0], [51.5, 11386.0], [51.6, 11386.0], [51.7, 11386.0], [51.8, 11386.0], [51.9, 11386.0], [52.0, 11386.0], [52.1, 11386.0], [52.2, 11386.0], [52.3, 11386.0], [52.4, 11386.0], [52.5, 11386.0], [52.6, 11386.0], [52.7, 11386.0], [52.8, 11386.0], [52.9, 11386.0], [53.0, 11386.0], [53.1, 11957.0], [53.2, 11957.0], [53.3, 11957.0], [53.4, 11957.0], [53.5, 11957.0], [53.6, 11957.0], [53.7, 11957.0], [53.8, 11957.0], [53.9, 11957.0], [54.0, 11957.0], [54.1, 11957.0], [54.2, 11957.0], [54.3, 11957.0], [54.4, 11957.0], [54.5, 11957.0], [54.6, 11957.0], [54.7, 11957.0], [54.8, 11957.0], [54.9, 11957.0], [55.0, 11957.0], [55.1, 11957.0], [55.2, 12069.0], [55.3, 12069.0], [55.4, 12069.0], [55.5, 12069.0], [55.6, 12069.0], [55.7, 12069.0], [55.8, 12069.0], [55.9, 12069.0], [56.0, 12069.0], [56.1, 12069.0], [56.2, 12069.0], [56.3, 12069.0], [56.4, 12069.0], [56.5, 12069.0], [56.6, 12069.0], [56.7, 12069.0], [56.8, 12069.0], [56.9, 12069.0], [57.0, 12069.0], [57.1, 12069.0], [57.2, 12310.0], [57.3, 12310.0], [57.4, 12310.0], [57.5, 12310.0], [57.6, 12310.0], [57.7, 12310.0], [57.8, 12310.0], [57.9, 12310.0], [58.0, 12310.0], [58.1, 12310.0], [58.2, 12310.0], [58.3, 12310.0], [58.4, 12310.0], [58.5, 12310.0], [58.6, 12310.0], [58.7, 12310.0], [58.8, 12310.0], [58.9, 12310.0], [59.0, 12310.0], [59.1, 12310.0], [59.2, 12803.0], [59.3, 12803.0], [59.4, 12803.0], [59.5, 12803.0], [59.6, 12803.0], [59.7, 12803.0], [59.8, 12803.0], [59.9, 12803.0], [60.0, 12803.0], [60.1, 12803.0], [60.2, 12803.0], [60.3, 12803.0], [60.4, 12803.0], [60.5, 12803.0], [60.6, 12803.0], [60.7, 12803.0], [60.8, 12803.0], [60.9, 12803.0], [61.0, 12803.0], [61.1, 12803.0], [61.2, 12803.0], [61.3, 12876.0], [61.4, 12876.0], [61.5, 12876.0], [61.6, 12876.0], [61.7, 12876.0], [61.8, 12876.0], [61.9, 12876.0], [62.0, 12876.0], [62.1, 12876.0], [62.2, 12876.0], [62.3, 12876.0], [62.4, 12876.0], [62.5, 12876.0], [62.6, 12876.0], [62.7, 12876.0], [62.8, 12876.0], [62.9, 12876.0], [63.0, 12876.0], [63.1, 12876.0], [63.2, 12876.0], [63.3, 12928.0], [63.4, 12928.0], [63.5, 12928.0], [63.6, 12928.0], [63.7, 12928.0], [63.8, 12928.0], [63.9, 12928.0], [64.0, 12928.0], [64.1, 12928.0], [64.2, 12928.0], [64.3, 12928.0], [64.4, 12928.0], [64.5, 12928.0], [64.6, 12928.0], [64.7, 12928.0], [64.8, 12928.0], [64.9, 12928.0], [65.0, 12928.0], [65.1, 12928.0], [65.2, 12928.0], [65.3, 12928.0], [65.4, 12929.0], [65.5, 12929.0], [65.6, 12929.0], [65.7, 12929.0], [65.8, 12929.0], [65.9, 12929.0], [66.0, 12929.0], [66.1, 12929.0], [66.2, 12929.0], [66.3, 12929.0], [66.4, 12929.0], [66.5, 12929.0], [66.6, 12929.0], [66.7, 12929.0], [66.8, 12929.0], [66.9, 12929.0], [67.0, 12929.0], [67.1, 12929.0], [67.2, 12929.0], [67.3, 12929.0], [67.4, 12939.0], [67.5, 12939.0], [67.6, 12939.0], [67.7, 12939.0], [67.8, 12939.0], [67.9, 12939.0], [68.0, 12939.0], [68.1, 12939.0], [68.2, 12939.0], [68.3, 12939.0], [68.4, 12939.0], [68.5, 12939.0], [68.6, 12939.0], [68.7, 12939.0], [68.8, 12939.0], [68.9, 12939.0], [69.0, 12939.0], [69.1, 12939.0], [69.2, 12939.0], [69.3, 12939.0], [69.4, 13142.0], [69.5, 13142.0], [69.6, 13142.0], [69.7, 13142.0], [69.8, 13142.0], [69.9, 13142.0], [70.0, 13142.0], [70.1, 13142.0], [70.2, 13142.0], [70.3, 13142.0], [70.4, 13142.0], [70.5, 13142.0], [70.6, 13142.0], [70.7, 13142.0], [70.8, 13142.0], [70.9, 13142.0], [71.0, 13142.0], [71.1, 13142.0], [71.2, 13142.0], [71.3, 13142.0], [71.4, 13142.0], [71.5, 14121.0], [71.6, 14121.0], [71.7, 14121.0], [71.8, 14121.0], [71.9, 14121.0], [72.0, 14121.0], [72.1, 14121.0], [72.2, 14121.0], [72.3, 14121.0], [72.4, 14121.0], [72.5, 14121.0], [72.6, 14121.0], [72.7, 14121.0], [72.8, 14121.0], [72.9, 14121.0], [73.0, 14121.0], [73.1, 14121.0], [73.2, 14121.0], [73.3, 14121.0], [73.4, 14121.0], [73.5, 14543.0], [73.6, 14543.0], [73.7, 14543.0], [73.8, 14543.0], [73.9, 14543.0], [74.0, 14543.0], [74.1, 14543.0], [74.2, 14543.0], [74.3, 14543.0], [74.4, 14543.0], [74.5, 14543.0], [74.6, 14543.0], [74.7, 14543.0], [74.8, 14543.0], [74.9, 14543.0], [75.0, 14543.0], [75.1, 14543.0], [75.2, 14543.0], [75.3, 14543.0], [75.4, 14543.0], [75.5, 14543.0], [75.6, 14660.0], [75.7, 14660.0], [75.8, 14660.0], [75.9, 14660.0], [76.0, 14660.0], [76.1, 14660.0], [76.2, 14660.0], [76.3, 14660.0], [76.4, 14660.0], [76.5, 14660.0], [76.6, 14660.0], [76.7, 14660.0], [76.8, 14660.0], [76.9, 14660.0], [77.0, 14660.0], [77.1, 14660.0], [77.2, 14660.0], [77.3, 14660.0], [77.4, 14660.0], [77.5, 14660.0], [77.6, 14706.0], [77.7, 14706.0], [77.8, 14706.0], [77.9, 14706.0], [78.0, 14706.0], [78.1, 14706.0], [78.2, 14706.0], [78.3, 14706.0], [78.4, 14706.0], [78.5, 14706.0], [78.6, 14706.0], [78.7, 14706.0], [78.8, 14706.0], [78.9, 14706.0], [79.0, 14706.0], [79.1, 14706.0], [79.2, 14706.0], [79.3, 14706.0], [79.4, 14706.0], [79.5, 14706.0], [79.6, 15234.0], [79.7, 15234.0], [79.8, 15234.0], [79.9, 15234.0], [80.0, 15234.0], [80.1, 15234.0], [80.2, 15234.0], [80.3, 15234.0], [80.4, 15234.0], [80.5, 15234.0], [80.6, 15234.0], [80.7, 15234.0], [80.8, 15234.0], [80.9, 15234.0], [81.0, 15234.0], [81.1, 15234.0], [81.2, 15234.0], [81.3, 15234.0], [81.4, 15234.0], [81.5, 15234.0], [81.6, 15234.0], [81.7, 15287.0], [81.8, 15287.0], [81.9, 15287.0], [82.0, 15287.0], [82.1, 15287.0], [82.2, 15287.0], [82.3, 15287.0], [82.4, 15287.0], [82.5, 15287.0], [82.6, 15287.0], [82.7, 15287.0], [82.8, 15287.0], [82.9, 15287.0], [83.0, 15287.0], [83.1, 15287.0], [83.2, 15287.0], [83.3, 15287.0], [83.4, 15287.0], [83.5, 15287.0], [83.6, 15287.0], [83.7, 15329.0], [83.8, 15329.0], [83.9, 15329.0], [84.0, 15329.0], [84.1, 15329.0], [84.2, 15329.0], [84.3, 15329.0], [84.4, 15329.0], [84.5, 15329.0], [84.6, 15329.0], [84.7, 15329.0], [84.8, 15329.0], [84.9, 15329.0], [85.0, 15329.0], [85.1, 15329.0], [85.2, 15329.0], [85.3, 15329.0], [85.4, 15329.0], [85.5, 15329.0], [85.6, 15329.0], [85.7, 15329.0], [85.8, 15429.0], [85.9, 15429.0], [86.0, 15429.0], [86.1, 15429.0], [86.2, 15429.0], [86.3, 15429.0], [86.4, 15429.0], [86.5, 15429.0], [86.6, 15429.0], [86.7, 15429.0], [86.8, 15429.0], [86.9, 15429.0], [87.0, 15429.0], [87.1, 15429.0], [87.2, 15429.0], [87.3, 15429.0], [87.4, 15429.0], [87.5, 15429.0], [87.6, 15429.0], [87.7, 15429.0], [87.8, 15513.0], [87.9, 15513.0], [88.0, 15513.0], [88.1, 15513.0], [88.2, 15513.0], [88.3, 15513.0], [88.4, 15513.0], [88.5, 15513.0], [88.6, 15513.0], [88.7, 15513.0], [88.8, 15513.0], [88.9, 15513.0], [89.0, 15513.0], [89.1, 15513.0], [89.2, 15513.0], [89.3, 15513.0], [89.4, 15513.0], [89.5, 15513.0], [89.6, 15513.0], [89.7, 15513.0], [89.8, 15571.0], [89.9, 15571.0], [90.0, 15571.0], [90.1, 15571.0], [90.2, 15571.0], [90.3, 15571.0], [90.4, 15571.0], [90.5, 15571.0], [90.6, 15571.0], [90.7, 15571.0], [90.8, 15571.0], [90.9, 15571.0], [91.0, 15571.0], [91.1, 15571.0], [91.2, 15571.0], [91.3, 15571.0], [91.4, 15571.0], [91.5, 15571.0], [91.6, 15571.0], [91.7, 15571.0], [91.8, 15571.0], [91.9, 15783.0], [92.0, 15783.0], [92.1, 15783.0], [92.2, 15783.0], [92.3, 15783.0], [92.4, 15783.0], [92.5, 15783.0], [92.6, 15783.0], [92.7, 15783.0], [92.8, 15783.0], [92.9, 15783.0], [93.0, 15783.0], [93.1, 15783.0], [93.2, 15783.0], [93.3, 15783.0], [93.4, 15783.0], [93.5, 15783.0], [93.6, 15783.0], [93.7, 15783.0], [93.8, 15783.0], [93.9, 15803.0], [94.0, 15803.0], [94.1, 15803.0], [94.2, 15803.0], [94.3, 15803.0], [94.4, 15803.0], [94.5, 15803.0], [94.6, 15803.0], [94.7, 15803.0], [94.8, 15803.0], [94.9, 15803.0], [95.0, 15803.0], [95.1, 15803.0], [95.2, 15803.0], [95.3, 15803.0], [95.4, 15803.0], [95.5, 15803.0], [95.6, 15803.0], [95.7, 15803.0], [95.8, 15803.0], [95.9, 15803.0], [96.0, 15868.0], [96.1, 15868.0], [96.2, 15868.0], [96.3, 15868.0], [96.4, 15868.0], [96.5, 15868.0], [96.6, 15868.0], [96.7, 15868.0], [96.8, 15868.0], [96.9, 15868.0], [97.0, 15868.0], [97.1, 15868.0], [97.2, 15868.0], [97.3, 15868.0], [97.4, 15868.0], [97.5, 15868.0], [97.6, 15868.0], [97.7, 15868.0], [97.8, 15868.0], [97.9, 15868.0], [98.0, 16209.0], [98.1, 16209.0], [98.2, 16209.0], [98.3, 16209.0], [98.4, 16209.0], [98.5, 16209.0], [98.6, 16209.0], [98.7, 16209.0], [98.8, 16209.0], [98.9, 16209.0], [99.0, 16209.0], [99.1, 16209.0], [99.2, 16209.0], [99.3, 16209.0], [99.4, 16209.0], [99.5, 16209.0], [99.6, 16209.0], [99.7, 16209.0], [99.8, 16209.0], [99.9, 16209.0], [100.0, 16209.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 87.0], [3.7, 88.0], [3.8, 89.0], [3.9, 90.0], [4.0, 91.0], [4.1, 91.0], [4.2, 91.0], [4.3, 92.0], [4.4, 92.0], [4.5, 92.0], [4.6, 92.0], [4.7, 93.0], [4.8, 93.0], [4.9, 93.0], [5.0, 94.0], [5.1, 94.0], [5.2, 94.0], [5.3, 94.0], [5.4, 94.0], [5.5, 95.0], [5.6, 95.0], [5.7, 95.0], [5.8, 95.0], [5.9, 95.0], [6.0, 96.0], [6.1, 96.0], [6.2, 96.0], [6.3, 96.0], [6.4, 96.0], [6.5, 97.0], [6.6, 97.0], [6.7, 97.0], [6.8, 97.0], [6.9, 97.0], [7.0, 97.0], [7.1, 97.0], [7.2, 98.0], [7.3, 98.0], [7.4, 98.0], [7.5, 98.0], [7.6, 98.0], [7.7, 98.0], [7.8, 99.0], [7.9, 99.0], [8.0, 99.0], [8.1, 99.0], [8.2, 99.0], [8.3, 99.0], [8.4, 99.0], [8.5, 100.0], [8.6, 100.0], [8.7, 100.0], [8.8, 100.0], [8.9, 100.0], [9.0, 100.0], [9.1, 100.0], [9.2, 100.0], [9.3, 101.0], [9.4, 101.0], [9.5, 101.0], [9.6, 101.0], [9.7, 101.0], [9.8, 101.0], [9.9, 102.0], [10.0, 102.0], [10.1, 102.0], [10.2, 102.0], [10.3, 102.0], [10.4, 102.0], [10.5, 102.0], [10.6, 103.0], [10.7, 103.0], [10.8, 103.0], [10.9, 103.0], [11.0, 103.0], [11.1, 103.0], [11.2, 103.0], [11.3, 104.0], [11.4, 104.0], [11.5, 104.0], [11.6, 104.0], [11.7, 104.0], [11.8, 104.0], [11.9, 104.0], [12.0, 104.0], [12.1, 105.0], [12.2, 105.0], [12.3, 105.0], [12.4, 105.0], [12.5, 105.0], [12.6, 105.0], [12.7, 105.0], [12.8, 105.0], [12.9, 106.0], [13.0, 106.0], [13.1, 106.0], [13.2, 106.0], [13.3, 106.0], [13.4, 106.0], [13.5, 106.0], [13.6, 106.0], [13.7, 107.0], [13.8, 107.0], [13.9, 107.0], [14.0, 107.0], [14.1, 107.0], [14.2, 107.0], [14.3, 107.0], [14.4, 107.0], [14.5, 107.0], [14.6, 108.0], [14.7, 108.0], [14.8, 108.0], [14.9, 108.0], [15.0, 108.0], [15.1, 108.0], [15.2, 108.0], [15.3, 108.0], [15.4, 109.0], [15.5, 109.0], [15.6, 109.0], [15.7, 109.0], [15.8, 109.0], [15.9, 109.0], [16.0, 109.0], [16.1, 109.0], [16.2, 110.0], [16.3, 110.0], [16.4, 110.0], [16.5, 110.0], [16.6, 110.0], [16.7, 110.0], [16.8, 110.0], [16.9, 111.0], [17.0, 111.0], [17.1, 111.0], [17.2, 111.0], [17.3, 111.0], [17.4, 111.0], [17.5, 111.0], [17.6, 112.0], [17.7, 112.0], [17.8, 112.0], [17.9, 112.0], [18.0, 112.0], [18.1, 112.0], [18.2, 112.0], [18.3, 112.0], [18.4, 113.0], [18.5, 113.0], [18.6, 113.0], [18.7, 113.0], [18.8, 113.0], [18.9, 113.0], [19.0, 113.0], [19.1, 114.0], [19.2, 114.0], [19.3, 114.0], [19.4, 114.0], [19.5, 114.0], [19.6, 114.0], [19.7, 114.0], [19.8, 115.0], [19.9, 115.0], [20.0, 115.0], [20.1, 115.0], [20.2, 115.0], [20.3, 115.0], [20.4, 115.0], [20.5, 116.0], [20.6, 116.0], [20.7, 116.0], [20.8, 116.0], [20.9, 116.0], [21.0, 116.0], [21.1, 117.0], [21.2, 117.0], [21.3, 117.0], [21.4, 117.0], [21.5, 117.0], [21.6, 117.0], [21.7, 117.0], [21.8, 118.0], [21.9, 118.0], [22.0, 118.0], [22.1, 118.0], [22.2, 118.0], [22.3, 118.0], [22.4, 118.0], [22.5, 119.0], [22.6, 119.0], [22.7, 119.0], [22.8, 119.0], [22.9, 119.0], [23.0, 119.0], [23.1, 119.0], [23.2, 120.0], [23.3, 120.0], [23.4, 120.0], [23.5, 120.0], [23.6, 120.0], [23.7, 120.0], [23.8, 120.0], [23.9, 121.0], [24.0, 121.0], [24.1, 121.0], [24.2, 121.0], [24.3, 121.0], [24.4, 121.0], [24.5, 121.0], [24.6, 122.0], [24.7, 122.0], [24.8, 122.0], [24.9, 122.0], [25.0, 122.0], [25.1, 122.0], [25.2, 122.0], [25.3, 123.0], [25.4, 123.0], [25.5, 123.0], [25.6, 123.0], [25.7, 123.0], [25.8, 123.0], [25.9, 124.0], [26.0, 124.0], [26.1, 124.0], [26.2, 124.0], [26.3, 124.0], [26.4, 124.0], [26.5, 124.0], [26.6, 124.0], [26.7, 125.0], [26.8, 125.0], [26.9, 125.0], [27.0, 125.0], [27.1, 125.0], [27.2, 125.0], [27.3, 126.0], [27.4, 126.0], [27.5, 126.0], [27.6, 126.0], [27.7, 126.0], [27.8, 126.0], [27.9, 127.0], [28.0, 127.0], [28.1, 127.0], [28.2, 127.0], [28.3, 127.0], [28.4, 127.0], [28.5, 128.0], [28.6, 128.0], [28.7, 128.0], [28.8, 128.0], [28.9, 128.0], [29.0, 128.0], [29.1, 129.0], [29.2, 129.0], [29.3, 129.0], [29.4, 129.0], [29.5, 129.0], [29.6, 129.0], [29.7, 130.0], [29.8, 130.0], [29.9, 130.0], [30.0, 130.0], [30.1, 130.0], [30.2, 131.0], [30.3, 131.0], [30.4, 131.0], [30.5, 131.0], [30.6, 131.0], [30.7, 131.0], [30.8, 132.0], [30.9, 132.0], [31.0, 132.0], [31.1, 132.0], [31.2, 132.0], [31.3, 133.0], [31.4, 133.0], [31.5, 133.0], [31.6, 133.0], [31.7, 133.0], [31.8, 133.0], [31.9, 134.0], [32.0, 134.0], [32.1, 134.0], [32.2, 134.0], [32.3, 134.0], [32.4, 135.0], [32.5, 135.0], [32.6, 135.0], [32.7, 135.0], [32.8, 135.0], [32.9, 135.0], [33.0, 136.0], [33.1, 136.0], [33.2, 136.0], [33.3, 136.0], [33.4, 136.0], [33.5, 136.0], [33.6, 137.0], [33.7, 137.0], [33.8, 137.0], [33.9, 137.0], [34.0, 137.0], [34.1, 138.0], [34.2, 138.0], [34.3, 138.0], [34.4, 138.0], [34.5, 138.0], [34.6, 139.0], [34.7, 139.0], [34.8, 139.0], [34.9, 139.0], [35.0, 139.0], [35.1, 140.0], [35.2, 140.0], [35.3, 140.0], [35.4, 140.0], [35.5, 140.0], [35.6, 141.0], [35.7, 141.0], [35.8, 141.0], [35.9, 141.0], [36.0, 141.0], [36.1, 142.0], [36.2, 142.0], [36.3, 142.0], [36.4, 142.0], [36.5, 142.0], [36.6, 143.0], [36.7, 143.0], [36.8, 143.0], [36.9, 143.0], [37.0, 143.0], [37.1, 144.0], [37.2, 144.0], [37.3, 144.0], [37.4, 144.0], [37.5, 144.0], [37.6, 145.0], [37.7, 145.0], [37.8, 145.0], [37.9, 145.0], [38.0, 145.0], [38.1, 146.0], [38.2, 146.0], [38.3, 146.0], [38.4, 146.0], [38.5, 146.0], [38.6, 147.0], [38.7, 147.0], [38.8, 147.0], [38.9, 147.0], [39.0, 147.0], [39.1, 148.0], [39.2, 148.0], [39.3, 148.0], [39.4, 148.0], [39.5, 148.0], [39.6, 149.0], [39.7, 149.0], [39.8, 149.0], [39.9, 149.0], [40.0, 150.0], [40.1, 150.0], [40.2, 150.0], [40.3, 150.0], [40.4, 151.0], [40.5, 151.0], [40.6, 151.0], [40.7, 151.0], [40.8, 151.0], [40.9, 152.0], [41.0, 152.0], [41.1, 152.0], [41.2, 152.0], [41.3, 153.0], [41.4, 153.0], [41.5, 153.0], [41.6, 153.0], [41.7, 154.0], [41.8, 154.0], [41.9, 154.0], [42.0, 155.0], [42.1, 155.0], [42.2, 155.0], [42.3, 155.0], [42.4, 155.0], [42.5, 156.0], [42.6, 156.0], [42.7, 156.0], [42.8, 156.0], [42.9, 157.0], [43.0, 157.0], [43.1, 157.0], [43.2, 157.0], [43.3, 158.0], [43.4, 158.0], [43.5, 158.0], [43.6, 158.0], [43.7, 159.0], [43.8, 159.0], [43.9, 159.0], [44.0, 159.0], [44.1, 160.0], [44.2, 160.0], [44.3, 160.0], [44.4, 161.0], [44.5, 161.0], [44.6, 161.0], [44.7, 161.0], [44.8, 162.0], [44.9, 162.0], [45.0, 162.0], [45.1, 162.0], [45.2, 163.0], [45.3, 163.0], [45.4, 163.0], [45.5, 163.0], [45.6, 164.0], [45.7, 164.0], [45.8, 164.0], [45.9, 164.0], [46.0, 165.0], [46.1, 165.0], [46.2, 166.0], [46.3, 166.0], [46.4, 166.0], [46.5, 166.0], [46.6, 167.0], [46.7, 167.0], [46.8, 167.0], [46.9, 167.0], [47.0, 168.0], [47.1, 168.0], [47.2, 169.0], [47.3, 169.0], [47.4, 169.0], [47.5, 169.0], [47.6, 170.0], [47.7, 170.0], [47.8, 170.0], [47.9, 170.0], [48.0, 171.0], [48.1, 171.0], [48.2, 172.0], [48.3, 172.0], [48.4, 172.0], [48.5, 172.0], [48.6, 173.0], [48.7, 173.0], [48.8, 173.0], [48.9, 174.0], [49.0, 174.0], [49.1, 174.0], [49.2, 175.0], [49.3, 175.0], [49.4, 176.0], [49.5, 176.0], [49.6, 176.0], [49.7, 176.0], [49.8, 177.0], [49.9, 177.0], [50.0, 177.0], [50.1, 178.0], [50.2, 178.0], [50.3, 179.0], [50.4, 179.0], [50.5, 179.0], [50.6, 180.0], [50.7, 180.0], [50.8, 180.0], [50.9, 181.0], [51.0, 181.0], [51.1, 181.0], [51.2, 182.0], [51.3, 182.0], [51.4, 182.0], [51.5, 183.0], [51.6, 183.0], [51.7, 183.0], [51.8, 184.0], [51.9, 184.0], [52.0, 184.0], [52.1, 185.0], [52.2, 185.0], [52.3, 185.0], [52.4, 186.0], [52.5, 186.0], [52.6, 186.0], [52.7, 187.0], [52.8, 187.0], [52.9, 188.0], [53.0, 188.0], [53.1, 188.0], [53.2, 189.0], [53.3, 189.0], [53.4, 189.0], [53.5, 190.0], [53.6, 190.0], [53.7, 190.0], [53.8, 191.0], [53.9, 191.0], [54.0, 192.0], [54.1, 192.0], [54.2, 192.0], [54.3, 193.0], [54.4, 193.0], [54.5, 194.0], [54.6, 194.0], [54.7, 194.0], [54.8, 195.0], [54.9, 195.0], [55.0, 195.0], [55.1, 196.0], [55.2, 196.0], [55.3, 196.0], [55.4, 197.0], [55.5, 197.0], [55.6, 197.0], [55.7, 198.0], [55.8, 198.0], [55.9, 199.0], [56.0, 199.0], [56.1, 199.0], [56.2, 200.0], [56.3, 200.0], [56.4, 201.0], [56.5, 201.0], [56.6, 201.0], [56.7, 202.0], [56.8, 202.0], [56.9, 203.0], [57.0, 203.0], [57.1, 204.0], [57.2, 204.0], [57.3, 204.0], [57.4, 205.0], [57.5, 205.0], [57.6, 205.0], [57.7, 206.0], [57.8, 206.0], [57.9, 207.0], [58.0, 207.0], [58.1, 207.0], [58.2, 208.0], [58.3, 208.0], [58.4, 209.0], [58.5, 209.0], [58.6, 209.0], [58.7, 210.0], [58.8, 210.0], [58.9, 210.0], [59.0, 211.0], [59.1, 211.0], [59.2, 212.0], [59.3, 212.0], [59.4, 212.0], [59.5, 213.0], [59.6, 213.0], [59.7, 214.0], [59.8, 214.0], [59.9, 215.0], [60.0, 215.0], [60.1, 216.0], [60.2, 216.0], [60.3, 216.0], [60.4, 217.0], [60.5, 217.0], [60.6, 218.0], [60.7, 218.0], [60.8, 219.0], [60.9, 219.0], [61.0, 219.0], [61.1, 220.0], [61.2, 220.0], [61.3, 220.0], [61.4, 221.0], [61.5, 221.0], [61.6, 222.0], [61.7, 222.0], [61.8, 223.0], [61.9, 223.0], [62.0, 223.0], [62.1, 224.0], [62.2, 225.0], [62.3, 225.0], [62.4, 225.0], [62.5, 226.0], [62.6, 227.0], [62.7, 227.0], [62.8, 228.0], [62.9, 228.0], [63.0, 228.0], [63.1, 229.0], [63.2, 229.0], [63.3, 230.0], [63.4, 231.0], [63.5, 231.0], [63.6, 232.0], [63.7, 232.0], [63.8, 233.0], [63.9, 233.0], [64.0, 234.0], [64.1, 234.0], [64.2, 235.0], [64.3, 235.0], [64.4, 235.0], [64.5, 236.0], [64.6, 236.0], [64.7, 237.0], [64.8, 238.0], [64.9, 238.0], [65.0, 238.0], [65.1, 239.0], [65.2, 240.0], [65.3, 240.0], [65.4, 241.0], [65.5, 241.0], [65.6, 242.0], [65.7, 242.0], [65.8, 243.0], [65.9, 243.0], [66.0, 244.0], [66.1, 245.0], [66.2, 245.0], [66.3, 246.0], [66.4, 246.0], [66.5, 247.0], [66.6, 248.0], [66.7, 248.0], [66.8, 249.0], [66.9, 249.0], [67.0, 250.0], [67.1, 250.0], [67.2, 251.0], [67.3, 252.0], [67.4, 252.0], [67.5, 253.0], [67.6, 253.0], [67.7, 254.0], [67.8, 254.0], [67.9, 255.0], [68.0, 255.0], [68.1, 256.0], [68.2, 257.0], [68.3, 257.0], [68.4, 258.0], [68.5, 259.0], [68.6, 259.0], [68.7, 260.0], [68.8, 261.0], [68.9, 261.0], [69.0, 262.0], [69.1, 262.0], [69.2, 263.0], [69.3, 264.0], [69.4, 265.0], [69.5, 265.0], [69.6, 266.0], [69.7, 267.0], [69.8, 267.0], [69.9, 268.0], [70.0, 269.0], [70.1, 269.0], [70.2, 270.0], [70.3, 271.0], [70.4, 271.0], [70.5, 272.0], [70.6, 273.0], [70.7, 273.0], [70.8, 274.0], [70.9, 275.0], [71.0, 275.0], [71.1, 276.0], [71.2, 277.0], [71.3, 277.0], [71.4, 278.0], [71.5, 279.0], [71.6, 279.0], [71.7, 280.0], [71.8, 281.0], [71.9, 282.0], [72.0, 283.0], [72.1, 283.0], [72.2, 284.0], [72.3, 285.0], [72.4, 285.0], [72.5, 286.0], [72.6, 287.0], [72.7, 288.0], [72.8, 288.0], [72.9, 289.0], [73.0, 290.0], [73.1, 291.0], [73.2, 292.0], [73.3, 292.0], [73.4, 293.0], [73.5, 294.0], [73.6, 295.0], [73.7, 295.0], [73.8, 296.0], [73.9, 297.0], [74.0, 298.0], [74.1, 298.0], [74.2, 299.0], [74.3, 300.0], [74.4, 301.0], [74.5, 302.0], [74.6, 303.0], [74.7, 303.0], [74.8, 304.0], [74.9, 305.0], [75.0, 306.0], [75.1, 307.0], [75.2, 307.0], [75.3, 308.0], [75.4, 309.0], [75.5, 310.0], [75.6, 311.0], [75.7, 312.0], [75.8, 313.0], [75.9, 314.0], [76.0, 315.0], [76.1, 315.0], [76.2, 317.0], [76.3, 318.0], [76.4, 318.0], [76.5, 319.0], [76.6, 320.0], [76.7, 321.0], [76.8, 322.0], [76.9, 323.0], [77.0, 325.0], [77.1, 325.0], [77.2, 326.0], [77.3, 328.0], [77.4, 329.0], [77.5, 330.0], [77.6, 331.0], [77.7, 332.0], [77.8, 333.0], [77.9, 334.0], [78.0, 335.0], [78.1, 336.0], [78.2, 337.0], [78.3, 338.0], [78.4, 340.0], [78.5, 340.0], [78.6, 342.0], [78.7, 343.0], [78.8, 344.0], [78.9, 345.0], [79.0, 346.0], [79.1, 347.0], [79.2, 348.0], [79.3, 349.0], [79.4, 351.0], [79.5, 353.0], [79.6, 354.0], [79.7, 355.0], [79.8, 356.0], [79.9, 357.0], [80.0, 359.0], [80.1, 360.0], [80.2, 361.0], [80.3, 363.0], [80.4, 364.0], [80.5, 366.0], [80.6, 367.0], [80.7, 368.0], [80.8, 370.0], [80.9, 372.0], [81.0, 373.0], [81.1, 374.0], [81.2, 376.0], [81.3, 378.0], [81.4, 379.0], [81.5, 381.0], [81.6, 382.0], [81.7, 384.0], [81.8, 385.0], [81.9, 387.0], [82.0, 388.0], [82.1, 390.0], [82.2, 391.0], [82.3, 392.0], [82.4, 395.0], [82.5, 396.0], [82.6, 397.0], [82.7, 399.0], [82.8, 401.0], [82.9, 402.0], [83.0, 404.0], [83.1, 406.0], [83.2, 408.0], [83.3, 409.0], [83.4, 411.0], [83.5, 413.0], [83.6, 415.0], [83.7, 416.0], [83.8, 419.0], [83.9, 421.0], [84.0, 423.0], [84.1, 425.0], [84.2, 428.0], [84.3, 430.0], [84.4, 432.0], [84.5, 434.0], [84.6, 436.0], [84.7, 438.0], [84.8, 440.0], [84.9, 442.0], [85.0, 445.0], [85.1, 447.0], [85.2, 450.0], [85.3, 453.0], [85.4, 455.0], [85.5, 457.0], [85.6, 460.0], [85.7, 463.0], [85.8, 465.0], [85.9, 468.0], [86.0, 470.0], [86.1, 473.0], [86.2, 475.0], [86.3, 478.0], [86.4, 480.0], [86.5, 483.0], [86.6, 486.0], [86.7, 490.0], [86.8, 493.0], [86.9, 495.0], [87.0, 499.0], [87.1, 502.0], [87.2, 505.0], [87.3, 508.0], [87.4, 510.0], [87.5, 514.0], [87.6, 517.0], [87.7, 520.0], [87.8, 523.0], [87.9, 526.0], [88.0, 529.0], [88.1, 532.0], [88.2, 535.0], [88.3, 537.0], [88.4, 540.0], [88.5, 543.0], [88.6, 546.0], [88.7, 548.0], [88.8, 550.0], [88.9, 553.0], [89.0, 556.0], [89.1, 560.0], [89.2, 564.0], [89.3, 567.0], [89.4, 570.0], [89.5, 574.0], [89.6, 578.0], [89.7, 581.0], [89.8, 585.0], [89.9, 589.0], [90.0, 593.0], [90.1, 596.0], [90.2, 599.0], [90.3, 602.0], [90.4, 607.0], [90.5, 611.0], [90.6, 615.0], [90.7, 620.0], [90.8, 624.0], [90.9, 628.0], [91.0, 633.0], [91.1, 637.0], [91.2, 641.0], [91.3, 645.0], [91.4, 649.0], [91.5, 653.0], [91.6, 657.0], [91.7, 664.0], [91.8, 671.0], [91.9, 676.0], [92.0, 683.0], [92.1, 690.0], [92.2, 695.0], [92.3, 702.0], [92.4, 709.0], [92.5, 715.0], [92.6, 724.0], [92.7, 733.0], [92.8, 743.0], [92.9, 752.0], [93.0, 761.0], [93.1, 770.0], [93.2, 782.0], [93.3, 793.0], [93.4, 801.0], [93.5, 810.0], [93.6, 820.0], [93.7, 833.0], [93.8, 842.0], [93.9, 857.0], [94.0, 874.0], [94.1, 888.0], [94.2, 900.0], [94.3, 921.0], [94.4, 942.0], [94.5, 962.0], [94.6, 986.0], [94.7, 1011.0], [94.8, 1037.0], [94.9, 1075.0], [95.0, 1113.0], [95.1, 1149.0], [95.2, 1184.0], [95.3, 1215.0], [95.4, 1249.0], [95.5, 1271.0], [95.6, 1311.0], [95.7, 1333.0], [95.8, 1359.0], [95.9, 1387.0], [96.0, 1421.0], [96.1, 1457.0], [96.2, 1487.0], [96.3, 1523.0], [96.4, 1549.0], [96.5, 1596.0], [96.6, 1637.0], [96.7, 1674.0], [96.8, 1718.0], [96.9, 1782.0], [97.0, 1836.0], [97.1, 1870.0], [97.2, 1907.0], [97.3, 1937.0], [97.4, 1990.0], [97.5, 2025.0], [97.6, 2108.0], [97.7, 2150.0], [97.8, 2251.0], [97.9, 2296.0], [98.0, 2364.0], [98.1, 2432.0], [98.2, 2510.0], [98.3, 2590.0], [98.4, 2679.0], [98.5, 2742.0], [98.6, 2824.0], [98.7, 2889.0], [98.8, 2984.0], [98.9, 3170.0], [99.0, 3346.0], [99.1, 3516.0], [99.2, 3727.0], [99.3, 3955.0], [99.4, 4112.0], [99.5, 4389.0], [99.6, 4572.0], [99.7, 4833.0], [99.8, 5007.0], [99.9, 5342.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 15365.0, "series": [{"data": [[2100.0, 2.0], [2200.0, 2.0], [2300.0, 3.0], [2400.0, 2.0], [2700.0, 2.0], [2800.0, 1.0], [700.0, 1.0], [3100.0, 1.0], [3600.0, 2.0], [4000.0, 1.0], [4100.0, 2.0], [4300.0, 1.0], [1100.0, 5.0], [4400.0, 2.0], [4600.0, 1.0], [4500.0, 1.0], [1200.0, 4.0], [4900.0, 2.0], [1300.0, 5.0], [1400.0, 2.0], [1600.0, 2.0], [1700.0, 1.0], [1900.0, 1.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[600.0, 4.0], [2400.0, 1.0], [700.0, 3.0], [200.0, 8.0], [800.0, 8.0], [900.0, 2.0], [1000.0, 4.0], [300.0, 2.0], [1200.0, 1.0], [1300.0, 5.0], [1400.0, 1.0], [1500.0, 1.0], [100.0, 8.0], [400.0, 3.0], [1700.0, 1.0], [500.0, 6.0], [2000.0, 1.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[9400.0, 1.0], [9600.0, 1.0], [600.0, 1.0], [10400.0, 1.0], [10600.0, 1.0], [700.0, 1.0], [11300.0, 1.0], [12000.0, 1.0], [11900.0, 1.0], [12300.0, 1.0], [12900.0, 3.0], [12800.0, 2.0], [13100.0, 1.0], [14100.0, 1.0], [14700.0, 1.0], [14600.0, 1.0], [14500.0, 1.0], [15200.0, 2.0], [15300.0, 1.0], [15700.0, 1.0], [15400.0, 1.0], [15500.0, 2.0], [15800.0, 2.0], [16200.0, 1.0], [1000.0, 2.0], [1400.0, 1.0], [3200.0, 1.0], [3400.0, 2.0], [5100.0, 1.0], [5600.0, 1.0], [5700.0, 1.0], [6000.0, 1.0], [6100.0, 1.0], [6300.0, 1.0], [6400.0, 2.0], [6600.0, 1.0], [6500.0, 1.0], [6900.0, 1.0], [7600.0, 1.0], [8100.0, 1.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[0.0, 2742.0], [600.0, 656.0], [700.0, 364.0], [800.0, 264.0], [900.0, 153.0], [1000.0, 102.0], [1100.0, 83.0], [1200.0, 109.0], [1300.0, 123.0], [1400.0, 87.0], [1500.0, 89.0], [1600.0, 76.0], [1700.0, 65.0], [1800.0, 75.0], [1900.0, 84.0], [2000.0, 51.0], [2100.0, 49.0], [2300.0, 46.0], [2200.0, 51.0], [2400.0, 44.0], [2500.0, 43.0], [2600.0, 39.0], [2700.0, 45.0], [2800.0, 47.0], [2900.0, 29.0], [3000.0, 22.0], [3100.0, 13.0], [3300.0, 14.0], [3200.0, 23.0], [3400.0, 17.0], [3500.0, 24.0], [3600.0, 5.0], [3700.0, 18.0], [3800.0, 12.0], [3900.0, 21.0], [4000.0, 18.0], [4100.0, 14.0], [4200.0, 12.0], [4300.0, 14.0], [4400.0, 12.0], [4500.0, 19.0], [4600.0, 13.0], [4800.0, 21.0], [4700.0, 9.0], [4900.0, 18.0], [5000.0, 11.0], [5100.0, 10.0], [5300.0, 12.0], [5200.0, 6.0], [5500.0, 6.0], [5400.0, 5.0], [5600.0, 2.0], [5700.0, 5.0], [5800.0, 2.0], [5900.0, 2.0], [6100.0, 2.0], [6000.0, 1.0], [6200.0, 1.0], [100.0, 15365.0], [200.0, 5839.0], [300.0, 2749.0], [400.0, 1384.0], [500.0, 1026.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 16200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1150.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 26973.0, "series": [{"data": [[0.0, 26973.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3009.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1285.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1150.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.1666666666666665, "minX": 1.71819918E12, "maxY": 60.0, "series": [{"data": [[1.7182023E12, 6.962962962962965], [1.71820224E12, 17.43356643356643], [1.71820236E12, 10.130434782608694]], "isOverall": false, "label": "MixedTest", "isController": false}, {"data": [[1.7182047E12, 15.87765957446809], [1.718205E12, 51.61329539575786], [1.71820338E12, 2.1666666666666665], [1.71820464E12, 8.914634146341475], [1.71820512E12, 60.0], [1.71820476E12, 22.97918511957482], [1.71820344E12, 26.622980251346466], [1.71820518E12, 58.88328075709779], [1.71820506E12, 58.43595041322309], [1.71820482E12, 30.071602363573184], [1.71820494E12, 44.461348005502074], [1.71820014E12, 19.938562091503286], [1.71820458E12, 3.3129251700680262], [1.71819918E12, 20.16279069767442], [1.71820044E12, 20.020460358056248], [1.71820488E12, 37.28567190744597]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71820518E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 162.94249201277967, "minX": 1.0, "maxY": 16209.0, "series": [{"data": [[2.0, 1149.5], [8.0, 1312.3333333333333], [9.0, 1254.0], [10.0, 1697.0], [11.0, 1424.0], [12.0, 1617.0], [13.0, 1680.6666666666667], [15.0, 2118.0], [4.0, 1163.5], [17.0, 2293.0], [18.0, 2295.0], [19.0, 2867.3333333333335], [5.0, 1144.25], [20.0, 2393.3333333333335], [22.0, 3892.3333333333335], [23.0, 3864.0], [6.0, 1308.0], [24.0, 3368.0], [25.0, 3641.5], [26.0, 4042.0], [27.0, 4537.0], [28.0, 4966.0], [30.0, 4508.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[15.478260869565217, 2440.5]], "isOverall": false, "label": "Directors by name-Aggregated", "isController": false}, {"data": [[2.0, 516.0], [3.0, 440.66666666666663], [4.0, 560.0], [5.0, 167.0], [6.0, 321.0], [7.0, 463.0], [8.0, 171.0], [9.0, 462.6666666666667], [10.0, 546.0], [11.0, 634.75], [13.0, 789.0], [14.0, 670.5], [15.0, 166.0], [16.0, 840.0], [17.0, 862.0], [18.0, 866.0], [19.0, 528.0], [20.0, 916.3333333333334], [21.0, 724.3333333333334], [22.0, 990.0], [25.0, 1835.0], [26.0, 542.0], [27.0, 759.0], [28.0, 1358.3333333333333], [29.0, 2026.0], [30.0, 877.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[16.01694915254238, 737.8474576271186]], "isOverall": false, "label": "TitleBasics by primary_title-Aggregated", "isController": false}, {"data": [[8.0, 13142.0], [2.0, 6351.5], [9.0, 8244.0], [10.0, 8743.333333333334], [11.0, 9515.0], [12.0, 10991.5], [3.0, 12310.0], [13.0, 8799.0], [15.0, 7293.5], [16.0, 16209.0], [4.0, 12803.0], [1.0, 6238.5], [17.0, 11731.0], [18.0, 15234.0], [20.0, 9583.5], [5.0, 7992.5], [22.0, 10558.0], [6.0, 7905.333333333334], [25.0, 12504.0], [26.0, 12928.0], [27.0, 14329.5], [7.0, 9571.0], [29.0, 14121.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[12.857142857142865, 9767.938775510203]], "isOverall": false, "label": "Actors by name-Aggregated", "isController": false}, {"data": [[2.0, 400.6511627906975], [3.0, 281.23437499999994], [4.0, 226.71428571428572], [5.0, 209.78095238095239], [6.0, 259.1896551724138], [7.0, 254.67883211678824], [8.0, 260.69642857142856], [9.0, 168.34871794871796], [10.0, 197.60454545454536], [11.0, 215.37777777777785], [12.0, 263.2], [13.0, 231.39393939393932], [14.0, 162.94249201277967], [15.0, 196.44936708860746], [16.0, 185.55279503105578], [17.0, 224.79178885630492], [18.0, 248.89044943820218], [19.0, 178.833740831296], [20.0, 186.5134474327629], [21.0, 181.0496613995484], [22.0, 206.92074592074604], [23.0, 225.64893617021272], [24.0, 183.491193737769], [25.0, 193.11821705426368], [26.0, 187.65735567970202], [27.0, 223.24862888482622], [28.0, 197.90398550724635], [29.0, 195.3517915309447], [30.0, 204.71848530144499], [31.0, 222.01960784313738], [32.0, 239.20975609756096], [33.0, 234.7671232876714], [34.0, 245.06744186046495], [35.0, 254.44369369369346], [36.0, 261.1135857461026], [37.0, 234.97938144329876], [38.0, 240.16701461377875], [39.0, 259.59533898305085], [40.0, 299.3828920570269], [41.0, 302.27800829875525], [42.0, 293.34756097560967], [43.0, 314.6087824351296], [44.0, 293.8342967244701], [45.0, 307.34455445544523], [46.0, 389.48111332007966], [47.0, 315.0462107208876], [48.0, 345.71673003802255], [49.0, 400.56286266924576], [50.0, 350.0611111111112], [51.0, 385.2989130434781], [52.0, 390.787072243346], [53.0, 383.06788990825714], [54.0, 468.73308270676705], [55.0, 420.88330341113056], [56.0, 458.02303262955843], [57.0, 592.0618101545258], [58.0, 454.6048780487801], [59.0, 439.1428571428576], [60.0, 541.054497509522], [1.0, 553.3333333333334]], "isOverall": false, "label": "TitleBasics by params", "isController": false}, {"data": [[40.51170070979142, 338.35232309456774]], "isOverall": false, "label": "TitleBasics by params-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 60.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 18.2, "minX": 1.71819918E12, "maxY": 507507.3, "series": [{"data": [[1.7182047E12, 197868.58333333334], [1.718205E12, 507507.3], [1.71820338E12, 833.5666666666667], [1.71820464E12, 106831.63333333333], [1.71820512E12, 487281.9666666667], [1.71820476E12, 295883.05], [1.71820344E12, 286201.68333333335], [1.71820518E12, 207041.98333333334], [1.7182023E12, 2122.7833333333333], [1.71820506E12, 506184.25], [1.71820224E12, 9168.55], [1.71820482E12, 377728.9166666667], [1.71820236E12, 1204.7333333333333], [1.71820494E12, 476844.88333333336], [1.71820014E12, 95965.81666666667], [1.71820458E12, 18533.4], [1.71819918E12, 97193.93333333333], [1.71820044E12, 98268.15], [1.71820488E12, 442878.35]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7182047E12, 4379.133333333333], [1.718205E12, 11397.533333333333], [1.71820338E12, 18.2], [1.71820464E12, 2373.5666666666666], [1.71820512E12, 11007.55], [1.71820476E12, 6613.816666666667], [1.71820344E12, 6379.266666666666], [1.71820518E12, 4707.1], [1.7182023E12, 77.28333333333333], [1.71820506E12, 11408.433333333332], [1.71820224E12, 395.98333333333335], [1.71820482E12, 8456.883333333333], [1.71820236E12, 25.716666666666665], [1.71820494E12, 10728.1], [1.71820014E12, 2184.4666666666667], [1.71820458E12, 419.15], [1.71819918E12, 2211.7833333333333], [1.71820044E12, 2232.9166666666665], [1.71820488E12, 9932.066666666668]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71820518E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 144.5, "minX": 1.71819918E12, "maxY": 12336.529411764706, "series": [{"data": [[1.7182023E12, 1272.25], [1.71820224E12, 2790.9428571428575], [1.71820236E12, 1467.3333333333333]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.7182023E12, 473.72727272727275], [1.71820224E12, 825.3863636363636], [1.71820236E12, 501.25]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.7182023E12, 5761.0], [1.71820224E12, 12336.529411764706], [1.71820236E12, 3816.142857142857]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.7182047E12, 216.23869680851055], [1.718205E12, 390.08406621831335], [1.71820338E12, 144.5], [1.71820464E12, 199.867073170732], [1.71820512E12, 551.9217996786294], [1.71820476E12, 195.94286979627958], [1.71820344E12, 205.80026929982063], [1.71820518E12, 550.7678233438482], [1.7182023E12, 149.28571428571428], [1.71820506E12, 498.0627582644623], [1.71820224E12, 253.26666666666665], [1.71820482E12, 213.88321167883205], [1.71820236E12, 243.5], [1.71820494E12, 323.41650618982146], [1.71820014E12, 199.28366013071883], [1.71820458E12, 230.7278911564626], [1.71819918E12, 193.80490956072362], [1.71820044E12, 189.64066496163662], [1.71820488E12, 258.1272619400769]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71820518E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 141.33333333333334, "minX": 1.71819918E12, "maxY": 12336.382352941178, "series": [{"data": [[1.7182023E12, 1272.25], [1.71820224E12, 2790.8571428571436], [1.71820236E12, 1219.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.7182023E12, 472.6363636363636], [1.71820224E12, 824.1818181818181], [1.71820236E12, 394.25]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.7182023E12, 5760.0], [1.71820224E12, 12336.382352941178], [1.71820236E12, 966.5714285714283]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.7182047E12, 209.0864361702131], [1.718205E12, 386.6691670977756], [1.71820338E12, 141.33333333333334], [1.71820464E12, 197.27560975609765], [1.71820512E12, 549.2313872522753], [1.71820476E12, 192.90921169176232], [1.71820344E12, 203.14183123877908], [1.71820518E12, 548.0283911671926], [1.7182023E12, 147.71428571428572], [1.71820506E12, 495.2771177685952], [1.71820224E12, 250.83333333333337], [1.71820482E12, 211.30309350017356], [1.71820236E12, 243.0], [1.71820494E12, 320.75295735900966], [1.71820014E12, 196.76601307189551], [1.71820458E12, 228.48979591836732], [1.71819918E12, 191.37209302325567], [1.71820044E12, 186.9641943734015], [1.71820488E12, 255.4271729457132]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71820518E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.71819918E12, "maxY": 64.05882352941178, "series": [{"data": [[1.7182023E12, 21.75], [1.71820224E12, 8.142857142857144], [1.71820236E12, 0.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.7182023E12, 17.09090909090909], [1.71820224E12, 25.77272727272728], [1.71820236E12, 21.5]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.7182023E12, 0.0], [1.71820224E12, 64.05882352941178], [1.71820236E12, 9.642857142857142]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.7182047E12, 1.5312500000000002], [1.718205E12, 0.7679772374547331], [1.71820338E12, 14.666666666666668], [1.71820464E12, 0.6268292682926822], [1.71820512E12, 0.7584359935725774], [1.71820476E12, 0.8392382639503976], [1.71820344E12, 0.9263913824057466], [1.71820518E12, 0.5899053627760253], [1.7182023E12, 6.142857142857142], [1.71820506E12, 0.7469008264462816], [1.71820224E12, 9.066666666666666], [1.71820482E12, 0.7028154327424405], [1.71820236E12, 0.0], [1.71820494E12, 0.6583218707015135], [1.71820014E12, 3.509803921568631], [1.71820458E12, 10.068027210884356], [1.71819918E12, 4.054263565891472], [1.71820044E12, 3.5601023017902813], [1.71820488E12, 0.761791753188964]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71820518E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 82.0, "minX": 1.71819918E12, "maxY": 16209.0, "series": [{"data": [[1.7182047E12, 2694.0], [1.718205E12, 3685.0], [1.71820338E12, 191.0], [1.71820464E12, 2203.0], [1.71820512E12, 6249.0], [1.71820476E12, 2224.0], [1.71820344E12, 2341.0], [1.71820518E12, 5722.0], [1.7182023E12, 5761.0], [1.71820506E12, 5599.0], [1.71820224E12, 16209.0], [1.71820482E12, 2125.0], [1.71820236E12, 6941.0], [1.71820494E12, 3516.0], [1.71820014E12, 2095.0], [1.71820458E12, 1535.0], [1.71819918E12, 2056.0], [1.71820044E12, 1609.0], [1.71820488E12, 2765.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7182047E12, 83.0], [1.718205E12, 91.0], [1.71820338E12, 94.0], [1.71820464E12, 83.0], [1.71820512E12, 107.0], [1.71820476E12, 84.0], [1.71820344E12, 84.0], [1.71820518E12, 122.0], [1.7182023E12, 95.0], [1.71820506E12, 101.0], [1.71820224E12, 98.0], [1.71820482E12, 83.0], [1.71820236E12, 116.0], [1.71820494E12, 92.0], [1.71820014E12, 88.0], [1.71820458E12, 82.0], [1.71819918E12, 86.0], [1.71820044E12, 88.0], [1.71820488E12, 85.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7182047E12, 568.0], [1.718205E12, 618.1999999999998], [1.71820338E12, 191.0], [1.71820464E12, 522.4999999999999], [1.71820512E12, 739.6000000000004], [1.71820476E12, 486.60000000000036], [1.71820344E12, 514.9000000000012], [1.71820518E12, 733.1999999999996], [1.7182023E12, 1374.6], [1.71820506E12, 783.2000000000003], [1.71820224E12, 13729.399999999994], [1.71820482E12, 352.7999999999997], [1.71820236E12, 6941.0], [1.71820494E12, 554.4000000000005], [1.71820014E12, 533.0], [1.71820458E12, 613.8000000000004], [1.71819918E12, 269.50000000000284], [1.71820044E12, 291.19999999999993], [1.71820488E12, 441.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7182047E12, 1419.999999999999], [1.718205E12, 2951.2000000000007], [1.71820338E12, 191.0], [1.71820464E12, 1324.3799999999999], [1.71820512E12, 5116.619999999997], [1.71820476E12, 1327.4799999999996], [1.71820344E12, 1547.0099999999998], [1.71820518E12, 4789.68], [1.7182023E12, 5761.0], [1.71820506E12, 4539.440000000002], [1.71820224E12, 16058.960000000001], [1.71820482E12, 1607.4799999999996], [1.71820236E12, 6941.0], [1.71820494E12, 2447.810000000003], [1.71820014E12, 1428.9999999999995], [1.71820458E12, 1533.05], [1.71819918E12, 1483.3900000000003], [1.71820044E12, 1456.48], [1.71820488E12, 1944.100000000003]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7182047E12, 119.0], [1.718205E12, 241.0], [1.71820338E12, 143.0], [1.71820464E12, 123.0], [1.71820512E12, 298.0], [1.71820476E12, 120.0], [1.71820344E12, 125.0], [1.71820518E12, 296.0], [1.7182023E12, 560.0], [1.71820506E12, 278.0], [1.71820224E12, 1367.0], [1.71820482E12, 131.0], [1.71820236E12, 784.0], [1.71820494E12, 193.0], [1.71820014E12, 128.0], [1.71820458E12, 132.5], [1.71819918E12, 125.0], [1.71820044E12, 129.0], [1.71820488E12, 156.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.7182047E12, 975.0], [1.718205E12, 1519.3999999999978], [1.71820338E12, 191.0], [1.71820464E12, 880.7999999999997], [1.71820512E12, 2711.699999999998], [1.71820476E12, 693.7999999999993], [1.71820344E12, 786.1499999999999], [1.71820518E12, 2838.7999999999943], [1.7182023E12, 4023.3999999999905], [1.71820506E12, 2260.4999999999986], [1.71820224E12, 15408.999999999998], [1.71820482E12, 750.7999999999997], [1.71820236E12, 6941.0], [1.71820494E12, 1215.0499999999997], [1.71820014E12, 746.0], [1.71820458E12, 1225.6499999999994], [1.71819918E12, 702.7499999999998], [1.71820044E12, 633.3999999999999], [1.71820488E12, 912.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71820518E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 1266.5, "series": [{"data": [[2.0, 816.0], [3.0, 701.5], [4.0, 182.0], [5.0, 205.0], [6.0, 192.5], [7.0, 181.5], [8.0, 131.0], [9.0, 159.0], [10.0, 132.0], [11.0, 128.0], [12.0, 133.0], [13.0, 132.0], [14.0, 130.0], [15.0, 138.0], [16.0, 167.0], [17.0, 122.0], [18.0, 125.0], [19.0, 126.0], [20.0, 118.0], [21.0, 117.0], [22.0, 118.0], [23.0, 146.0], [24.0, 118.5], [25.0, 119.0], [26.0, 118.0], [27.0, 120.5], [28.0, 150.5], [29.0, 121.5], [30.0, 117.0], [31.0, 123.5], [33.0, 136.0], [32.0, 121.5], [34.0, 144.0], [35.0, 118.0], [36.0, 133.0], [37.0, 132.0], [38.0, 126.0], [39.0, 118.0], [40.0, 114.5], [41.0, 117.0], [42.0, 124.0], [43.0, 128.0], [45.0, 155.5], [44.0, 125.5], [46.0, 137.0], [47.0, 148.0], [48.0, 141.0], [49.0, 141.0], [50.0, 167.0], [51.0, 146.0], [52.0, 137.0], [53.0, 174.0], [54.0, 190.0], [55.0, 227.0], [57.0, 225.0], [56.0, 212.0], [58.0, 176.0], [59.0, 241.0], [61.0, 221.5], [60.0, 256.5], [63.0, 258.5], [62.0, 214.5], [64.0, 215.0], [66.0, 239.0], [65.0, 304.5], [67.0, 264.5], [69.0, 226.0], [68.0, 241.0], [71.0, 231.0], [70.0, 282.5], [72.0, 216.0], [74.0, 222.0], [73.0, 291.0], [75.0, 274.0], [76.0, 247.0], [78.0, 197.0], [77.0, 214.0], [79.0, 221.0], [81.0, 218.5], [80.0, 267.0], [83.0, 273.0], [86.0, 284.0], [88.0, 236.0], [98.0, 187.0], [1.0, 536.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [4.0, 0.5], [5.0, 0.0], [6.0, 0.0], [8.0, 0.0], [10.0, 0.0], [11.0, 0.0], [12.0, 0.0], [13.0, 0.0], [14.0, 1266.5], [15.0, 0.0], [16.0, 0.0], [17.0, 0.0], [18.0, 0.0], [19.0, 0.0], [20.0, 0.0], [21.0, 0.0], [22.0, 0.0], [23.0, 0.0], [24.0, 0.0], [25.0, 0.0], [26.0, 0.0], [27.0, 0.0], [28.0, 0.0], [29.0, 0.0], [30.0, 0.0], [31.0, 0.0], [33.0, 0.0], [32.0, 0.0], [34.0, 0.0], [35.0, 0.0], [36.0, 0.0], [37.0, 0.0], [38.0, 0.0], [39.0, 0.0], [40.0, 0.0], [41.0, 0.0], [42.0, 0.0], [43.0, 0.0], [45.0, 0.0], [44.0, 0.0], [46.0, 0.0], [47.0, 0.0], [48.0, 0.0], [49.0, 0.0], [50.0, 0.0], [51.0, 0.0], [52.0, 0.0], [53.0, 0.0], [54.0, 0.0], [55.0, 0.0], [57.0, 0.0], [56.0, 0.0], [58.0, 0.0], [59.0, 0.0], [61.0, 0.0], [60.0, 0.0], [63.0, 0.0], [62.0, 0.0], [64.0, 0.0], [66.0, 0.0], [65.0, 0.0], [67.0, 0.0], [69.0, 0.0], [68.0, 0.0], [71.0, 0.0], [70.0, 0.0], [72.0, 0.0], [74.0, 0.0], [73.0, 0.0], [75.0, 0.0], [78.0, 0.0], [77.0, 0.0], [79.0, 0.0], [76.0, 0.0], [81.0, 0.0], [80.0, 0.0], [83.0, 0.0], [86.0, 0.0], [88.0, 0.0], [98.0, 0.0], [1.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 98.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 816.0, "series": [{"data": [[2.0, 816.0], [3.0, 701.5], [4.0, 180.5], [5.0, 202.5], [6.0, 190.0], [7.0, 179.0], [8.0, 128.0], [9.0, 157.0], [10.0, 128.5], [11.0, 125.0], [12.0, 130.0], [13.0, 129.5], [14.0, 128.0], [15.0, 136.0], [16.0, 164.0], [17.0, 118.0], [18.0, 123.0], [19.0, 123.5], [20.0, 114.0], [21.0, 115.0], [22.0, 114.5], [23.0, 144.0], [24.0, 114.5], [25.0, 116.0], [26.0, 114.0], [27.0, 115.0], [28.0, 145.5], [29.0, 117.0], [30.0, 113.0], [31.0, 118.0], [33.0, 132.0], [32.0, 119.0], [34.0, 141.5], [35.0, 115.0], [36.0, 131.0], [37.0, 129.0], [38.0, 124.0], [39.0, 115.0], [40.0, 112.0], [41.0, 114.0], [42.0, 122.0], [43.0, 125.0], [45.0, 152.0], [44.0, 123.0], [46.0, 134.5], [47.0, 145.0], [48.0, 137.0], [49.0, 138.5], [50.0, 164.0], [51.0, 143.5], [52.0, 133.0], [53.0, 171.5], [54.0, 188.0], [55.0, 223.0], [57.0, 222.0], [56.0, 209.0], [58.0, 172.0], [59.0, 238.0], [61.0, 219.0], [60.0, 254.0], [63.0, 256.5], [62.0, 212.0], [64.0, 212.0], [66.0, 236.0], [65.0, 301.5], [67.0, 260.0], [69.0, 222.0], [68.0, 238.0], [71.0, 227.0], [70.0, 280.5], [72.0, 213.0], [74.0, 220.0], [73.0, 287.0], [75.0, 268.5], [76.0, 244.0], [78.0, 194.0], [77.0, 211.0], [79.0, 218.0], [81.0, 216.5], [80.0, 264.5], [83.0, 270.0], [86.0, 281.5], [88.0, 232.0], [98.0, 184.0], [1.0, 536.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [4.0, 0.0], [5.0, 0.0], [6.0, 0.0], [8.0, 0.0], [10.0, 0.0], [11.0, 0.0], [12.0, 0.0], [13.0, 0.0], [14.0, 0.0], [15.0, 0.0], [16.0, 0.0], [17.0, 0.0], [18.0, 0.0], [19.0, 0.0], [20.0, 0.0], [21.0, 0.0], [22.0, 0.0], [23.0, 0.0], [24.0, 0.0], [25.0, 0.0], [26.0, 0.0], [27.0, 0.0], [28.0, 0.0], [29.0, 0.0], [30.0, 0.0], [31.0, 0.0], [33.0, 0.0], [32.0, 0.0], [34.0, 0.0], [35.0, 0.0], [36.0, 0.0], [37.0, 0.0], [38.0, 0.0], [39.0, 0.0], [40.0, 0.0], [41.0, 0.0], [42.0, 0.0], [43.0, 0.0], [45.0, 0.0], [44.0, 0.0], [46.0, 0.0], [47.0, 0.0], [48.0, 0.0], [49.0, 0.0], [50.0, 0.0], [51.0, 0.0], [52.0, 0.0], [53.0, 0.0], [54.0, 0.0], [55.0, 0.0], [57.0, 0.0], [56.0, 0.0], [58.0, 0.0], [59.0, 0.0], [61.0, 0.0], [60.0, 0.0], [63.0, 0.0], [62.0, 0.0], [64.0, 0.0], [66.0, 0.0], [65.0, 0.0], [67.0, 0.0], [69.0, 0.0], [68.0, 0.0], [71.0, 0.0], [70.0, 0.0], [72.0, 0.0], [74.0, 0.0], [73.0, 0.0], [75.0, 0.0], [78.0, 0.0], [77.0, 0.0], [79.0, 0.0], [76.0, 0.0], [81.0, 0.0], [80.0, 0.0], [83.0, 0.0], [86.0, 0.0], [88.0, 0.0], [98.0, 0.0], [1.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 98.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.71819918E12, "maxY": 64.56666666666666, "series": [{"data": [[1.7182047E12, 24.9], [1.718205E12, 64.56666666666666], [1.71820338E12, 0.1], [1.71820464E12, 13.816666666666666], [1.71820512E12, 62.35], [1.71820476E12, 37.7], [1.71820344E12, 37.13333333333333], [1.71820518E12, 25.866666666666667], [1.7182023E12, 0.6], [1.71820506E12, 64.51666666666667], [1.71820224E12, 2.3833333333333333], [1.71820482E12, 48.38333333333333], [1.71820236E12, 0.23333333333333334], [1.71820494E12, 60.733333333333334], [1.71820014E12, 12.75], [1.71820458E12, 2.4833333333333334], [1.71819918E12, 12.9], [1.71820044E12, 13.033333333333333], [1.71820488E12, 55.833333333333336]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71820518E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.71819918E12, "maxY": 62.61666666666667, "series": [{"data": [[1.7182047E12, 23.983333333333334], [1.718205E12, 62.55], [1.71820338E12, 0.1], [1.71820464E12, 13.0], [1.71820512E12, 60.416666666666664], [1.71820476E12, 36.25], [1.71820344E12, 34.96666666666667], [1.71820518E12, 25.85], [1.7182023E12, 0.45], [1.71820506E12, 62.61666666666667], [1.71820224E12, 2.3833333333333333], [1.71820482E12, 46.38333333333333], [1.71820236E12, 0.15], [1.71820494E12, 58.86666666666667], [1.71820014E12, 11.983333333333333], [1.71820458E12, 2.3], [1.71819918E12, 12.133333333333333], [1.71820044E12, 12.25], [1.71820488E12, 54.483333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.7182047E12, 1.0833333333333333], [1.718205E12, 1.8833333333333333], [1.71820464E12, 0.6666666666666666], [1.71820512E12, 1.8166666666666667], [1.71820476E12, 1.3833333333333333], [1.71820344E12, 2.1666666666666665], [1.71820518E12, 0.5666666666666667], [1.71820506E12, 1.9166666666666667], [1.71820482E12, 1.5666666666666667], [1.71820494E12, 1.7166666666666666], [1.71820014E12, 0.7666666666666667], [1.71820458E12, 0.15], [1.71819918E12, 0.7666666666666667], [1.71820044E12, 0.7833333333333333], [1.71820488E12, 1.7]], "isOverall": false, "label": "Non HTTP response code: java.net.URISyntaxException", "isController": false}, {"data": [[1.71820236E12, 0.23333333333333334]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71820518E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71819918E12, "maxY": 62.61666666666667, "series": [{"data": [[1.7182023E12, 0.18333333333333332], [1.71820224E12, 0.7333333333333333], [1.71820236E12, 0.05]], "isOverall": false, "label": "TitleBasics by primary_title-success", "isController": false}, {"data": [[1.71820236E12, 0.016666666666666666]], "isOverall": false, "label": "TitleBasics by primary_title-failure", "isController": false}, {"data": [[1.71820236E12, 0.2]], "isOverall": false, "label": "Actors by name-failure", "isController": false}, {"data": [[1.7182023E12, 0.016666666666666666], [1.71820224E12, 0.5666666666666667], [1.71820236E12, 0.03333333333333333]], "isOverall": false, "label": "Actors by name-success", "isController": false}, {"data": [[1.7182047E12, 1.0833333333333333], [1.718205E12, 1.8833333333333333], [1.71820464E12, 0.6666666666666666], [1.71820512E12, 1.8166666666666667], [1.71820476E12, 1.3833333333333333], [1.71820344E12, 2.1666666666666665], [1.71820518E12, 0.5666666666666667], [1.71820506E12, 1.9166666666666667], [1.71820482E12, 1.5666666666666667], [1.71820494E12, 1.7166666666666666], [1.71820014E12, 0.7666666666666667], [1.71820458E12, 0.15], [1.71819918E12, 0.7666666666666667], [1.71820044E12, 0.7833333333333333], [1.71820488E12, 1.7]], "isOverall": false, "label": "TitleBasics by params-failure", "isController": false}, {"data": [[1.71820236E12, 0.016666666666666666]], "isOverall": false, "label": "Directors by name-failure", "isController": false}, {"data": [[1.7182047E12, 23.983333333333334], [1.718205E12, 62.55], [1.71820338E12, 0.1], [1.71820464E12, 13.0], [1.71820512E12, 60.416666666666664], [1.71820476E12, 36.25], [1.71820344E12, 34.96666666666667], [1.71820518E12, 25.85], [1.7182023E12, 0.11666666666666667], [1.71820506E12, 62.61666666666667], [1.71820224E12, 0.5], [1.71820482E12, 46.38333333333333], [1.71820236E12, 0.03333333333333333], [1.71820494E12, 58.86666666666667], [1.71820014E12, 11.983333333333333], [1.71820458E12, 2.3], [1.71819918E12, 12.133333333333333], [1.71820044E12, 12.25], [1.71820488E12, 54.483333333333334]], "isOverall": false, "label": "TitleBasics by params-success", "isController": false}, {"data": [[1.7182023E12, 0.13333333333333333], [1.71820224E12, 0.5833333333333334], [1.71820236E12, 0.03333333333333333]], "isOverall": false, "label": "Directors by name-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71820518E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.71819918E12, "maxY": 62.61666666666667, "series": [{"data": [[1.7182047E12, 23.983333333333334], [1.718205E12, 62.55], [1.71820338E12, 0.1], [1.71820464E12, 13.0], [1.71820512E12, 60.416666666666664], [1.71820476E12, 36.25], [1.71820344E12, 34.96666666666667], [1.71820518E12, 25.85], [1.7182023E12, 0.45], [1.71820506E12, 62.61666666666667], [1.71820224E12, 2.3833333333333333], [1.71820482E12, 46.38333333333333], [1.71820236E12, 0.15], [1.71820494E12, 58.86666666666667], [1.71820014E12, 11.983333333333333], [1.71820458E12, 2.3], [1.71819918E12, 12.133333333333333], [1.71820044E12, 12.25], [1.71820488E12, 54.483333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.7182047E12, 1.0833333333333333], [1.718205E12, 1.8833333333333333], [1.71820464E12, 0.6666666666666666], [1.71820512E12, 1.8166666666666667], [1.71820476E12, 1.3833333333333333], [1.71820344E12, 2.1666666666666665], [1.71820518E12, 0.5666666666666667], [1.71820506E12, 1.9166666666666667], [1.71820482E12, 1.5666666666666667], [1.71820236E12, 0.23333333333333334], [1.71820494E12, 1.7166666666666666], [1.71820014E12, 0.7666666666666667], [1.71820458E12, 0.15], [1.71819918E12, 0.7666666666666667], [1.71820044E12, 0.7833333333333333], [1.71820488E12, 1.7]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71820518E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}


/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 95.0, "minX": 0.0, "maxY": 71489.0, "series": [{"data": [[0.0, 745.0], [0.1, 745.0], [0.2, 745.0], [0.3, 745.0], [0.4, 745.0], [0.5, 745.0], [0.6, 745.0], [0.7, 745.0], [0.8, 745.0], [0.9, 745.0], [1.0, 745.0], [1.1, 745.0], [1.2, 745.0], [1.3, 745.0], [1.4, 745.0], [1.5, 745.0], [1.6, 745.0], [1.7, 745.0], [1.8, 745.0], [1.9, 745.0], [2.0, 745.0], [2.1, 745.0], [2.2, 1123.0], [2.3, 1123.0], [2.4, 1123.0], [2.5, 1123.0], [2.6, 1123.0], [2.7, 1123.0], [2.8, 1123.0], [2.9, 1123.0], [3.0, 1123.0], [3.1, 1123.0], [3.2, 1123.0], [3.3, 1123.0], [3.4, 1123.0], [3.5, 1123.0], [3.6, 1123.0], [3.7, 1123.0], [3.8, 1123.0], [3.9, 1123.0], [4.0, 1123.0], [4.1, 1123.0], [4.2, 1123.0], [4.3, 1123.0], [4.4, 1156.0], [4.5, 1156.0], [4.6, 1156.0], [4.7, 1156.0], [4.8, 1156.0], [4.9, 1156.0], [5.0, 1156.0], [5.1, 1156.0], [5.2, 1156.0], [5.3, 1156.0], [5.4, 1156.0], [5.5, 1156.0], [5.6, 1156.0], [5.7, 1156.0], [5.8, 1156.0], [5.9, 1156.0], [6.0, 1156.0], [6.1, 1156.0], [6.2, 1156.0], [6.3, 1156.0], [6.4, 1156.0], [6.5, 1156.0], [6.6, 1159.0], [6.7, 1159.0], [6.8, 1159.0], [6.9, 1159.0], [7.0, 1159.0], [7.1, 1159.0], [7.2, 1159.0], [7.3, 1159.0], [7.4, 1159.0], [7.5, 1159.0], [7.6, 1159.0], [7.7, 1159.0], [7.8, 1159.0], [7.9, 1159.0], [8.0, 1159.0], [8.1, 1159.0], [8.2, 1159.0], [8.3, 1159.0], [8.4, 1159.0], [8.5, 1159.0], [8.6, 1159.0], [8.7, 1171.0], [8.8, 1171.0], [8.9, 1171.0], [9.0, 1171.0], [9.1, 1171.0], [9.2, 1171.0], [9.3, 1171.0], [9.4, 1171.0], [9.5, 1171.0], [9.6, 1171.0], [9.7, 1171.0], [9.8, 1171.0], [9.9, 1171.0], [10.0, 1171.0], [10.1, 1171.0], [10.2, 1171.0], [10.3, 1171.0], [10.4, 1171.0], [10.5, 1171.0], [10.6, 1171.0], [10.7, 1171.0], [10.8, 1171.0], [10.9, 1176.0], [11.0, 1176.0], [11.1, 1176.0], [11.2, 1176.0], [11.3, 1176.0], [11.4, 1176.0], [11.5, 1176.0], [11.6, 1176.0], [11.7, 1176.0], [11.8, 1176.0], [11.9, 1176.0], [12.0, 1176.0], [12.1, 1176.0], [12.2, 1176.0], [12.3, 1176.0], [12.4, 1176.0], [12.5, 1176.0], [12.6, 1176.0], [12.7, 1176.0], [12.8, 1176.0], [12.9, 1176.0], [13.0, 1176.0], [13.1, 1228.0], [13.2, 1228.0], [13.3, 1228.0], [13.4, 1228.0], [13.5, 1228.0], [13.6, 1228.0], [13.7, 1228.0], [13.8, 1228.0], [13.9, 1228.0], [14.0, 1228.0], [14.1, 1228.0], [14.2, 1228.0], [14.3, 1228.0], [14.4, 1228.0], [14.5, 1228.0], [14.6, 1228.0], [14.7, 1228.0], [14.8, 1228.0], [14.9, 1228.0], [15.0, 1228.0], [15.1, 1228.0], [15.2, 1228.0], [15.3, 1239.0], [15.4, 1239.0], [15.5, 1239.0], [15.6, 1239.0], [15.7, 1239.0], [15.8, 1239.0], [15.9, 1239.0], [16.0, 1239.0], [16.1, 1239.0], [16.2, 1239.0], [16.3, 1239.0], [16.4, 1239.0], [16.5, 1239.0], [16.6, 1239.0], [16.7, 1239.0], [16.8, 1239.0], [16.9, 1239.0], [17.0, 1239.0], [17.1, 1239.0], [17.2, 1239.0], [17.3, 1239.0], [17.4, 1254.0], [17.5, 1254.0], [17.6, 1254.0], [17.7, 1254.0], [17.8, 1254.0], [17.9, 1254.0], [18.0, 1254.0], [18.1, 1254.0], [18.2, 1254.0], [18.3, 1254.0], [18.4, 1254.0], [18.5, 1254.0], [18.6, 1254.0], [18.7, 1254.0], [18.8, 1254.0], [18.9, 1254.0], [19.0, 1254.0], [19.1, 1254.0], [19.2, 1254.0], [19.3, 1254.0], [19.4, 1254.0], [19.5, 1254.0], [19.6, 1275.0], [19.7, 1275.0], [19.8, 1275.0], [19.9, 1275.0], [20.0, 1275.0], [20.1, 1275.0], [20.2, 1275.0], [20.3, 1275.0], [20.4, 1275.0], [20.5, 1275.0], [20.6, 1275.0], [20.7, 1275.0], [20.8, 1275.0], [20.9, 1275.0], [21.0, 1275.0], [21.1, 1275.0], [21.2, 1275.0], [21.3, 1275.0], [21.4, 1275.0], [21.5, 1275.0], [21.6, 1275.0], [21.7, 1275.0], [21.8, 1318.0], [21.9, 1318.0], [22.0, 1318.0], [22.1, 1318.0], [22.2, 1318.0], [22.3, 1318.0], [22.4, 1318.0], [22.5, 1318.0], [22.6, 1318.0], [22.7, 1318.0], [22.8, 1318.0], [22.9, 1318.0], [23.0, 1318.0], [23.1, 1318.0], [23.2, 1318.0], [23.3, 1318.0], [23.4, 1318.0], [23.5, 1318.0], [23.6, 1318.0], [23.7, 1318.0], [23.8, 1318.0], [23.9, 1318.0], [24.0, 1345.0], [24.1, 1345.0], [24.2, 1345.0], [24.3, 1345.0], [24.4, 1345.0], [24.5, 1345.0], [24.6, 1345.0], [24.7, 1345.0], [24.8, 1345.0], [24.9, 1345.0], [25.0, 1345.0], [25.1, 1345.0], [25.2, 1345.0], [25.3, 1345.0], [25.4, 1345.0], [25.5, 1345.0], [25.6, 1345.0], [25.7, 1345.0], [25.8, 1345.0], [25.9, 1345.0], [26.0, 1345.0], [26.1, 1348.0], [26.2, 1348.0], [26.3, 1348.0], [26.4, 1348.0], [26.5, 1348.0], [26.6, 1348.0], [26.7, 1348.0], [26.8, 1348.0], [26.9, 1348.0], [27.0, 1348.0], [27.1, 1348.0], [27.2, 1348.0], [27.3, 1348.0], [27.4, 1348.0], [27.5, 1348.0], [27.6, 1348.0], [27.7, 1348.0], [27.8, 1348.0], [27.9, 1348.0], [28.0, 1348.0], [28.1, 1348.0], [28.2, 1348.0], [28.3, 1364.0], [28.4, 1364.0], [28.5, 1364.0], [28.6, 1364.0], [28.7, 1364.0], [28.8, 1364.0], [28.9, 1364.0], [29.0, 1364.0], [29.1, 1364.0], [29.2, 1364.0], [29.3, 1364.0], [29.4, 1364.0], [29.5, 1364.0], [29.6, 1364.0], [29.7, 1364.0], [29.8, 1364.0], [29.9, 1364.0], [30.0, 1364.0], [30.1, 1364.0], [30.2, 1364.0], [30.3, 1364.0], [30.4, 1364.0], [30.5, 1385.0], [30.6, 1385.0], [30.7, 1385.0], [30.8, 1385.0], [30.9, 1385.0], [31.0, 1385.0], [31.1, 1385.0], [31.2, 1385.0], [31.3, 1385.0], [31.4, 1385.0], [31.5, 1385.0], [31.6, 1385.0], [31.7, 1385.0], [31.8, 1385.0], [31.9, 1385.0], [32.0, 1385.0], [32.1, 1385.0], [32.2, 1385.0], [32.3, 1385.0], [32.4, 1385.0], [32.5, 1385.0], [32.6, 1385.0], [32.7, 1417.0], [32.8, 1417.0], [32.9, 1417.0], [33.0, 1417.0], [33.1, 1417.0], [33.2, 1417.0], [33.3, 1417.0], [33.4, 1417.0], [33.5, 1417.0], [33.6, 1417.0], [33.7, 1417.0], [33.8, 1417.0], [33.9, 1417.0], [34.0, 1417.0], [34.1, 1417.0], [34.2, 1417.0], [34.3, 1417.0], [34.4, 1417.0], [34.5, 1417.0], [34.6, 1417.0], [34.7, 1417.0], [34.8, 1424.0], [34.9, 1424.0], [35.0, 1424.0], [35.1, 1424.0], [35.2, 1424.0], [35.3, 1424.0], [35.4, 1424.0], [35.5, 1424.0], [35.6, 1424.0], [35.7, 1424.0], [35.8, 1424.0], [35.9, 1424.0], [36.0, 1424.0], [36.1, 1424.0], [36.2, 1424.0], [36.3, 1424.0], [36.4, 1424.0], [36.5, 1424.0], [36.6, 1424.0], [36.7, 1424.0], [36.8, 1424.0], [36.9, 1424.0], [37.0, 1617.0], [37.1, 1617.0], [37.2, 1617.0], [37.3, 1617.0], [37.4, 1617.0], [37.5, 1617.0], [37.6, 1617.0], [37.7, 1617.0], [37.8, 1617.0], [37.9, 1617.0], [38.0, 1617.0], [38.1, 1617.0], [38.2, 1617.0], [38.3, 1617.0], [38.4, 1617.0], [38.5, 1617.0], [38.6, 1617.0], [38.7, 1617.0], [38.8, 1617.0], [38.9, 1617.0], [39.0, 1617.0], [39.1, 1617.0], [39.2, 1697.0], [39.3, 1697.0], [39.4, 1697.0], [39.5, 1697.0], [39.6, 1697.0], [39.7, 1697.0], [39.8, 1697.0], [39.9, 1697.0], [40.0, 1697.0], [40.1, 1697.0], [40.2, 1697.0], [40.3, 1697.0], [40.4, 1697.0], [40.5, 1697.0], [40.6, 1697.0], [40.7, 1697.0], [40.8, 1697.0], [40.9, 1697.0], [41.0, 1697.0], [41.1, 1697.0], [41.2, 1697.0], [41.3, 1697.0], [41.4, 1720.0], [41.5, 1720.0], [41.6, 1720.0], [41.7, 1720.0], [41.8, 1720.0], [41.9, 1720.0], [42.0, 1720.0], [42.1, 1720.0], [42.2, 1720.0], [42.3, 1720.0], [42.4, 1720.0], [42.5, 1720.0], [42.6, 1720.0], [42.7, 1720.0], [42.8, 1720.0], [42.9, 1720.0], [43.0, 1720.0], [43.1, 1720.0], [43.2, 1720.0], [43.3, 1720.0], [43.4, 1720.0], [43.5, 1937.0], [43.6, 1937.0], [43.7, 1937.0], [43.8, 1937.0], [43.9, 1937.0], [44.0, 1937.0], [44.1, 1937.0], [44.2, 1937.0], [44.3, 1937.0], [44.4, 1937.0], [44.5, 1937.0], [44.6, 1937.0], [44.7, 1937.0], [44.8, 1937.0], [44.9, 1937.0], [45.0, 1937.0], [45.1, 1937.0], [45.2, 1937.0], [45.3, 1937.0], [45.4, 1937.0], [45.5, 1937.0], [45.6, 1937.0], [45.7, 2118.0], [45.8, 2118.0], [45.9, 2118.0], [46.0, 2118.0], [46.1, 2118.0], [46.2, 2118.0], [46.3, 2118.0], [46.4, 2118.0], [46.5, 2118.0], [46.6, 2118.0], [46.7, 2118.0], [46.8, 2118.0], [46.9, 2118.0], [47.0, 2118.0], [47.1, 2118.0], [47.2, 2118.0], [47.3, 2118.0], [47.4, 2118.0], [47.5, 2118.0], [47.6, 2118.0], [47.7, 2118.0], [47.8, 2118.0], [47.9, 2154.0], [48.0, 2154.0], [48.1, 2154.0], [48.2, 2154.0], [48.3, 2154.0], [48.4, 2154.0], [48.5, 2154.0], [48.6, 2154.0], [48.7, 2154.0], [48.8, 2154.0], [48.9, 2154.0], [49.0, 2154.0], [49.1, 2154.0], [49.2, 2154.0], [49.3, 2154.0], [49.4, 2154.0], [49.5, 2154.0], [49.6, 2154.0], [49.7, 2154.0], [49.8, 2154.0], [49.9, 2154.0], [50.0, 2284.0], [50.1, 2284.0], [50.2, 2284.0], [50.3, 2284.0], [50.4, 2284.0], [50.5, 2284.0], [50.6, 2284.0], [50.7, 2284.0], [50.8, 2284.0], [50.9, 2284.0], [51.0, 2284.0], [51.1, 2284.0], [51.2, 2284.0], [51.3, 2284.0], [51.4, 2284.0], [51.5, 2284.0], [51.6, 2284.0], [51.7, 2284.0], [51.8, 2284.0], [51.9, 2284.0], [52.0, 2284.0], [52.1, 2284.0], [52.2, 2293.0], [52.3, 2293.0], [52.4, 2293.0], [52.5, 2293.0], [52.6, 2293.0], [52.7, 2293.0], [52.8, 2293.0], [52.9, 2293.0], [53.0, 2293.0], [53.1, 2293.0], [53.2, 2293.0], [53.3, 2293.0], [53.4, 2293.0], [53.5, 2293.0], [53.6, 2293.0], [53.7, 2293.0], [53.8, 2293.0], [53.9, 2293.0], [54.0, 2293.0], [54.1, 2293.0], [54.2, 2293.0], [54.3, 2293.0], [54.4, 2306.0], [54.5, 2306.0], [54.6, 2306.0], [54.7, 2306.0], [54.8, 2306.0], [54.9, 2306.0], [55.0, 2306.0], [55.1, 2306.0], [55.2, 2306.0], [55.3, 2306.0], [55.4, 2306.0], [55.5, 2306.0], [55.6, 2306.0], [55.7, 2306.0], [55.8, 2306.0], [55.9, 2306.0], [56.0, 2306.0], [56.1, 2306.0], [56.2, 2306.0], [56.3, 2306.0], [56.4, 2306.0], [56.5, 2306.0], [56.6, 2306.0], [56.7, 2306.0], [56.8, 2306.0], [56.9, 2306.0], [57.0, 2306.0], [57.1, 2306.0], [57.2, 2306.0], [57.3, 2306.0], [57.4, 2306.0], [57.5, 2306.0], [57.6, 2306.0], [57.7, 2306.0], [57.8, 2306.0], [57.9, 2306.0], [58.0, 2306.0], [58.1, 2306.0], [58.2, 2306.0], [58.3, 2306.0], [58.4, 2306.0], [58.5, 2306.0], [58.6, 2306.0], [58.7, 2329.0], [58.8, 2329.0], [58.9, 2329.0], [59.0, 2329.0], [59.1, 2329.0], [59.2, 2329.0], [59.3, 2329.0], [59.4, 2329.0], [59.5, 2329.0], [59.6, 2329.0], [59.7, 2329.0], [59.8, 2329.0], [59.9, 2329.0], [60.0, 2329.0], [60.1, 2329.0], [60.2, 2329.0], [60.3, 2329.0], [60.4, 2329.0], [60.5, 2329.0], [60.6, 2329.0], [60.7, 2329.0], [60.8, 2329.0], [60.9, 2418.0], [61.0, 2418.0], [61.1, 2418.0], [61.2, 2418.0], [61.3, 2418.0], [61.4, 2418.0], [61.5, 2418.0], [61.6, 2418.0], [61.7, 2418.0], [61.8, 2418.0], [61.9, 2418.0], [62.0, 2418.0], [62.1, 2418.0], [62.2, 2418.0], [62.3, 2418.0], [62.4, 2418.0], [62.5, 2418.0], [62.6, 2418.0], [62.7, 2418.0], [62.8, 2418.0], [62.9, 2418.0], [63.0, 2418.0], [63.1, 2433.0], [63.2, 2433.0], [63.3, 2433.0], [63.4, 2433.0], [63.5, 2433.0], [63.6, 2433.0], [63.7, 2433.0], [63.8, 2433.0], [63.9, 2433.0], [64.0, 2433.0], [64.1, 2433.0], [64.2, 2433.0], [64.3, 2433.0], [64.4, 2433.0], [64.5, 2433.0], [64.6, 2433.0], [64.7, 2433.0], [64.8, 2433.0], [64.9, 2433.0], [65.0, 2433.0], [65.1, 2433.0], [65.2, 2433.0], [65.3, 2756.0], [65.4, 2756.0], [65.5, 2756.0], [65.6, 2756.0], [65.7, 2756.0], [65.8, 2756.0], [65.9, 2756.0], [66.0, 2756.0], [66.1, 2756.0], [66.2, 2756.0], [66.3, 2756.0], [66.4, 2756.0], [66.5, 2756.0], [66.6, 2756.0], [66.7, 2756.0], [66.8, 2756.0], [66.9, 2756.0], [67.0, 2756.0], [67.1, 2756.0], [67.2, 2756.0], [67.3, 2756.0], [67.4, 2767.0], [67.5, 2767.0], [67.6, 2767.0], [67.7, 2767.0], [67.8, 2767.0], [67.9, 2767.0], [68.0, 2767.0], [68.1, 2767.0], [68.2, 2767.0], [68.3, 2767.0], [68.4, 2767.0], [68.5, 2767.0], [68.6, 2767.0], [68.7, 2767.0], [68.8, 2767.0], [68.9, 2767.0], [69.0, 2767.0], [69.1, 2767.0], [69.2, 2767.0], [69.3, 2767.0], [69.4, 2767.0], [69.5, 2767.0], [69.6, 2891.0], [69.7, 2891.0], [69.8, 2891.0], [69.9, 2891.0], [70.0, 2891.0], [70.1, 2891.0], [70.2, 2891.0], [70.3, 2891.0], [70.4, 2891.0], [70.5, 2891.0], [70.6, 2891.0], [70.7, 2891.0], [70.8, 2891.0], [70.9, 2891.0], [71.0, 2891.0], [71.1, 2891.0], [71.2, 2891.0], [71.3, 2891.0], [71.4, 2891.0], [71.5, 2891.0], [71.6, 2891.0], [71.7, 2891.0], [71.8, 3136.0], [71.9, 3136.0], [72.0, 3136.0], [72.1, 3136.0], [72.2, 3136.0], [72.3, 3136.0], [72.4, 3136.0], [72.5, 3136.0], [72.6, 3136.0], [72.7, 3136.0], [72.8, 3136.0], [72.9, 3136.0], [73.0, 3136.0], [73.1, 3136.0], [73.2, 3136.0], [73.3, 3136.0], [73.4, 3136.0], [73.5, 3136.0], [73.6, 3136.0], [73.7, 3136.0], [73.8, 3136.0], [73.9, 3136.0], [74.0, 3627.0], [74.1, 3627.0], [74.2, 3627.0], [74.3, 3627.0], [74.4, 3627.0], [74.5, 3627.0], [74.6, 3627.0], [74.7, 3627.0], [74.8, 3627.0], [74.9, 3627.0], [75.0, 3627.0], [75.1, 3627.0], [75.2, 3627.0], [75.3, 3627.0], [75.4, 3627.0], [75.5, 3627.0], [75.6, 3627.0], [75.7, 3627.0], [75.8, 3627.0], [75.9, 3627.0], [76.0, 3627.0], [76.1, 3678.0], [76.2, 3678.0], [76.3, 3678.0], [76.4, 3678.0], [76.5, 3678.0], [76.6, 3678.0], [76.7, 3678.0], [76.8, 3678.0], [76.9, 3678.0], [77.0, 3678.0], [77.1, 3678.0], [77.2, 3678.0], [77.3, 3678.0], [77.4, 3678.0], [77.5, 3678.0], [77.6, 3678.0], [77.7, 3678.0], [77.8, 3678.0], [77.9, 3678.0], [78.0, 3678.0], [78.1, 3678.0], [78.2, 3678.0], [78.3, 4042.0], [78.4, 4042.0], [78.5, 4042.0], [78.6, 4042.0], [78.7, 4042.0], [78.8, 4042.0], [78.9, 4042.0], [79.0, 4042.0], [79.1, 4042.0], [79.2, 4042.0], [79.3, 4042.0], [79.4, 4042.0], [79.5, 4042.0], [79.6, 4042.0], [79.7, 4042.0], [79.8, 4042.0], [79.9, 4042.0], [80.0, 4042.0], [80.1, 4042.0], [80.2, 4042.0], [80.3, 4042.0], [80.4, 4042.0], [80.5, 4142.0], [80.6, 4142.0], [80.7, 4142.0], [80.8, 4142.0], [80.9, 4142.0], [81.0, 4142.0], [81.1, 4142.0], [81.2, 4142.0], [81.3, 4142.0], [81.4, 4142.0], [81.5, 4142.0], [81.6, 4142.0], [81.7, 4142.0], [81.8, 4142.0], [81.9, 4142.0], [82.0, 4142.0], [82.1, 4142.0], [82.2, 4142.0], [82.3, 4142.0], [82.4, 4142.0], [82.5, 4142.0], [82.6, 4142.0], [82.7, 4147.0], [82.8, 4147.0], [82.9, 4147.0], [83.0, 4147.0], [83.1, 4147.0], [83.2, 4147.0], [83.3, 4147.0], [83.4, 4147.0], [83.5, 4147.0], [83.6, 4147.0], [83.7, 4147.0], [83.8, 4147.0], [83.9, 4147.0], [84.0, 4147.0], [84.1, 4147.0], [84.2, 4147.0], [84.3, 4147.0], [84.4, 4147.0], [84.5, 4147.0], [84.6, 4147.0], [84.7, 4147.0], [84.8, 4372.0], [84.9, 4372.0], [85.0, 4372.0], [85.1, 4372.0], [85.2, 4372.0], [85.3, 4372.0], [85.4, 4372.0], [85.5, 4372.0], [85.6, 4372.0], [85.7, 4372.0], [85.8, 4372.0], [85.9, 4372.0], [86.0, 4372.0], [86.1, 4372.0], [86.2, 4372.0], [86.3, 4372.0], [86.4, 4372.0], [86.5, 4372.0], [86.6, 4372.0], [86.7, 4372.0], [86.8, 4372.0], [86.9, 4372.0], [87.0, 4406.0], [87.1, 4406.0], [87.2, 4406.0], [87.3, 4406.0], [87.4, 4406.0], [87.5, 4406.0], [87.6, 4406.0], [87.7, 4406.0], [87.8, 4406.0], [87.9, 4406.0], [88.0, 4406.0], [88.1, 4406.0], [88.2, 4406.0], [88.3, 4406.0], [88.4, 4406.0], [88.5, 4406.0], [88.6, 4406.0], [88.7, 4406.0], [88.8, 4406.0], [88.9, 4406.0], [89.0, 4406.0], [89.1, 4406.0], [89.2, 4457.0], [89.3, 4457.0], [89.4, 4457.0], [89.5, 4457.0], [89.6, 4457.0], [89.7, 4457.0], [89.8, 4457.0], [89.9, 4457.0], [90.0, 4457.0], [90.1, 4457.0], [90.2, 4457.0], [90.3, 4457.0], [90.4, 4457.0], [90.5, 4457.0], [90.6, 4457.0], [90.7, 4457.0], [90.8, 4457.0], [90.9, 4457.0], [91.0, 4457.0], [91.1, 4457.0], [91.2, 4457.0], [91.3, 4457.0], [91.4, 4508.0], [91.5, 4508.0], [91.6, 4508.0], [91.7, 4508.0], [91.8, 4508.0], [91.9, 4508.0], [92.0, 4508.0], [92.1, 4508.0], [92.2, 4508.0], [92.3, 4508.0], [92.4, 4508.0], [92.5, 4508.0], [92.6, 4508.0], [92.7, 4508.0], [92.8, 4508.0], [92.9, 4508.0], [93.0, 4508.0], [93.1, 4508.0], [93.2, 4508.0], [93.3, 4508.0], [93.4, 4508.0], [93.5, 4668.0], [93.6, 4668.0], [93.7, 4668.0], [93.8, 4668.0], [93.9, 4668.0], [94.0, 4668.0], [94.1, 4668.0], [94.2, 4668.0], [94.3, 4668.0], [94.4, 4668.0], [94.5, 4668.0], [94.6, 4668.0], [94.7, 4668.0], [94.8, 4668.0], [94.9, 4668.0], [95.0, 4668.0], [95.1, 4668.0], [95.2, 4668.0], [95.3, 4668.0], [95.4, 4668.0], [95.5, 4668.0], [95.6, 4668.0], [95.7, 4961.0], [95.8, 4961.0], [95.9, 4961.0], [96.0, 4961.0], [96.1, 4961.0], [96.2, 4961.0], [96.3, 4961.0], [96.4, 4961.0], [96.5, 4961.0], [96.6, 4961.0], [96.7, 4961.0], [96.8, 4961.0], [96.9, 4961.0], [97.0, 4961.0], [97.1, 4961.0], [97.2, 4961.0], [97.3, 4961.0], [97.4, 4961.0], [97.5, 4961.0], [97.6, 4961.0], [97.7, 4961.0], [97.8, 4961.0], [97.9, 4966.0], [98.0, 4966.0], [98.1, 4966.0], [98.2, 4966.0], [98.3, 4966.0], [98.4, 4966.0], [98.5, 4966.0], [98.6, 4966.0], [98.7, 4966.0], [98.8, 4966.0], [98.9, 4966.0], [99.0, 4966.0], [99.1, 4966.0], [99.2, 4966.0], [99.3, 4966.0], [99.4, 4966.0], [99.5, 4966.0], [99.6, 4966.0], [99.7, 4966.0], [99.8, 4966.0], [99.9, 4966.0], [100.0, 4966.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[0.0, 109.0], [0.1, 109.0], [0.2, 109.0], [0.3, 109.0], [0.4, 109.0], [0.5, 109.0], [0.6, 109.0], [0.7, 109.0], [0.8, 109.0], [0.9, 109.0], [1.0, 109.0], [1.1, 109.0], [1.2, 109.0], [1.3, 109.0], [1.4, 109.0], [1.5, 109.0], [1.6, 109.0], [1.7, 120.0], [1.8, 120.0], [1.9, 120.0], [2.0, 120.0], [2.1, 120.0], [2.2, 120.0], [2.3, 120.0], [2.4, 120.0], [2.5, 120.0], [2.6, 120.0], [2.7, 120.0], [2.8, 120.0], [2.9, 120.0], [3.0, 120.0], [3.1, 120.0], [3.2, 120.0], [3.3, 120.0], [3.4, 129.0], [3.5, 129.0], [3.6, 129.0], [3.7, 129.0], [3.8, 129.0], [3.9, 129.0], [4.0, 129.0], [4.1, 129.0], [4.2, 129.0], [4.3, 129.0], [4.4, 129.0], [4.5, 129.0], [4.6, 129.0], [4.7, 129.0], [4.8, 129.0], [4.9, 129.0], [5.0, 129.0], [5.1, 166.0], [5.2, 166.0], [5.3, 166.0], [5.4, 166.0], [5.5, 166.0], [5.6, 166.0], [5.7, 166.0], [5.8, 166.0], [5.9, 166.0], [6.0, 166.0], [6.1, 166.0], [6.2, 166.0], [6.3, 166.0], [6.4, 166.0], [6.5, 166.0], [6.6, 166.0], [6.7, 166.0], [6.8, 167.0], [6.9, 167.0], [7.0, 167.0], [7.1, 167.0], [7.2, 167.0], [7.3, 167.0], [7.4, 167.0], [7.5, 167.0], [7.6, 167.0], [7.7, 167.0], [7.8, 167.0], [7.9, 167.0], [8.0, 167.0], [8.1, 167.0], [8.2, 167.0], [8.3, 167.0], [8.4, 167.0], [8.5, 171.0], [8.6, 171.0], [8.7, 171.0], [8.8, 171.0], [8.9, 171.0], [9.0, 171.0], [9.1, 171.0], [9.2, 171.0], [9.3, 171.0], [9.4, 171.0], [9.5, 171.0], [9.6, 171.0], [9.7, 171.0], [9.8, 171.0], [9.9, 171.0], [10.0, 171.0], [10.1, 171.0], [10.2, 198.0], [10.3, 198.0], [10.4, 198.0], [10.5, 198.0], [10.6, 198.0], [10.7, 198.0], [10.8, 198.0], [10.9, 198.0], [11.0, 198.0], [11.1, 198.0], [11.2, 198.0], [11.3, 198.0], [11.4, 198.0], [11.5, 198.0], [11.6, 198.0], [11.7, 198.0], [11.8, 198.0], [11.9, 199.0], [12.0, 199.0], [12.1, 199.0], [12.2, 199.0], [12.3, 199.0], [12.4, 199.0], [12.5, 199.0], [12.6, 199.0], [12.7, 199.0], [12.8, 199.0], [12.9, 199.0], [13.0, 199.0], [13.1, 199.0], [13.2, 199.0], [13.3, 199.0], [13.4, 199.0], [13.5, 199.0], [13.6, 201.0], [13.7, 201.0], [13.8, 201.0], [13.9, 201.0], [14.0, 201.0], [14.1, 201.0], [14.2, 201.0], [14.3, 201.0], [14.4, 201.0], [14.5, 201.0], [14.6, 201.0], [14.7, 201.0], [14.8, 201.0], [14.9, 201.0], [15.0, 201.0], [15.1, 201.0], [15.2, 201.0], [15.3, 209.0], [15.4, 209.0], [15.5, 209.0], [15.6, 209.0], [15.7, 209.0], [15.8, 209.0], [15.9, 209.0], [16.0, 209.0], [16.1, 209.0], [16.2, 209.0], [16.3, 209.0], [16.4, 209.0], [16.5, 209.0], [16.6, 209.0], [16.7, 209.0], [16.8, 209.0], [16.9, 209.0], [17.0, 213.0], [17.1, 213.0], [17.2, 213.0], [17.3, 213.0], [17.4, 213.0], [17.5, 213.0], [17.6, 213.0], [17.7, 213.0], [17.8, 213.0], [17.9, 213.0], [18.0, 213.0], [18.1, 213.0], [18.2, 213.0], [18.3, 213.0], [18.4, 213.0], [18.5, 213.0], [18.6, 213.0], [18.7, 230.0], [18.8, 230.0], [18.9, 230.0], [19.0, 230.0], [19.1, 230.0], [19.2, 230.0], [19.3, 230.0], [19.4, 230.0], [19.5, 230.0], [19.6, 230.0], [19.7, 230.0], [19.8, 230.0], [19.9, 230.0], [20.0, 230.0], [20.1, 230.0], [20.2, 230.0], [20.3, 230.0], [20.4, 254.0], [20.5, 254.0], [20.6, 254.0], [20.7, 254.0], [20.8, 254.0], [20.9, 254.0], [21.0, 254.0], [21.1, 254.0], [21.2, 254.0], [21.3, 254.0], [21.4, 254.0], [21.5, 254.0], [21.6, 254.0], [21.7, 254.0], [21.8, 254.0], [21.9, 254.0], [22.0, 254.0], [22.1, 267.0], [22.2, 267.0], [22.3, 267.0], [22.4, 267.0], [22.5, 267.0], [22.6, 267.0], [22.7, 267.0], [22.8, 267.0], [22.9, 267.0], [23.0, 267.0], [23.1, 267.0], [23.2, 267.0], [23.3, 267.0], [23.4, 267.0], [23.5, 267.0], [23.6, 267.0], [23.7, 267.0], [23.8, 278.0], [23.9, 278.0], [24.0, 278.0], [24.1, 278.0], [24.2, 278.0], [24.3, 278.0], [24.4, 278.0], [24.5, 278.0], [24.6, 278.0], [24.7, 278.0], [24.8, 278.0], [24.9, 278.0], [25.0, 278.0], [25.1, 278.0], [25.2, 278.0], [25.3, 278.0], [25.4, 278.0], [25.5, 297.0], [25.6, 297.0], [25.7, 297.0], [25.8, 297.0], [25.9, 297.0], [26.0, 297.0], [26.1, 297.0], [26.2, 297.0], [26.3, 297.0], [26.4, 297.0], [26.5, 297.0], [26.6, 297.0], [26.7, 297.0], [26.8, 297.0], [26.9, 297.0], [27.0, 297.0], [27.1, 297.0], [27.2, 324.0], [27.3, 324.0], [27.4, 324.0], [27.5, 324.0], [27.6, 324.0], [27.7, 324.0], [27.8, 324.0], [27.9, 324.0], [28.0, 324.0], [28.1, 324.0], [28.2, 324.0], [28.3, 324.0], [28.4, 324.0], [28.5, 324.0], [28.6, 324.0], [28.7, 324.0], [28.8, 324.0], [28.9, 351.0], [29.0, 351.0], [29.1, 351.0], [29.2, 351.0], [29.3, 351.0], [29.4, 351.0], [29.5, 351.0], [29.6, 351.0], [29.7, 351.0], [29.8, 351.0], [29.9, 351.0], [30.0, 351.0], [30.1, 351.0], [30.2, 351.0], [30.3, 351.0], [30.4, 351.0], [30.5, 351.0], [30.6, 421.0], [30.7, 421.0], [30.8, 421.0], [30.9, 421.0], [31.0, 421.0], [31.1, 421.0], [31.2, 421.0], [31.3, 421.0], [31.4, 421.0], [31.5, 421.0], [31.6, 421.0], [31.7, 421.0], [31.8, 421.0], [31.9, 421.0], [32.0, 421.0], [32.1, 421.0], [32.2, 421.0], [32.3, 426.0], [32.4, 426.0], [32.5, 426.0], [32.6, 426.0], [32.7, 426.0], [32.8, 426.0], [32.9, 426.0], [33.0, 426.0], [33.1, 426.0], [33.2, 426.0], [33.3, 426.0], [33.4, 426.0], [33.5, 426.0], [33.6, 426.0], [33.7, 426.0], [33.8, 426.0], [33.9, 463.0], [34.0, 463.0], [34.1, 463.0], [34.2, 463.0], [34.3, 463.0], [34.4, 463.0], [34.5, 463.0], [34.6, 463.0], [34.7, 463.0], [34.8, 463.0], [34.9, 463.0], [35.0, 463.0], [35.1, 463.0], [35.2, 463.0], [35.3, 463.0], [35.4, 463.0], [35.5, 463.0], [35.6, 513.0], [35.7, 513.0], [35.8, 513.0], [35.9, 513.0], [36.0, 513.0], [36.1, 513.0], [36.2, 513.0], [36.3, 513.0], [36.4, 513.0], [36.5, 513.0], [36.6, 513.0], [36.7, 513.0], [36.8, 513.0], [36.9, 513.0], [37.0, 513.0], [37.1, 513.0], [37.2, 513.0], [37.3, 516.0], [37.4, 516.0], [37.5, 516.0], [37.6, 516.0], [37.7, 516.0], [37.8, 516.0], [37.9, 516.0], [38.0, 516.0], [38.1, 516.0], [38.2, 516.0], [38.3, 516.0], [38.4, 516.0], [38.5, 516.0], [38.6, 516.0], [38.7, 516.0], [38.8, 516.0], [38.9, 516.0], [39.0, 541.0], [39.1, 541.0], [39.2, 541.0], [39.3, 541.0], [39.4, 541.0], [39.5, 541.0], [39.6, 541.0], [39.7, 541.0], [39.8, 541.0], [39.9, 541.0], [40.0, 541.0], [40.1, 541.0], [40.2, 541.0], [40.3, 541.0], [40.4, 541.0], [40.5, 541.0], [40.6, 541.0], [40.7, 546.0], [40.8, 546.0], [40.9, 546.0], [41.0, 546.0], [41.1, 546.0], [41.2, 546.0], [41.3, 546.0], [41.4, 546.0], [41.5, 546.0], [41.6, 546.0], [41.7, 546.0], [41.8, 546.0], [41.9, 546.0], [42.0, 546.0], [42.1, 546.0], [42.2, 546.0], [42.3, 546.0], [42.4, 560.0], [42.5, 560.0], [42.6, 560.0], [42.7, 560.0], [42.8, 560.0], [42.9, 560.0], [43.0, 560.0], [43.1, 560.0], [43.2, 560.0], [43.3, 560.0], [43.4, 560.0], [43.5, 560.0], [43.6, 560.0], [43.7, 560.0], [43.8, 560.0], [43.9, 560.0], [44.0, 560.0], [44.1, 597.0], [44.2, 597.0], [44.3, 597.0], [44.4, 597.0], [44.5, 597.0], [44.6, 597.0], [44.7, 597.0], [44.8, 597.0], [44.9, 597.0], [45.0, 597.0], [45.1, 597.0], [45.2, 597.0], [45.3, 597.0], [45.4, 597.0], [45.5, 597.0], [45.6, 597.0], [45.7, 597.0], [45.8, 604.0], [45.9, 604.0], [46.0, 604.0], [46.1, 604.0], [46.2, 604.0], [46.3, 604.0], [46.4, 604.0], [46.5, 604.0], [46.6, 604.0], [46.7, 604.0], [46.8, 604.0], [46.9, 604.0], [47.0, 604.0], [47.1, 604.0], [47.2, 604.0], [47.3, 604.0], [47.4, 604.0], [47.5, 647.0], [47.6, 647.0], [47.7, 647.0], [47.8, 647.0], [47.9, 647.0], [48.0, 647.0], [48.1, 647.0], [48.2, 647.0], [48.3, 647.0], [48.4, 647.0], [48.5, 647.0], [48.6, 647.0], [48.7, 647.0], [48.8, 647.0], [48.9, 647.0], [49.0, 647.0], [49.1, 647.0], [49.2, 676.0], [49.3, 676.0], [49.4, 676.0], [49.5, 676.0], [49.6, 676.0], [49.7, 676.0], [49.8, 676.0], [49.9, 676.0], [50.0, 676.0], [50.1, 676.0], [50.2, 676.0], [50.3, 676.0], [50.4, 676.0], [50.5, 676.0], [50.6, 676.0], [50.7, 676.0], [50.8, 676.0], [50.9, 691.0], [51.0, 691.0], [51.1, 691.0], [51.2, 691.0], [51.3, 691.0], [51.4, 691.0], [51.5, 691.0], [51.6, 691.0], [51.7, 691.0], [51.8, 691.0], [51.9, 691.0], [52.0, 691.0], [52.1, 691.0], [52.2, 691.0], [52.3, 691.0], [52.4, 691.0], [52.5, 691.0], [52.6, 719.0], [52.7, 719.0], [52.8, 719.0], [52.9, 719.0], [53.0, 719.0], [53.1, 719.0], [53.2, 719.0], [53.3, 719.0], [53.4, 719.0], [53.5, 719.0], [53.6, 719.0], [53.7, 719.0], [53.8, 719.0], [53.9, 719.0], [54.0, 719.0], [54.1, 719.0], [54.2, 719.0], [54.3, 749.0], [54.4, 749.0], [54.5, 749.0], [54.6, 749.0], [54.7, 749.0], [54.8, 749.0], [54.9, 749.0], [55.0, 749.0], [55.1, 749.0], [55.2, 749.0], [55.3, 749.0], [55.4, 749.0], [55.5, 749.0], [55.6, 749.0], [55.7, 749.0], [55.8, 749.0], [55.9, 749.0], [56.0, 784.0], [56.1, 784.0], [56.2, 784.0], [56.3, 784.0], [56.4, 784.0], [56.5, 784.0], [56.6, 784.0], [56.7, 784.0], [56.8, 784.0], [56.9, 784.0], [57.0, 784.0], [57.1, 784.0], [57.2, 784.0], [57.3, 784.0], [57.4, 784.0], [57.5, 784.0], [57.6, 784.0], [57.7, 816.0], [57.8, 816.0], [57.9, 816.0], [58.0, 816.0], [58.1, 816.0], [58.2, 816.0], [58.3, 816.0], [58.4, 816.0], [58.5, 816.0], [58.6, 816.0], [58.7, 816.0], [58.8, 816.0], [58.9, 816.0], [59.0, 816.0], [59.1, 816.0], [59.2, 816.0], [59.3, 816.0], [59.4, 826.0], [59.5, 826.0], [59.6, 826.0], [59.7, 826.0], [59.8, 826.0], [59.9, 826.0], [60.0, 826.0], [60.1, 826.0], [60.2, 826.0], [60.3, 826.0], [60.4, 826.0], [60.5, 826.0], [60.6, 826.0], [60.7, 826.0], [60.8, 826.0], [60.9, 826.0], [61.0, 826.0], [61.1, 858.0], [61.2, 858.0], [61.3, 858.0], [61.4, 858.0], [61.5, 858.0], [61.6, 858.0], [61.7, 858.0], [61.8, 858.0], [61.9, 858.0], [62.0, 858.0], [62.1, 858.0], [62.2, 858.0], [62.3, 858.0], [62.4, 858.0], [62.5, 858.0], [62.6, 858.0], [62.7, 858.0], [62.8, 859.0], [62.9, 859.0], [63.0, 859.0], [63.1, 859.0], [63.2, 859.0], [63.3, 859.0], [63.4, 859.0], [63.5, 859.0], [63.6, 859.0], [63.7, 859.0], [63.8, 859.0], [63.9, 859.0], [64.0, 859.0], [64.1, 859.0], [64.2, 859.0], [64.3, 859.0], [64.4, 859.0], [64.5, 862.0], [64.6, 862.0], [64.7, 862.0], [64.8, 862.0], [64.9, 862.0], [65.0, 862.0], [65.1, 862.0], [65.2, 862.0], [65.3, 862.0], [65.4, 862.0], [65.5, 862.0], [65.6, 862.0], [65.7, 862.0], [65.8, 862.0], [65.9, 862.0], [66.0, 862.0], [66.1, 862.0], [66.2, 864.0], [66.3, 864.0], [66.4, 864.0], [66.5, 864.0], [66.6, 864.0], [66.7, 864.0], [66.8, 864.0], [66.9, 864.0], [67.0, 864.0], [67.1, 864.0], [67.2, 864.0], [67.3, 864.0], [67.4, 864.0], [67.5, 864.0], [67.6, 864.0], [67.7, 864.0], [67.8, 866.0], [67.9, 866.0], [68.0, 866.0], [68.1, 866.0], [68.2, 866.0], [68.3, 866.0], [68.4, 866.0], [68.5, 866.0], [68.6, 866.0], [68.7, 866.0], [68.8, 866.0], [68.9, 866.0], [69.0, 866.0], [69.1, 866.0], [69.2, 866.0], [69.3, 866.0], [69.4, 866.0], [69.5, 893.0], [69.6, 893.0], [69.7, 893.0], [69.8, 893.0], [69.9, 893.0], [70.0, 893.0], [70.1, 893.0], [70.2, 893.0], [70.3, 893.0], [70.4, 893.0], [70.5, 893.0], [70.6, 893.0], [70.7, 893.0], [70.8, 893.0], [70.9, 893.0], [71.0, 893.0], [71.1, 893.0], [71.2, 964.0], [71.3, 964.0], [71.4, 964.0], [71.5, 964.0], [71.6, 964.0], [71.7, 964.0], [71.8, 964.0], [71.9, 964.0], [72.0, 964.0], [72.1, 964.0], [72.2, 964.0], [72.3, 964.0], [72.4, 964.0], [72.5, 964.0], [72.6, 964.0], [72.7, 964.0], [72.8, 964.0], [72.9, 997.0], [73.0, 997.0], [73.1, 997.0], [73.2, 997.0], [73.3, 997.0], [73.4, 997.0], [73.5, 997.0], [73.6, 997.0], [73.7, 997.0], [73.8, 997.0], [73.9, 997.0], [74.0, 997.0], [74.1, 997.0], [74.2, 997.0], [74.3, 997.0], [74.4, 997.0], [74.5, 997.0], [74.6, 1005.0], [74.7, 1005.0], [74.8, 1005.0], [74.9, 1005.0], [75.0, 1005.0], [75.1, 1005.0], [75.2, 1005.0], [75.3, 1005.0], [75.4, 1005.0], [75.5, 1005.0], [75.6, 1005.0], [75.7, 1005.0], [75.8, 1005.0], [75.9, 1005.0], [76.0, 1005.0], [76.1, 1005.0], [76.2, 1005.0], [76.3, 1010.0], [76.4, 1010.0], [76.5, 1010.0], [76.6, 1010.0], [76.7, 1010.0], [76.8, 1010.0], [76.9, 1010.0], [77.0, 1010.0], [77.1, 1010.0], [77.2, 1010.0], [77.3, 1010.0], [77.4, 1010.0], [77.5, 1010.0], [77.6, 1010.0], [77.7, 1010.0], [77.8, 1010.0], [77.9, 1010.0], [78.0, 1030.0], [78.1, 1030.0], [78.2, 1030.0], [78.3, 1030.0], [78.4, 1030.0], [78.5, 1030.0], [78.6, 1030.0], [78.7, 1030.0], [78.8, 1030.0], [78.9, 1030.0], [79.0, 1030.0], [79.1, 1030.0], [79.2, 1030.0], [79.3, 1030.0], [79.4, 1030.0], [79.5, 1030.0], [79.6, 1030.0], [79.7, 1093.0], [79.8, 1093.0], [79.9, 1093.0], [80.0, 1093.0], [80.1, 1093.0], [80.2, 1093.0], [80.3, 1093.0], [80.4, 1093.0], [80.5, 1093.0], [80.6, 1093.0], [80.7, 1093.0], [80.8, 1093.0], [80.9, 1093.0], [81.0, 1093.0], [81.1, 1093.0], [81.2, 1093.0], [81.3, 1093.0], [81.4, 1234.0], [81.5, 1234.0], [81.6, 1234.0], [81.7, 1234.0], [81.8, 1234.0], [81.9, 1234.0], [82.0, 1234.0], [82.1, 1234.0], [82.2, 1234.0], [82.3, 1234.0], [82.4, 1234.0], [82.5, 1234.0], [82.6, 1234.0], [82.7, 1234.0], [82.8, 1234.0], [82.9, 1234.0], [83.0, 1234.0], [83.1, 1317.0], [83.2, 1317.0], [83.3, 1317.0], [83.4, 1317.0], [83.5, 1317.0], [83.6, 1317.0], [83.7, 1317.0], [83.8, 1317.0], [83.9, 1317.0], [84.0, 1317.0], [84.1, 1317.0], [84.2, 1317.0], [84.3, 1317.0], [84.4, 1317.0], [84.5, 1317.0], [84.6, 1317.0], [84.7, 1317.0], [84.8, 1334.0], [84.9, 1334.0], [85.0, 1334.0], [85.1, 1334.0], [85.2, 1334.0], [85.3, 1334.0], [85.4, 1334.0], [85.5, 1334.0], [85.6, 1334.0], [85.7, 1334.0], [85.8, 1334.0], [85.9, 1334.0], [86.0, 1334.0], [86.1, 1334.0], [86.2, 1334.0], [86.3, 1334.0], [86.4, 1334.0], [86.5, 1367.0], [86.6, 1367.0], [86.7, 1367.0], [86.8, 1367.0], [86.9, 1367.0], [87.0, 1367.0], [87.1, 1367.0], [87.2, 1367.0], [87.3, 1367.0], [87.4, 1367.0], [87.5, 1367.0], [87.6, 1367.0], [87.7, 1367.0], [87.8, 1367.0], [87.9, 1367.0], [88.0, 1367.0], [88.1, 1367.0], [88.2, 1374.0], [88.3, 1374.0], [88.4, 1374.0], [88.5, 1374.0], [88.6, 1374.0], [88.7, 1374.0], [88.8, 1374.0], [88.9, 1374.0], [89.0, 1374.0], [89.1, 1374.0], [89.2, 1374.0], [89.3, 1374.0], [89.4, 1374.0], [89.5, 1374.0], [89.6, 1374.0], [89.7, 1374.0], [89.8, 1374.0], [89.9, 1385.0], [90.0, 1385.0], [90.1, 1385.0], [90.2, 1385.0], [90.3, 1385.0], [90.4, 1385.0], [90.5, 1385.0], [90.6, 1385.0], [90.7, 1385.0], [90.8, 1385.0], [90.9, 1385.0], [91.0, 1385.0], [91.1, 1385.0], [91.2, 1385.0], [91.3, 1385.0], [91.4, 1385.0], [91.5, 1385.0], [91.6, 1476.0], [91.7, 1476.0], [91.8, 1476.0], [91.9, 1476.0], [92.0, 1476.0], [92.1, 1476.0], [92.2, 1476.0], [92.3, 1476.0], [92.4, 1476.0], [92.5, 1476.0], [92.6, 1476.0], [92.7, 1476.0], [92.8, 1476.0], [92.9, 1476.0], [93.0, 1476.0], [93.1, 1476.0], [93.2, 1476.0], [93.3, 1574.0], [93.4, 1574.0], [93.5, 1574.0], [93.6, 1574.0], [93.7, 1574.0], [93.8, 1574.0], [93.9, 1574.0], [94.0, 1574.0], [94.1, 1574.0], [94.2, 1574.0], [94.3, 1574.0], [94.4, 1574.0], [94.5, 1574.0], [94.6, 1574.0], [94.7, 1574.0], [94.8, 1574.0], [94.9, 1574.0], [95.0, 1731.0], [95.1, 1731.0], [95.2, 1731.0], [95.3, 1731.0], [95.4, 1731.0], [95.5, 1731.0], [95.6, 1731.0], [95.7, 1731.0], [95.8, 1731.0], [95.9, 1731.0], [96.0, 1731.0], [96.1, 1731.0], [96.2, 1731.0], [96.3, 1731.0], [96.4, 1731.0], [96.5, 1731.0], [96.6, 1731.0], [96.7, 2026.0], [96.8, 2026.0], [96.9, 2026.0], [97.0, 2026.0], [97.1, 2026.0], [97.2, 2026.0], [97.3, 2026.0], [97.4, 2026.0], [97.5, 2026.0], [97.6, 2026.0], [97.7, 2026.0], [97.8, 2026.0], [97.9, 2026.0], [98.0, 2026.0], [98.1, 2026.0], [98.2, 2026.0], [98.3, 2026.0], [98.4, 2436.0], [98.5, 2436.0], [98.6, 2436.0], [98.7, 2436.0], [98.8, 2436.0], [98.9, 2436.0], [99.0, 2436.0], [99.1, 2436.0], [99.2, 2436.0], [99.3, 2436.0], [99.4, 2436.0], [99.5, 2436.0], [99.6, 2436.0], [99.7, 2436.0], [99.8, 2436.0], [99.9, 2436.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[0.0, 666.0], [0.1, 746.0], [0.2, 1051.0], [0.3, 1091.0], [0.4, 1442.0], [0.5, 3274.0], [0.6, 3408.0], [0.7, 3432.0], [0.8, 5108.0], [0.9, 5350.0], [1.0, 5383.0], [1.1, 5401.0], [1.2, 5532.0], [1.3, 5534.0], [1.4, 5604.0], [1.5, 5608.0], [1.6, 5659.0], [1.7, 5687.0], [1.8, 5701.0], [1.9, 5726.0], [2.0, 5735.0], [2.1, 5747.0], [2.2, 5755.0], [2.3, 5758.0], [2.4, 5761.0], [2.5, 5762.0], [2.6, 5795.0], [2.7, 5818.0], [2.8, 5835.0], [2.9, 5836.0], [3.0, 5840.0], [3.1, 5878.0], [3.2, 5927.0], [3.3, 5931.0], [3.4, 5932.0], [3.5, 5947.0], [3.6, 5957.0], [3.7, 5958.0], [3.8, 5958.0], [3.9, 5964.0], [4.0, 5967.0], [4.1, 5971.0], [4.2, 5974.0], [4.3, 5989.0], [4.4, 6004.0], [4.5, 6009.0], [4.6, 6010.0], [4.7, 6032.0], [4.8, 6042.0], [4.9, 6047.0], [5.0, 6049.0], [5.1, 6084.0], [5.2, 6106.0], [5.3, 6107.0], [5.4, 6118.0], [5.5, 6123.0], [5.6, 6148.0], [5.7, 6151.0], [5.8, 6151.0], [5.9, 6152.0], [6.0, 6172.0], [6.1, 6182.0], [6.2, 6196.0], [6.3, 6248.0], [6.4, 6272.0], [6.5, 6277.0], [6.6, 6280.0], [6.7, 6310.0], [6.8, 6350.0], [6.9, 6364.0], [7.0, 6394.0], [7.1, 6416.0], [7.2, 6418.0], [7.3, 6441.0], [7.4, 6456.0], [7.5, 6470.0], [7.6, 6483.0], [7.7, 6519.0], [7.8, 6533.0], [7.9, 6551.0], [8.0, 6555.0], [8.1, 6562.0], [8.2, 6590.0], [8.3, 6591.0], [8.4, 6613.0], [8.5, 6616.0], [8.6, 6678.0], [8.7, 6713.0], [8.8, 6807.0], [8.9, 6822.0], [9.0, 6868.0], [9.1, 6878.0], [9.2, 6923.0], [9.3, 6930.0], [9.4, 6941.0], [9.5, 7022.0], [9.6, 7031.0], [9.7, 7056.0], [9.8, 7070.0], [9.9, 7092.0], [10.0, 7170.0], [10.1, 7210.0], [10.2, 7261.0], [10.3, 7346.0], [10.4, 7402.0], [10.5, 7443.0], [10.6, 7466.0], [10.7, 7470.0], [10.8, 7472.0], [10.9, 7488.0], [11.0, 7576.0], [11.1, 7588.0], [11.2, 7634.0], [11.3, 7702.0], [11.4, 7750.0], [11.5, 7763.0], [11.6, 7765.0], [11.7, 7867.0], [11.8, 7886.0], [11.9, 7933.0], [12.0, 7976.0], [12.1, 8109.0], [12.2, 8142.0], [12.3, 8175.0], [12.4, 8301.0], [12.5, 8334.0], [12.6, 8362.0], [12.7, 8469.0], [12.8, 8487.0], [12.9, 8626.0], [13.0, 8786.0], [13.1, 8834.0], [13.2, 8841.0], [13.3, 8933.0], [13.4, 8948.0], [13.5, 9004.0], [13.6, 9110.0], [13.7, 9244.0], [13.8, 9248.0], [13.9, 9340.0], [14.0, 9415.0], [14.1, 9425.0], [14.2, 9453.0], [14.3, 9483.0], [14.4, 9494.0], [14.5, 9525.0], [14.6, 9567.0], [14.7, 9590.0], [14.8, 9621.0], [14.9, 9684.0], [15.0, 9800.0], [15.1, 9935.0], [15.2, 9938.0], [15.3, 9968.0], [15.4, 10012.0], [15.5, 10164.0], [15.6, 10310.0], [15.7, 10370.0], [15.8, 10378.0], [15.9, 10448.0], [16.0, 10604.0], [16.1, 10609.0], [16.2, 10669.0], [16.3, 10702.0], [16.4, 10709.0], [16.5, 10734.0], [16.6, 10779.0], [16.7, 10780.0], [16.8, 10812.0], [16.9, 10823.0], [17.0, 10848.0], [17.1, 10873.0], [17.2, 10919.0], [17.3, 10926.0], [17.4, 10941.0], [17.5, 10999.0], [17.6, 11046.0], [17.7, 11064.0], [17.8, 11079.0], [17.9, 11112.0], [18.0, 11122.0], [18.1, 11184.0], [18.2, 11254.0], [18.3, 11343.0], [18.4, 11386.0], [18.5, 11437.0], [18.6, 11467.0], [18.7, 11469.0], [18.8, 11487.0], [18.9, 11514.0], [19.0, 11654.0], [19.1, 11871.0], [19.2, 11957.0], [19.3, 11983.0], [19.4, 12020.0], [19.5, 12069.0], [19.6, 12116.0], [19.7, 12197.0], [19.8, 12239.0], [19.9, 12285.0], [20.0, 12306.0], [20.1, 12310.0], [20.2, 12330.0], [20.3, 12400.0], [20.4, 12428.0], [20.5, 12547.0], [20.6, 12576.0], [20.7, 12645.0], [20.8, 12751.0], [20.9, 12762.0], [21.0, 12803.0], [21.1, 12815.0], [21.2, 12852.0], [21.3, 12876.0], [21.4, 12928.0], [21.5, 12929.0], [21.6, 12939.0], [21.7, 12942.0], [21.8, 12942.0], [21.9, 12994.0], [22.0, 13010.0], [22.1, 13012.0], [22.2, 13018.0], [22.3, 13069.0], [22.4, 13142.0], [22.5, 13175.0], [22.6, 13220.0], [22.7, 13286.0], [22.8, 13299.0], [22.9, 13351.0], [23.0, 13568.0], [23.1, 13618.0], [23.2, 13618.0], [23.3, 13635.0], [23.4, 13646.0], [23.5, 13646.0], [23.6, 13654.0], [23.7, 13659.0], [23.8, 13667.0], [23.9, 13699.0], [24.0, 13720.0], [24.1, 13728.0], [24.2, 13730.0], [24.3, 13740.0], [24.4, 13742.0], [24.5, 13745.0], [24.6, 13746.0], [24.7, 13895.0], [24.8, 13937.0], [24.9, 14009.0], [25.0, 14034.0], [25.1, 14066.0], [25.2, 14102.0], [25.3, 14121.0], [25.4, 14142.0], [25.5, 14231.0], [25.6, 14247.0], [25.7, 14255.0], [25.8, 14315.0], [25.9, 14333.0], [26.0, 14349.0], [26.1, 14366.0], [26.2, 14369.0], [26.3, 14403.0], [26.4, 14440.0], [26.5, 14497.0], [26.6, 14512.0], [26.7, 14515.0], [26.8, 14519.0], [26.9, 14519.0], [27.0, 14551.0], [27.1, 14576.0], [27.2, 14578.0], [27.3, 14650.0], [27.4, 14660.0], [27.5, 14677.0], [27.6, 14706.0], [27.7, 14859.0], [27.8, 14859.0], [27.9, 14939.0], [28.0, 14943.0], [28.1, 14949.0], [28.2, 14972.0], [28.3, 15006.0], [28.4, 15012.0], [28.5, 15032.0], [28.6, 15055.0], [28.7, 15058.0], [28.8, 15064.0], [28.9, 15072.0], [29.0, 15083.0], [29.1, 15118.0], [29.2, 15132.0], [29.3, 15146.0], [29.4, 15147.0], [29.5, 15197.0], [29.6, 15234.0], [29.7, 15272.0], [29.8, 15287.0], [29.9, 15298.0], [30.0, 15329.0], [30.1, 15344.0], [30.2, 15430.0], [30.3, 15442.0], [30.4, 15456.0], [30.5, 15459.0], [30.6, 15513.0], [30.7, 15530.0], [30.8, 15571.0], [30.9, 15572.0], [31.0, 15575.0], [31.1, 15582.0], [31.2, 15606.0], [31.3, 15619.0], [31.4, 15697.0], [31.5, 15700.0], [31.6, 15783.0], [31.7, 15789.0], [31.8, 15849.0], [31.9, 15852.0], [32.0, 15854.0], [32.1, 15865.0], [32.2, 15868.0], [32.3, 15897.0], [32.4, 15897.0], [32.5, 15898.0], [32.6, 15898.0], [32.7, 15905.0], [32.8, 15908.0], [32.9, 15918.0], [33.0, 15918.0], [33.1, 15923.0], [33.2, 15931.0], [33.3, 15997.0], [33.4, 16100.0], [33.5, 16123.0], [33.6, 16209.0], [33.7, 16220.0], [33.8, 16222.0], [33.9, 16225.0], [34.0, 16231.0], [34.1, 16231.0], [34.2, 16232.0], [34.3, 16232.0], [34.4, 16309.0], [34.5, 16312.0], [34.6, 16320.0], [34.7, 16344.0], [34.8, 16345.0], [34.9, 16351.0], [35.0, 16366.0], [35.1, 16387.0], [35.2, 16387.0], [35.3, 16457.0], [35.4, 16483.0], [35.5, 16487.0], [35.6, 16487.0], [35.7, 16487.0], [35.8, 16488.0], [35.9, 16488.0], [36.0, 16501.0], [36.1, 16508.0], [36.2, 16548.0], [36.3, 16592.0], [36.4, 16702.0], [36.5, 16716.0], [36.6, 16874.0], [36.7, 16885.0], [36.8, 16890.0], [36.9, 16890.0], [37.0, 16890.0], [37.1, 16904.0], [37.2, 16905.0], [37.3, 16905.0], [37.4, 16912.0], [37.5, 16915.0], [37.6, 16931.0], [37.7, 17044.0], [37.8, 17046.0], [37.9, 17070.0], [38.0, 17102.0], [38.1, 17180.0], [38.2, 17191.0], [38.3, 17230.0], [38.4, 17290.0], [38.5, 17322.0], [38.6, 17349.0], [38.7, 17427.0], [38.8, 17497.0], [38.9, 17547.0], [39.0, 17571.0], [39.1, 17606.0], [39.2, 17610.0], [39.3, 17614.0], [39.4, 17626.0], [39.5, 17699.0], [39.6, 17727.0], [39.7, 17890.0], [39.8, 17897.0], [39.9, 17903.0], [40.0, 17968.0], [40.1, 18065.0], [40.2, 18110.0], [40.3, 18213.0], [40.4, 18221.0], [40.5, 18290.0], [40.6, 18304.0], [40.7, 18374.0], [40.8, 18391.0], [40.9, 18395.0], [41.0, 18438.0], [41.1, 18500.0], [41.2, 18506.0], [41.3, 18536.0], [41.4, 18614.0], [41.5, 18673.0], [41.6, 18697.0], [41.7, 18704.0], [41.8, 18900.0], [41.9, 18902.0], [42.0, 18974.0], [42.1, 18984.0], [42.2, 18993.0], [42.3, 18996.0], [42.4, 18998.0], [42.5, 19000.0], [42.6, 19002.0], [42.7, 19004.0], [42.8, 19014.0], [42.9, 19102.0], [43.0, 19187.0], [43.1, 19219.0], [43.2, 19266.0], [43.3, 19273.0], [43.4, 19273.0], [43.5, 19282.0], [43.6, 19331.0], [43.7, 19361.0], [43.8, 19371.0], [43.9, 19398.0], [44.0, 19470.0], [44.1, 19473.0], [44.2, 19526.0], [44.3, 19606.0], [44.4, 19675.0], [44.5, 19809.0], [44.6, 19809.0], [44.7, 19810.0], [44.8, 19810.0], [44.9, 19826.0], [45.0, 19826.0], [45.1, 19827.0], [45.2, 19830.0], [45.3, 19835.0], [45.4, 19837.0], [45.5, 19860.0], [45.6, 19861.0], [45.7, 19862.0], [45.8, 19870.0], [45.9, 19872.0], [46.0, 19872.0], [46.1, 19873.0], [46.2, 19873.0], [46.3, 19876.0], [46.4, 19881.0], [46.5, 19888.0], [46.6, 19930.0], [46.7, 20094.0], [46.8, 20101.0], [46.9, 20230.0], [47.0, 20286.0], [47.1, 20354.0], [47.2, 20370.0], [47.3, 20373.0], [47.4, 20374.0], [47.5, 20382.0], [47.6, 20407.0], [47.7, 20519.0], [47.8, 20589.0], [47.9, 20590.0], [48.0, 20723.0], [48.1, 20872.0], [48.2, 20876.0], [48.3, 20884.0], [48.4, 20885.0], [48.5, 20889.0], [48.6, 20890.0], [48.7, 20892.0], [48.8, 20892.0], [48.9, 20892.0], [49.0, 20902.0], [49.1, 20902.0], [49.2, 20902.0], [49.3, 20905.0], [49.4, 20906.0], [49.5, 20917.0], [49.6, 20936.0], [49.7, 21041.0], [49.8, 21050.0], [49.9, 21060.0], [50.0, 21070.0], [50.1, 21281.0], [50.2, 21305.0], [50.3, 21403.0], [50.4, 21465.0], [50.5, 21498.0], [50.6, 21506.0], [50.7, 21508.0], [50.8, 21516.0], [50.9, 21517.0], [51.0, 21529.0], [51.1, 21590.0], [51.2, 21788.0], [51.3, 21788.0], [51.4, 21801.0], [51.5, 21805.0], [51.6, 21805.0], [51.7, 21805.0], [51.8, 21808.0], [51.9, 21812.0], [52.0, 21812.0], [52.1, 21816.0], [52.2, 21830.0], [52.3, 21840.0], [52.4, 21993.0], [52.5, 21999.0], [52.6, 22001.0], [52.7, 22008.0], [52.8, 22020.0], [52.9, 22061.0], [53.0, 22308.0], [53.1, 22312.0], [53.2, 22316.0], [53.3, 22320.0], [53.4, 22320.0], [53.5, 22324.0], [53.6, 22325.0], [53.7, 22382.0], [53.8, 22502.0], [53.9, 22580.0], [54.0, 22908.0], [54.1, 23030.0], [54.2, 23037.0], [54.3, 23047.0], [54.4, 23048.0], [54.5, 23048.0], [54.6, 23048.0], [54.7, 23048.0], [54.8, 23050.0], [54.9, 23059.0], [55.0, 23059.0], [55.1, 23060.0], [55.2, 23069.0], [55.3, 23198.0], [55.4, 23243.0], [55.5, 23300.0], [55.6, 23859.0], [55.7, 24056.0], [55.8, 24057.0], [55.9, 24060.0], [56.0, 24062.0], [56.1, 24062.0], [56.2, 24063.0], [56.3, 24064.0], [56.4, 24064.0], [56.5, 24074.0], [56.6, 24075.0], [56.7, 24256.0], [56.8, 24259.0], [56.9, 24259.0], [57.0, 24266.0], [57.1, 24274.0], [57.2, 24279.0], [57.3, 24281.0], [57.4, 24447.0], [57.5, 24599.0], [57.6, 25290.0], [57.7, 25511.0], [57.8, 25523.0], [57.9, 25527.0], [58.0, 25537.0], [58.1, 25539.0], [58.2, 25542.0], [58.3, 25542.0], [58.4, 25551.0], [58.5, 25554.0], [58.6, 25555.0], [58.7, 25760.0], [58.8, 25765.0], [58.9, 25767.0], [59.0, 25769.0], [59.1, 25770.0], [59.2, 25772.0], [59.3, 25773.0], [59.4, 25774.0], [59.5, 25783.0], [59.6, 25787.0], [59.7, 25800.0], [59.8, 25872.0], [59.9, 26016.0], [60.0, 26354.0], [60.1, 26395.0], [60.2, 26412.0], [60.3, 26418.0], [60.4, 26420.0], [60.5, 26427.0], [60.6, 26427.0], [60.7, 26427.0], [60.8, 26428.0], [60.9, 26441.0], [61.0, 26887.0], [61.1, 27561.0], [61.2, 27574.0], [61.3, 27581.0], [61.4, 27586.0], [61.5, 27586.0], [61.6, 27592.0], [61.7, 27594.0], [61.8, 27594.0], [61.9, 27596.0], [62.0, 27617.0], [62.1, 27618.0], [62.2, 27756.0], [62.3, 27887.0], [62.4, 28235.0], [62.5, 28255.0], [62.6, 28259.0], [62.7, 28259.0], [62.8, 28264.0], [62.9, 28273.0], [63.0, 28273.0], [63.1, 28286.0], [63.2, 28286.0], [63.3, 28298.0], [63.4, 28311.0], [63.5, 29051.0], [63.6, 29057.0], [63.7, 29059.0], [63.8, 29075.0], [63.9, 29075.0], [64.0, 29078.0], [64.1, 29084.0], [64.2, 29085.0], [64.3, 29089.0], [64.4, 29094.0], [64.5, 29115.0], [64.6, 29377.0], [64.7, 29401.0], [64.8, 29401.0], [64.9, 29409.0], [65.0, 29413.0], [65.1, 29413.0], [65.2, 29418.0], [65.3, 29421.0], [65.4, 29422.0], [65.5, 29423.0], [65.6, 29428.0], [65.7, 29429.0], [65.8, 29439.0], [65.9, 29441.0], [66.0, 29713.0], [66.1, 29838.0], [66.2, 30331.0], [66.3, 31427.0], [66.4, 31643.0], [66.5, 32137.0], [66.6, 32137.0], [66.7, 32141.0], [66.8, 32141.0], [66.9, 32148.0], [67.0, 32148.0], [67.1, 32148.0], [67.2, 32157.0], [67.3, 32157.0], [67.4, 32162.0], [67.5, 32163.0], [67.6, 32172.0], [67.7, 32172.0], [67.8, 32172.0], [67.9, 32175.0], [68.0, 32185.0], [68.1, 32439.0], [68.2, 32446.0], [68.3, 32471.0], [68.4, 32471.0], [68.5, 32471.0], [68.6, 32471.0], [68.7, 32477.0], [68.8, 32481.0], [68.9, 32481.0], [69.0, 32482.0], [69.1, 32496.0], [69.2, 32556.0], [69.3, 33007.0], [69.4, 33339.0], [69.5, 33678.0], [69.6, 33702.0], [69.7, 33716.0], [69.8, 33717.0], [69.9, 33718.0], [70.0, 33735.0], [70.1, 33736.0], [70.2, 33736.0], [70.3, 33743.0], [70.4, 33752.0], [70.5, 34773.0], [70.6, 35100.0], [70.7, 35110.0], [70.8, 35114.0], [70.9, 35122.0], [71.0, 35123.0], [71.1, 35133.0], [71.2, 35134.0], [71.3, 35135.0], [71.4, 35136.0], [71.5, 35139.0], [71.6, 35140.0], [71.7, 35141.0], [71.8, 35731.0], [71.9, 35732.0], [72.0, 35733.0], [72.1, 35742.0], [72.2, 35745.0], [72.3, 35745.0], [72.4, 35746.0], [72.5, 35746.0], [72.6, 35747.0], [72.7, 35749.0], [72.8, 35749.0], [72.9, 35755.0], [73.0, 35773.0], [73.1, 36357.0], [73.2, 36851.0], [73.3, 36852.0], [73.4, 36853.0], [73.5, 36866.0], [73.6, 36868.0], [73.7, 36868.0], [73.8, 36868.0], [73.9, 36869.0], [74.0, 36870.0], [74.1, 36870.0], [74.2, 36870.0], [74.3, 36871.0], [74.4, 36871.0], [74.5, 36873.0], [74.6, 36874.0], [74.7, 36876.0], [74.8, 36877.0], [74.9, 37165.0], [75.0, 37165.0], [75.1, 37167.0], [75.2, 37177.0], [75.3, 37179.0], [75.4, 37180.0], [75.5, 37184.0], [75.6, 37184.0], [75.7, 37184.0], [75.8, 37194.0], [75.9, 37203.0], [76.0, 37215.0], [76.1, 37403.0], [76.2, 37670.0], [76.3, 37670.0], [76.4, 37679.0], [76.5, 37680.0], [76.6, 37680.0], [76.7, 37688.0], [76.8, 37689.0], [76.9, 37690.0], [77.0, 37694.0], [77.1, 37695.0], [77.2, 37700.0], [77.3, 37707.0], [77.4, 37729.0], [77.5, 38146.0], [77.6, 38388.0], [77.7, 38398.0], [77.8, 38399.0], [77.9, 38400.0], [78.0, 38401.0], [78.1, 38402.0], [78.2, 38403.0], [78.3, 38404.0], [78.4, 38405.0], [78.5, 38405.0], [78.6, 38405.0], [78.7, 38405.0], [78.8, 38406.0], [78.9, 38407.0], [79.0, 38407.0], [79.1, 38407.0], [79.2, 38407.0], [79.3, 38407.0], [79.4, 38409.0], [79.5, 38410.0], [79.6, 38411.0], [79.7, 38412.0], [79.8, 38412.0], [79.9, 38413.0], [80.0, 38417.0], [80.1, 38424.0], [80.2, 38426.0], [80.3, 38677.0], [80.4, 38969.0], [80.5, 39496.0], [80.6, 39499.0], [80.7, 39509.0], [80.8, 39518.0], [80.9, 39523.0], [81.0, 39526.0], [81.1, 39527.0], [81.2, 39531.0], [81.3, 39532.0], [81.4, 39536.0], [81.5, 39537.0], [81.6, 39538.0], [81.7, 39539.0], [81.8, 39541.0], [81.9, 39543.0], [82.0, 39545.0], [82.1, 39545.0], [82.2, 39545.0], [82.3, 39546.0], [82.4, 39550.0], [82.5, 39550.0], [82.6, 39555.0], [82.7, 39556.0], [82.8, 39559.0], [82.9, 40653.0], [83.0, 40844.0], [83.1, 40849.0], [83.2, 40857.0], [83.3, 40857.0], [83.4, 40858.0], [83.5, 40860.0], [83.6, 40861.0], [83.7, 40862.0], [83.8, 40862.0], [83.9, 40862.0], [84.0, 40863.0], [84.1, 40863.0], [84.2, 40864.0], [84.3, 40864.0], [84.4, 40876.0], [84.5, 40876.0], [84.6, 40876.0], [84.7, 40882.0], [84.8, 40949.0], [84.9, 41656.0], [85.0, 41683.0], [85.1, 43202.0], [85.2, 43208.0], [85.3, 43226.0], [85.4, 43382.0], [85.5, 43392.0], [85.6, 43393.0], [85.7, 43394.0], [85.8, 43400.0], [85.9, 43403.0], [86.0, 43404.0], [86.1, 43406.0], [86.2, 43406.0], [86.3, 43407.0], [86.4, 43418.0], [86.5, 43418.0], [86.6, 43418.0], [86.7, 43418.0], [86.8, 43418.0], [86.9, 43418.0], [87.0, 43418.0], [87.1, 43418.0], [87.2, 43418.0], [87.3, 43419.0], [87.4, 43420.0], [87.5, 43420.0], [87.6, 43425.0], [87.7, 43430.0], [87.8, 43433.0], [87.9, 43433.0], [88.0, 43493.0], [88.1, 43785.0], [88.2, 43795.0], [88.3, 43802.0], [88.4, 43804.0], [88.5, 43807.0], [88.6, 43809.0], [88.7, 43809.0], [88.8, 43811.0], [88.9, 43813.0], [89.0, 43814.0], [89.1, 43815.0], [89.2, 43818.0], [89.3, 43819.0], [89.4, 43820.0], [89.5, 43820.0], [89.6, 43821.0], [89.7, 43827.0], [89.8, 43829.0], [89.9, 43830.0], [90.0, 43831.0], [90.1, 43836.0], [90.2, 43845.0], [90.3, 43853.0], [90.4, 43858.0], [90.5, 44228.0], [90.6, 44228.0], [90.7, 44229.0], [90.8, 44236.0], [90.9, 44240.0], [91.0, 44241.0], [91.1, 44241.0], [91.2, 44243.0], [91.3, 44244.0], [91.4, 44248.0], [91.5, 44248.0], [91.6, 44249.0], [91.7, 44250.0], [91.8, 44252.0], [91.9, 44252.0], [92.0, 44253.0], [92.1, 44254.0], [92.2, 44255.0], [92.3, 44255.0], [92.4, 44263.0], [92.5, 44264.0], [92.6, 44266.0], [92.7, 44266.0], [92.8, 44266.0], [92.9, 44266.0], [93.0, 44267.0], [93.1, 44268.0], [93.2, 44420.0], [93.3, 44431.0], [93.4, 44431.0], [93.5, 44433.0], [93.6, 44434.0], [93.7, 44435.0], [93.8, 44442.0], [93.9, 44442.0], [94.0, 44445.0], [94.1, 44446.0], [94.2, 44447.0], [94.3, 44447.0], [94.4, 44448.0], [94.5, 44448.0], [94.6, 44449.0], [94.7, 44449.0], [94.8, 44449.0], [94.9, 44451.0], [95.0, 44451.0], [95.1, 44452.0], [95.2, 44456.0], [95.3, 44458.0], [95.4, 44461.0], [95.5, 44461.0], [95.6, 44462.0], [95.7, 44462.0], [95.8, 44462.0], [95.9, 44560.0], [96.0, 44567.0], [96.1, 44575.0], [96.2, 44578.0], [96.3, 44580.0], [96.4, 44581.0], [96.5, 44583.0], [96.6, 44583.0], [96.7, 44584.0], [96.8, 44590.0], [96.9, 44592.0], [97.0, 44594.0], [97.1, 44596.0], [97.2, 44596.0], [97.3, 44599.0], [97.4, 44603.0], [97.5, 44604.0], [97.6, 44604.0], [97.7, 44604.0], [97.8, 44607.0], [97.9, 44608.0], [98.0, 44610.0], [98.1, 44613.0], [98.2, 44618.0], [98.3, 44623.0], [98.4, 44628.0], [98.5, 44654.0], [98.6, 44907.0], [98.7, 45916.0], [98.8, 46322.0], [98.9, 46459.0], [99.0, 47003.0], [99.1, 47318.0], [99.2, 47536.0], [99.3, 49278.0], [99.4, 51521.0], [99.5, 51810.0], [99.6, 52499.0], [99.7, 57595.0], [99.8, 60165.0], [99.9, 68489.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[0.0, 95.0], [0.1, 95.0], [0.2, 95.0], [0.3, 95.0], [0.4, 95.0], [0.5, 95.0], [0.6, 95.0], [0.7, 95.0], [0.8, 95.0], [0.9, 95.0], [1.0, 95.0], [1.1, 95.0], [1.2, 95.0], [1.3, 95.0], [1.4, 95.0], [1.5, 95.0], [1.6, 95.0], [1.7, 95.0], [1.8, 95.0], [1.9, 95.0], [2.0, 95.0], [2.1, 95.0], [2.2, 95.0], [2.3, 95.0], [2.4, 95.0], [2.5, 95.0], [2.6, 98.0], [2.7, 98.0], [2.8, 98.0], [2.9, 98.0], [3.0, 98.0], [3.1, 98.0], [3.2, 98.0], [3.3, 98.0], [3.4, 98.0], [3.5, 98.0], [3.6, 98.0], [3.7, 98.0], [3.8, 98.0], [3.9, 98.0], [4.0, 98.0], [4.1, 98.0], [4.2, 98.0], [4.3, 98.0], [4.4, 98.0], [4.5, 98.0], [4.6, 98.0], [4.7, 98.0], [4.8, 98.0], [4.9, 98.0], [5.0, 98.0], [5.1, 98.0], [5.2, 101.0], [5.3, 101.0], [5.4, 101.0], [5.5, 101.0], [5.6, 101.0], [5.7, 101.0], [5.8, 101.0], [5.9, 101.0], [6.0, 101.0], [6.1, 101.0], [6.2, 101.0], [6.3, 101.0], [6.4, 101.0], [6.5, 101.0], [6.6, 101.0], [6.7, 101.0], [6.8, 101.0], [6.9, 101.0], [7.0, 101.0], [7.1, 101.0], [7.2, 101.0], [7.3, 101.0], [7.4, 101.0], [7.5, 101.0], [7.6, 101.0], [7.7, 109.0], [7.8, 109.0], [7.9, 109.0], [8.0, 109.0], [8.1, 109.0], [8.2, 109.0], [8.3, 109.0], [8.4, 109.0], [8.5, 109.0], [8.6, 109.0], [8.7, 109.0], [8.8, 109.0], [8.9, 109.0], [9.0, 109.0], [9.1, 109.0], [9.2, 109.0], [9.3, 109.0], [9.4, 109.0], [9.5, 109.0], [9.6, 109.0], [9.7, 109.0], [9.8, 109.0], [9.9, 109.0], [10.0, 109.0], [10.1, 109.0], [10.2, 109.0], [10.3, 116.0], [10.4, 116.0], [10.5, 116.0], [10.6, 116.0], [10.7, 116.0], [10.8, 116.0], [10.9, 116.0], [11.0, 116.0], [11.1, 116.0], [11.2, 116.0], [11.3, 116.0], [11.4, 116.0], [11.5, 116.0], [11.6, 116.0], [11.7, 116.0], [11.8, 116.0], [11.9, 116.0], [12.0, 116.0], [12.1, 116.0], [12.2, 116.0], [12.3, 116.0], [12.4, 116.0], [12.5, 116.0], [12.6, 116.0], [12.7, 116.0], [12.8, 116.0], [12.9, 118.0], [13.0, 118.0], [13.1, 118.0], [13.2, 118.0], [13.3, 118.0], [13.4, 118.0], [13.5, 118.0], [13.6, 118.0], [13.7, 118.0], [13.8, 118.0], [13.9, 118.0], [14.0, 118.0], [14.1, 118.0], [14.2, 118.0], [14.3, 118.0], [14.4, 118.0], [14.5, 118.0], [14.6, 118.0], [14.7, 118.0], [14.8, 118.0], [14.9, 118.0], [15.0, 118.0], [15.1, 118.0], [15.2, 118.0], [15.3, 118.0], [15.4, 120.0], [15.5, 120.0], [15.6, 120.0], [15.7, 120.0], [15.8, 120.0], [15.9, 120.0], [16.0, 120.0], [16.1, 120.0], [16.2, 120.0], [16.3, 120.0], [16.4, 120.0], [16.5, 120.0], [16.6, 120.0], [16.7, 120.0], [16.8, 120.0], [16.9, 120.0], [17.0, 120.0], [17.1, 120.0], [17.2, 120.0], [17.3, 120.0], [17.4, 120.0], [17.5, 120.0], [17.6, 120.0], [17.7, 120.0], [17.8, 120.0], [17.9, 120.0], [18.0, 120.0], [18.1, 120.0], [18.2, 120.0], [18.3, 120.0], [18.4, 120.0], [18.5, 120.0], [18.6, 120.0], [18.7, 120.0], [18.8, 120.0], [18.9, 120.0], [19.0, 120.0], [19.1, 120.0], [19.2, 120.0], [19.3, 120.0], [19.4, 120.0], [19.5, 120.0], [19.6, 120.0], [19.7, 120.0], [19.8, 120.0], [19.9, 120.0], [20.0, 120.0], [20.1, 120.0], [20.2, 120.0], [20.3, 120.0], [20.4, 120.0], [20.5, 120.0], [20.6, 121.0], [20.7, 121.0], [20.8, 121.0], [20.9, 121.0], [21.0, 121.0], [21.1, 121.0], [21.2, 121.0], [21.3, 121.0], [21.4, 121.0], [21.5, 121.0], [21.6, 121.0], [21.7, 121.0], [21.8, 121.0], [21.9, 121.0], [22.0, 121.0], [22.1, 121.0], [22.2, 121.0], [22.3, 121.0], [22.4, 121.0], [22.5, 121.0], [22.6, 121.0], [22.7, 121.0], [22.8, 121.0], [22.9, 121.0], [23.0, 121.0], [23.1, 126.0], [23.2, 126.0], [23.3, 126.0], [23.4, 126.0], [23.5, 126.0], [23.6, 126.0], [23.7, 126.0], [23.8, 126.0], [23.9, 126.0], [24.0, 126.0], [24.1, 126.0], [24.2, 126.0], [24.3, 126.0], [24.4, 126.0], [24.5, 126.0], [24.6, 126.0], [24.7, 126.0], [24.8, 126.0], [24.9, 126.0], [25.0, 126.0], [25.1, 126.0], [25.2, 126.0], [25.3, 126.0], [25.4, 126.0], [25.5, 126.0], [25.6, 126.0], [25.7, 127.0], [25.8, 127.0], [25.9, 127.0], [26.0, 127.0], [26.1, 127.0], [26.2, 127.0], [26.3, 127.0], [26.4, 127.0], [26.5, 127.0], [26.6, 127.0], [26.7, 127.0], [26.8, 127.0], [26.9, 127.0], [27.0, 127.0], [27.1, 127.0], [27.2, 127.0], [27.3, 127.0], [27.4, 127.0], [27.5, 127.0], [27.6, 127.0], [27.7, 127.0], [27.8, 127.0], [27.9, 127.0], [28.0, 127.0], [28.1, 127.0], [28.2, 127.0], [28.3, 128.0], [28.4, 128.0], [28.5, 128.0], [28.6, 128.0], [28.7, 128.0], [28.8, 128.0], [28.9, 128.0], [29.0, 128.0], [29.1, 128.0], [29.2, 128.0], [29.3, 128.0], [29.4, 128.0], [29.5, 128.0], [29.6, 128.0], [29.7, 128.0], [29.8, 128.0], [29.9, 128.0], [30.0, 128.0], [30.1, 128.0], [30.2, 128.0], [30.3, 128.0], [30.4, 128.0], [30.5, 128.0], [30.6, 128.0], [30.7, 128.0], [30.8, 128.0], [30.9, 128.0], [31.0, 128.0], [31.1, 128.0], [31.2, 128.0], [31.3, 128.0], [31.4, 128.0], [31.5, 128.0], [31.6, 128.0], [31.7, 128.0], [31.8, 128.0], [31.9, 128.0], [32.0, 128.0], [32.1, 128.0], [32.2, 128.0], [32.3, 128.0], [32.4, 128.0], [32.5, 128.0], [32.6, 128.0], [32.7, 128.0], [32.8, 128.0], [32.9, 128.0], [33.0, 128.0], [33.1, 128.0], [33.2, 128.0], [33.3, 128.0], [33.4, 130.0], [33.5, 130.0], [33.6, 130.0], [33.7, 130.0], [33.8, 130.0], [33.9, 130.0], [34.0, 130.0], [34.1, 130.0], [34.2, 130.0], [34.3, 130.0], [34.4, 130.0], [34.5, 130.0], [34.6, 130.0], [34.7, 130.0], [34.8, 130.0], [34.9, 130.0], [35.0, 130.0], [35.1, 130.0], [35.2, 130.0], [35.3, 130.0], [35.4, 130.0], [35.5, 130.0], [35.6, 130.0], [35.7, 130.0], [35.8, 130.0], [35.9, 134.0], [36.0, 134.0], [36.1, 134.0], [36.2, 134.0], [36.3, 134.0], [36.4, 134.0], [36.5, 134.0], [36.6, 134.0], [36.7, 134.0], [36.8, 134.0], [36.9, 134.0], [37.0, 134.0], [37.1, 134.0], [37.2, 134.0], [37.3, 134.0], [37.4, 134.0], [37.5, 134.0], [37.6, 134.0], [37.7, 134.0], [37.8, 134.0], [37.9, 134.0], [38.0, 134.0], [38.1, 134.0], [38.2, 134.0], [38.3, 134.0], [38.4, 134.0], [38.5, 136.0], [38.6, 136.0], [38.7, 136.0], [38.8, 136.0], [38.9, 136.0], [39.0, 136.0], [39.1, 136.0], [39.2, 136.0], [39.3, 136.0], [39.4, 136.0], [39.5, 136.0], [39.6, 136.0], [39.7, 136.0], [39.8, 136.0], [39.9, 136.0], [40.0, 136.0], [40.1, 136.0], [40.2, 136.0], [40.3, 136.0], [40.4, 136.0], [40.5, 136.0], [40.6, 136.0], [40.7, 136.0], [40.8, 136.0], [40.9, 136.0], [41.0, 136.0], [41.1, 137.0], [41.2, 137.0], [41.3, 137.0], [41.4, 137.0], [41.5, 137.0], [41.6, 137.0], [41.7, 137.0], [41.8, 137.0], [41.9, 137.0], [42.0, 137.0], [42.1, 137.0], [42.2, 137.0], [42.3, 137.0], [42.4, 137.0], [42.5, 137.0], [42.6, 137.0], [42.7, 137.0], [42.8, 137.0], [42.9, 137.0], [43.0, 137.0], [43.1, 137.0], [43.2, 137.0], [43.3, 137.0], [43.4, 137.0], [43.5, 137.0], [43.6, 142.0], [43.7, 142.0], [43.8, 142.0], [43.9, 142.0], [44.0, 142.0], [44.1, 142.0], [44.2, 142.0], [44.3, 142.0], [44.4, 142.0], [44.5, 142.0], [44.6, 142.0], [44.7, 142.0], [44.8, 142.0], [44.9, 142.0], [45.0, 142.0], [45.1, 142.0], [45.2, 142.0], [45.3, 142.0], [45.4, 142.0], [45.5, 142.0], [45.6, 142.0], [45.7, 142.0], [45.8, 142.0], [45.9, 142.0], [46.0, 142.0], [46.1, 142.0], [46.2, 158.0], [46.3, 158.0], [46.4, 158.0], [46.5, 158.0], [46.6, 158.0], [46.7, 158.0], [46.8, 158.0], [46.9, 158.0], [47.0, 158.0], [47.1, 158.0], [47.2, 158.0], [47.3, 158.0], [47.4, 158.0], [47.5, 158.0], [47.6, 158.0], [47.7, 158.0], [47.8, 158.0], [47.9, 158.0], [48.0, 158.0], [48.1, 158.0], [48.2, 158.0], [48.3, 158.0], [48.4, 158.0], [48.5, 158.0], [48.6, 158.0], [48.7, 158.0], [48.8, 159.0], [48.9, 159.0], [49.0, 159.0], [49.1, 159.0], [49.2, 159.0], [49.3, 159.0], [49.4, 159.0], [49.5, 159.0], [49.6, 159.0], [49.7, 159.0], [49.8, 159.0], [49.9, 159.0], [50.0, 159.0], [50.1, 159.0], [50.2, 159.0], [50.3, 159.0], [50.4, 159.0], [50.5, 159.0], [50.6, 159.0], [50.7, 159.0], [50.8, 159.0], [50.9, 159.0], [51.0, 159.0], [51.1, 159.0], [51.2, 159.0], [51.3, 175.0], [51.4, 175.0], [51.5, 175.0], [51.6, 175.0], [51.7, 175.0], [51.8, 175.0], [51.9, 175.0], [52.0, 175.0], [52.1, 175.0], [52.2, 175.0], [52.3, 175.0], [52.4, 175.0], [52.5, 175.0], [52.6, 175.0], [52.7, 175.0], [52.8, 175.0], [52.9, 175.0], [53.0, 175.0], [53.1, 175.0], [53.2, 175.0], [53.3, 175.0], [53.4, 175.0], [53.5, 175.0], [53.6, 175.0], [53.7, 175.0], [53.8, 175.0], [53.9, 176.0], [54.0, 176.0], [54.1, 176.0], [54.2, 176.0], [54.3, 176.0], [54.4, 176.0], [54.5, 176.0], [54.6, 176.0], [54.7, 176.0], [54.8, 176.0], [54.9, 176.0], [55.0, 176.0], [55.1, 176.0], [55.2, 176.0], [55.3, 176.0], [55.4, 176.0], [55.5, 176.0], [55.6, 176.0], [55.7, 176.0], [55.8, 176.0], [55.9, 176.0], [56.0, 176.0], [56.1, 176.0], [56.2, 176.0], [56.3, 176.0], [56.4, 176.0], [56.5, 178.0], [56.6, 178.0], [56.7, 178.0], [56.8, 178.0], [56.9, 178.0], [57.0, 178.0], [57.1, 178.0], [57.2, 178.0], [57.3, 178.0], [57.4, 178.0], [57.5, 178.0], [57.6, 178.0], [57.7, 178.0], [57.8, 178.0], [57.9, 178.0], [58.0, 178.0], [58.1, 178.0], [58.2, 178.0], [58.3, 178.0], [58.4, 178.0], [58.5, 178.0], [58.6, 178.0], [58.7, 178.0], [58.8, 178.0], [58.9, 178.0], [59.0, 179.0], [59.1, 179.0], [59.2, 179.0], [59.3, 179.0], [59.4, 179.0], [59.5, 179.0], [59.6, 179.0], [59.7, 179.0], [59.8, 179.0], [59.9, 179.0], [60.0, 179.0], [60.1, 179.0], [60.2, 179.0], [60.3, 179.0], [60.4, 179.0], [60.5, 179.0], [60.6, 179.0], [60.7, 179.0], [60.8, 179.0], [60.9, 179.0], [61.0, 179.0], [61.1, 179.0], [61.2, 179.0], [61.3, 179.0], [61.4, 179.0], [61.5, 179.0], [61.6, 182.0], [61.7, 182.0], [61.8, 182.0], [61.9, 182.0], [62.0, 182.0], [62.1, 182.0], [62.2, 182.0], [62.3, 182.0], [62.4, 182.0], [62.5, 182.0], [62.6, 182.0], [62.7, 182.0], [62.8, 182.0], [62.9, 182.0], [63.0, 182.0], [63.1, 182.0], [63.2, 182.0], [63.3, 182.0], [63.4, 182.0], [63.5, 182.0], [63.6, 182.0], [63.7, 182.0], [63.8, 182.0], [63.9, 182.0], [64.0, 182.0], [64.1, 182.0], [64.2, 186.0], [64.3, 186.0], [64.4, 186.0], [64.5, 186.0], [64.6, 186.0], [64.7, 186.0], [64.8, 186.0], [64.9, 186.0], [65.0, 186.0], [65.1, 186.0], [65.2, 186.0], [65.3, 186.0], [65.4, 186.0], [65.5, 186.0], [65.6, 186.0], [65.7, 186.0], [65.8, 186.0], [65.9, 186.0], [66.0, 186.0], [66.1, 186.0], [66.2, 186.0], [66.3, 186.0], [66.4, 186.0], [66.5, 186.0], [66.6, 186.0], [66.7, 191.0], [66.8, 191.0], [66.9, 191.0], [67.0, 191.0], [67.1, 191.0], [67.2, 191.0], [67.3, 191.0], [67.4, 191.0], [67.5, 191.0], [67.6, 191.0], [67.7, 191.0], [67.8, 191.0], [67.9, 191.0], [68.0, 191.0], [68.1, 191.0], [68.2, 191.0], [68.3, 191.0], [68.4, 191.0], [68.5, 191.0], [68.6, 191.0], [68.7, 191.0], [68.8, 191.0], [68.9, 191.0], [69.0, 191.0], [69.1, 191.0], [69.2, 191.0], [69.3, 213.0], [69.4, 213.0], [69.5, 213.0], [69.6, 213.0], [69.7, 213.0], [69.8, 213.0], [69.9, 213.0], [70.0, 213.0], [70.1, 213.0], [70.2, 213.0], [70.3, 213.0], [70.4, 213.0], [70.5, 213.0], [70.6, 213.0], [70.7, 213.0], [70.8, 213.0], [70.9, 213.0], [71.0, 213.0], [71.1, 213.0], [71.2, 213.0], [71.3, 213.0], [71.4, 213.0], [71.5, 213.0], [71.6, 213.0], [71.7, 213.0], [71.8, 222.0], [71.9, 222.0], [72.0, 222.0], [72.1, 222.0], [72.2, 222.0], [72.3, 222.0], [72.4, 222.0], [72.5, 222.0], [72.6, 222.0], [72.7, 222.0], [72.8, 222.0], [72.9, 222.0], [73.0, 222.0], [73.1, 222.0], [73.2, 222.0], [73.3, 222.0], [73.4, 222.0], [73.5, 222.0], [73.6, 222.0], [73.7, 222.0], [73.8, 222.0], [73.9, 222.0], [74.0, 222.0], [74.1, 222.0], [74.2, 222.0], [74.3, 222.0], [74.4, 226.0], [74.5, 226.0], [74.6, 226.0], [74.7, 226.0], [74.8, 226.0], [74.9, 226.0], [75.0, 226.0], [75.1, 226.0], [75.2, 226.0], [75.3, 226.0], [75.4, 226.0], [75.5, 226.0], [75.6, 226.0], [75.7, 226.0], [75.8, 226.0], [75.9, 226.0], [76.0, 226.0], [76.1, 226.0], [76.2, 226.0], [76.3, 226.0], [76.4, 226.0], [76.5, 226.0], [76.6, 226.0], [76.7, 226.0], [76.8, 226.0], [76.9, 226.0], [77.0, 238.0], [77.1, 238.0], [77.2, 238.0], [77.3, 238.0], [77.4, 238.0], [77.5, 238.0], [77.6, 238.0], [77.7, 238.0], [77.8, 238.0], [77.9, 238.0], [78.0, 238.0], [78.1, 238.0], [78.2, 238.0], [78.3, 238.0], [78.4, 238.0], [78.5, 238.0], [78.6, 238.0], [78.7, 238.0], [78.8, 238.0], [78.9, 238.0], [79.0, 238.0], [79.1, 238.0], [79.2, 238.0], [79.3, 238.0], [79.4, 238.0], [79.5, 277.0], [79.6, 277.0], [79.7, 277.0], [79.8, 277.0], [79.9, 277.0], [80.0, 277.0], [80.1, 277.0], [80.2, 277.0], [80.3, 277.0], [80.4, 277.0], [80.5, 277.0], [80.6, 277.0], [80.7, 277.0], [80.8, 277.0], [80.9, 277.0], [81.0, 277.0], [81.1, 277.0], [81.2, 277.0], [81.3, 277.0], [81.4, 277.0], [81.5, 277.0], [81.6, 277.0], [81.7, 277.0], [81.8, 277.0], [81.9, 277.0], [82.0, 277.0], [82.1, 317.0], [82.2, 317.0], [82.3, 317.0], [82.4, 317.0], [82.5, 317.0], [82.6, 317.0], [82.7, 317.0], [82.8, 317.0], [82.9, 317.0], [83.0, 317.0], [83.1, 317.0], [83.2, 317.0], [83.3, 317.0], [83.4, 317.0], [83.5, 317.0], [83.6, 317.0], [83.7, 317.0], [83.8, 317.0], [83.9, 317.0], [84.0, 317.0], [84.1, 317.0], [84.2, 317.0], [84.3, 317.0], [84.4, 317.0], [84.5, 317.0], [84.6, 317.0], [84.7, 371.0], [84.8, 371.0], [84.9, 371.0], [85.0, 371.0], [85.1, 371.0], [85.2, 371.0], [85.3, 371.0], [85.4, 371.0], [85.5, 371.0], [85.6, 371.0], [85.7, 371.0], [85.8, 371.0], [85.9, 371.0], [86.0, 371.0], [86.1, 371.0], [86.2, 371.0], [86.3, 371.0], [86.4, 371.0], [86.5, 371.0], [86.6, 371.0], [86.7, 371.0], [86.8, 371.0], [86.9, 371.0], [87.0, 371.0], [87.1, 371.0], [87.2, 379.0], [87.3, 379.0], [87.4, 379.0], [87.5, 379.0], [87.6, 379.0], [87.7, 379.0], [87.8, 379.0], [87.9, 379.0], [88.0, 379.0], [88.1, 379.0], [88.2, 379.0], [88.3, 379.0], [88.4, 379.0], [88.5, 379.0], [88.6, 379.0], [88.7, 379.0], [88.8, 379.0], [88.9, 379.0], [89.0, 379.0], [89.1, 379.0], [89.2, 379.0], [89.3, 379.0], [89.4, 379.0], [89.5, 379.0], [89.6, 379.0], [89.7, 379.0], [89.8, 383.0], [89.9, 383.0], [90.0, 383.0], [90.1, 383.0], [90.2, 383.0], [90.3, 383.0], [90.4, 383.0], [90.5, 383.0], [90.6, 383.0], [90.7, 383.0], [90.8, 383.0], [90.9, 383.0], [91.0, 383.0], [91.1, 383.0], [91.2, 383.0], [91.3, 383.0], [91.4, 383.0], [91.5, 383.0], [91.6, 383.0], [91.7, 383.0], [91.8, 383.0], [91.9, 383.0], [92.0, 383.0], [92.1, 383.0], [92.2, 383.0], [92.3, 383.0], [92.4, 508.0], [92.5, 508.0], [92.6, 508.0], [92.7, 508.0], [92.8, 508.0], [92.9, 508.0], [93.0, 508.0], [93.1, 508.0], [93.2, 508.0], [93.3, 508.0], [93.4, 508.0], [93.5, 508.0], [93.6, 508.0], [93.7, 508.0], [93.8, 508.0], [93.9, 508.0], [94.0, 508.0], [94.1, 508.0], [94.2, 508.0], [94.3, 508.0], [94.4, 508.0], [94.5, 508.0], [94.6, 508.0], [94.7, 508.0], [94.8, 508.0], [94.9, 509.0], [95.0, 509.0], [95.1, 509.0], [95.2, 509.0], [95.3, 509.0], [95.4, 509.0], [95.5, 509.0], [95.6, 509.0], [95.7, 509.0], [95.8, 509.0], [95.9, 509.0], [96.0, 509.0], [96.1, 509.0], [96.2, 509.0], [96.3, 509.0], [96.4, 509.0], [96.5, 509.0], [96.6, 509.0], [96.7, 509.0], [96.8, 509.0], [96.9, 509.0], [97.0, 509.0], [97.1, 509.0], [97.2, 509.0], [97.3, 509.0], [97.4, 509.0], [97.5, 1717.0], [97.6, 1717.0], [97.7, 1717.0], [97.8, 1717.0], [97.9, 1717.0], [98.0, 1717.0], [98.1, 1717.0], [98.2, 1717.0], [98.3, 1717.0], [98.4, 1717.0], [98.5, 1717.0], [98.6, 1717.0], [98.7, 1717.0], [98.8, 1717.0], [98.9, 1717.0], [99.0, 1717.0], [99.1, 1717.0], [99.2, 1717.0], [99.3, 1717.0], [99.4, 1717.0], [99.5, 1717.0], [99.6, 1717.0], [99.7, 1717.0], [99.8, 1717.0], [99.9, 1717.0], [100.0, 1717.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 29.0, "series": [{"data": [[2100.0, 2.0], [2200.0, 2.0], [2300.0, 3.0], [2400.0, 2.0], [2700.0, 2.0], [2800.0, 1.0], [700.0, 1.0], [3100.0, 1.0], [3600.0, 2.0], [4000.0, 1.0], [4100.0, 2.0], [4300.0, 1.0], [1100.0, 5.0], [4400.0, 2.0], [4600.0, 1.0], [4500.0, 1.0], [1200.0, 4.0], [4900.0, 2.0], [1300.0, 5.0], [1400.0, 2.0], [1600.0, 2.0], [1700.0, 1.0], [1900.0, 1.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[600.0, 4.0], [2400.0, 1.0], [700.0, 3.0], [200.0, 8.0], [800.0, 8.0], [900.0, 2.0], [1000.0, 4.0], [300.0, 2.0], [1200.0, 1.0], [1300.0, 5.0], [1400.0, 1.0], [1500.0, 1.0], [100.0, 8.0], [400.0, 3.0], [1700.0, 1.0], [500.0, 6.0], [2000.0, 1.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[33300.0, 1.0], [33700.0, 10.0], [35700.0, 13.0], [37700.0, 3.0], [38100.0, 1.0], [38900.0, 1.0], [40900.0, 1.0], [44900.0, 1.0], [43700.0, 2.0], [43300.0, 5.0], [44500.0, 16.0], [47300.0, 1.0], [60100.0, 1.0], [71400.0, 1.0], [600.0, 1.0], [700.0, 1.0], [1000.0, 2.0], [1400.0, 1.0], [3200.0, 1.0], [3400.0, 2.0], [5100.0, 1.0], [5300.0, 2.0], [5600.0, 5.0], [5500.0, 2.0], [5400.0, 1.0], [5700.0, 9.0], [5800.0, 6.0], [6000.0, 9.0], [6100.0, 11.0], [5900.0, 12.0], [6300.0, 4.0], [6200.0, 5.0], [6500.0, 8.0], [6400.0, 6.0], [6600.0, 3.0], [6900.0, 3.0], [6800.0, 4.0], [6700.0, 1.0], [7000.0, 6.0], [7100.0, 1.0], [7400.0, 6.0], [7200.0, 2.0], [7300.0, 1.0], [7600.0, 2.0], [7500.0, 2.0], [7900.0, 2.0], [7700.0, 4.0], [7800.0, 2.0], [8100.0, 3.0], [8700.0, 1.0], [8300.0, 4.0], [8400.0, 2.0], [8600.0, 1.0], [8900.0, 2.0], [9000.0, 1.0], [9100.0, 1.0], [9200.0, 2.0], [8800.0, 2.0], [9500.0, 3.0], [9300.0, 1.0], [9400.0, 6.0], [9600.0, 2.0], [9900.0, 3.0], [10000.0, 1.0], [9800.0, 1.0], [10100.0, 1.0], [10400.0, 2.0], [10300.0, 3.0], [10700.0, 5.0], [10600.0, 3.0], [11000.0, 3.0], [11100.0, 3.0], [10800.0, 4.0], [10900.0, 5.0], [11200.0, 1.0], [11300.0, 2.0], [11500.0, 1.0], [11400.0, 4.0], [11600.0, 1.0], [12100.0, 2.0], [12000.0, 2.0], [11900.0, 2.0], [11800.0, 2.0], [12200.0, 2.0], [12600.0, 2.0], [12300.0, 3.0], [12700.0, 2.0], [12500.0, 2.0], [12400.0, 2.0], [12900.0, 6.0], [13000.0, 5.0], [12800.0, 4.0], [13100.0, 2.0], [13200.0, 3.0], [13300.0, 1.0], [13600.0, 10.0], [13700.0, 7.0], [13800.0, 1.0], [13500.0, 1.0], [14000.0, 3.0], [14300.0, 5.0], [13900.0, 1.0], [14100.0, 4.0], [14200.0, 3.0], [14800.0, 2.0], [14600.0, 3.0], [14500.0, 8.0], [14700.0, 1.0], [14400.0, 3.0], [15000.0, 9.0], [15100.0, 5.0], [14900.0, 4.0], [15200.0, 4.0], [15300.0, 2.0], [15400.0, 5.0], [15700.0, 3.0], [15600.0, 3.0], [15800.0, 10.0], [15500.0, 6.0], [16200.0, 8.0], [16300.0, 10.0], [16000.0, 1.0], [15900.0, 7.0], [16100.0, 2.0], [17200.0, 2.0], [17000.0, 3.0], [16400.0, 7.0], [16800.0, 5.0], [17400.0, 2.0], [17600.0, 5.0], [18400.0, 1.0], [17800.0, 3.0], [18000.0, 1.0], [18200.0, 3.0], [19200.0, 5.0], [19400.0, 2.0], [18600.0, 3.0], [19000.0, 5.0], [19600.0, 3.0], [20400.0, 2.0], [19800.0, 22.0], [20200.0, 2.0], [20000.0, 1.0], [21400.0, 3.0], [21200.0, 1.0], [21000.0, 4.0], [20800.0, 9.0], [22000.0, 4.0], [21800.0, 11.0], [23200.0, 1.0], [22600.0, 1.0], [23000.0, 12.0], [23800.0, 1.0], [23600.0, 1.0], [24400.0, 1.0], [24200.0, 8.0], [24000.0, 10.0], [25200.0, 1.0], [25800.0, 2.0], [26400.0, 9.0], [26000.0, 1.0], [26800.0, 1.0], [27600.0, 3.0], [27800.0, 1.0], [28200.0, 10.0], [29000.0, 10.0], [29400.0, 14.0], [29800.0, 1.0], [31600.0, 1.0], [31400.0, 1.0], [32400.0, 12.0], [33600.0, 1.0], [36800.0, 18.0], [37600.0, 10.0], [37200.0, 2.0], [38400.0, 25.0], [40800.0, 19.0], [41600.0, 2.0], [43200.0, 3.0], [44400.0, 29.0], [46400.0, 1.0], [49200.0, 1.0], [52400.0, 1.0], [34700.0, 1.0], [35100.0, 13.0], [36300.0, 1.0], [37100.0, 10.0], [37500.0, 1.0], [38300.0, 4.0], [39500.0, 24.0], [45900.0, 1.0], [46300.0, 1.0], [47500.0, 1.0], [51500.0, 1.0], [57500.0, 1.0], [16900.0, 6.0], [16700.0, 3.0], [17100.0, 4.0], [16500.0, 4.0], [17300.0, 2.0], [17500.0, 2.0], [17900.0, 2.0], [18300.0, 4.0], [17700.0, 1.0], [18100.0, 1.0], [18500.0, 4.0], [19300.0, 4.0], [19100.0, 2.0], [18700.0, 1.0], [18900.0, 7.0], [19900.0, 1.0], [19500.0, 1.0], [20300.0, 5.0], [20100.0, 1.0], [20900.0, 8.0], [21300.0, 1.0], [20500.0, 3.0], [21500.0, 7.0], [20700.0, 1.0], [22500.0, 2.0], [22300.0, 8.0], [21900.0, 2.0], [21700.0, 2.0], [23100.0, 1.0], [22900.0, 1.0], [23300.0, 1.0], [24500.0, 1.0], [25500.0, 10.0], [26300.0, 2.0], [25700.0, 11.0], [27500.0, 9.0], [28500.0, 1.0], [28300.0, 1.0], [27700.0, 1.0], [29300.0, 1.0], [29100.0, 1.0], [29700.0, 1.0], [30300.0, 1.0], [32500.0, 1.0], [32100.0, 17.0], [33000.0, 1.0], [35800.0, 1.0], [38600.0, 1.0], [37400.0, 1.0], [40600.0, 1.0], [39400.0, 2.0], [44200.0, 29.0], [43800.0, 23.0], [43400.0, 24.0], [44600.0, 13.0], [47000.0, 1.0], [51800.0, 1.0], [68400.0, 1.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[0.0, 2.0], [300.0, 4.0], [100.0, 25.0], [200.0, 5.0], [1700.0, 1.0], [500.0, 2.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 71400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 14.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1085.0, "series": [{"data": [[0.0, 56.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 52.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1085.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 14.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.7777777777777777, "minX": 1.71819924E12, "maxY": 60.0, "series": [{"data": [[1.7182023E12, 6.962962962962965], [1.71820224E12, 17.43356643356643], [1.71820236E12, 10.130434782608694]], "isOverall": false, "label": "MixedTest", "isController": false}, {"data": [[1.7182005E12, 16.882352941176475], [1.71820584E12, 7.950819672131148], [1.7182062E12, 51.38541666666668], [1.7182002E12, 19.999999999999996], [1.71819924E12, 17.428571428571427], [1.7182059E12, 14.743243243243246], [1.71820026E12, 13.730769230769232], [1.71820608E12, 35.880597014925364], [1.71820578E12, 2.7777777777777777], [1.71820614E12, 43.0125], [1.71820632E12, 60.0], [1.71820356E12, 26.03333333333333], [1.71820602E12, 29.0246913580247], [1.71820638E12, 40.89887640449439], [1.71820626E12, 58.055555555555564], [1.71820362E12, 16.56666666666667], [1.71820596E12, 21.808219178082187]], "isOverall": false, "label": "Actors by name", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71820638E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 95.0, "minX": 1.0, "maxY": 48551.5, "series": [{"data": [[2.0, 1149.5], [8.0, 1312.3333333333333], [9.0, 1254.0], [10.0, 1697.0], [11.0, 1424.0], [12.0, 1617.0], [13.0, 1680.6666666666667], [15.0, 2118.0], [4.0, 1163.5], [17.0, 2293.0], [18.0, 2295.0], [19.0, 2867.3333333333335], [5.0, 1144.25], [20.0, 2393.3333333333335], [22.0, 3892.3333333333335], [23.0, 3864.0], [6.0, 1308.0], [24.0, 3368.0], [25.0, 3641.5], [26.0, 4042.0], [27.0, 4537.0], [28.0, 4966.0], [30.0, 4508.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[15.478260869565217, 2440.5]], "isOverall": false, "label": "Directors by name-Aggregated", "isController": false}, {"data": [[2.0, 516.0], [3.0, 440.66666666666663], [4.0, 560.0], [5.0, 167.0], [6.0, 321.0], [7.0, 463.0], [8.0, 171.0], [9.0, 462.6666666666667], [10.0, 546.0], [11.0, 634.75], [13.0, 789.0], [14.0, 670.5], [15.0, 166.0], [16.0, 840.0], [17.0, 862.0], [18.0, 866.0], [19.0, 528.0], [20.0, 916.3333333333334], [21.0, 724.3333333333334], [22.0, 990.0], [25.0, 1835.0], [26.0, 542.0], [27.0, 759.0], [28.0, 1358.3333333333333], [29.0, 2026.0], [30.0, 877.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[16.01694915254238, 737.8474576271186]], "isOverall": false, "label": "TitleBasics by primary_title-Aggregated", "isController": false}, {"data": [[2.0, 12758.166666666666], [3.0, 12194.4], [4.0, 9116.375000000002], [5.0, 10111.76923076923], [6.0, 9547.0625], [7.0, 11332.705882352942], [8.0, 8938.999999999998], [9.0, 12921.44], [10.0, 11493.714285714286], [11.0, 8886.91304347826], [12.0, 10562.227272727272], [13.0, 11073.70833333333], [14.0, 16611.70588235294], [15.0, 11613.318181818182], [16.0, 12623.473684210525], [17.0, 12648.736842105263], [18.0, 17234.473684210527], [19.0, 15198.947368421057], [20.0, 15480.241379310344], [21.0, 15637.92857142857], [22.0, 19348.277777777777], [23.0, 16511.739130434784], [24.0, 17651.833333333332], [25.0, 15312.791666666664], [26.0, 17467.499999999993], [27.0, 17548.964285714286], [28.0, 20156.0], [29.0, 18743.142857142855], [30.0, 23311.19642857142], [31.0, 23197.9], [32.0, 23883.909090909092], [33.0, 44628.0], [34.0, 25318.86956521739], [35.0, 25932.272727272728], [37.0, 27131.28], [36.0, 44592.0], [38.0, 26612.272727272728], [39.0, 48551.5], [40.0, 23300.0], [41.0, 29864.074074074077], [42.0, 30574.23076923077], [44.0, 32358.15], [45.0, 33047.45833333333], [47.0, 26016.0], [46.0, 44603.0], [48.0, 33103.42105263158], [49.0, 44584.0], [50.0, 36749.7037037037], [52.0, 43222.2], [53.0, 36841.428571428565], [54.0, 36829.14814814814], [57.0, 42154.28], [56.0, 44584.333333333336], [58.0, 40197.0], [59.0, 40146.20689655173], [60.0, 44575.716666666674], [1.0, 14032.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[31.738476011288803, 24333.30856067732]], "isOverall": false, "label": "Actors by name-Aggregated", "isController": false}, {"data": [[8.0, 175.0], [9.0, 151.0], [10.0, 150.66666666666666], [11.0, 271.5], [3.0, 131.33333333333334], [12.0, 371.0], [13.0, 116.0], [14.0, 277.0], [15.0, 120.0], [18.0, 149.66666666666666], [19.0, 212.5], [5.0, 95.0], [21.0, 133.5], [6.0, 114.0], [24.0, 925.5], [25.0, 270.6666666666667], [26.0, 186.0], [27.0, 126.0], [7.0, 213.0], [28.0, 143.0], [29.0, 508.5]], "isOverall": false, "label": "TitleBasics by params", "isController": false}, {"data": [[16.076923076923073, 234.1025641025641]], "isOverall": false, "label": "TitleBasics by params-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 60.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 23.716666666666665, "minX": 1.71819924E12, "maxY": 9168.55, "series": [{"data": [[1.7182005E12, 1009.4], [1.71820584E12, 1486.2], [1.7182062E12, 2316.0], [1.7182002E12, 444.8], [1.71819924E12, 963.1833333333333], [1.7182059E12, 1639.8166666666666], [1.71820026E12, 537.1333333333333], [1.71820608E12, 1580.7333333333333], [1.71820578E12, 185.81666666666666], [1.71820614E12, 1897.6333333333334], [1.71820632E12, 2209.2833333333333], [1.7182023E12, 2122.7833333333333], [1.71820356E12, 1197.8666666666666], [1.71820602E12, 1833.95], [1.71820224E12, 9168.55], [1.71820638E12, 2058.45], [1.71820236E12, 1204.7333333333333], [1.71820626E12, 1311.2], [1.71820362E12, 646.7333333333333], [1.71820596E12, 1641.1]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7182005E12, 135.18333333333334], [1.71820584E12, 157.9], [1.7182062E12, 249.2], [1.7182002E12, 63.88333333333333], [1.71819924E12, 129.95], [1.7182059E12, 192.55], [1.71820026E12, 68.71666666666667], [1.71820608E12, 173.61666666666667], [1.71820578E12, 23.716666666666665], [1.71820614E12, 207.73333333333332], [1.71820632E12, 233.56666666666666], [1.7182023E12, 77.28333333333333], [1.71820356E12, 158.75], [1.71820602E12, 209.98333333333332], [1.71820224E12, 395.98333333333335], [1.71820638E12, 230.36666666666667], [1.71820236E12, 25.716666666666665], [1.71820626E12, 140.0], [1.71820362E12, 78.55], [1.71820596E12, 189.2]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71820638E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 149.28571428571428, "minX": 1.71819924E12, "maxY": 44617.15555555556, "series": [{"data": [[1.7182023E12, 1272.25], [1.71820224E12, 2790.9428571428575], [1.71820236E12, 1467.3333333333333]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.7182023E12, 473.72727272727275], [1.71820224E12, 825.3863636363636], [1.71820236E12, 501.25]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.7182005E12, 14150.196078431376], [1.71820584E12, 6460.081967213116], [1.7182062E12, 35968.968750000015], [1.7182002E12, 11064.458333333332], [1.71819924E12, 15018.408163265307], [1.7182059E12, 10463.243243243243], [1.71820026E12, 17296.576923076926], [1.71820608E12, 25443.86567164179], [1.71820578E12, 5551.555555555556], [1.71820614E12, 30554.83750000001], [1.71820632E12, 44617.15555555556], [1.7182023E12, 5761.0], [1.71820356E12, 17269.783333333336], [1.71820602E12, 20337.567901234568], [1.71820224E12, 12336.529411764706], [1.71820638E12, 42647.460674157286], [1.71820236E12, 3816.142857142857], [1.71820626E12, 40832.666666666664], [1.71820362E12, 19152.000000000004], [1.71820596E12, 15344.931506849312]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.7182023E12, 149.28571428571428], [1.71820224E12, 253.26666666666665], [1.71820236E12, 243.5]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71820638E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 147.71428571428572, "minX": 1.71819924E12, "maxY": 44617.133333333324, "series": [{"data": [[1.7182023E12, 1272.25], [1.71820224E12, 2790.8571428571436], [1.71820236E12, 1219.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.7182023E12, 472.6363636363636], [1.71820224E12, 824.1818181818181], [1.71820236E12, 394.25]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.7182005E12, 14150.117647058823], [1.71820584E12, 6460.065573770491], [1.7182062E12, 35968.93749999999], [1.7182002E12, 11064.416666666666], [1.71819924E12, 15018.387755102043], [1.7182059E12, 10463.202702702705], [1.71820026E12, 17296.538461538457], [1.71820608E12, 25443.85074626865], [1.71820578E12, 5551.555555555556], [1.71820614E12, 30554.812499999996], [1.71820632E12, 44617.133333333324], [1.7182023E12, 5760.0], [1.71820356E12, 17269.783333333336], [1.71820602E12, 20337.567901234568], [1.71820224E12, 12336.382352941178], [1.71820638E12, 42647.415730337074], [1.71820236E12, 966.5714285714283], [1.71820626E12, 40832.648148148146], [1.71820362E12, 19151.96666666667], [1.71820596E12, 15344.89041095891]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.7182023E12, 147.71428571428572], [1.71820224E12, 250.83333333333337], [1.71820236E12, 243.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71820638E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.71819924E12, "maxY": 95.16666666666667, "series": [{"data": [[1.7182023E12, 21.75], [1.71820224E12, 8.142857142857144], [1.71820236E12, 0.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.7182023E12, 17.09090909090909], [1.71820224E12, 25.77272727272728], [1.71820236E12, 21.5]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.7182005E12, 39.27450980392158], [1.71820584E12, 6.918032786885246], [1.7182062E12, 23.77083333333333], [1.7182002E12, 95.16666666666667], [1.71819924E12, 59.51020408163262], [1.7182059E12, 37.432432432432435], [1.71820026E12, 51.0], [1.71820608E12, 16.2089552238806], [1.71820578E12, 16.444444444444443], [1.71820614E12, 16.2625], [1.71820632E12, 23.044444444444444], [1.7182023E12, 0.0], [1.71820356E12, 33.566666666666656], [1.71820602E12, 14.271604938271604], [1.71820224E12, 64.05882352941178], [1.71820638E12, 23.617977528089895], [1.71820236E12, 9.642857142857142], [1.71820626E12, 38.64814814814814], [1.71820362E12, 0.0], [1.71820596E12, 11.506849315068491]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.7182023E12, 6.142857142857142], [1.71820224E12, 9.066666666666666], [1.71820236E12, 0.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71820638E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 95.0, "minX": 1.71819924E12, "maxY": 71489.0, "series": [{"data": [[1.7182005E12, 20286.0], [1.71820584E12, 8109.0], [1.7182062E12, 47318.0], [1.7182002E12, 17230.0], [1.71819924E12, 22061.0], [1.7182059E12, 13654.0], [1.71820026E12, 19870.0], [1.71820608E12, 38677.0], [1.71820578E12, 5747.0], [1.71820614E12, 46459.0], [1.71820632E12, 71489.0], [1.7182023E12, 5761.0], [1.71820356E12, 27887.0], [1.71820602E12, 29713.0], [1.71820224E12, 16209.0], [1.71820638E12, 52499.0], [1.71820236E12, 6941.0], [1.71820626E12, 57595.0], [1.71820362E12, 25290.0], [1.71820596E12, 21840.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7182005E12, 5608.0], [1.71820584E12, 5701.0], [1.7182062E12, 26016.0], [1.7182002E12, 5659.0], [1.71819924E12, 6047.0], [1.7182059E12, 6868.0], [1.71820026E12, 13895.0], [1.71820608E12, 22908.0], [1.71820578E12, 5350.0], [1.71820614E12, 23300.0], [1.71820632E12, 35846.0], [1.7182023E12, 95.0], [1.71820356E12, 5735.0], [1.71820602E12, 16885.0], [1.71820224E12, 98.0], [1.71820638E12, 38388.0], [1.71820236E12, 116.0], [1.71820626E12, 31427.0], [1.71820362E12, 15132.0], [1.71820596E12, 12815.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7182005E12, 19390.6], [1.71820584E12, 7456.400000000001], [1.7182062E12, 37694.3], [1.7182002E12, 16796.0], [1.71819924E12, 20464.0], [1.7182059E12, 12589.5], [1.71820026E12, 19242.2], [1.71820608E12, 26430.6], [1.71820578E12, 5747.0], [1.71820614E12, 33733.3], [1.71820632E12, 44266.0], [1.7182023E12, 1374.6], [1.71820356E12, 23238.5], [1.71820602E12, 22319.2], [1.71820224E12, 13729.399999999994], [1.71820638E12, 44610.0], [1.71820236E12, 6941.0], [1.71820626E12, 43217.0], [1.71820362E12, 22007.3], [1.71820596E12, 17250.4]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7182005E12, 20286.0], [1.71820584E12, 8109.0], [1.7182062E12, 47318.0], [1.7182002E12, 17230.0], [1.71819924E12, 22061.0], [1.7182059E12, 13654.0], [1.71820026E12, 19870.0], [1.71820608E12, 38677.0], [1.71820578E12, 5747.0], [1.71820614E12, 46459.0], [1.71820632E12, 71489.0], [1.7182023E12, 5761.0], [1.71820356E12, 27887.0], [1.71820602E12, 29713.0], [1.71820224E12, 16058.960000000001], [1.71820638E12, 52499.0], [1.71820236E12, 6941.0], [1.71820626E12, 57595.0], [1.71820362E12, 25290.0], [1.71820596E12, 21840.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7182005E12, 15118.0], [1.71820584E12, 6272.0], [1.7182062E12, 36852.5], [1.7182002E12, 10545.0], [1.71819924E12, 16225.0], [1.7182059E12, 10860.5], [1.71820026E12, 17620.0], [1.71820608E12, 25537.0], [1.71820578E12, 5534.0], [1.71820614E12, 29413.0], [1.71820632E12, 43819.5], [1.7182023E12, 560.0], [1.71820356E12, 19287.5], [1.71820602E12, 19876.0], [1.71820224E12, 1367.0], [1.71820638E12, 44449.0], [1.71820236E12, 784.0], [1.71820626E12, 40201.5], [1.71820362E12, 21055.0], [1.71820596E12, 15072.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.7182005E12, 20050.0], [1.71820584E12, 7680.599999999999], [1.7182062E12, 40803.44999999999], [1.7182002E12, 17183.5], [1.71819924E12, 21742.5], [1.7182059E12, 13095.5], [1.71820026E12, 19695.35], [1.71820608E12, 29949.399999999994], [1.71820578E12, 5747.0], [1.71820614E12, 33751.55], [1.71820632E12, 51651.05], [1.7182023E12, 4023.3999999999905], [1.71820356E12, 26329.899999999998], [1.71820602E12, 23519.29999999999], [1.71820224E12, 15408.999999999998], [1.71820638E12, 44632.0], [1.71820236E12, 6941.0], [1.71820626E12, 47971.5], [1.71820362E12, 24068.449999999997], [1.71820596E12, 18236.1]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71820638E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2358.0, "minX": 1.0, "maxY": 44254.0, "series": [{"data": [[2.0, 9377.5], [8.0, 22074.0], [9.0, 16488.0], [10.0, 21788.0], [11.0, 28245.0], [12.0, 25542.0], [3.0, 10993.5], [13.0, 30163.0], [14.0, 34936.5], [1.0, 8362.0], [4.0, 2437.0], [18.0, 29422.5], [19.0, 36852.5], [5.0, 13093.5], [6.0, 12839.5], [25.0, 40863.0], [27.0, 37165.0], [7.0, 19047.0], [28.0, 39540.0], [29.0, 44254.0], [30.0, 43418.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[14.0, 2358.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 30.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 44254.0, "series": [{"data": [[2.0, 9377.5], [8.0, 22074.0], [9.0, 16488.0], [10.0, 21788.0], [11.0, 28245.0], [12.0, 25542.0], [3.0, 10993.5], [13.0, 30163.0], [14.0, 34936.5], [1.0, 8362.0], [4.0, 2437.0], [18.0, 29422.0], [19.0, 36852.5], [5.0, 13093.5], [6.0, 12839.5], [25.0, 40863.0], [27.0, 37165.0], [7.0, 19047.0], [28.0, 39540.0], [29.0, 44254.0], [30.0, 43418.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[14.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 30.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.2, "minX": 1.71819924E12, "maxY": 2.3833333333333333, "series": [{"data": [[1.7182005E12, 0.85], [1.71820584E12, 1.1333333333333333], [1.7182062E12, 1.7166666666666666], [1.7182002E12, 0.8333333333333334], [1.71819924E12, 0.8166666666666667], [1.7182059E12, 1.3666666666666667], [1.71820608E12, 1.2333333333333334], [1.71820578E12, 0.2], [1.71820614E12, 1.45], [1.71820632E12, 1.5], [1.7182023E12, 0.6], [1.71820356E12, 1.5], [1.71820602E12, 1.4666666666666666], [1.71820224E12, 2.3833333333333333], [1.71820638E12, 0.48333333333333334], [1.71820236E12, 0.23333333333333334], [1.71820626E12, 1.0], [1.71820596E12, 1.35]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71820638E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.15, "minX": 1.71819924E12, "maxY": 2.3833333333333333, "series": [{"data": [[1.7182005E12, 0.85], [1.71820584E12, 1.0166666666666666], [1.7182062E12, 1.6], [1.7182002E12, 0.4], [1.71819924E12, 0.8166666666666667], [1.7182059E12, 1.2333333333333334], [1.71820026E12, 0.43333333333333335], [1.71820608E12, 1.1166666666666667], [1.71820578E12, 0.15], [1.71820614E12, 1.3333333333333333], [1.71820632E12, 1.5], [1.7182023E12, 0.45], [1.71820356E12, 1.0], [1.71820602E12, 1.35], [1.71820224E12, 2.3833333333333333], [1.71820638E12, 1.4833333333333334], [1.71820236E12, 0.15], [1.71820626E12, 0.9], [1.71820362E12, 0.5], [1.71820596E12, 1.2166666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71820236E12, 0.23333333333333334]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71820638E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71819924E12, "maxY": 1.6, "series": [{"data": [[1.7182023E12, 0.18333333333333332], [1.71820224E12, 0.7333333333333333], [1.71820236E12, 0.05]], "isOverall": false, "label": "TitleBasics by primary_title-success", "isController": false}, {"data": [[1.71820236E12, 0.016666666666666666]], "isOverall": false, "label": "TitleBasics by primary_title-failure", "isController": false}, {"data": [[1.71820236E12, 0.2]], "isOverall": false, "label": "Actors by name-failure", "isController": false}, {"data": [[1.7182005E12, 0.85], [1.71820584E12, 1.0166666666666666], [1.7182062E12, 1.6], [1.7182002E12, 0.4], [1.71819924E12, 0.8166666666666667], [1.7182059E12, 1.2333333333333334], [1.71820026E12, 0.43333333333333335], [1.71820608E12, 1.1166666666666667], [1.71820578E12, 0.15], [1.71820614E12, 1.3333333333333333], [1.71820632E12, 1.5], [1.7182023E12, 0.016666666666666666], [1.71820356E12, 1.0], [1.71820602E12, 1.35], [1.71820224E12, 0.5666666666666667], [1.71820638E12, 1.4833333333333334], [1.71820236E12, 0.03333333333333333], [1.71820626E12, 0.9], [1.71820362E12, 0.5], [1.71820596E12, 1.2166666666666666]], "isOverall": false, "label": "Actors by name-success", "isController": false}, {"data": [[1.71820236E12, 0.016666666666666666]], "isOverall": false, "label": "Directors by name-failure", "isController": false}, {"data": [[1.7182023E12, 0.13333333333333333], [1.71820224E12, 0.5833333333333334], [1.71820236E12, 0.03333333333333333]], "isOverall": false, "label": "Directors by name-success", "isController": false}, {"data": [[1.7182023E12, 0.11666666666666667], [1.71820224E12, 0.5], [1.71820236E12, 0.03333333333333333]], "isOverall": false, "label": "TitleBasics by params-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71820638E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.15, "minX": 1.71819924E12, "maxY": 2.3833333333333333, "series": [{"data": [[1.7182005E12, 0.85], [1.71820584E12, 1.0166666666666666], [1.7182062E12, 1.6], [1.7182002E12, 0.4], [1.71819924E12, 0.8166666666666667], [1.7182059E12, 1.2333333333333334], [1.71820026E12, 0.43333333333333335], [1.71820608E12, 1.1166666666666667], [1.71820578E12, 0.15], [1.71820614E12, 1.3333333333333333], [1.71820632E12, 1.5], [1.7182023E12, 0.45], [1.71820356E12, 1.0], [1.71820602E12, 1.35], [1.71820224E12, 2.3833333333333333], [1.71820638E12, 1.4833333333333334], [1.71820236E12, 0.15], [1.71820626E12, 0.9], [1.71820362E12, 0.5], [1.71820596E12, 1.2166666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.71820236E12, 0.23333333333333334]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71820638E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}


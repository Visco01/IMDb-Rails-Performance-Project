/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 40585.0, "series": [{"data": [[0.0, 1186.0], [0.1, 1194.0], [0.2, 1213.0], [0.3, 1216.0], [0.4, 1228.0], [0.5, 1237.0], [0.6, 1312.0], [0.7, 1337.0], [0.8, 1376.0], [0.9, 1521.0], [1.0, 1581.0], [1.1, 1620.0], [1.2, 2179.0], [1.3, 2195.0], [1.4, 2382.0], [1.5, 2605.0], [1.6, 2615.0], [1.7, 2635.0], [1.8, 2817.0], [1.9, 2821.0], [2.0, 2936.0], [2.1, 2994.0], [2.2, 3014.0], [2.3, 3047.0], [2.4, 3087.0], [2.5, 3104.0], [2.6, 3126.0], [2.7, 3186.0], [2.8, 3189.0], [2.9, 3211.0], [3.0, 3272.0], [3.1, 3276.0], [3.2, 3310.0], [3.3, 3343.0], [3.4, 3398.0], [3.5, 3412.0], [3.6, 3459.0], [3.7, 3488.0], [3.8, 3507.0], [3.9, 3511.0], [4.0, 3613.0], [4.1, 3616.0], [4.2, 3616.0], [4.3, 3633.0], [4.4, 3652.0], [4.5, 3654.0], [4.6, 3695.0], [4.7, 3706.0], [4.8, 3706.0], [4.9, 3763.0], [5.0, 3770.0], [5.1, 3779.0], [5.2, 3827.0], [5.3, 3853.0], [5.4, 3885.0], [5.5, 3893.0], [5.6, 3913.0], [5.7, 3914.0], [5.8, 3924.0], [5.9, 3934.0], [6.0, 3939.0], [6.1, 3945.0], [6.2, 3976.0], [6.3, 4014.0], [6.4, 4014.0], [6.5, 4015.0], [6.6, 4030.0], [6.7, 4053.0], [6.8, 4072.0], [6.9, 4090.0], [7.0, 4094.0], [7.1, 4098.0], [7.2, 4106.0], [7.3, 4107.0], [7.4, 4113.0], [7.5, 4115.0], [7.6, 4119.0], [7.7, 4120.0], [7.8, 4121.0], [7.9, 4122.0], [8.0, 4123.0], [8.1, 4131.0], [8.2, 4135.0], [8.3, 4138.0], [8.4, 4139.0], [8.5, 4149.0], [8.6, 4160.0], [8.7, 4175.0], [8.8, 4179.0], [8.9, 4219.0], [9.0, 4223.0], [9.1, 4232.0], [9.2, 4239.0], [9.3, 4266.0], [9.4, 4275.0], [9.5, 4286.0], [9.6, 4288.0], [9.7, 4292.0], [9.8, 4297.0], [9.9, 4297.0], [10.0, 4298.0], [10.1, 4312.0], [10.2, 4314.0], [10.3, 4330.0], [10.4, 4333.0], [10.5, 4337.0], [10.6, 4371.0], [10.7, 4375.0], [10.8, 4382.0], [10.9, 4395.0], [11.0, 4404.0], [11.1, 4405.0], [11.2, 4422.0], [11.3, 4422.0], [11.4, 4428.0], [11.5, 4442.0], [11.6, 4448.0], [11.7, 4457.0], [11.8, 4461.0], [11.9, 4471.0], [12.0, 4477.0], [12.1, 4485.0], [12.2, 4500.0], [12.3, 4506.0], [12.4, 4510.0], [12.5, 4515.0], [12.6, 4524.0], [12.7, 4529.0], [12.8, 4534.0], [12.9, 4538.0], [13.0, 4543.0], [13.1, 4544.0], [13.2, 4550.0], [13.3, 4550.0], [13.4, 4552.0], [13.5, 4557.0], [13.6, 4577.0], [13.7, 4579.0], [13.8, 4583.0], [13.9, 4590.0], [14.0, 4601.0], [14.1, 4609.0], [14.2, 4612.0], [14.3, 4622.0], [14.4, 4623.0], [14.5, 4627.0], [14.6, 4629.0], [14.7, 4632.0], [14.8, 4633.0], [14.9, 4639.0], [15.0, 4640.0], [15.1, 4641.0], [15.2, 4642.0], [15.3, 4645.0], [15.4, 4646.0], [15.5, 4648.0], [15.6, 4649.0], [15.7, 4650.0], [15.8, 4658.0], [15.9, 4672.0], [16.0, 4674.0], [16.1, 4688.0], [16.2, 4693.0], [16.3, 4696.0], [16.4, 4698.0], [16.5, 4699.0], [16.6, 4700.0], [16.7, 4701.0], [16.8, 4705.0], [16.9, 4708.0], [17.0, 4710.0], [17.1, 4711.0], [17.2, 4718.0], [17.3, 4719.0], [17.4, 4721.0], [17.5, 4722.0], [17.6, 4724.0], [17.7, 4724.0], [17.8, 4727.0], [17.9, 4728.0], [18.0, 4731.0], [18.1, 4733.0], [18.2, 4736.0], [18.3, 4737.0], [18.4, 4738.0], [18.5, 4738.0], [18.6, 4745.0], [18.7, 4747.0], [18.8, 4747.0], [18.9, 4749.0], [19.0, 4750.0], [19.1, 4750.0], [19.2, 4753.0], [19.3, 4753.0], [19.4, 4756.0], [19.5, 4764.0], [19.6, 4767.0], [19.7, 4769.0], [19.8, 4781.0], [19.9, 4783.0], [20.0, 4791.0], [20.1, 4792.0], [20.2, 4798.0], [20.3, 4801.0], [20.4, 4801.0], [20.5, 4812.0], [20.6, 4815.0], [20.7, 4816.0], [20.8, 4822.0], [20.9, 4823.0], [21.0, 4824.0], [21.1, 4826.0], [21.2, 4827.0], [21.3, 4831.0], [21.4, 4834.0], [21.5, 4837.0], [21.6, 4837.0], [21.7, 4838.0], [21.8, 4841.0], [21.9, 4842.0], [22.0, 4850.0], [22.1, 4851.0], [22.2, 4851.0], [22.3, 4854.0], [22.4, 4856.0], [22.5, 4857.0], [22.6, 4859.0], [22.7, 4863.0], [22.8, 4868.0], [22.9, 4873.0], [23.0, 4877.0], [23.1, 4879.0], [23.2, 4887.0], [23.3, 4887.0], [23.4, 4888.0], [23.5, 4892.0], [23.6, 4894.0], [23.7, 4895.0], [23.8, 4898.0], [23.9, 4902.0], [24.0, 4905.0], [24.1, 4906.0], [24.2, 4917.0], [24.3, 4928.0], [24.4, 4932.0], [24.5, 4932.0], [24.6, 4938.0], [24.7, 4940.0], [24.8, 4940.0], [24.9, 4942.0], [25.0, 4944.0], [25.1, 4946.0], [25.2, 4948.0], [25.3, 4948.0], [25.4, 4948.0], [25.5, 4953.0], [25.6, 4957.0], [25.7, 4957.0], [25.8, 4958.0], [25.9, 4959.0], [26.0, 4965.0], [26.1, 4966.0], [26.2, 4969.0], [26.3, 4970.0], [26.4, 4972.0], [26.5, 4975.0], [26.6, 4985.0], [26.7, 4989.0], [26.8, 4995.0], [26.9, 4997.0], [27.0, 4998.0], [27.1, 5005.0], [27.2, 5011.0], [27.3, 5013.0], [27.4, 5013.0], [27.5, 5016.0], [27.6, 5017.0], [27.7, 5018.0], [27.8, 5025.0], [27.9, 5026.0], [28.0, 5030.0], [28.1, 5031.0], [28.2, 5032.0], [28.3, 5045.0], [28.4, 5045.0], [28.5, 5047.0], [28.6, 5049.0], [28.7, 5050.0], [28.8, 5051.0], [28.9, 5052.0], [29.0, 5060.0], [29.1, 5062.0], [29.2, 5063.0], [29.3, 5064.0], [29.4, 5074.0], [29.5, 5076.0], [29.6, 5078.0], [29.7, 5081.0], [29.8, 5089.0], [29.9, 5092.0], [30.0, 5099.0], [30.1, 5100.0], [30.2, 5101.0], [30.3, 5111.0], [30.4, 5112.0], [30.5, 5113.0], [30.6, 5115.0], [30.7, 5116.0], [30.8, 5123.0], [30.9, 5125.0], [31.0, 5127.0], [31.1, 5129.0], [31.2, 5131.0], [31.3, 5131.0], [31.4, 5134.0], [31.5, 5137.0], [31.6, 5138.0], [31.7, 5141.0], [31.8, 5144.0], [31.9, 5145.0], [32.0, 5146.0], [32.1, 5147.0], [32.2, 5148.0], [32.3, 5149.0], [32.4, 5149.0], [32.5, 5150.0], [32.6, 5151.0], [32.7, 5152.0], [32.8, 5154.0], [32.9, 5154.0], [33.0, 5156.0], [33.1, 5156.0], [33.2, 5168.0], [33.3, 5172.0], [33.4, 5175.0], [33.5, 5175.0], [33.6, 5181.0], [33.7, 5182.0], [33.8, 5191.0], [33.9, 5192.0], [34.0, 5198.0], [34.1, 5198.0], [34.2, 5199.0], [34.3, 5202.0], [34.4, 5205.0], [34.5, 5206.0], [34.6, 5214.0], [34.7, 5216.0], [34.8, 5217.0], [34.9, 5220.0], [35.0, 5220.0], [35.1, 5223.0], [35.2, 5232.0], [35.3, 5235.0], [35.4, 5236.0], [35.5, 5239.0], [35.6, 5239.0], [35.7, 5240.0], [35.8, 5247.0], [35.9, 5249.0], [36.0, 5251.0], [36.1, 5253.0], [36.2, 5254.0], [36.3, 5254.0], [36.4, 5255.0], [36.5, 5258.0], [36.6, 5261.0], [36.7, 5262.0], [36.8, 5267.0], [36.9, 5269.0], [37.0, 5271.0], [37.1, 5274.0], [37.2, 5283.0], [37.3, 5286.0], [37.4, 5286.0], [37.5, 5287.0], [37.6, 5288.0], [37.7, 5288.0], [37.8, 5290.0], [37.9, 5291.0], [38.0, 5292.0], [38.1, 5293.0], [38.2, 5293.0], [38.3, 5295.0], [38.4, 5300.0], [38.5, 5300.0], [38.6, 5303.0], [38.7, 5311.0], [38.8, 5313.0], [38.9, 5318.0], [39.0, 5325.0], [39.1, 5325.0], [39.2, 5330.0], [39.3, 5331.0], [39.4, 5333.0], [39.5, 5336.0], [39.6, 5337.0], [39.7, 5340.0], [39.8, 5344.0], [39.9, 5350.0], [40.0, 5351.0], [40.1, 5351.0], [40.2, 5352.0], [40.3, 5353.0], [40.4, 5354.0], [40.5, 5356.0], [40.6, 5358.0], [40.7, 5359.0], [40.8, 5360.0], [40.9, 5360.0], [41.0, 5362.0], [41.1, 5363.0], [41.2, 5365.0], [41.3, 5365.0], [41.4, 5366.0], [41.5, 5370.0], [41.6, 5372.0], [41.7, 5374.0], [41.8, 5377.0], [41.9, 5379.0], [42.0, 5386.0], [42.1, 5388.0], [42.2, 5389.0], [42.3, 5394.0], [42.4, 5396.0], [42.5, 5401.0], [42.6, 5405.0], [42.7, 5406.0], [42.8, 5406.0], [42.9, 5411.0], [43.0, 5412.0], [43.1, 5413.0], [43.2, 5418.0], [43.3, 5419.0], [43.4, 5419.0], [43.5, 5425.0], [43.6, 5427.0], [43.7, 5428.0], [43.8, 5433.0], [43.9, 5435.0], [44.0, 5436.0], [44.1, 5443.0], [44.2, 5443.0], [44.3, 5443.0], [44.4, 5445.0], [44.5, 5446.0], [44.6, 5451.0], [44.7, 5451.0], [44.8, 5452.0], [44.9, 5457.0], [45.0, 5458.0], [45.1, 5459.0], [45.2, 5462.0], [45.3, 5462.0], [45.4, 5462.0], [45.5, 5463.0], [45.6, 5464.0], [45.7, 5464.0], [45.8, 5466.0], [45.9, 5468.0], [46.0, 5469.0], [46.1, 5471.0], [46.2, 5471.0], [46.3, 5475.0], [46.4, 5477.0], [46.5, 5481.0], [46.6, 5484.0], [46.7, 5485.0], [46.8, 5486.0], [46.9, 5488.0], [47.0, 5489.0], [47.1, 5489.0], [47.2, 5490.0], [47.3, 5490.0], [47.4, 5492.0], [47.5, 5494.0], [47.6, 5497.0], [47.7, 5497.0], [47.8, 5497.0], [47.9, 5498.0], [48.0, 5499.0], [48.1, 5501.0], [48.2, 5503.0], [48.3, 5505.0], [48.4, 5505.0], [48.5, 5508.0], [48.6, 5510.0], [48.7, 5511.0], [48.8, 5512.0], [48.9, 5516.0], [49.0, 5516.0], [49.1, 5522.0], [49.2, 5526.0], [49.3, 5526.0], [49.4, 5530.0], [49.5, 5532.0], [49.6, 5533.0], [49.7, 5535.0], [49.8, 5536.0], [49.9, 5538.0], [50.0, 5539.0], [50.1, 5543.0], [50.2, 5544.0], [50.3, 5546.0], [50.4, 5546.0], [50.5, 5550.0], [50.6, 5551.0], [50.7, 5552.0], [50.8, 5554.0], [50.9, 5556.0], [51.0, 5557.0], [51.1, 5557.0], [51.2, 5559.0], [51.3, 5561.0], [51.4, 5563.0], [51.5, 5564.0], [51.6, 5565.0], [51.7, 5567.0], [51.8, 5574.0], [51.9, 5574.0], [52.0, 5578.0], [52.1, 5583.0], [52.2, 5583.0], [52.3, 5586.0], [52.4, 5587.0], [52.5, 5588.0], [52.6, 5591.0], [52.7, 5591.0], [52.8, 5592.0], [52.9, 5594.0], [53.0, 5595.0], [53.1, 5596.0], [53.2, 5601.0], [53.3, 5603.0], [53.4, 5604.0], [53.5, 5614.0], [53.6, 5614.0], [53.7, 5615.0], [53.8, 5620.0], [53.9, 5622.0], [54.0, 5623.0], [54.1, 5625.0], [54.2, 5628.0], [54.3, 5633.0], [54.4, 5634.0], [54.5, 5634.0], [54.6, 5645.0], [54.7, 5645.0], [54.8, 5647.0], [54.9, 5650.0], [55.0, 5653.0], [55.1, 5653.0], [55.2, 5660.0], [55.3, 5660.0], [55.4, 5661.0], [55.5, 5667.0], [55.6, 5667.0], [55.7, 5667.0], [55.8, 5669.0], [55.9, 5674.0], [56.0, 5675.0], [56.1, 5678.0], [56.2, 5682.0], [56.3, 5683.0], [56.4, 5691.0], [56.5, 5693.0], [56.6, 5697.0], [56.7, 5697.0], [56.8, 5702.0], [56.9, 5704.0], [57.0, 5705.0], [57.1, 5705.0], [57.2, 5706.0], [57.3, 5707.0], [57.4, 5710.0], [57.5, 5712.0], [57.6, 5713.0], [57.7, 5715.0], [57.8, 5718.0], [57.9, 5719.0], [58.0, 5719.0], [58.1, 5720.0], [58.2, 5722.0], [58.3, 5726.0], [58.4, 5726.0], [58.5, 5727.0], [58.6, 5730.0], [58.7, 5734.0], [58.8, 5735.0], [58.9, 5744.0], [59.0, 5745.0], [59.1, 5746.0], [59.2, 5751.0], [59.3, 5753.0], [59.4, 5754.0], [59.5, 5756.0], [59.6, 5756.0], [59.7, 5758.0], [59.8, 5760.0], [59.9, 5764.0], [60.0, 5764.0], [60.1, 5765.0], [60.2, 5765.0], [60.3, 5766.0], [60.4, 5768.0], [60.5, 5771.0], [60.6, 5774.0], [60.7, 5776.0], [60.8, 5777.0], [60.9, 5779.0], [61.0, 5779.0], [61.1, 5780.0], [61.2, 5783.0], [61.3, 5783.0], [61.4, 5790.0], [61.5, 5793.0], [61.6, 5794.0], [61.7, 5794.0], [61.8, 5797.0], [61.9, 5798.0], [62.0, 5801.0], [62.1, 5801.0], [62.2, 5804.0], [62.3, 5806.0], [62.4, 5807.0], [62.5, 5808.0], [62.6, 5809.0], [62.7, 5809.0], [62.8, 5812.0], [62.9, 5816.0], [63.0, 5818.0], [63.1, 5820.0], [63.2, 5822.0], [63.3, 5822.0], [63.4, 5824.0], [63.5, 5828.0], [63.6, 5828.0], [63.7, 5832.0], [63.8, 5833.0], [63.9, 5836.0], [64.0, 5837.0], [64.1, 5839.0], [64.2, 5843.0], [64.3, 5849.0], [64.4, 5850.0], [64.5, 5852.0], [64.6, 5852.0], [64.7, 5855.0], [64.8, 5856.0], [64.9, 5859.0], [65.0, 5860.0], [65.1, 5860.0], [65.2, 5862.0], [65.3, 5862.0], [65.4, 5862.0], [65.5, 5863.0], [65.6, 5865.0], [65.7, 5865.0], [65.8, 5870.0], [65.9, 5873.0], [66.0, 5874.0], [66.1, 5880.0], [66.2, 5882.0], [66.3, 5886.0], [66.4, 5887.0], [66.5, 5888.0], [66.6, 5890.0], [66.7, 5891.0], [66.8, 5891.0], [66.9, 5895.0], [67.0, 5897.0], [67.1, 5898.0], [67.2, 5900.0], [67.3, 5902.0], [67.4, 5902.0], [67.5, 5905.0], [67.6, 5908.0], [67.7, 5912.0], [67.8, 5915.0], [67.9, 5915.0], [68.0, 5918.0], [68.1, 5927.0], [68.2, 5931.0], [68.3, 5936.0], [68.4, 5939.0], [68.5, 5940.0], [68.6, 5952.0], [68.7, 5954.0], [68.8, 5955.0], [68.9, 5957.0], [69.0, 5960.0], [69.1, 5961.0], [69.2, 5962.0], [69.3, 5963.0], [69.4, 5964.0], [69.5, 5967.0], [69.6, 5969.0], [69.7, 5970.0], [69.8, 5971.0], [69.9, 5973.0], [70.0, 5973.0], [70.1, 5978.0], [70.2, 5978.0], [70.3, 5980.0], [70.4, 5981.0], [70.5, 5981.0], [70.6, 5983.0], [70.7, 5985.0], [70.8, 5986.0], [70.9, 5988.0], [71.0, 5988.0], [71.1, 5990.0], [71.2, 5992.0], [71.3, 5992.0], [71.4, 5994.0], [71.5, 5997.0], [71.6, 6000.0], [71.7, 6002.0], [71.8, 6004.0], [71.9, 6004.0], [72.0, 6005.0], [72.1, 6011.0], [72.2, 6012.0], [72.3, 6016.0], [72.4, 6018.0], [72.5, 6020.0], [72.6, 6025.0], [72.7, 6025.0], [72.8, 6026.0], [72.9, 6027.0], [73.0, 6033.0], [73.1, 6036.0], [73.2, 6042.0], [73.3, 6049.0], [73.4, 6051.0], [73.5, 6055.0], [73.6, 6055.0], [73.7, 6057.0], [73.8, 6058.0], [73.9, 6062.0], [74.0, 6064.0], [74.1, 6065.0], [74.2, 6066.0], [74.3, 6067.0], [74.4, 6068.0], [74.5, 6069.0], [74.6, 6073.0], [74.7, 6074.0], [74.8, 6075.0], [74.9, 6076.0], [75.0, 6081.0], [75.1, 6082.0], [75.2, 6086.0], [75.3, 6087.0], [75.4, 6091.0], [75.5, 6093.0], [75.6, 6096.0], [75.7, 6096.0], [75.8, 6097.0], [75.9, 6099.0], [76.0, 6100.0], [76.1, 6102.0], [76.2, 6102.0], [76.3, 6107.0], [76.4, 6108.0], [76.5, 6109.0], [76.6, 6113.0], [76.7, 6115.0], [76.8, 6116.0], [76.9, 6119.0], [77.0, 6120.0], [77.1, 6121.0], [77.2, 6130.0], [77.3, 6130.0], [77.4, 6130.0], [77.5, 6138.0], [77.6, 6140.0], [77.7, 6140.0], [77.8, 6144.0], [77.9, 6145.0], [78.0, 6149.0], [78.1, 6152.0], [78.2, 6153.0], [78.3, 6155.0], [78.4, 6156.0], [78.5, 6156.0], [78.6, 6157.0], [78.7, 6163.0], [78.8, 6164.0], [78.9, 6165.0], [79.0, 6165.0], [79.1, 6166.0], [79.2, 6168.0], [79.3, 6169.0], [79.4, 6170.0], [79.5, 6172.0], [79.6, 6174.0], [79.7, 6176.0], [79.8, 6179.0], [79.9, 6180.0], [80.0, 6184.0], [80.1, 6186.0], [80.2, 6186.0], [80.3, 6187.0], [80.4, 6189.0], [80.5, 6192.0], [80.6, 6193.0], [80.7, 6195.0], [80.8, 6198.0], [80.9, 6199.0], [81.0, 6200.0], [81.1, 6201.0], [81.2, 6208.0], [81.3, 6218.0], [81.4, 6218.0], [81.5, 6221.0], [81.6, 6227.0], [81.7, 6233.0], [81.8, 6237.0], [81.9, 6238.0], [82.0, 6247.0], [82.1, 6251.0], [82.2, 6251.0], [82.3, 6254.0], [82.4, 6256.0], [82.5, 6258.0], [82.6, 6260.0], [82.7, 6262.0], [82.8, 6262.0], [82.9, 6268.0], [83.0, 6268.0], [83.1, 6268.0], [83.2, 6269.0], [83.3, 6269.0], [83.4, 6269.0], [83.5, 6272.0], [83.6, 6272.0], [83.7, 6272.0], [83.8, 6276.0], [83.9, 6276.0], [84.0, 6278.0], [84.1, 6281.0], [84.2, 6284.0], [84.3, 6285.0], [84.4, 6290.0], [84.5, 6292.0], [84.6, 6307.0], [84.7, 6309.0], [84.8, 6312.0], [84.9, 6318.0], [85.0, 6320.0], [85.1, 6322.0], [85.2, 6327.0], [85.3, 6334.0], [85.4, 6338.0], [85.5, 6349.0], [85.6, 6350.0], [85.7, 6356.0], [85.8, 6368.0], [85.9, 6369.0], [86.0, 6373.0], [86.1, 6374.0], [86.2, 6375.0], [86.3, 6376.0], [86.4, 6377.0], [86.5, 6379.0], [86.6, 6382.0], [86.7, 6382.0], [86.8, 6382.0], [86.9, 6386.0], [87.0, 6387.0], [87.1, 6388.0], [87.2, 6390.0], [87.3, 6391.0], [87.4, 6396.0], [87.5, 6402.0], [87.6, 6402.0], [87.7, 6403.0], [87.8, 6407.0], [87.9, 6410.0], [88.0, 6416.0], [88.1, 6418.0], [88.2, 6427.0], [88.3, 6430.0], [88.4, 6435.0], [88.5, 6439.0], [88.6, 6441.0], [88.7, 6442.0], [88.8, 6442.0], [88.9, 6452.0], [89.0, 6455.0], [89.1, 6456.0], [89.2, 6459.0], [89.3, 6460.0], [89.4, 6461.0], [89.5, 6465.0], [89.6, 6469.0], [89.7, 6471.0], [89.8, 6474.0], [89.9, 6474.0], [90.0, 6477.0], [90.1, 6481.0], [90.2, 6482.0], [90.3, 6483.0], [90.4, 6486.0], [90.5, 6486.0], [90.6, 6488.0], [90.7, 6488.0], [90.8, 6489.0], [90.9, 6491.0], [91.0, 6494.0], [91.1, 6494.0], [91.2, 6500.0], [91.3, 6501.0], [91.4, 6503.0], [91.5, 6503.0], [91.6, 6503.0], [91.7, 6503.0], [91.8, 6505.0], [91.9, 6512.0], [92.0, 6516.0], [92.1, 6524.0], [92.2, 6524.0], [92.3, 6528.0], [92.4, 6529.0], [92.5, 6538.0], [92.6, 6545.0], [92.7, 6556.0], [92.8, 6560.0], [92.9, 6562.0], [93.0, 6563.0], [93.1, 6572.0], [93.2, 6585.0], [93.3, 6592.0], [93.4, 6601.0], [93.5, 6609.0], [93.6, 6610.0], [93.7, 6610.0], [93.8, 6629.0], [93.9, 6632.0], [94.0, 6633.0], [94.1, 6643.0], [94.2, 6657.0], [94.3, 6665.0], [94.4, 6667.0], [94.5, 6668.0], [94.6, 6680.0], [94.7, 6681.0], [94.8, 6683.0], [94.9, 6685.0], [95.0, 6690.0], [95.1, 6692.0], [95.2, 6698.0], [95.3, 6703.0], [95.4, 6708.0], [95.5, 6716.0], [95.6, 6719.0], [95.7, 6723.0], [95.8, 6728.0], [95.9, 6730.0], [96.0, 6731.0], [96.1, 6733.0], [96.2, 6739.0], [96.3, 6744.0], [96.4, 6747.0], [96.5, 6754.0], [96.6, 6769.0], [96.7, 6772.0], [96.8, 6779.0], [96.9, 6783.0], [97.0, 6783.0], [97.1, 6788.0], [97.2, 6791.0], [97.3, 6792.0], [97.4, 6807.0], [97.5, 6809.0], [97.6, 6813.0], [97.7, 6819.0], [97.8, 6824.0], [97.9, 6829.0], [98.0, 6835.0], [98.1, 6840.0], [98.2, 6857.0], [98.3, 6869.0], [98.4, 6884.0], [98.5, 6889.0], [98.6, 6896.0], [98.7, 6903.0], [98.8, 6910.0], [98.9, 6933.0], [99.0, 6959.0], [99.1, 6972.0], [99.2, 6984.0], [99.3, 6984.0], [99.4, 6990.0], [99.5, 6996.0], [99.6, 6998.0], [99.7, 7052.0], [99.8, 7230.0], [99.9, 7331.0], [100.0, 7579.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[0.0, 98.0], [0.1, 110.0], [0.2, 128.0], [0.3, 144.0], [0.4, 146.0], [0.5, 161.0], [0.6, 170.0], [0.7, 178.0], [0.8, 187.0], [0.9, 191.0], [1.0, 201.0], [1.1, 202.0], [1.2, 207.0], [1.3, 210.0], [1.4, 218.0], [1.5, 224.0], [1.6, 228.0], [1.7, 231.0], [1.8, 234.0], [1.9, 236.0], [2.0, 244.0], [2.1, 249.0], [2.2, 255.0], [2.3, 267.0], [2.4, 271.0], [2.5, 274.0], [2.6, 277.0], [2.7, 279.0], [2.8, 288.0], [2.9, 288.0], [3.0, 290.0], [3.1, 298.0], [3.2, 300.0], [3.3, 303.0], [3.4, 308.0], [3.5, 311.0], [3.6, 311.0], [3.7, 318.0], [3.8, 321.0], [3.9, 324.0], [4.0, 325.0], [4.1, 327.0], [4.2, 330.0], [4.3, 333.0], [4.4, 339.0], [4.5, 342.0], [4.6, 343.0], [4.7, 352.0], [4.8, 357.0], [4.9, 368.0], [5.0, 374.0], [5.1, 377.0], [5.2, 378.0], [5.3, 381.0], [5.4, 382.0], [5.5, 384.0], [5.6, 385.0], [5.7, 387.0], [5.8, 388.0], [5.9, 389.0], [6.0, 394.0], [6.1, 395.0], [6.2, 397.0], [6.3, 397.0], [6.4, 401.0], [6.5, 404.0], [6.6, 404.0], [6.7, 406.0], [6.8, 411.0], [6.9, 417.0], [7.0, 419.0], [7.1, 421.0], [7.2, 424.0], [7.3, 433.0], [7.4, 437.0], [7.5, 440.0], [7.6, 444.0], [7.7, 445.0], [7.8, 450.0], [7.9, 456.0], [8.0, 460.0], [8.1, 462.0], [8.2, 471.0], [8.3, 478.0], [8.4, 481.0], [8.5, 484.0], [8.6, 487.0], [8.7, 490.0], [8.8, 492.0], [8.9, 495.0], [9.0, 495.0], [9.1, 498.0], [9.2, 505.0], [9.3, 506.0], [9.4, 507.0], [9.5, 512.0], [9.6, 517.0], [9.7, 522.0], [9.8, 528.0], [9.9, 530.0], [10.0, 531.0], [10.1, 534.0], [10.2, 536.0], [10.3, 538.0], [10.4, 546.0], [10.5, 552.0], [10.6, 553.0], [10.7, 558.0], [10.8, 561.0], [10.9, 564.0], [11.0, 569.0], [11.1, 578.0], [11.2, 581.0], [11.3, 584.0], [11.4, 585.0], [11.5, 588.0], [11.6, 591.0], [11.7, 595.0], [11.8, 596.0], [11.9, 598.0], [12.0, 599.0], [12.1, 605.0], [12.2, 609.0], [12.3, 613.0], [12.4, 616.0], [12.5, 624.0], [12.6, 630.0], [12.7, 632.0], [12.8, 637.0], [12.9, 645.0], [13.0, 653.0], [13.1, 660.0], [13.2, 663.0], [13.3, 669.0], [13.4, 676.0], [13.5, 683.0], [13.6, 686.0], [13.7, 692.0], [13.8, 694.0], [13.9, 700.0], [14.0, 702.0], [14.1, 704.0], [14.2, 709.0], [14.3, 710.0], [14.4, 713.0], [14.5, 715.0], [14.6, 720.0], [14.7, 720.0], [14.8, 723.0], [14.9, 724.0], [15.0, 725.0], [15.1, 728.0], [15.2, 729.0], [15.3, 729.0], [15.4, 733.0], [15.5, 739.0], [15.6, 745.0], [15.7, 750.0], [15.8, 754.0], [15.9, 759.0], [16.0, 762.0], [16.1, 763.0], [16.2, 766.0], [16.3, 771.0], [16.4, 778.0], [16.5, 782.0], [16.6, 785.0], [16.7, 786.0], [16.8, 788.0], [16.9, 793.0], [17.0, 794.0], [17.1, 797.0], [17.2, 801.0], [17.3, 805.0], [17.4, 806.0], [17.5, 810.0], [17.6, 815.0], [17.7, 817.0], [17.8, 819.0], [17.9, 820.0], [18.0, 820.0], [18.1, 823.0], [18.2, 827.0], [18.3, 830.0], [18.4, 832.0], [18.5, 843.0], [18.6, 851.0], [18.7, 854.0], [18.8, 861.0], [18.9, 873.0], [19.0, 875.0], [19.1, 882.0], [19.2, 886.0], [19.3, 890.0], [19.4, 892.0], [19.5, 895.0], [19.6, 910.0], [19.7, 910.0], [19.8, 914.0], [19.9, 914.0], [20.0, 921.0], [20.1, 925.0], [20.2, 928.0], [20.3, 932.0], [20.4, 941.0], [20.5, 950.0], [20.6, 952.0], [20.7, 953.0], [20.8, 955.0], [20.9, 955.0], [21.0, 959.0], [21.1, 962.0], [21.2, 974.0], [21.3, 978.0], [21.4, 986.0], [21.5, 991.0], [21.6, 993.0], [21.7, 996.0], [21.8, 998.0], [21.9, 1002.0], [22.0, 1005.0], [22.1, 1007.0], [22.2, 1012.0], [22.3, 1014.0], [22.4, 1020.0], [22.5, 1036.0], [22.6, 1048.0], [22.7, 1058.0], [22.8, 1062.0], [22.9, 1064.0], [23.0, 1071.0], [23.1, 1083.0], [23.2, 1092.0], [23.3, 1094.0], [23.4, 1097.0], [23.5, 1097.0], [23.6, 1100.0], [23.7, 1106.0], [23.8, 1115.0], [23.9, 1116.0], [24.0, 1118.0], [24.1, 1122.0], [24.2, 1131.0], [24.3, 1133.0], [24.4, 1140.0], [24.5, 1150.0], [24.6, 1158.0], [24.7, 1164.0], [24.8, 1167.0], [24.9, 1168.0], [25.0, 1175.0], [25.1, 1183.0], [25.2, 1192.0], [25.3, 1200.0], [25.4, 1204.0], [25.5, 1206.0], [25.6, 1208.0], [25.7, 1209.0], [25.8, 1216.0], [25.9, 1218.0], [26.0, 1225.0], [26.1, 1228.0], [26.2, 1239.0], [26.3, 1251.0], [26.4, 1256.0], [26.5, 1262.0], [26.6, 1274.0], [26.7, 1285.0], [26.8, 1290.0], [26.9, 1296.0], [27.0, 1299.0], [27.1, 1309.0], [27.2, 1310.0], [27.3, 1326.0], [27.4, 1333.0], [27.5, 1346.0], [27.6, 1346.0], [27.7, 1353.0], [27.8, 1366.0], [27.9, 1376.0], [28.0, 1377.0], [28.1, 1381.0], [28.2, 1393.0], [28.3, 1397.0], [28.4, 1405.0], [28.5, 1417.0], [28.6, 1424.0], [28.7, 1436.0], [28.8, 1442.0], [28.9, 1446.0], [29.0, 1450.0], [29.1, 1453.0], [29.2, 1459.0], [29.3, 1470.0], [29.4, 1492.0], [29.5, 1497.0], [29.6, 1508.0], [29.7, 1512.0], [29.8, 1516.0], [29.9, 1517.0], [30.0, 1521.0], [30.1, 1530.0], [30.2, 1534.0], [30.3, 1539.0], [30.4, 1549.0], [30.5, 1555.0], [30.6, 1558.0], [30.7, 1565.0], [30.8, 1567.0], [30.9, 1573.0], [31.0, 1591.0], [31.1, 1593.0], [31.2, 1597.0], [31.3, 1602.0], [31.4, 1610.0], [31.5, 1612.0], [31.6, 1612.0], [31.7, 1614.0], [31.8, 1616.0], [31.9, 1617.0], [32.0, 1621.0], [32.1, 1624.0], [32.2, 1636.0], [32.3, 1645.0], [32.4, 1649.0], [32.5, 1661.0], [32.6, 1669.0], [32.7, 1671.0], [32.8, 1678.0], [32.9, 1682.0], [33.0, 1684.0], [33.1, 1693.0], [33.2, 1698.0], [33.3, 1701.0], [33.4, 1701.0], [33.5, 1706.0], [33.6, 1714.0], [33.7, 1721.0], [33.8, 1726.0], [33.9, 1755.0], [34.0, 1760.0], [34.1, 1764.0], [34.2, 1772.0], [34.3, 1774.0], [34.4, 1783.0], [34.5, 1785.0], [34.6, 1794.0], [34.7, 1802.0], [34.8, 1805.0], [34.9, 1810.0], [35.0, 1812.0], [35.1, 1822.0], [35.2, 1824.0], [35.3, 1828.0], [35.4, 1837.0], [35.5, 1855.0], [35.6, 1860.0], [35.7, 1863.0], [35.8, 1865.0], [35.9, 1879.0], [36.0, 1881.0], [36.1, 1883.0], [36.2, 1886.0], [36.3, 1887.0], [36.4, 1901.0], [36.5, 1902.0], [36.6, 1906.0], [36.7, 1914.0], [36.8, 1927.0], [36.9, 1933.0], [37.0, 1934.0], [37.1, 1958.0], [37.2, 1967.0], [37.3, 1975.0], [37.4, 1983.0], [37.5, 1984.0], [37.6, 1984.0], [37.7, 1986.0], [37.8, 1990.0], [37.9, 1990.0], [38.0, 1993.0], [38.1, 2006.0], [38.2, 2010.0], [38.3, 2018.0], [38.4, 2024.0], [38.5, 2033.0], [38.6, 2038.0], [38.7, 2044.0], [38.8, 2055.0], [38.9, 2061.0], [39.0, 2067.0], [39.1, 2071.0], [39.2, 2078.0], [39.3, 2082.0], [39.4, 2090.0], [39.5, 2097.0], [39.6, 2102.0], [39.7, 2105.0], [39.8, 2112.0], [39.9, 2116.0], [40.0, 2120.0], [40.1, 2125.0], [40.2, 2128.0], [40.3, 2134.0], [40.4, 2141.0], [40.5, 2153.0], [40.6, 2156.0], [40.7, 2162.0], [40.8, 2166.0], [40.9, 2171.0], [41.0, 2174.0], [41.1, 2180.0], [41.2, 2186.0], [41.3, 2187.0], [41.4, 2189.0], [41.5, 2190.0], [41.6, 2191.0], [41.7, 2193.0], [41.8, 2194.0], [41.9, 2196.0], [42.0, 2198.0], [42.1, 2202.0], [42.2, 2202.0], [42.3, 2207.0], [42.4, 2208.0], [42.5, 2212.0], [42.6, 2214.0], [42.7, 2214.0], [42.8, 2216.0], [42.9, 2220.0], [43.0, 2224.0], [43.1, 2231.0], [43.2, 2237.0], [43.3, 2243.0], [43.4, 2246.0], [43.5, 2250.0], [43.6, 2259.0], [43.7, 2261.0], [43.8, 2267.0], [43.9, 2271.0], [44.0, 2273.0], [44.1, 2275.0], [44.2, 2277.0], [44.3, 2278.0], [44.4, 2281.0], [44.5, 2282.0], [44.6, 2285.0], [44.7, 2288.0], [44.8, 2289.0], [44.9, 2291.0], [45.0, 2291.0], [45.1, 2292.0], [45.2, 2292.0], [45.3, 2294.0], [45.4, 2297.0], [45.5, 2300.0], [45.6, 2304.0], [45.7, 2307.0], [45.8, 2307.0], [45.9, 2308.0], [46.0, 2310.0], [46.1, 2316.0], [46.2, 2319.0], [46.3, 2321.0], [46.4, 2329.0], [46.5, 2333.0], [46.6, 2333.0], [46.7, 2338.0], [46.8, 2341.0], [46.9, 2346.0], [47.0, 2347.0], [47.1, 2354.0], [47.2, 2355.0], [47.3, 2360.0], [47.4, 2370.0], [47.5, 2372.0], [47.6, 2375.0], [47.7, 2376.0], [47.8, 2379.0], [47.9, 2382.0], [48.0, 2384.0], [48.1, 2386.0], [48.2, 2387.0], [48.3, 2389.0], [48.4, 2390.0], [48.5, 2391.0], [48.6, 2392.0], [48.7, 2393.0], [48.8, 2395.0], [48.9, 2396.0], [49.0, 2397.0], [49.1, 2401.0], [49.2, 2402.0], [49.3, 2403.0], [49.4, 2405.0], [49.5, 2406.0], [49.6, 2410.0], [49.7, 2411.0], [49.8, 2413.0], [49.9, 2416.0], [50.0, 2419.0], [50.1, 2421.0], [50.2, 2423.0], [50.3, 2425.0], [50.4, 2433.0], [50.5, 2440.0], [50.6, 2443.0], [50.7, 2445.0], [50.8, 2451.0], [50.9, 2453.0], [51.0, 2457.0], [51.1, 2459.0], [51.2, 2462.0], [51.3, 2468.0], [51.4, 2469.0], [51.5, 2471.0], [51.6, 2474.0], [51.7, 2478.0], [51.8, 2479.0], [51.9, 2484.0], [52.0, 2486.0], [52.1, 2486.0], [52.2, 2492.0], [52.3, 2492.0], [52.4, 2493.0], [52.5, 2494.0], [52.6, 2497.0], [52.7, 2497.0], [52.8, 2498.0], [52.9, 2499.0], [53.0, 2502.0], [53.1, 2502.0], [53.2, 2503.0], [53.3, 2505.0], [53.4, 2508.0], [53.5, 2513.0], [53.6, 2516.0], [53.7, 2521.0], [53.8, 2523.0], [53.9, 2527.0], [54.0, 2528.0], [54.1, 2534.0], [54.2, 2535.0], [54.3, 2544.0], [54.4, 2546.0], [54.5, 2554.0], [54.6, 2556.0], [54.7, 2559.0], [54.8, 2562.0], [54.9, 2569.0], [55.0, 2571.0], [55.1, 2574.0], [55.2, 2575.0], [55.3, 2577.0], [55.4, 2578.0], [55.5, 2580.0], [55.6, 2582.0], [55.7, 2582.0], [55.8, 2583.0], [55.9, 2584.0], [56.0, 2586.0], [56.1, 2588.0], [56.2, 2589.0], [56.3, 2593.0], [56.4, 2597.0], [56.5, 2598.0], [56.6, 2603.0], [56.7, 2605.0], [56.8, 2606.0], [56.9, 2609.0], [57.0, 2612.0], [57.1, 2614.0], [57.2, 2621.0], [57.3, 2622.0], [57.4, 2623.0], [57.5, 2626.0], [57.6, 2636.0], [57.7, 2638.0], [57.8, 2645.0], [57.9, 2645.0], [58.0, 2656.0], [58.1, 2661.0], [58.2, 2669.0], [58.3, 2673.0], [58.4, 2674.0], [58.5, 2679.0], [58.6, 2681.0], [58.7, 2683.0], [58.8, 2685.0], [58.9, 2687.0], [59.0, 2690.0], [59.1, 2693.0], [59.2, 2695.0], [59.3, 2697.0], [59.4, 2699.0], [59.5, 2700.0], [59.6, 2703.0], [59.7, 2707.0], [59.8, 2708.0], [59.9, 2708.0], [60.0, 2710.0], [60.1, 2713.0], [60.2, 2717.0], [60.3, 2719.0], [60.4, 2726.0], [60.5, 2730.0], [60.6, 2733.0], [60.7, 2735.0], [60.8, 2744.0], [60.9, 2748.0], [61.0, 2756.0], [61.1, 2759.0], [61.2, 2767.0], [61.3, 2775.0], [61.4, 2777.0], [61.5, 2779.0], [61.6, 2788.0], [61.7, 2796.0], [61.8, 2798.0], [61.9, 2800.0], [62.0, 2807.0], [62.1, 2811.0], [62.2, 2811.0], [62.3, 2824.0], [62.4, 2825.0], [62.5, 2827.0], [62.6, 2843.0], [62.7, 2844.0], [62.8, 2863.0], [62.9, 2866.0], [63.0, 2875.0], [63.1, 2878.0], [63.2, 2879.0], [63.3, 2883.0], [63.4, 2888.0], [63.5, 2893.0], [63.6, 2900.0], [63.7, 2905.0], [63.8, 2908.0], [63.9, 2910.0], [64.0, 2917.0], [64.1, 2942.0], [64.2, 2951.0], [64.3, 2959.0], [64.4, 2967.0], [64.5, 2980.0], [64.6, 2998.0], [64.7, 3002.0], [64.8, 3004.0], [64.9, 3012.0], [65.0, 3016.0], [65.1, 3017.0], [65.2, 3026.0], [65.3, 3029.0], [65.4, 3037.0], [65.5, 3071.0], [65.6, 3084.0], [65.7, 3088.0], [65.8, 3092.0], [65.9, 3093.0], [66.0, 3101.0], [66.1, 3102.0], [66.2, 3107.0], [66.3, 3115.0], [66.4, 3142.0], [66.5, 3145.0], [66.6, 3145.0], [66.7, 3154.0], [66.8, 3169.0], [66.9, 3181.0], [67.0, 3185.0], [67.1, 3192.0], [67.2, 3194.0], [67.3, 3198.0], [67.4, 3205.0], [67.5, 3205.0], [67.6, 3218.0], [67.7, 3227.0], [67.8, 3237.0], [67.9, 3252.0], [68.0, 3266.0], [68.1, 3277.0], [68.2, 3287.0], [68.3, 3291.0], [68.4, 3300.0], [68.5, 3302.0], [68.6, 3304.0], [68.7, 3314.0], [68.8, 3317.0], [68.9, 3321.0], [69.0, 3328.0], [69.1, 3356.0], [69.2, 3358.0], [69.3, 3366.0], [69.4, 3371.0], [69.5, 3380.0], [69.6, 3386.0], [69.7, 3387.0], [69.8, 3395.0], [69.9, 3396.0], [70.0, 3399.0], [70.1, 3409.0], [70.2, 3413.0], [70.3, 3417.0], [70.4, 3443.0], [70.5, 3463.0], [70.6, 3477.0], [70.7, 3482.0], [70.8, 3489.0], [70.9, 3493.0], [71.0, 3499.0], [71.1, 3515.0], [71.2, 3521.0], [71.3, 3523.0], [71.4, 3532.0], [71.5, 3533.0], [71.6, 3548.0], [71.7, 3553.0], [71.8, 3563.0], [71.9, 3577.0], [72.0, 3581.0], [72.1, 3597.0], [72.2, 3599.0], [72.3, 3605.0], [72.4, 3615.0], [72.5, 3624.0], [72.6, 3631.0], [72.7, 3634.0], [72.8, 3678.0], [72.9, 3681.0], [73.0, 3687.0], [73.1, 3690.0], [73.2, 3703.0], [73.3, 3709.0], [73.4, 3720.0], [73.5, 3733.0], [73.6, 3766.0], [73.7, 3779.0], [73.8, 3784.0], [73.9, 3792.0], [74.0, 3796.0], [74.1, 3814.0], [74.2, 3815.0], [74.3, 3826.0], [74.4, 3832.0], [74.5, 3844.0], [74.6, 3878.0], [74.7, 3887.0], [74.8, 3899.0], [74.9, 3903.0], [75.0, 3912.0], [75.1, 3932.0], [75.2, 3957.0], [75.3, 3975.0], [75.4, 3982.0], [75.5, 4000.0], [75.6, 4016.0], [75.7, 4020.0], [75.8, 4024.0], [75.9, 4036.0], [76.0, 4059.0], [76.1, 4082.0], [76.2, 4092.0], [76.3, 4114.0], [76.4, 4132.0], [76.5, 4141.0], [76.6, 4164.0], [76.7, 4169.0], [76.8, 4188.0], [76.9, 4203.0], [77.0, 4213.0], [77.1, 4219.0], [77.2, 4233.0], [77.3, 4259.0], [77.4, 4302.0], [77.5, 4306.0], [77.6, 4313.0], [77.7, 4325.0], [77.8, 4338.0], [77.9, 4362.0], [78.0, 4377.0], [78.1, 4382.0], [78.2, 4411.0], [78.3, 4420.0], [78.4, 4428.0], [78.5, 4470.0], [78.6, 4473.0], [78.7, 4500.0], [78.8, 4519.0], [78.9, 4528.0], [79.0, 4547.0], [79.1, 4592.0], [79.2, 4603.0], [79.3, 4635.0], [79.4, 4643.0], [79.5, 4646.0], [79.6, 4677.0], [79.7, 4684.0], [79.8, 4703.0], [79.9, 4719.0], [80.0, 4781.0], [80.1, 4812.0], [80.2, 4817.0], [80.3, 4827.0], [80.4, 4830.0], [80.5, 4870.0], [80.6, 4885.0], [80.7, 4890.0], [80.8, 4918.0], [80.9, 4937.0], [81.0, 4972.0], [81.1, 4976.0], [81.2, 4993.0], [81.3, 4999.0], [81.4, 5032.0], [81.5, 5039.0], [81.6, 5043.0], [81.7, 5073.0], [81.8, 5085.0], [81.9, 5094.0], [82.0, 5111.0], [82.1, 5115.0], [82.2, 5125.0], [82.3, 5181.0], [82.4, 5197.0], [82.5, 5207.0], [82.6, 5229.0], [82.7, 5256.0], [82.8, 5290.0], [82.9, 5296.0], [83.0, 5304.0], [83.1, 5312.0], [83.2, 5329.0], [83.3, 5342.0], [83.4, 5364.0], [83.5, 5376.0], [83.6, 5382.0], [83.7, 5398.0], [83.8, 5410.0], [83.9, 5416.0], [84.0, 5431.0], [84.1, 5460.0], [84.2, 5494.0], [84.3, 5503.0], [84.4, 5525.0], [84.5, 5529.0], [84.6, 5575.0], [84.7, 5583.0], [84.8, 5592.0], [84.9, 5599.0], [85.0, 5618.0], [85.1, 5624.0], [85.2, 5634.0], [85.3, 5652.0], [85.4, 5671.0], [85.5, 5683.0], [85.6, 5686.0], [85.7, 5698.0], [85.8, 5705.0], [85.9, 5721.0], [86.0, 5749.0], [86.1, 5757.0], [86.2, 5784.0], [86.3, 5797.0], [86.4, 5805.0], [86.5, 5819.0], [86.6, 5825.0], [86.7, 5839.0], [86.8, 5842.0], [86.9, 5865.0], [87.0, 5870.0], [87.1, 5892.0], [87.2, 5902.0], [87.3, 5905.0], [87.4, 5913.0], [87.5, 5919.0], [87.6, 5952.0], [87.7, 5957.0], [87.8, 5968.0], [87.9, 5980.0], [88.0, 5984.0], [88.1, 5994.0], [88.2, 6022.0], [88.3, 6025.0], [88.4, 6038.0], [88.5, 6047.0], [88.6, 6061.0], [88.7, 6102.0], [88.8, 6106.0], [88.9, 6112.0], [89.0, 6118.0], [89.1, 6162.0], [89.2, 6173.0], [89.3, 6178.0], [89.4, 6187.0], [89.5, 6196.0], [89.6, 6202.0], [89.7, 6205.0], [89.8, 6211.0], [89.9, 6214.0], [90.0, 6220.0], [90.1, 6224.0], [90.2, 6236.0], [90.3, 6253.0], [90.4, 6257.0], [90.5, 6262.0], [90.6, 6272.0], [90.7, 6276.0], [90.8, 6282.0], [90.9, 6285.0], [91.0, 6296.0], [91.1, 6308.0], [91.2, 6313.0], [91.3, 6340.0], [91.4, 6356.0], [91.5, 6362.0], [91.6, 6374.0], [91.7, 6380.0], [91.8, 6390.0], [91.9, 6414.0], [92.0, 6421.0], [92.1, 6423.0], [92.2, 6430.0], [92.3, 6470.0], [92.4, 6479.0], [92.5, 6498.0], [92.6, 6512.0], [92.7, 6515.0], [92.8, 6524.0], [92.9, 6528.0], [93.0, 6538.0], [93.1, 6555.0], [93.2, 6575.0], [93.3, 6581.0], [93.4, 6588.0], [93.5, 6592.0], [93.6, 6593.0], [93.7, 6601.0], [93.8, 6616.0], [93.9, 6618.0], [94.0, 6626.0], [94.1, 6650.0], [94.2, 6676.0], [94.3, 6685.0], [94.4, 6694.0], [94.5, 6703.0], [94.6, 6711.0], [94.7, 6723.0], [94.8, 6731.0], [94.9, 6734.0], [95.0, 6760.0], [95.1, 6770.0], [95.2, 6773.0], [95.3, 6783.0], [95.4, 6796.0], [95.5, 6805.0], [95.6, 6814.0], [95.7, 6819.0], [95.8, 6828.0], [95.9, 6832.0], [96.0, 6851.0], [96.1, 6861.0], [96.2, 6870.0], [96.3, 6874.0], [96.4, 6883.0], [96.5, 6892.0], [96.6, 6897.0], [96.7, 6902.0], [96.8, 6914.0], [96.9, 6933.0], [97.0, 6935.0], [97.1, 6966.0], [97.2, 6974.0], [97.3, 6998.0], [97.4, 7008.0], [97.5, 7024.0], [97.6, 7069.0], [97.7, 7082.0], [97.8, 7116.0], [97.9, 7137.0], [98.0, 7162.0], [98.1, 7177.0], [98.2, 7187.0], [98.3, 7198.0], [98.4, 7222.0], [98.5, 7236.0], [98.6, 7257.0], [98.7, 7285.0], [98.8, 7287.0], [98.9, 7303.0], [99.0, 7315.0], [99.1, 7389.0], [99.2, 7403.0], [99.3, 7424.0], [99.4, 7446.0], [99.5, 7490.0], [99.6, 7582.0], [99.7, 7612.0], [99.8, 7666.0], [99.9, 7766.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[0.0, 10858.0], [0.1, 10858.0], [0.2, 10858.0], [0.3, 10858.0], [0.4, 10858.0], [0.5, 13943.0], [0.6, 13943.0], [0.7, 13943.0], [0.8, 13943.0], [0.9, 14370.0], [1.0, 14370.0], [1.1, 14370.0], [1.2, 14370.0], [1.3, 15154.0], [1.4, 15154.0], [1.5, 15154.0], [1.6, 15154.0], [1.7, 15154.0], [1.8, 19571.0], [1.9, 19571.0], [2.0, 19571.0], [2.1, 19571.0], [2.2, 21088.0], [2.3, 21088.0], [2.4, 21088.0], [2.5, 21088.0], [2.6, 22976.0], [2.7, 22976.0], [2.8, 22976.0], [2.9, 22976.0], [3.0, 23878.0], [3.1, 23878.0], [3.2, 23878.0], [3.3, 23878.0], [3.4, 23878.0], [3.5, 24316.0], [3.6, 24316.0], [3.7, 24316.0], [3.8, 24316.0], [3.9, 25238.0], [4.0, 25238.0], [4.1, 25238.0], [4.2, 25238.0], [4.3, 27492.0], [4.4, 27492.0], [4.5, 27492.0], [4.6, 27492.0], [4.7, 30632.0], [4.8, 30632.0], [4.9, 30632.0], [5.0, 30632.0], [5.1, 30632.0], [5.2, 31115.0], [5.3, 31115.0], [5.4, 31115.0], [5.5, 31115.0], [5.6, 32177.0], [5.7, 32177.0], [5.8, 32177.0], [5.9, 32177.0], [6.0, 32633.0], [6.1, 32633.0], [6.2, 32633.0], [6.3, 32633.0], [6.4, 32823.0], [6.5, 32823.0], [6.6, 32823.0], [6.7, 32823.0], [6.8, 32823.0], [6.9, 33717.0], [7.0, 33717.0], [7.1, 33717.0], [7.2, 33717.0], [7.3, 34640.0], [7.4, 34640.0], [7.5, 34640.0], [7.6, 34640.0], [7.7, 35027.0], [7.8, 35027.0], [7.9, 35027.0], [8.0, 35027.0], [8.1, 35300.0], [8.2, 35300.0], [8.3, 35300.0], [8.4, 35300.0], [8.5, 35300.0], [8.6, 35425.0], [8.7, 35425.0], [8.8, 35425.0], [8.9, 35425.0], [9.0, 35872.0], [9.1, 35872.0], [9.2, 35872.0], [9.3, 35872.0], [9.4, 35886.0], [9.5, 35886.0], [9.6, 35886.0], [9.7, 35886.0], [9.8, 36083.0], [9.9, 36083.0], [10.0, 36083.0], [10.1, 36083.0], [10.2, 36083.0], [10.3, 36087.0], [10.4, 36087.0], [10.5, 36087.0], [10.6, 36087.0], [10.7, 36128.0], [10.8, 36128.0], [10.9, 36128.0], [11.0, 36128.0], [11.1, 36155.0], [11.2, 36155.0], [11.3, 36155.0], [11.4, 36155.0], [11.5, 36164.0], [11.6, 36164.0], [11.7, 36164.0], [11.8, 36164.0], [11.9, 36164.0], [12.0, 36296.0], [12.1, 36296.0], [12.2, 36296.0], [12.3, 36296.0], [12.4, 36363.0], [12.5, 36363.0], [12.6, 36363.0], [12.7, 36363.0], [12.8, 36383.0], [12.9, 36383.0], [13.0, 36383.0], [13.1, 36383.0], [13.2, 36399.0], [13.3, 36399.0], [13.4, 36399.0], [13.5, 36399.0], [13.6, 36399.0], [13.7, 36403.0], [13.8, 36403.0], [13.9, 36403.0], [14.0, 36403.0], [14.1, 36477.0], [14.2, 36477.0], [14.3, 36477.0], [14.4, 36477.0], [14.5, 36539.0], [14.6, 36539.0], [14.7, 36539.0], [14.8, 36539.0], [14.9, 36606.0], [15.0, 36606.0], [15.1, 36606.0], [15.2, 36606.0], [15.3, 36606.0], [15.4, 36615.0], [15.5, 36615.0], [15.6, 36615.0], [15.7, 36615.0], [15.8, 36666.0], [15.9, 36666.0], [16.0, 36666.0], [16.1, 36666.0], [16.2, 36854.0], [16.3, 36854.0], [16.4, 36854.0], [16.5, 36854.0], [16.6, 36872.0], [16.7, 36872.0], [16.8, 36872.0], [16.9, 36872.0], [17.0, 36872.0], [17.1, 36873.0], [17.2, 36873.0], [17.3, 36873.0], [17.4, 36873.0], [17.5, 36909.0], [17.6, 36909.0], [17.7, 36909.0], [17.8, 36909.0], [17.9, 36915.0], [18.0, 36915.0], [18.1, 36915.0], [18.2, 36915.0], [18.3, 36921.0], [18.4, 36921.0], [18.5, 36921.0], [18.6, 36921.0], [18.7, 36921.0], [18.8, 36951.0], [18.9, 36951.0], [19.0, 36951.0], [19.1, 36951.0], [19.2, 36980.0], [19.3, 36980.0], [19.4, 36980.0], [19.5, 36980.0], [19.6, 36994.0], [19.7, 36994.0], [19.8, 36994.0], [19.9, 36994.0], [20.0, 37022.0], [20.1, 37022.0], [20.2, 37022.0], [20.3, 37022.0], [20.4, 37022.0], [20.5, 37029.0], [20.6, 37029.0], [20.7, 37029.0], [20.8, 37029.0], [20.9, 37073.0], [21.0, 37073.0], [21.1, 37073.0], [21.2, 37073.0], [21.3, 37084.0], [21.4, 37084.0], [21.5, 37084.0], [21.6, 37084.0], [21.7, 37084.0], [21.8, 37093.0], [21.9, 37093.0], [22.0, 37093.0], [22.1, 37093.0], [22.2, 37100.0], [22.3, 37100.0], [22.4, 37100.0], [22.5, 37100.0], [22.6, 37111.0], [22.7, 37111.0], [22.8, 37111.0], [22.9, 37111.0], [23.0, 37139.0], [23.1, 37139.0], [23.2, 37139.0], [23.3, 37139.0], [23.4, 37139.0], [23.5, 37173.0], [23.6, 37173.0], [23.7, 37173.0], [23.8, 37173.0], [23.9, 37187.0], [24.0, 37187.0], [24.1, 37187.0], [24.2, 37187.0], [24.3, 37211.0], [24.4, 37211.0], [24.5, 37211.0], [24.6, 37211.0], [24.7, 37236.0], [24.8, 37236.0], [24.9, 37236.0], [25.0, 37236.0], [25.1, 37236.0], [25.2, 37254.0], [25.3, 37254.0], [25.4, 37254.0], [25.5, 37254.0], [25.6, 37301.0], [25.7, 37301.0], [25.8, 37301.0], [25.9, 37301.0], [26.0, 37301.0], [26.1, 37301.0], [26.2, 37301.0], [26.3, 37301.0], [26.4, 37310.0], [26.5, 37310.0], [26.6, 37310.0], [26.7, 37310.0], [26.8, 37310.0], [26.9, 37311.0], [27.0, 37311.0], [27.1, 37311.0], [27.2, 37311.0], [27.3, 37320.0], [27.4, 37320.0], [27.5, 37320.0], [27.6, 37320.0], [27.7, 37339.0], [27.8, 37339.0], [27.9, 37339.0], [28.0, 37339.0], [28.1, 37384.0], [28.2, 37384.0], [28.3, 37384.0], [28.4, 37384.0], [28.5, 37384.0], [28.6, 37392.0], [28.7, 37392.0], [28.8, 37392.0], [28.9, 37392.0], [29.0, 37400.0], [29.1, 37400.0], [29.2, 37400.0], [29.3, 37400.0], [29.4, 37414.0], [29.5, 37414.0], [29.6, 37414.0], [29.7, 37414.0], [29.8, 37479.0], [29.9, 37479.0], [30.0, 37479.0], [30.1, 37479.0], [30.2, 37479.0], [30.3, 37499.0], [30.4, 37499.0], [30.5, 37499.0], [30.6, 37499.0], [30.7, 37504.0], [30.8, 37504.0], [30.9, 37504.0], [31.0, 37504.0], [31.1, 37517.0], [31.2, 37517.0], [31.3, 37517.0], [31.4, 37517.0], [31.5, 37532.0], [31.6, 37532.0], [31.7, 37532.0], [31.8, 37532.0], [31.9, 37532.0], [32.0, 37596.0], [32.1, 37596.0], [32.2, 37596.0], [32.3, 37596.0], [32.4, 37609.0], [32.5, 37609.0], [32.6, 37609.0], [32.7, 37609.0], [32.8, 37648.0], [32.9, 37648.0], [33.0, 37648.0], [33.1, 37648.0], [33.2, 37700.0], [33.3, 37700.0], [33.4, 37700.0], [33.5, 37700.0], [33.6, 37700.0], [33.7, 37704.0], [33.8, 37704.0], [33.9, 37704.0], [34.0, 37704.0], [34.1, 37720.0], [34.2, 37720.0], [34.3, 37720.0], [34.4, 37720.0], [34.5, 37733.0], [34.6, 37733.0], [34.7, 37733.0], [34.8, 37733.0], [34.9, 37737.0], [35.0, 37737.0], [35.1, 37737.0], [35.2, 37737.0], [35.3, 37737.0], [35.4, 37778.0], [35.5, 37778.0], [35.6, 37778.0], [35.7, 37778.0], [35.8, 37809.0], [35.9, 37809.0], [36.0, 37809.0], [36.1, 37809.0], [36.2, 37848.0], [36.3, 37848.0], [36.4, 37848.0], [36.5, 37848.0], [36.6, 37899.0], [36.7, 37899.0], [36.8, 37899.0], [36.9, 37899.0], [37.0, 37899.0], [37.1, 37904.0], [37.2, 37904.0], [37.3, 37904.0], [37.4, 37904.0], [37.5, 37909.0], [37.6, 37909.0], [37.7, 37909.0], [37.8, 37909.0], [37.9, 37911.0], [38.0, 37911.0], [38.1, 37911.0], [38.2, 37911.0], [38.3, 37917.0], [38.4, 37917.0], [38.5, 37917.0], [38.6, 37917.0], [38.7, 37917.0], [38.8, 37922.0], [38.9, 37922.0], [39.0, 37922.0], [39.1, 37922.0], [39.2, 37927.0], [39.3, 37927.0], [39.4, 37927.0], [39.5, 37927.0], [39.6, 37928.0], [39.7, 37928.0], [39.8, 37928.0], [39.9, 37928.0], [40.0, 37928.0], [40.1, 37956.0], [40.2, 37956.0], [40.3, 37956.0], [40.4, 37956.0], [40.5, 38033.0], [40.6, 38033.0], [40.7, 38033.0], [40.8, 38033.0], [40.9, 38081.0], [41.0, 38081.0], [41.1, 38081.0], [41.2, 38081.0], [41.3, 38081.0], [41.4, 38081.0], [41.5, 38081.0], [41.6, 38081.0], [41.7, 38081.0], [41.8, 38083.0], [41.9, 38083.0], [42.0, 38083.0], [42.1, 38083.0], [42.2, 38087.0], [42.3, 38087.0], [42.4, 38087.0], [42.5, 38087.0], [42.6, 38090.0], [42.7, 38090.0], [42.8, 38090.0], [42.9, 38090.0], [43.0, 38093.0], [43.1, 38093.0], [43.2, 38093.0], [43.3, 38093.0], [43.4, 38093.0], [43.5, 38099.0], [43.6, 38099.0], [43.7, 38099.0], [43.8, 38099.0], [43.9, 38112.0], [44.0, 38112.0], [44.1, 38112.0], [44.2, 38112.0], [44.3, 38114.0], [44.4, 38114.0], [44.5, 38114.0], [44.6, 38114.0], [44.7, 38116.0], [44.8, 38116.0], [44.9, 38116.0], [45.0, 38116.0], [45.1, 38116.0], [45.2, 38118.0], [45.3, 38118.0], [45.4, 38118.0], [45.5, 38118.0], [45.6, 38123.0], [45.7, 38123.0], [45.8, 38123.0], [45.9, 38123.0], [46.0, 38135.0], [46.1, 38135.0], [46.2, 38135.0], [46.3, 38135.0], [46.4, 38170.0], [46.5, 38170.0], [46.6, 38170.0], [46.7, 38170.0], [46.8, 38170.0], [46.9, 38182.0], [47.0, 38182.0], [47.1, 38182.0], [47.2, 38182.0], [47.3, 38191.0], [47.4, 38191.0], [47.5, 38191.0], [47.6, 38191.0], [47.7, 38212.0], [47.8, 38212.0], [47.9, 38212.0], [48.0, 38212.0], [48.1, 38216.0], [48.2, 38216.0], [48.3, 38216.0], [48.4, 38216.0], [48.5, 38216.0], [48.6, 38219.0], [48.7, 38219.0], [48.8, 38219.0], [48.9, 38219.0], [49.0, 38221.0], [49.1, 38221.0], [49.2, 38221.0], [49.3, 38221.0], [49.4, 38233.0], [49.5, 38233.0], [49.6, 38233.0], [49.7, 38233.0], [49.8, 38269.0], [49.9, 38269.0], [50.0, 38269.0], [50.1, 38269.0], [50.2, 38269.0], [50.3, 38272.0], [50.4, 38272.0], [50.5, 38272.0], [50.6, 38272.0], [50.7, 38292.0], [50.8, 38292.0], [50.9, 38292.0], [51.0, 38292.0], [51.1, 38301.0], [51.2, 38301.0], [51.3, 38301.0], [51.4, 38301.0], [51.5, 38302.0], [51.6, 38302.0], [51.7, 38302.0], [51.8, 38302.0], [51.9, 38302.0], [52.0, 38321.0], [52.1, 38321.0], [52.2, 38321.0], [52.3, 38321.0], [52.4, 38323.0], [52.5, 38323.0], [52.6, 38323.0], [52.7, 38323.0], [52.8, 38326.0], [52.9, 38326.0], [53.0, 38326.0], [53.1, 38326.0], [53.2, 38329.0], [53.3, 38329.0], [53.4, 38329.0], [53.5, 38329.0], [53.6, 38329.0], [53.7, 38330.0], [53.8, 38330.0], [53.9, 38330.0], [54.0, 38330.0], [54.1, 38335.0], [54.2, 38335.0], [54.3, 38335.0], [54.4, 38335.0], [54.5, 38338.0], [54.6, 38338.0], [54.7, 38338.0], [54.8, 38338.0], [54.9, 38341.0], [55.0, 38341.0], [55.1, 38341.0], [55.2, 38341.0], [55.3, 38341.0], [55.4, 38345.0], [55.5, 38345.0], [55.6, 38345.0], [55.7, 38345.0], [55.8, 38347.0], [55.9, 38347.0], [56.0, 38347.0], [56.1, 38347.0], [56.2, 38359.0], [56.3, 38359.0], [56.4, 38359.0], [56.5, 38359.0], [56.6, 38377.0], [56.7, 38377.0], [56.8, 38377.0], [56.9, 38377.0], [57.0, 38377.0], [57.1, 38385.0], [57.2, 38385.0], [57.3, 38385.0], [57.4, 38385.0], [57.5, 38404.0], [57.6, 38404.0], [57.7, 38404.0], [57.8, 38404.0], [57.9, 38411.0], [58.0, 38411.0], [58.1, 38411.0], [58.2, 38411.0], [58.3, 38422.0], [58.4, 38422.0], [58.5, 38422.0], [58.6, 38422.0], [58.7, 38422.0], [58.8, 38425.0], [58.9, 38425.0], [59.0, 38425.0], [59.1, 38425.0], [59.2, 38430.0], [59.3, 38430.0], [59.4, 38430.0], [59.5, 38430.0], [59.6, 38442.0], [59.7, 38442.0], [59.8, 38442.0], [59.9, 38442.0], [60.0, 38442.0], [60.1, 38445.0], [60.2, 38445.0], [60.3, 38445.0], [60.4, 38445.0], [60.5, 38463.0], [60.6, 38463.0], [60.7, 38463.0], [60.8, 38463.0], [60.9, 38479.0], [61.0, 38479.0], [61.1, 38479.0], [61.2, 38479.0], [61.3, 38528.0], [61.4, 38528.0], [61.5, 38528.0], [61.6, 38528.0], [61.7, 38528.0], [61.8, 38530.0], [61.9, 38530.0], [62.0, 38530.0], [62.1, 38530.0], [62.2, 38533.0], [62.3, 38533.0], [62.4, 38533.0], [62.5, 38533.0], [62.6, 38534.0], [62.7, 38534.0], [62.8, 38534.0], [62.9, 38534.0], [63.0, 38536.0], [63.1, 38536.0], [63.2, 38536.0], [63.3, 38536.0], [63.4, 38536.0], [63.5, 38537.0], [63.6, 38537.0], [63.7, 38537.0], [63.8, 38537.0], [63.9, 38543.0], [64.0, 38543.0], [64.1, 38543.0], [64.2, 38543.0], [64.3, 38556.0], [64.4, 38556.0], [64.5, 38556.0], [64.6, 38556.0], [64.7, 38560.0], [64.8, 38560.0], [64.9, 38560.0], [65.0, 38560.0], [65.1, 38560.0], [65.2, 38560.0], [65.3, 38560.0], [65.4, 38560.0], [65.5, 38560.0], [65.6, 38635.0], [65.7, 38635.0], [65.8, 38635.0], [65.9, 38635.0], [66.0, 38646.0], [66.1, 38646.0], [66.2, 38646.0], [66.3, 38646.0], [66.4, 38672.0], [66.5, 38672.0], [66.6, 38672.0], [66.7, 38672.0], [66.8, 38672.0], [66.9, 38676.0], [67.0, 38676.0], [67.1, 38676.0], [67.2, 38676.0], [67.3, 38678.0], [67.4, 38678.0], [67.5, 38678.0], [67.6, 38678.0], [67.7, 38709.0], [67.8, 38709.0], [67.9, 38709.0], [68.0, 38709.0], [68.1, 38732.0], [68.2, 38732.0], [68.3, 38732.0], [68.4, 38732.0], [68.5, 38732.0], [68.6, 38738.0], [68.7, 38738.0], [68.8, 38738.0], [68.9, 38738.0], [69.0, 38739.0], [69.1, 38739.0], [69.2, 38739.0], [69.3, 38739.0], [69.4, 38739.0], [69.5, 38739.0], [69.6, 38739.0], [69.7, 38739.0], [69.8, 38739.0], [69.9, 38739.0], [70.0, 38739.0], [70.1, 38739.0], [70.2, 38739.0], [70.3, 38755.0], [70.4, 38755.0], [70.5, 38755.0], [70.6, 38755.0], [70.7, 38757.0], [70.8, 38757.0], [70.9, 38757.0], [71.0, 38757.0], [71.1, 38773.0], [71.2, 38773.0], [71.3, 38773.0], [71.4, 38773.0], [71.5, 38783.0], [71.6, 38783.0], [71.7, 38783.0], [71.8, 38783.0], [71.9, 38783.0], [72.0, 38794.0], [72.1, 38794.0], [72.2, 38794.0], [72.3, 38794.0], [72.4, 38800.0], [72.5, 38800.0], [72.6, 38800.0], [72.7, 38800.0], [72.8, 38834.0], [72.9, 38834.0], [73.0, 38834.0], [73.1, 38834.0], [73.2, 38835.0], [73.3, 38835.0], [73.4, 38835.0], [73.5, 38835.0], [73.6, 38835.0], [73.7, 38856.0], [73.8, 38856.0], [73.9, 38856.0], [74.0, 38856.0], [74.1, 38863.0], [74.2, 38863.0], [74.3, 38863.0], [74.4, 38863.0], [74.5, 38879.0], [74.6, 38879.0], [74.7, 38879.0], [74.8, 38879.0], [74.9, 38895.0], [75.0, 38895.0], [75.1, 38895.0], [75.2, 38895.0], [75.3, 38895.0], [75.4, 38919.0], [75.5, 38919.0], [75.6, 38919.0], [75.7, 38919.0], [75.8, 38928.0], [75.9, 38928.0], [76.0, 38928.0], [76.1, 38928.0], [76.2, 38929.0], [76.3, 38929.0], [76.4, 38929.0], [76.5, 38929.0], [76.6, 38931.0], [76.7, 38931.0], [76.8, 38931.0], [76.9, 38931.0], [77.0, 38931.0], [77.1, 38931.0], [77.2, 38931.0], [77.3, 38931.0], [77.4, 38931.0], [77.5, 38934.0], [77.6, 38934.0], [77.7, 38934.0], [77.8, 38934.0], [77.9, 38948.0], [78.0, 38948.0], [78.1, 38948.0], [78.2, 38948.0], [78.3, 38948.0], [78.4, 38948.0], [78.5, 38948.0], [78.6, 38948.0], [78.7, 38948.0], [78.8, 38955.0], [78.9, 38955.0], [79.0, 38955.0], [79.1, 38955.0], [79.2, 39006.0], [79.3, 39006.0], [79.4, 39006.0], [79.5, 39006.0], [79.6, 39047.0], [79.7, 39047.0], [79.8, 39047.0], [79.9, 39047.0], [80.0, 39050.0], [80.1, 39050.0], [80.2, 39050.0], [80.3, 39050.0], [80.4, 39050.0], [80.5, 39062.0], [80.6, 39062.0], [80.7, 39062.0], [80.8, 39062.0], [80.9, 39117.0], [81.0, 39117.0], [81.1, 39117.0], [81.2, 39117.0], [81.3, 39131.0], [81.4, 39131.0], [81.5, 39131.0], [81.6, 39131.0], [81.7, 39131.0], [81.8, 39142.0], [81.9, 39142.0], [82.0, 39142.0], [82.1, 39142.0], [82.2, 39143.0], [82.3, 39143.0], [82.4, 39143.0], [82.5, 39143.0], [82.6, 39148.0], [82.7, 39148.0], [82.8, 39148.0], [82.9, 39148.0], [83.0, 39157.0], [83.1, 39157.0], [83.2, 39157.0], [83.3, 39157.0], [83.4, 39157.0], [83.5, 39205.0], [83.6, 39205.0], [83.7, 39205.0], [83.8, 39205.0], [83.9, 39232.0], [84.0, 39232.0], [84.1, 39232.0], [84.2, 39232.0], [84.3, 39238.0], [84.4, 39238.0], [84.5, 39238.0], [84.6, 39238.0], [84.7, 39252.0], [84.8, 39252.0], [84.9, 39252.0], [85.0, 39252.0], [85.1, 39252.0], [85.2, 39258.0], [85.3, 39258.0], [85.4, 39258.0], [85.5, 39258.0], [85.6, 39262.0], [85.7, 39262.0], [85.8, 39262.0], [85.9, 39262.0], [86.0, 39274.0], [86.1, 39274.0], [86.2, 39274.0], [86.3, 39274.0], [86.4, 39295.0], [86.5, 39295.0], [86.6, 39295.0], [86.7, 39295.0], [86.8, 39295.0], [86.9, 39345.0], [87.0, 39345.0], [87.1, 39345.0], [87.2, 39345.0], [87.3, 39350.0], [87.4, 39350.0], [87.5, 39350.0], [87.6, 39350.0], [87.7, 39354.0], [87.8, 39354.0], [87.9, 39354.0], [88.0, 39354.0], [88.1, 39367.0], [88.2, 39367.0], [88.3, 39367.0], [88.4, 39367.0], [88.5, 39367.0], [88.6, 39373.0], [88.7, 39373.0], [88.8, 39373.0], [88.9, 39373.0], [89.0, 39374.0], [89.1, 39374.0], [89.2, 39374.0], [89.3, 39374.0], [89.4, 39377.0], [89.5, 39377.0], [89.6, 39377.0], [89.7, 39377.0], [89.8, 39427.0], [89.9, 39427.0], [90.0, 39427.0], [90.1, 39427.0], [90.2, 39427.0], [90.3, 39470.0], [90.4, 39470.0], [90.5, 39470.0], [90.6, 39470.0], [90.7, 39516.0], [90.8, 39516.0], [90.9, 39516.0], [91.0, 39516.0], [91.1, 39540.0], [91.2, 39540.0], [91.3, 39540.0], [91.4, 39540.0], [91.5, 39548.0], [91.6, 39548.0], [91.7, 39548.0], [91.8, 39548.0], [91.9, 39548.0], [92.0, 39548.0], [92.1, 39548.0], [92.2, 39548.0], [92.3, 39548.0], [92.4, 39557.0], [92.5, 39557.0], [92.6, 39557.0], [92.7, 39557.0], [92.8, 39560.0], [92.9, 39560.0], [93.0, 39560.0], [93.1, 39560.0], [93.2, 39661.0], [93.3, 39661.0], [93.4, 39661.0], [93.5, 39661.0], [93.6, 39661.0], [93.7, 39706.0], [93.8, 39706.0], [93.9, 39706.0], [94.0, 39706.0], [94.1, 39738.0], [94.2, 39738.0], [94.3, 39738.0], [94.4, 39738.0], [94.5, 39755.0], [94.6, 39755.0], [94.7, 39755.0], [94.8, 39755.0], [94.9, 39761.0], [95.0, 39761.0], [95.1, 39761.0], [95.2, 39761.0], [95.3, 39761.0], [95.4, 39767.0], [95.5, 39767.0], [95.6, 39767.0], [95.7, 39767.0], [95.8, 39770.0], [95.9, 39770.0], [96.0, 39770.0], [96.1, 39770.0], [96.2, 39858.0], [96.3, 39858.0], [96.4, 39858.0], [96.5, 39858.0], [96.6, 39870.0], [96.7, 39870.0], [96.8, 39870.0], [96.9, 39870.0], [97.0, 39870.0], [97.1, 39937.0], [97.2, 39937.0], [97.3, 39937.0], [97.4, 39937.0], [97.5, 39967.0], [97.6, 39967.0], [97.7, 39967.0], [97.8, 39967.0], [97.9, 39979.0], [98.0, 39979.0], [98.1, 39979.0], [98.2, 39979.0], [98.3, 40062.0], [98.4, 40062.0], [98.5, 40062.0], [98.6, 40062.0], [98.7, 40062.0], [98.8, 40252.0], [98.9, 40252.0], [99.0, 40252.0], [99.1, 40252.0], [99.2, 40325.0], [99.3, 40325.0], [99.4, 40325.0], [99.5, 40325.0], [99.6, 40585.0], [99.7, 40585.0], [99.8, 40585.0], [99.9, 40585.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 74.0], [3.4, 75.0], [3.5, 76.0], [3.6, 77.0], [3.7, 77.0], [3.8, 78.0], [3.9, 78.0], [4.0, 79.0], [4.1, 79.0], [4.2, 79.0], [4.3, 79.0], [4.4, 80.0], [4.5, 80.0], [4.6, 80.0], [4.7, 81.0], [4.8, 81.0], [4.9, 81.0], [5.0, 81.0], [5.1, 82.0], [5.2, 82.0], [5.3, 82.0], [5.4, 82.0], [5.5, 82.0], [5.6, 82.0], [5.7, 82.0], [5.8, 83.0], [5.9, 83.0], [6.0, 83.0], [6.1, 83.0], [6.2, 83.0], [6.3, 83.0], [6.4, 83.0], [6.5, 83.0], [6.6, 83.0], [6.7, 84.0], [6.8, 84.0], [6.9, 84.0], [7.0, 84.0], [7.1, 84.0], [7.2, 84.0], [7.3, 84.0], [7.4, 84.0], [7.5, 84.0], [7.6, 84.0], [7.7, 84.0], [7.8, 84.0], [7.9, 85.0], [8.0, 85.0], [8.1, 85.0], [8.2, 85.0], [8.3, 85.0], [8.4, 85.0], [8.5, 85.0], [8.6, 85.0], [8.7, 85.0], [8.8, 85.0], [8.9, 85.0], [9.0, 85.0], [9.1, 86.0], [9.2, 86.0], [9.3, 86.0], [9.4, 86.0], [9.5, 86.0], [9.6, 86.0], [9.7, 86.0], [9.8, 86.0], [9.9, 86.0], [10.0, 86.0], [10.1, 86.0], [10.2, 86.0], [10.3, 87.0], [10.4, 87.0], [10.5, 87.0], [10.6, 87.0], [10.7, 87.0], [10.8, 87.0], [10.9, 87.0], [11.0, 87.0], [11.1, 87.0], [11.2, 87.0], [11.3, 87.0], [11.4, 87.0], [11.5, 88.0], [11.6, 88.0], [11.7, 88.0], [11.8, 88.0], [11.9, 88.0], [12.0, 88.0], [12.1, 88.0], [12.2, 88.0], [12.3, 88.0], [12.4, 88.0], [12.5, 89.0], [12.6, 89.0], [12.7, 89.0], [12.8, 89.0], [12.9, 89.0], [13.0, 89.0], [13.1, 89.0], [13.2, 89.0], [13.3, 89.0], [13.4, 89.0], [13.5, 89.0], [13.6, 89.0], [13.7, 90.0], [13.8, 90.0], [13.9, 90.0], [14.0, 90.0], [14.1, 90.0], [14.2, 90.0], [14.3, 90.0], [14.4, 90.0], [14.5, 90.0], [14.6, 90.0], [14.7, 90.0], [14.8, 91.0], [14.9, 91.0], [15.0, 91.0], [15.1, 91.0], [15.2, 91.0], [15.3, 91.0], [15.4, 91.0], [15.5, 91.0], [15.6, 91.0], [15.7, 92.0], [15.8, 92.0], [15.9, 92.0], [16.0, 92.0], [16.1, 92.0], [16.2, 92.0], [16.3, 92.0], [16.4, 92.0], [16.5, 92.0], [16.6, 92.0], [16.7, 92.0], [16.8, 93.0], [16.9, 93.0], [17.0, 93.0], [17.1, 93.0], [17.2, 93.0], [17.3, 93.0], [17.4, 93.0], [17.5, 93.0], [17.6, 93.0], [17.7, 93.0], [17.8, 93.0], [17.9, 93.0], [18.0, 94.0], [18.1, 94.0], [18.2, 94.0], [18.3, 94.0], [18.4, 94.0], [18.5, 94.0], [18.6, 94.0], [18.7, 94.0], [18.8, 94.0], [18.9, 94.0], [19.0, 94.0], [19.1, 94.0], [19.2, 95.0], [19.3, 95.0], [19.4, 95.0], [19.5, 95.0], [19.6, 95.0], [19.7, 95.0], [19.8, 95.0], [19.9, 95.0], [20.0, 95.0], [20.1, 95.0], [20.2, 96.0], [20.3, 96.0], [20.4, 96.0], [20.5, 96.0], [20.6, 96.0], [20.7, 96.0], [20.8, 96.0], [20.9, 96.0], [21.0, 96.0], [21.1, 96.0], [21.2, 96.0], [21.3, 97.0], [21.4, 97.0], [21.5, 97.0], [21.6, 97.0], [21.7, 97.0], [21.8, 97.0], [21.9, 97.0], [22.0, 97.0], [22.1, 97.0], [22.2, 97.0], [22.3, 97.0], [22.4, 97.0], [22.5, 97.0], [22.6, 98.0], [22.7, 98.0], [22.8, 98.0], [22.9, 98.0], [23.0, 98.0], [23.1, 98.0], [23.2, 98.0], [23.3, 98.0], [23.4, 98.0], [23.5, 98.0], [23.6, 99.0], [23.7, 99.0], [23.8, 99.0], [23.9, 99.0], [24.0, 99.0], [24.1, 99.0], [24.2, 99.0], [24.3, 99.0], [24.4, 99.0], [24.5, 99.0], [24.6, 99.0], [24.7, 99.0], [24.8, 99.0], [24.9, 100.0], [25.0, 100.0], [25.1, 100.0], [25.2, 100.0], [25.3, 100.0], [25.4, 100.0], [25.5, 100.0], [25.6, 100.0], [25.7, 100.0], [25.8, 100.0], [25.9, 100.0], [26.0, 101.0], [26.1, 101.0], [26.2, 101.0], [26.3, 101.0], [26.4, 101.0], [26.5, 101.0], [26.6, 101.0], [26.7, 101.0], [26.8, 101.0], [26.9, 101.0], [27.0, 101.0], [27.1, 102.0], [27.2, 102.0], [27.3, 102.0], [27.4, 102.0], [27.5, 102.0], [27.6, 102.0], [27.7, 102.0], [27.8, 102.0], [27.9, 102.0], [28.0, 102.0], [28.1, 102.0], [28.2, 102.0], [28.3, 103.0], [28.4, 103.0], [28.5, 103.0], [28.6, 103.0], [28.7, 103.0], [28.8, 103.0], [28.9, 103.0], [29.0, 103.0], [29.1, 103.0], [29.2, 103.0], [29.3, 104.0], [29.4, 104.0], [29.5, 104.0], [29.6, 104.0], [29.7, 104.0], [29.8, 104.0], [29.9, 104.0], [30.0, 104.0], [30.1, 104.0], [30.2, 104.0], [30.3, 105.0], [30.4, 105.0], [30.5, 105.0], [30.6, 105.0], [30.7, 105.0], [30.8, 105.0], [30.9, 105.0], [31.0, 105.0], [31.1, 105.0], [31.2, 105.0], [31.3, 105.0], [31.4, 105.0], [31.5, 105.0], [31.6, 106.0], [31.7, 106.0], [31.8, 106.0], [31.9, 106.0], [32.0, 106.0], [32.1, 106.0], [32.2, 106.0], [32.3, 106.0], [32.4, 106.0], [32.5, 106.0], [32.6, 107.0], [32.7, 107.0], [32.8, 107.0], [32.9, 107.0], [33.0, 107.0], [33.1, 107.0], [33.2, 107.0], [33.3, 107.0], [33.4, 107.0], [33.5, 107.0], [33.6, 107.0], [33.7, 107.0], [33.8, 107.0], [33.9, 108.0], [34.0, 108.0], [34.1, 108.0], [34.2, 108.0], [34.3, 108.0], [34.4, 108.0], [34.5, 108.0], [34.6, 108.0], [34.7, 108.0], [34.8, 108.0], [34.9, 108.0], [35.0, 108.0], [35.1, 108.0], [35.2, 109.0], [35.3, 109.0], [35.4, 109.0], [35.5, 109.0], [35.6, 109.0], [35.7, 109.0], [35.8, 109.0], [35.9, 109.0], [36.0, 109.0], [36.1, 109.0], [36.2, 109.0], [36.3, 109.0], [36.4, 109.0], [36.5, 109.0], [36.6, 109.0], [36.7, 109.0], [36.8, 110.0], [36.9, 110.0], [37.0, 110.0], [37.1, 110.0], [37.2, 110.0], [37.3, 110.0], [37.4, 110.0], [37.5, 110.0], [37.6, 110.0], [37.7, 110.0], [37.8, 110.0], [37.9, 110.0], [38.0, 110.0], [38.1, 110.0], [38.2, 110.0], [38.3, 110.0], [38.4, 110.0], [38.5, 111.0], [38.6, 111.0], [38.7, 111.0], [38.8, 111.0], [38.9, 111.0], [39.0, 111.0], [39.1, 111.0], [39.2, 111.0], [39.3, 111.0], [39.4, 111.0], [39.5, 111.0], [39.6, 111.0], [39.7, 111.0], [39.8, 111.0], [39.9, 111.0], [40.0, 111.0], [40.1, 111.0], [40.2, 112.0], [40.3, 112.0], [40.4, 112.0], [40.5, 112.0], [40.6, 112.0], [40.7, 112.0], [40.8, 112.0], [40.9, 112.0], [41.0, 112.0], [41.1, 112.0], [41.2, 112.0], [41.3, 112.0], [41.4, 112.0], [41.5, 112.0], [41.6, 112.0], [41.7, 112.0], [41.8, 112.0], [41.9, 112.0], [42.0, 113.0], [42.1, 113.0], [42.2, 113.0], [42.3, 113.0], [42.4, 113.0], [42.5, 113.0], [42.6, 113.0], [42.7, 113.0], [42.8, 113.0], [42.9, 113.0], [43.0, 113.0], [43.1, 113.0], [43.2, 113.0], [43.3, 113.0], [43.4, 113.0], [43.5, 113.0], [43.6, 113.0], [43.7, 113.0], [43.8, 113.0], [43.9, 113.0], [44.0, 114.0], [44.1, 114.0], [44.2, 114.0], [44.3, 114.0], [44.4, 114.0], [44.5, 114.0], [44.6, 114.0], [44.7, 114.0], [44.8, 114.0], [44.9, 114.0], [45.0, 114.0], [45.1, 114.0], [45.2, 114.0], [45.3, 114.0], [45.4, 114.0], [45.5, 114.0], [45.6, 114.0], [45.7, 114.0], [45.8, 114.0], [45.9, 114.0], [46.0, 114.0], [46.1, 115.0], [46.2, 115.0], [46.3, 115.0], [46.4, 115.0], [46.5, 115.0], [46.6, 115.0], [46.7, 115.0], [46.8, 115.0], [46.9, 115.0], [47.0, 115.0], [47.1, 115.0], [47.2, 115.0], [47.3, 115.0], [47.4, 115.0], [47.5, 115.0], [47.6, 115.0], [47.7, 115.0], [47.8, 115.0], [47.9, 115.0], [48.0, 115.0], [48.1, 115.0], [48.2, 116.0], [48.3, 116.0], [48.4, 116.0], [48.5, 116.0], [48.6, 116.0], [48.7, 116.0], [48.8, 116.0], [48.9, 116.0], [49.0, 116.0], [49.1, 116.0], [49.2, 116.0], [49.3, 116.0], [49.4, 116.0], [49.5, 116.0], [49.6, 116.0], [49.7, 117.0], [49.8, 117.0], [49.9, 117.0], [50.0, 117.0], [50.1, 117.0], [50.2, 117.0], [50.3, 117.0], [50.4, 117.0], [50.5, 117.0], [50.6, 117.0], [50.7, 117.0], [50.8, 117.0], [50.9, 117.0], [51.0, 117.0], [51.1, 117.0], [51.2, 117.0], [51.3, 117.0], [51.4, 118.0], [51.5, 118.0], [51.6, 118.0], [51.7, 118.0], [51.8, 118.0], [51.9, 118.0], [52.0, 118.0], [52.1, 118.0], [52.2, 118.0], [52.3, 118.0], [52.4, 118.0], [52.5, 118.0], [52.6, 118.0], [52.7, 118.0], [52.8, 119.0], [52.9, 119.0], [53.0, 119.0], [53.1, 119.0], [53.2, 119.0], [53.3, 119.0], [53.4, 119.0], [53.5, 119.0], [53.6, 119.0], [53.7, 119.0], [53.8, 119.0], [53.9, 119.0], [54.0, 119.0], [54.1, 119.0], [54.2, 120.0], [54.3, 120.0], [54.4, 120.0], [54.5, 120.0], [54.6, 120.0], [54.7, 120.0], [54.8, 120.0], [54.9, 120.0], [55.0, 120.0], [55.1, 120.0], [55.2, 120.0], [55.3, 120.0], [55.4, 120.0], [55.5, 121.0], [55.6, 121.0], [55.7, 121.0], [55.8, 121.0], [55.9, 121.0], [56.0, 121.0], [56.1, 121.0], [56.2, 121.0], [56.3, 121.0], [56.4, 121.0], [56.5, 121.0], [56.6, 121.0], [56.7, 121.0], [56.8, 121.0], [56.9, 121.0], [57.0, 122.0], [57.1, 122.0], [57.2, 122.0], [57.3, 122.0], [57.4, 122.0], [57.5, 122.0], [57.6, 122.0], [57.7, 122.0], [57.8, 122.0], [57.9, 122.0], [58.0, 122.0], [58.1, 123.0], [58.2, 123.0], [58.3, 123.0], [58.4, 123.0], [58.5, 123.0], [58.6, 123.0], [58.7, 123.0], [58.8, 123.0], [58.9, 123.0], [59.0, 123.0], [59.1, 123.0], [59.2, 123.0], [59.3, 123.0], [59.4, 123.0], [59.5, 124.0], [59.6, 124.0], [59.7, 124.0], [59.8, 124.0], [59.9, 124.0], [60.0, 124.0], [60.1, 124.0], [60.2, 124.0], [60.3, 124.0], [60.4, 125.0], [60.5, 125.0], [60.6, 125.0], [60.7, 125.0], [60.8, 125.0], [60.9, 125.0], [61.0, 125.0], [61.1, 125.0], [61.2, 125.0], [61.3, 126.0], [61.4, 126.0], [61.5, 126.0], [61.6, 126.0], [61.7, 126.0], [61.8, 126.0], [61.9, 126.0], [62.0, 126.0], [62.1, 126.0], [62.2, 127.0], [62.3, 127.0], [62.4, 127.0], [62.5, 127.0], [62.6, 127.0], [62.7, 127.0], [62.8, 127.0], [62.9, 127.0], [63.0, 128.0], [63.1, 128.0], [63.2, 128.0], [63.3, 128.0], [63.4, 128.0], [63.5, 128.0], [63.6, 128.0], [63.7, 128.0], [63.8, 129.0], [63.9, 129.0], [64.0, 129.0], [64.1, 129.0], [64.2, 129.0], [64.3, 129.0], [64.4, 129.0], [64.5, 129.0], [64.6, 130.0], [64.7, 130.0], [64.8, 130.0], [64.9, 130.0], [65.0, 130.0], [65.1, 130.0], [65.2, 130.0], [65.3, 130.0], [65.4, 130.0], [65.5, 131.0], [65.6, 131.0], [65.7, 131.0], [65.8, 131.0], [65.9, 131.0], [66.0, 131.0], [66.1, 131.0], [66.2, 131.0], [66.3, 132.0], [66.4, 132.0], [66.5, 132.0], [66.6, 132.0], [66.7, 132.0], [66.8, 132.0], [66.9, 132.0], [67.0, 132.0], [67.1, 133.0], [67.2, 133.0], [67.3, 133.0], [67.4, 133.0], [67.5, 133.0], [67.6, 133.0], [67.7, 133.0], [67.8, 134.0], [67.9, 134.0], [68.0, 134.0], [68.1, 134.0], [68.2, 134.0], [68.3, 134.0], [68.4, 134.0], [68.5, 135.0], [68.6, 135.0], [68.7, 135.0], [68.8, 135.0], [68.9, 135.0], [69.0, 135.0], [69.1, 135.0], [69.2, 135.0], [69.3, 136.0], [69.4, 136.0], [69.5, 136.0], [69.6, 136.0], [69.7, 136.0], [69.8, 136.0], [69.9, 137.0], [70.0, 137.0], [70.1, 137.0], [70.2, 137.0], [70.3, 137.0], [70.4, 137.0], [70.5, 137.0], [70.6, 138.0], [70.7, 138.0], [70.8, 138.0], [70.9, 138.0], [71.0, 138.0], [71.1, 138.0], [71.2, 139.0], [71.3, 139.0], [71.4, 139.0], [71.5, 139.0], [71.6, 139.0], [71.7, 139.0], [71.8, 139.0], [71.9, 140.0], [72.0, 140.0], [72.1, 140.0], [72.2, 140.0], [72.3, 140.0], [72.4, 140.0], [72.5, 140.0], [72.6, 141.0], [72.7, 141.0], [72.8, 141.0], [72.9, 141.0], [73.0, 141.0], [73.1, 141.0], [73.2, 142.0], [73.3, 142.0], [73.4, 142.0], [73.5, 142.0], [73.6, 142.0], [73.7, 142.0], [73.8, 143.0], [73.9, 143.0], [74.0, 143.0], [74.1, 143.0], [74.2, 143.0], [74.3, 143.0], [74.4, 143.0], [74.5, 144.0], [74.6, 144.0], [74.7, 144.0], [74.8, 144.0], [74.9, 144.0], [75.0, 145.0], [75.1, 145.0], [75.2, 145.0], [75.3, 145.0], [75.4, 145.0], [75.5, 146.0], [75.6, 146.0], [75.7, 146.0], [75.8, 146.0], [75.9, 146.0], [76.0, 147.0], [76.1, 147.0], [76.2, 147.0], [76.3, 147.0], [76.4, 148.0], [76.5, 148.0], [76.6, 148.0], [76.7, 148.0], [76.8, 149.0], [76.9, 149.0], [77.0, 149.0], [77.1, 149.0], [77.2, 150.0], [77.3, 150.0], [77.4, 150.0], [77.5, 150.0], [77.6, 151.0], [77.7, 151.0], [77.8, 151.0], [77.9, 151.0], [78.0, 152.0], [78.1, 152.0], [78.2, 152.0], [78.3, 153.0], [78.4, 153.0], [78.5, 153.0], [78.6, 154.0], [78.7, 154.0], [78.8, 154.0], [78.9, 154.0], [79.0, 155.0], [79.1, 155.0], [79.2, 155.0], [79.3, 155.0], [79.4, 156.0], [79.5, 156.0], [79.6, 157.0], [79.7, 157.0], [79.8, 157.0], [79.9, 158.0], [80.0, 158.0], [80.1, 159.0], [80.2, 159.0], [80.3, 159.0], [80.4, 160.0], [80.5, 160.0], [80.6, 160.0], [80.7, 160.0], [80.8, 161.0], [80.9, 161.0], [81.0, 161.0], [81.1, 162.0], [81.2, 163.0], [81.3, 163.0], [81.4, 163.0], [81.5, 164.0], [81.6, 164.0], [81.7, 164.0], [81.8, 165.0], [81.9, 165.0], [82.0, 165.0], [82.1, 166.0], [82.2, 166.0], [82.3, 167.0], [82.4, 167.0], [82.5, 167.0], [82.6, 168.0], [82.7, 168.0], [82.8, 169.0], [82.9, 169.0], [83.0, 169.0], [83.1, 170.0], [83.2, 170.0], [83.3, 170.0], [83.4, 171.0], [83.5, 171.0], [83.6, 172.0], [83.7, 172.0], [83.8, 172.0], [83.9, 173.0], [84.0, 173.0], [84.1, 174.0], [84.2, 174.0], [84.3, 174.0], [84.4, 175.0], [84.5, 175.0], [84.6, 176.0], [84.7, 176.0], [84.8, 177.0], [84.9, 178.0], [85.0, 178.0], [85.1, 179.0], [85.2, 179.0], [85.3, 180.0], [85.4, 181.0], [85.5, 181.0], [85.6, 182.0], [85.7, 182.0], [85.8, 183.0], [85.9, 183.0], [86.0, 184.0], [86.1, 184.0], [86.2, 184.0], [86.3, 185.0], [86.4, 185.0], [86.5, 186.0], [86.6, 187.0], [86.7, 188.0], [86.8, 188.0], [86.9, 189.0], [87.0, 189.0], [87.1, 190.0], [87.2, 191.0], [87.3, 191.0], [87.4, 192.0], [87.5, 193.0], [87.6, 193.0], [87.7, 194.0], [87.8, 194.0], [87.9, 196.0], [88.0, 196.0], [88.1, 198.0], [88.2, 199.0], [88.3, 199.0], [88.4, 200.0], [88.5, 201.0], [88.6, 202.0], [88.7, 203.0], [88.8, 204.0], [88.9, 205.0], [89.0, 206.0], [89.1, 208.0], [89.2, 209.0], [89.3, 210.0], [89.4, 211.0], [89.5, 212.0], [89.6, 213.0], [89.7, 215.0], [89.8, 216.0], [89.9, 218.0], [90.0, 219.0], [90.1, 220.0], [90.2, 221.0], [90.3, 221.0], [90.4, 223.0], [90.5, 225.0], [90.6, 226.0], [90.7, 228.0], [90.8, 230.0], [90.9, 231.0], [91.0, 233.0], [91.1, 235.0], [91.2, 237.0], [91.3, 238.0], [91.4, 240.0], [91.5, 242.0], [91.6, 243.0], [91.7, 246.0], [91.8, 249.0], [91.9, 253.0], [92.0, 258.0], [92.1, 264.0], [92.2, 266.0], [92.3, 270.0], [92.4, 279.0], [92.5, 283.0], [92.6, 287.0], [92.7, 294.0], [92.8, 299.0], [92.9, 302.0], [93.0, 307.0], [93.1, 316.0], [93.2, 334.0], [93.3, 349.0], [93.4, 401.0], [93.5, 426.0], [93.6, 503.0], [93.7, 515.0], [93.8, 520.0], [93.9, 529.0], [94.0, 533.0], [94.1, 535.0], [94.2, 538.0], [94.3, 540.0], [94.4, 542.0], [94.5, 544.0], [94.6, 547.0], [94.7, 550.0], [94.8, 554.0], [94.9, 559.0], [95.0, 564.0], [95.1, 567.0], [95.2, 569.0], [95.3, 575.0], [95.4, 583.0], [95.5, 590.0], [95.6, 593.0], [95.7, 610.0], [95.8, 637.0], [95.9, 667.0], [96.0, 680.0], [96.1, 711.0], [96.2, 745.0], [96.3, 761.0], [96.4, 1079.0], [96.5, 1098.0], [96.6, 1109.0], [96.7, 1124.0], [96.8, 1134.0], [96.9, 1140.0], [97.0, 1155.0], [97.1, 1160.0], [97.2, 1167.0], [97.3, 1179.0], [97.4, 1194.0], [97.5, 1214.0], [97.6, 1228.0], [97.7, 1248.0], [97.8, 1278.0], [97.9, 1289.0], [98.0, 1306.0], [98.1, 1316.0], [98.2, 1327.0], [98.3, 1334.0], [98.4, 1352.0], [98.5, 1370.0], [98.6, 1404.0], [98.7, 1416.0], [98.8, 1438.0], [98.9, 1461.0], [99.0, 1505.0], [99.1, 1534.0], [99.2, 1566.0], [99.3, 1601.0], [99.4, 1682.0], [99.5, 1717.0], [99.6, 1796.0], [99.7, 1857.0], [99.8, 2473.0], [99.9, 2920.0], [100.0, 3194.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 4096.0, "series": [{"data": [[1100.0, 2.0], [1200.0, 6.0], [1300.0, 3.0], [1400.0, 1.0], [1500.0, 2.0], [1600.0, 1.0], [1700.0, 1.0], [2100.0, 2.0], [2300.0, 1.0], [2600.0, 4.0], [2800.0, 3.0], [2700.0, 1.0], [2900.0, 2.0], [3000.0, 4.0], [3100.0, 5.0], [3200.0, 5.0], [3300.0, 4.0], [3400.0, 3.0], [3500.0, 4.0], [3600.0, 9.0], [3700.0, 6.0], [3800.0, 6.0], [3900.0, 9.0], [4000.0, 12.0], [4100.0, 23.0], [4200.0, 16.0], [4300.0, 13.0], [4400.0, 16.0], [4600.0, 35.0], [4500.0, 24.0], [4800.0, 48.0], [4700.0, 51.0], [5000.0, 41.0], [5100.0, 56.0], [4900.0, 43.0], [5200.0, 56.0], [5300.0, 55.0], [5600.0, 48.0], [5400.0, 75.0], [5500.0, 70.0], [5700.0, 70.0], [5800.0, 71.0], [6100.0, 68.0], [6000.0, 59.0], [5900.0, 59.0], [6200.0, 49.0], [6300.0, 38.0], [6400.0, 51.0], [6600.0, 26.0], [6500.0, 29.0], [6900.0, 13.0], [6800.0, 18.0], [6700.0, 28.0], [7000.0, 1.0], [7100.0, 1.0], [7300.0, 1.0], [7200.0, 1.0], [7500.0, 1.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[0.0, 1.0], [600.0, 41.0], [700.0, 73.0], [800.0, 52.0], [900.0, 52.0], [1000.0, 38.0], [1100.0, 38.0], [1200.0, 39.0], [1300.0, 30.0], [1400.0, 26.0], [1500.0, 38.0], [1600.0, 44.0], [1700.0, 32.0], [1800.0, 38.0], [1900.0, 37.0], [2000.0, 33.0], [2100.0, 56.0], [2200.0, 76.0], [2300.0, 79.0], [2400.0, 86.0], [2500.0, 80.0], [2600.0, 64.0], [2700.0, 53.0], [2800.0, 39.0], [2900.0, 24.0], [3000.0, 30.0], [3100.0, 30.0], [3300.0, 37.0], [3200.0, 23.0], [3400.0, 22.0], [3500.0, 26.0], [3600.0, 22.0], [3700.0, 18.0], [3800.0, 18.0], [3900.0, 15.0], [4000.0, 16.0], [4300.0, 16.0], [4100.0, 15.0], [4200.0, 11.0], [4400.0, 13.0], [4500.0, 10.0], [4600.0, 14.0], [4700.0, 7.0], [4800.0, 14.0], [5100.0, 11.0], [5000.0, 14.0], [4900.0, 13.0], [5300.0, 18.0], [5200.0, 11.0], [5400.0, 12.0], [5600.0, 18.0], [5500.0, 14.0], [5700.0, 14.0], [5800.0, 18.0], [5900.0, 21.0], [6100.0, 20.0], [6000.0, 12.0], [6200.0, 33.0], [6300.0, 19.0], [6400.0, 14.0], [6500.0, 25.0], [6600.0, 17.0], [6800.0, 28.0], [6900.0, 15.0], [6700.0, 22.0], [7000.0, 10.0], [7100.0, 12.0], [7200.0, 12.0], [7300.0, 7.0], [7400.0, 7.0], [7600.0, 5.0], [7500.0, 3.0], [7700.0, 1.0], [7900.0, 2.0], [100.0, 21.0], [200.0, 47.0], [300.0, 73.0], [400.0, 61.0], [500.0, 64.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[10800.0, 1.0], [14300.0, 1.0], [13900.0, 1.0], [15100.0, 1.0], [19500.0, 1.0], [21000.0, 1.0], [22900.0, 1.0], [24300.0, 1.0], [23800.0, 1.0], [25200.0, 1.0], [27400.0, 1.0], [30600.0, 1.0], [31100.0, 1.0], [32600.0, 1.0], [32100.0, 1.0], [32800.0, 1.0], [34600.0, 1.0], [33700.0, 1.0], [36800.0, 3.0], [35300.0, 1.0], [36100.0, 3.0], [36600.0, 3.0], [35800.0, 2.0], [35400.0, 1.0], [35000.0, 1.0], [36000.0, 2.0], [36300.0, 3.0], [36200.0, 1.0], [36400.0, 2.0], [36500.0, 1.0], [38400.0, 9.0], [38000.0, 8.0], [38100.0, 9.0], [38300.0, 15.0], [38200.0, 8.0], [38700.0, 11.0], [38500.0, 10.0], [38600.0, 5.0], [37700.0, 6.0], [37800.0, 3.0], [36900.0, 6.0], [37100.0, 5.0], [37200.0, 3.0], [37300.0, 8.0], [37900.0, 8.0], [38900.0, 9.0], [38800.0, 7.0], [37000.0, 5.0], [37600.0, 2.0], [37500.0, 4.0], [37400.0, 4.0], [39100.0, 6.0], [39200.0, 8.0], [39300.0, 7.0], [39500.0, 6.0], [39600.0, 1.0], [39000.0, 4.0], [39900.0, 3.0], [39800.0, 2.0], [40200.0, 1.0], [40300.0, 1.0], [39700.0, 6.0], [40000.0, 1.0], [40500.0, 1.0], [39400.0, 2.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[0.0, 1605.0], [600.0, 26.0], [700.0, 19.0], [800.0, 1.0], [900.0, 3.0], [1000.0, 9.0], [1100.0, 59.0], [1200.0, 32.0], [1300.0, 41.0], [1400.0, 27.0], [1500.0, 19.0], [100.0, 4096.0], [1600.0, 11.0], [1700.0, 10.0], [1800.0, 8.0], [1900.0, 1.0], [2000.0, 1.0], [2100.0, 1.0], [2200.0, 1.0], [2400.0, 1.0], [2600.0, 1.0], [2800.0, 3.0], [2900.0, 4.0], [3000.0, 2.0], [3100.0, 2.0], [200.0, 291.0], [300.0, 36.0], [400.0, 12.0], [500.0, 133.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 40500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 210.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 6034.0, "series": [{"data": [[0.0, 6034.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 814.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 3202.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 210.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 8.2, "minX": 1.71897432E12, "maxY": 15.0, "series": [{"data": [[1.71897606E12, 15.0], [1.71897558E12, 15.0], [1.71897588E12, 15.0], [1.7189757E12, 15.0], [1.718976E12, 15.0], [1.71897552E12, 14.23478260869565], [1.71897582E12, 15.0], [1.71897612E12, 11.083333333333334], [1.71897564E12, 15.0], [1.71897594E12, 15.0], [1.71897576E12, 15.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.71897444E12, 15.0], [1.71897462E12, 15.0], [1.71897492E12, 8.2], [1.71897456E12, 15.0], [1.71897474E12, 15.0], [1.71897486E12, 15.0], [1.71897438E12, 15.0], [1.71897468E12, 15.0], [1.71897432E12, 14.340248962655613], [1.7189745E12, 15.0], [1.7189748E12, 15.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.71897654E12, 15.0], [1.71897636E12, 15.0], [1.71897618E12, 15.0], [1.71897666E12, 15.0], [1.71897648E12, 15.0], [1.7189763E12, 15.0], [1.71897612E12, 15.0], [1.7189766E12, 15.0], [1.71897642E12, 15.0], [1.71897624E12, 15.0], [1.71897672E12, 8.823529411764707]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.7189751E12, 15.0], [1.71897492E12, 14.62369337979095], [1.7189754E12, 15.0], [1.71897522E12, 15.0], [1.71897504E12, 15.0], [1.71897552E12, 11.6], [1.71897534E12, 15.0], [1.71897516E12, 15.0], [1.71897498E12, 15.0], [1.71897546E12, 15.0], [1.71897528E12, 15.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71897672E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 120.33333333333333, "minX": 1.0, "maxY": 39870.0, "series": [{"data": [[8.0, 1848.3333333333335], [9.0, 1856.3333333333335], [10.0, 2179.3333333333335], [11.0, 2532.666666666667], [12.0, 1620.0], [13.0, 4447.666666666667], [14.0, 4056.0], [15.0, 5490.617713853142], [4.0, 1312.0], [1.0, 2601.0], [5.0, 1215.0], [6.0, 2705.333333333333], [7.0, 2059.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[14.865185185185203, 5427.340000000004]], "isOverall": false, "label": "Directors by name-Aggregated", "isController": false}, {"data": [[8.0, 897.0], [9.0, 875.75], [10.0, 852.0], [11.0, 1673.25], [12.0, 1257.0], [13.0, 1462.25], [14.0, 613.75], [15.0, 2863.0813045475393], [4.0, 1926.4], [1.0, 2502.0], [5.0, 1282.5], [6.0, 997.5], [7.0, 740.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[14.882432432432447, 2830.793243243239]], "isOverall": false, "label": "TitleBasics by primary_title-Aggregated", "isController": false}, {"data": [[8.0, 32177.0], [2.0, 15154.0], [9.0, 39870.0], [10.0, 33717.0], [11.0, 38422.0], [12.0, 38430.0], [3.0, 19571.0], [13.0, 37414.0], [14.0, 39142.0], [15.0, 37687.67873303167], [4.0, 22976.0], [1.0, 13943.0], [5.0, 25238.0], [6.0, 23878.0], [7.0, 30632.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[14.553191489361703, 37189.53617021277]], "isOverall": false, "label": "Actors by name-Aggregated", "isController": false}, {"data": [[8.0, 120.33333333333333], [9.0, 357.33333333333337], [10.0, 155.5], [11.0, 160.14285714285717], [3.0, 306.0], [12.0, 134.0], [13.0, 132.55555555555554], [14.0, 136.4], [15.0, 182.03923100968964], [4.0, 1354.5], [1.0, 1433.0], [5.0, 675.0], [6.0, 137.0], [7.0, 120.66666666666666]], "isOverall": false, "label": "TitleBasics by params", "isController": false}, {"data": [[14.950735863671548, 183.082416731216]], "isOverall": false, "label": "TitleBasics by params-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 15.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 43.63333333333333, "minX": 1.71897432E12, "maxY": 90362.28333333334, "series": [{"data": [[1.71897654E12, 404.55], [1.71897462E12, 15029.0], [1.71897492E12, 73146.26666666666], [1.71897522E12, 83859.41666666667], [1.71897552E12, 5789.933333333333], [1.71897534E12, 85556.53333333334], [1.71897564E12, 2823.35], [1.71897432E12, 21413.966666666667], [1.71897594E12, 2540.75], [1.71897624E12, 554.0], [1.7189751E12, 90362.28333333334], [1.7189754E12, 87006.1], [1.7189757E12, 2404.883333333333], [1.718976E12, 2543.85], [1.71897582E12, 2642.483333333333], [1.71897612E12, 745.3666666666667], [1.71897642E12, 387.7], [1.7189745E12, 21534.166666666668], [1.71897672E12, 335.05], [1.7189748E12, 17644.333333333332], [1.71897558E12, 2615.366666666667], [1.71897588E12, 2836.2], [1.71897456E12, 17161.45], [1.71897618E12, 430.46666666666664], [1.71897648E12, 462.06666666666666], [1.7189763E12, 431.3333333333333], [1.71897438E12, 19214.95], [1.7189766E12, 417.45], [1.71897468E12, 14638.633333333333], [1.71897498E12, 86725.45], [1.71897528E12, 84502.18333333333], [1.71897444E12, 19173.233333333334], [1.71897606E12, 2421.133333333333], [1.71897636E12, 1251.3666666666666], [1.71897666E12, 366.15], [1.71897474E12, 15486.133333333333], [1.71897504E12, 90106.56666666667], [1.71897486E12, 16410.35], [1.71897516E12, 85045.41666666667], [1.71897546E12, 77169.78333333334], [1.71897576E12, 2709.6666666666665]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71897654E12, 53.766666666666666], [1.71897462E12, 607.9833333333333], [1.71897492E12, 1698.5833333333333], [1.71897522E12, 1940.4666666666667], [1.71897552E12, 396.4166666666667], [1.71897534E12, 1909.0], [1.71897564E12, 374.85], [1.71897432E12, 673.5666666666667], [1.71897594E12, 361.95], [1.71897624E12, 64.88333333333334], [1.7189751E12, 1993.0166666666667], [1.7189754E12, 1947.0166666666667], [1.7189757E12, 346.1666666666667], [1.718976E12, 359.23333333333335], [1.71897582E12, 360.78333333333336], [1.71897612E12, 106.43333333333334], [1.71897642E12, 55.18333333333333], [1.7189745E12, 663.1], [1.71897672E12, 43.63333333333333], [1.7189748E12, 591.7833333333333], [1.71897558E12, 374.73333333333335], [1.71897588E12, 364.0], [1.71897456E12, 567.5666666666667], [1.71897618E12, 52.6], [1.71897648E12, 64.55], [1.7189763E12, 54.13333333333333], [1.71897438E12, 664.85], [1.7189766E12, 64.21666666666667], [1.71897468E12, 532.5], [1.71897498E12, 1884.5333333333333], [1.71897528E12, 1958.0333333333333], [1.71897444E12, 668.2666666666667], [1.71897606E12, 338.26666666666665], [1.71897636E12, 58.88333333333333], [1.71897666E12, 55.416666666666664], [1.71897474E12, 568.95], [1.71897504E12, 1984.0666666666666], [1.71897486E12, 651.55], [1.71897516E12, 1861.6666666666667], [1.71897546E12, 1754.3666666666666], [1.71897576E12, 355.35]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71897672E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 146.36336336336342, "minX": 1.71897432E12, "maxY": 38402.38095238095, "series": [{"data": [[1.71897606E12, 5568.031496062992], [1.71897558E12, 5482.635714285715], [1.71897588E12, 5439.64233576642], [1.7189757E12, 5723.457364341086], [1.718976E12, 5622.1407407407405], [1.71897552E12, 5138.573913043479], [1.71897582E12, 5576.911111111112], [1.71897612E12, 4630.083333333333], [1.71897564E12, 4958.807142857139], [1.71897594E12, 5392.294117647057], [1.71897576E12, 5508.545454545456]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.71897444E12, 2535.794871794872], [1.71897462E12, 3028.6529680365297], [1.71897492E12, 2456.4666666666662], [1.71897456E12, 3223.1280788177337], [1.71897474E12, 3191.48309178744], [1.71897486E12, 2779.9118942731275], [1.71897438E12, 2642.2145922746786], [1.71897468E12, 3496.663157894737], [1.71897432E12, 2109.4522821576757], [1.7189745E12, 2604.466386554623], [1.7189748E12, 2988.957746478872]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.71897654E12, 38402.38095238095], [1.71897636E12, 38378.29166666667], [1.71897618E12, 38145.75000000001], [1.71897666E12, 37935.23809523809], [1.71897648E12, 38284.64], [1.7189763E12, 38090.04761904762], [1.71897612E12, 31473.0625], [1.7189766E12, 38185.20833333333], [1.71897642E12, 37604.4761904762], [1.71897624E12, 38351.2], [1.71897672E12, 30997.764705882353]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.7189751E12, 158.51807228915663], [1.71897492E12, 162.2247386759583], [1.7189754E12, 190.78395061728395], [1.71897522E12, 191.55709876543216], [1.71897504E12, 146.36336336336342], [1.71897552E12, 646.7], [1.71897534E12, 200.0480620155039], [1.71897516E12, 154.08144796380077], [1.71897498E12, 152.81325301204845], [1.71897546E12, 290.49335548172746], [1.71897528E12, 170.90015360983097]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71897672E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 143.68618618618626, "minX": 1.71897432E12, "maxY": 38402.38095238095, "series": [{"data": [[1.71897606E12, 5568.031496062992], [1.71897558E12, 5482.635714285715], [1.71897588E12, 5439.627737226279], [1.7189757E12, 5723.457364341086], [1.718976E12, 5622.133333333332], [1.71897552E12, 5138.573913043479], [1.71897582E12, 5576.911111111112], [1.71897612E12, 4630.083333333333], [1.71897564E12, 4958.807142857139], [1.71897594E12, 5392.294117647057], [1.71897576E12, 5508.537878787881]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.71897444E12, 2534.572649572649], [1.71897462E12, 3028.187214611874], [1.71897492E12, 2456.0666666666666], [1.71897456E12, 3222.339901477834], [1.71897474E12, 3190.719806763283], [1.71897486E12, 2779.2819383259916], [1.71897438E12, 2641.261802575107], [1.71897468E12, 3496.084210526314], [1.71897432E12, 2108.531120331949], [1.7189745E12, 2603.449579831933], [1.7189748E12, 2988.1924882629114]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.71897654E12, 38402.38095238095], [1.71897636E12, 38378.166666666664], [1.71897618E12, 38145.75000000001], [1.71897666E12, 37935.23809523809], [1.71897648E12, 38284.64], [1.7189763E12, 38090.04761904762], [1.71897612E12, 31473.0625], [1.7189766E12, 38185.20833333333], [1.71897642E12, 37604.4761904762], [1.71897624E12, 38351.2], [1.71897672E12, 30997.764705882353]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.7189751E12, 154.90060240963842], [1.71897492E12, 158.8397212543556], [1.7189754E12, 186.55401234567918], [1.71897522E12, 188.55246913580228], [1.71897504E12, 143.68618618618626], [1.71897552E12, 644.8666666666666], [1.71897534E12, 197.59224806201564], [1.71897516E12, 151.7767722473604], [1.71897498E12, 150.18072289156623], [1.71897546E12, 287.998338870432], [1.71897528E12, 168.13210445468522]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71897672E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.71897432E12, "maxY": 33.5625, "series": [{"data": [[1.71897606E12, 4.078740157480316], [1.71897558E12, 4.0428571428571445], [1.71897588E12, 4.890510948905111], [1.7189757E12, 4.98449612403101], [1.718976E12, 4.148148148148149], [1.71897552E12, 5.82608695652174], [1.71897582E12, 5.496296296296297], [1.71897612E12, 0.0], [1.71897564E12, 3.571428571428573], [1.71897594E12, 3.647058823529412], [1.71897576E12, 4.37121212121212]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.71897444E12, 2.1153846153846136], [1.71897462E12, 2.369863013698633], [1.71897492E12, 0.0], [1.71897456E12, 2.522167487684729], [1.71897474E12, 2.4975845410628024], [1.71897486E12, 2.3171806167400875], [1.71897438E12, 2.1502145922746774], [1.71897468E12, 2.6894736842105242], [1.71897432E12, 2.12863070539419], [1.7189745E12, 2.1260504201680694], [1.7189748E12, 2.417840375586853]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.71897654E12, 30.9047619047619], [1.71897636E12, 19.833333333333332], [1.71897618E12, 6.699999999999999], [1.71897666E12, 10.285714285714286], [1.71897648E12, 15.079999999999991], [1.7189763E12, 25.428571428571423], [1.71897612E12, 33.5625], [1.7189766E12, 23.20833333333333], [1.71897642E12, 10.619047619047619], [1.71897624E12, 15.039999999999997], [1.71897672E12, 18.000000000000004]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.7189751E12, 1.000000000000002], [1.71897492E12, 0.9285714285714298], [1.7189754E12, 0.9320987654320998], [1.71897522E12, 0.7515432098765432], [1.71897504E12, 0.8288288288288301], [1.71897552E12, 0.0], [1.71897534E12, 0.7953488372093025], [1.71897516E12, 1.0935143288084466], [1.71897498E12, 0.7409638554216876], [1.71897546E12, 0.8388704318936874], [1.71897528E12, 0.7557603686635948]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71897672E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 72.0, "minX": 1.71897432E12, "maxY": 40585.0, "series": [{"data": [[1.71897654E12, 39937.0], [1.71897462E12, 7613.0], [1.71897492E12, 4684.0], [1.71897522E12, 1710.0], [1.71897552E12, 6984.0], [1.71897534E12, 1681.0], [1.71897564E12, 7120.0], [1.71897432E12, 7035.0], [1.71897594E12, 6840.0], [1.71897624E12, 40252.0], [1.7189751E12, 954.0], [1.7189754E12, 1813.0], [1.7189757E12, 7579.0], [1.718976E12, 6903.0], [1.71897582E12, 6996.0], [1.71897612E12, 39295.0], [1.71897642E12, 39345.0], [1.7189745E12, 7987.0], [1.71897672E12, 39870.0], [1.7189748E12, 7919.0], [1.71897558E12, 7331.0], [1.71897588E12, 6819.0], [1.71897456E12, 7462.0], [1.71897618E12, 39557.0], [1.71897648E12, 39767.0], [1.7189763E12, 40585.0], [1.71897438E12, 7257.0], [1.7189766E12, 39755.0], [1.71897468E12, 7677.0], [1.71897498E12, 1320.0], [1.71897528E12, 1557.0], [1.71897444E12, 7230.0], [1.71897606E12, 6896.0], [1.71897636E12, 40325.0], [1.71897666E12, 39979.0], [1.71897474E12, 7490.0], [1.71897504E12, 637.0], [1.71897486E12, 7182.0], [1.71897516E12, 1334.0], [1.71897546E12, 3194.0], [1.71897576E12, 6933.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71897654E12, 35027.0], [1.71897462E12, 195.0], [1.71897492E12, 75.0], [1.71897522E12, 73.0], [1.71897552E12, 83.0], [1.71897534E12, 74.0], [1.71897564E12, 2786.0], [1.71897432E12, 98.0], [1.71897594E12, 1521.0], [1.71897624E12, 36854.0], [1.7189751E12, 74.0], [1.7189754E12, 74.0], [1.7189757E12, 4105.0], [1.718976E12, 4090.0], [1.71897582E12, 3201.0], [1.71897612E12, 2601.0], [1.71897642E12, 34640.0], [1.7189745E12, 122.0], [1.71897672E12, 13943.0], [1.7189748E12, 155.0], [1.71897558E12, 2817.0], [1.71897588E12, 3343.0], [1.71897456E12, 218.0], [1.71897618E12, 35300.0], [1.71897648E12, 36477.0], [1.7189763E12, 35886.0], [1.71897438E12, 233.0], [1.7189766E12, 36083.0], [1.71897468E12, 308.0], [1.71897498E12, 76.0], [1.71897528E12, 77.0], [1.71897444E12, 109.0], [1.71897606E12, 2635.0], [1.71897636E12, 36087.0], [1.71897666E12, 35425.0], [1.71897474E12, 300.0], [1.71897504E12, 75.0], [1.71897486E12, 176.0], [1.71897516E12, 76.0], [1.71897546E12, 72.0], [1.71897576E12, 2179.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71897654E12, 39768.2], [1.71897462E12, 6380.0], [1.71897492E12, 244.0], [1.71897522E12, 284.0], [1.71897552E12, 6535.4], [1.71897534E12, 229.79999999999995], [1.71897564E12, 5989.5], [1.71897432E12, 5121.400000000001], [1.71897594E12, 6495.8], [1.71897624E12, 39552.8], [1.7189751E12, 208.39999999999998], [1.7189754E12, 189.80000000000018], [1.7189757E12, 6461.0], [1.718976E12, 6496.8], [1.71897582E12, 6462.6], [1.71897612E12, 38686.0], [1.71897642E12, 38887.6], [1.7189745E12, 6104.2], [1.71897672E12, 39475.6], [1.7189748E12, 5965.4], [1.71897558E12, 6695.900000000001], [1.71897588E12, 6318.4], [1.71897456E12, 6599.8], [1.71897618E12, 39231.8], [1.71897648E12, 39440.4], [1.7189763E12, 39990.8], [1.71897438E12, 5481.4], [1.7189766E12, 39258.0], [1.71897468E12, 6829.8], [1.71897498E12, 204.0], [1.71897528E12, 208.79999999999995], [1.71897444E12, 6145.5], [1.71897606E12, 6611.6], [1.71897636E12, 39852.5], [1.71897666E12, 39818.6], [1.71897474E12, 6504.000000000001], [1.71897504E12, 217.60000000000014], [1.71897486E12, 6176.000000000001], [1.71897516E12, 219.4000000000001], [1.71897546E12, 794.4000000000076], [1.71897576E12, 6265.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71897654E12, 39937.0], [1.71897462E12, 7400.2], [1.71897492E12, 2502.0], [1.71897522E12, 1414.8000000000002], [1.71897552E12, 6972.5], [1.71897534E12, 1571.2199999999978], [1.71897564E12, 6944.520000000001], [1.71897432E12, 6897.199999999999], [1.71897594E12, 6835.93], [1.71897624E12, 40252.0], [1.7189751E12, 746.4399999999999], [1.7189754E12, 1688.4200000000003], [1.7189757E12, 7474.299999999996], [1.718976E12, 6898.32], [1.71897582E12, 6987.36], [1.71897612E12, 39295.0], [1.71897642E12, 39345.0], [1.7189745E12, 7705.939999999998], [1.71897672E12, 39870.0], [1.7189748E12, 7623.299999999996], [1.71897558E12, 7216.610000000001], [1.71897588E12, 6819.0], [1.71897456E12, 7425.920000000001], [1.71897618E12, 39557.0], [1.71897648E12, 39767.0], [1.7189763E12, 40585.0], [1.71897438E12, 7118.339999999999], [1.7189766E12, 39755.0], [1.71897468E12, 7616.9400000000005], [1.71897498E12, 1152.7999999999993], [1.71897528E12, 1371.08], [1.71897444E12, 6967.95], [1.71897606E12, 6894.04], [1.71897636E12, 40325.0], [1.71897666E12, 39979.0], [1.71897474E12, 7280.24], [1.71897504E12, 596.8400000000001], [1.71897486E12, 6905.64], [1.71897516E12, 1194.0], [1.71897546E12, 2965.7800000000007], [1.71897576E12, 6878.879999999998]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71897654E12, 38560.0], [1.71897462E12, 2588.0], [1.71897492E12, 116.0], [1.71897522E12, 116.0], [1.71897552E12, 5286.0], [1.71897534E12, 119.0], [1.71897564E12, 4935.0], [1.71897432E12, 1823.0], [1.71897594E12, 5553.5], [1.71897624E12, 38338.0], [1.7189751E12, 118.0], [1.7189754E12, 116.0], [1.7189757E12, 5739.0], [1.718976E12, 5550.0], [1.71897582E12, 5675.0], [1.71897612E12, 5941.5], [1.71897642E12, 37909.0], [1.7189745E12, 2194.5], [1.71897672E12, 33717.0], [1.7189748E12, 2535.0], [1.71897558E12, 5593.5], [1.71897588E12, 5526.0], [1.71897456E12, 2638.0], [1.71897618E12, 38379.0], [1.71897648E12, 38272.0], [1.7189763E12, 38099.0], [1.71897438E12, 2305.0], [1.7189766E12, 38323.5], [1.71897468E12, 2773.0], [1.71897498E12, 118.0], [1.71897528E12, 126.0], [1.71897444E12, 2254.5], [1.71897606E12, 5615.0], [1.71897636E12, 38457.0], [1.71897666E12, 37904.0], [1.71897474E12, 2588.0], [1.71897504E12, 115.0], [1.71897486E12, 2307.0], [1.71897516E12, 117.5], [1.71897546E12, 121.0], [1.71897576E12, 5687.5]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.71897654E12, 39920.3], [1.71897462E12, 6796.0], [1.71897492E12, 1281.0], [1.71897522E12, 688.0], [1.71897552E12, 6822.499999999999], [1.71897534E12, 1167.3999999999992], [1.71897564E12, 6289.099999999999], [1.71897432E12, 6028.299999999998], [1.71897594E12, 6716.45], [1.71897624E12, 40044.4], [1.7189751E12, 564.5999999999998], [1.7189754E12, 560.550000000001], [1.7189757E12, 6670.0], [1.718976E12, 6735.599999999999], [1.71897582E12, 6668.0], [1.71897612E12, 39202.6], [1.71897642E12, 39305.3], [1.7189745E12, 7156.799999999999], [1.71897672E12, 39870.0], [1.7189748E12, 6522.599999999999], [1.71897558E12, 6978.249999999999], [1.71897588E12, 6577.7], [1.71897456E12, 7059.4], [1.71897618E12, 39541.75], [1.71897648E12, 39698.9], [1.7189763E12, 40532.7], [1.71897438E12, 6279.2], [1.7189766E12, 39659.5], [1.71897468E12, 7098.449999999998], [1.71897498E12, 543.0], [1.71897528E12, 262.69999999999993], [1.71897444E12, 6582.25], [1.71897606E12, 6729.2], [1.71897636E12, 40235.5], [1.71897666E12, 39966.9], [1.71897474E12, 6831.599999999999], [1.71897504E12, 533.8], [1.71897486E12, 6567.0], [1.71897516E12, 540.35], [1.71897546E12, 1442.2999999999997], [1.71897576E12, 6484.1]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71897672E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 5763.5, "series": [{"data": [[2.0, 4934.0], [8.0, 141.0], [9.0, 122.0], [10.0, 122.0], [11.0, 118.0], [3.0, 3895.0], [12.0, 118.0], [13.0, 120.0], [14.0, 119.0], [15.0, 118.0], [4.0, 3936.5], [1.0, 5763.5], [5.0, 2521.0], [6.0, 2607.0], [7.0, 1879.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 0.0], [9.0, 0.0], [10.0, 0.0], [5.0, 0.0], [11.0, 0.0], [12.0, 0.0], [13.0, 0.0], [14.0, 0.0], [7.0, 0.0], [15.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 15.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 5763.5, "series": [{"data": [[2.0, 4933.0], [8.0, 137.5], [9.0, 119.5], [10.0, 119.0], [11.0, 115.0], [3.0, 3894.0], [12.0, 115.0], [13.0, 117.0], [14.0, 116.0], [15.0, 115.0], [4.0, 3936.5], [1.0, 5763.5], [5.0, 2521.0], [6.0, 2607.0], [7.0, 1877.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 0.0], [9.0, 0.0], [10.0, 0.0], [5.0, 0.0], [11.0, 0.0], [12.0, 0.0], [13.0, 0.0], [14.0, 0.0], [7.0, 0.0], [15.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 15.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.71897432E12, "maxY": 11.1, "series": [{"data": [[1.71897654E12, 0.36666666666666664], [1.71897462E12, 3.55], [1.71897492E12, 9.666666666666666], [1.71897522E12, 10.783333333333333], [1.71897552E12, 2.5], [1.71897534E12, 10.716666666666667], [1.71897564E12, 2.4166666666666665], [1.71897432E12, 4.15], [1.71897594E12, 2.316666666666667], [1.71897624E12, 0.43333333333333335], [1.7189751E12, 11.05], [1.7189754E12, 10.733333333333333], [1.7189757E12, 2.1666666666666665], [1.718976E12, 2.15], [1.71897582E12, 2.216666666666667], [1.71897612E12, 0.6666666666666666], [1.71897642E12, 0.35], [1.7189745E12, 4.0], [1.71897672E12, 0.03333333333333333], [1.7189748E12, 3.566666666666667], [1.71897558E12, 2.2666666666666666], [1.71897588E12, 2.25], [1.71897456E12, 3.3833333333333333], [1.71897618E12, 0.31666666666666665], [1.71897648E12, 0.4], [1.7189763E12, 0.3333333333333333], [1.71897438E12, 3.9166666666666665], [1.7189766E12, 0.4], [1.71897468E12, 3.216666666666667], [1.71897498E12, 11.1], [1.71897528E12, 10.933333333333334], [1.71897444E12, 3.9166666666666665], [1.71897606E12, 2.2333333333333334], [1.71897636E12, 0.4166666666666667], [1.71897666E12, 0.35], [1.71897474E12, 3.4833333333333334], [1.71897504E12, 11.083333333333334], [1.71897486E12, 3.716666666666667], [1.71897516E12, 11.083333333333334], [1.71897546E12, 10.133333333333333], [1.71897576E12, 2.2333333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71897672E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.71897432E12, "maxY": 10.916666666666666, "series": [{"data": [[1.71897654E12, 0.35], [1.71897462E12, 3.65], [1.71897492E12, 9.316666666666666], [1.71897522E12, 10.65], [1.71897552E12, 2.4166666666666665], [1.71897534E12, 10.5], [1.71897564E12, 2.3333333333333335], [1.71897432E12, 4.016666666666667], [1.71897594E12, 2.2666666666666666], [1.71897624E12, 0.4166666666666667], [1.7189751E12, 10.916666666666666], [1.7189754E12, 10.7], [1.7189757E12, 2.15], [1.718976E12, 2.25], [1.71897582E12, 2.25], [1.71897612E12, 0.6666666666666666], [1.71897642E12, 0.35], [1.7189745E12, 3.966666666666667], [1.71897672E12, 0.2833333333333333], [1.7189748E12, 3.55], [1.71897558E12, 2.3333333333333335], [1.71897588E12, 2.283333333333333], [1.71897456E12, 3.3833333333333333], [1.71897618E12, 0.3333333333333333], [1.71897648E12, 0.4166666666666667], [1.7189763E12, 0.35], [1.71897438E12, 3.8833333333333333], [1.7189766E12, 0.4], [1.71897468E12, 3.1666666666666665], [1.71897498E12, 10.316666666666666], [1.71897528E12, 10.75], [1.71897444E12, 3.9], [1.71897606E12, 2.1166666666666667], [1.71897636E12, 0.4], [1.71897666E12, 0.35], [1.71897474E12, 3.45], [1.71897504E12, 10.85], [1.71897486E12, 3.783333333333333], [1.71897516E12, 10.2], [1.71897546E12, 9.633333333333333], [1.71897576E12, 2.2]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.7189751E12, 0.15], [1.71897492E12, 0.5], [1.7189754E12, 0.1], [1.71897522E12, 0.15], [1.71897504E12, 0.25], [1.71897534E12, 0.25], [1.71897516E12, 0.85], [1.71897498E12, 0.75], [1.71897546E12, 0.4], [1.71897528E12, 0.1]], "isOverall": false, "label": "Non HTTP response code: java.net.URISyntaxException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71897672E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.71897432E12, "maxY": 10.916666666666666, "series": [{"data": [[1.71897444E12, 3.9], [1.71897462E12, 3.65], [1.71897492E12, 0.25], [1.71897456E12, 3.3833333333333333], [1.71897474E12, 3.45], [1.71897486E12, 3.783333333333333], [1.71897438E12, 3.8833333333333333], [1.71897468E12, 3.1666666666666665], [1.71897432E12, 4.016666666666667], [1.7189745E12, 3.966666666666667], [1.7189748E12, 3.55]], "isOverall": false, "label": "TitleBasics by primary_title-success", "isController": false}, {"data": [[1.71897654E12, 0.35], [1.71897636E12, 0.4], [1.71897618E12, 0.3333333333333333], [1.71897666E12, 0.35], [1.71897648E12, 0.4166666666666667], [1.7189763E12, 0.35], [1.71897612E12, 0.26666666666666666], [1.7189766E12, 0.4], [1.71897642E12, 0.35], [1.71897624E12, 0.4166666666666667], [1.71897672E12, 0.2833333333333333]], "isOverall": false, "label": "Actors by name-success", "isController": false}, {"data": [[1.7189751E12, 0.15], [1.71897492E12, 0.5], [1.7189754E12, 0.1], [1.71897522E12, 0.15], [1.71897504E12, 0.25], [1.71897534E12, 0.25], [1.71897516E12, 0.85], [1.71897498E12, 0.75], [1.71897546E12, 0.4], [1.71897528E12, 0.1]], "isOverall": false, "label": "TitleBasics by params-failure", "isController": false}, {"data": [[1.7189751E12, 10.916666666666666], [1.71897492E12, 9.066666666666666], [1.7189754E12, 10.7], [1.71897522E12, 10.65], [1.71897504E12, 10.85], [1.71897552E12, 0.5], [1.71897534E12, 10.5], [1.71897516E12, 10.2], [1.71897498E12, 10.316666666666666], [1.71897546E12, 9.633333333333333], [1.71897528E12, 10.75]], "isOverall": false, "label": "TitleBasics by params-success", "isController": false}, {"data": [[1.71897606E12, 2.1166666666666667], [1.71897558E12, 2.3333333333333335], [1.71897588E12, 2.283333333333333], [1.7189757E12, 2.15], [1.718976E12, 2.25], [1.71897552E12, 1.9166666666666667], [1.71897582E12, 2.25], [1.71897612E12, 0.4], [1.71897564E12, 2.3333333333333335], [1.71897594E12, 2.2666666666666666], [1.71897576E12, 2.2]], "isOverall": false, "label": "Directors by name-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71897672E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.71897432E12, "maxY": 10.916666666666666, "series": [{"data": [[1.71897654E12, 0.35], [1.71897462E12, 3.65], [1.71897492E12, 9.316666666666666], [1.71897522E12, 10.65], [1.71897552E12, 2.4166666666666665], [1.71897534E12, 10.5], [1.71897564E12, 2.3333333333333335], [1.71897432E12, 4.016666666666667], [1.71897594E12, 2.2666666666666666], [1.71897624E12, 0.4166666666666667], [1.7189751E12, 10.916666666666666], [1.7189754E12, 10.7], [1.7189757E12, 2.15], [1.718976E12, 2.25], [1.71897582E12, 2.25], [1.71897612E12, 0.6666666666666666], [1.71897642E12, 0.35], [1.7189745E12, 3.966666666666667], [1.71897672E12, 0.2833333333333333], [1.7189748E12, 3.55], [1.71897558E12, 2.3333333333333335], [1.71897588E12, 2.283333333333333], [1.71897456E12, 3.3833333333333333], [1.71897618E12, 0.3333333333333333], [1.71897648E12, 0.4166666666666667], [1.7189763E12, 0.35], [1.71897438E12, 3.8833333333333333], [1.7189766E12, 0.4], [1.71897468E12, 3.1666666666666665], [1.71897498E12, 10.316666666666666], [1.71897528E12, 10.75], [1.71897444E12, 3.9], [1.71897606E12, 2.1166666666666667], [1.71897636E12, 0.4], [1.71897666E12, 0.35], [1.71897474E12, 3.45], [1.71897504E12, 10.85], [1.71897486E12, 3.783333333333333], [1.71897516E12, 10.2], [1.71897546E12, 9.633333333333333], [1.71897576E12, 2.2]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.7189751E12, 0.15], [1.71897492E12, 0.5], [1.7189754E12, 0.1], [1.71897522E12, 0.15], [1.71897504E12, 0.25], [1.71897534E12, 0.25], [1.71897516E12, 0.85], [1.71897498E12, 0.75], [1.71897546E12, 0.4], [1.71897528E12, 0.1]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71897672E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}


/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 22945.0, "series": [{"data": [[0.0, 745.0], [0.1, 745.0], [0.2, 745.0], [0.3, 745.0], [0.4, 745.0], [0.5, 745.0], [0.6, 745.0], [0.7, 745.0], [0.8, 745.0], [0.9, 745.0], [1.0, 745.0], [1.1, 745.0], [1.2, 745.0], [1.3, 745.0], [1.4, 745.0], [1.5, 745.0], [1.6, 745.0], [1.7, 745.0], [1.8, 745.0], [1.9, 745.0], [2.0, 745.0], [2.1, 745.0], [2.2, 1123.0], [2.3, 1123.0], [2.4, 1123.0], [2.5, 1123.0], [2.6, 1123.0], [2.7, 1123.0], [2.8, 1123.0], [2.9, 1123.0], [3.0, 1123.0], [3.1, 1123.0], [3.2, 1123.0], [3.3, 1123.0], [3.4, 1123.0], [3.5, 1123.0], [3.6, 1123.0], [3.7, 1123.0], [3.8, 1123.0], [3.9, 1123.0], [4.0, 1123.0], [4.1, 1123.0], [4.2, 1123.0], [4.3, 1123.0], [4.4, 1156.0], [4.5, 1156.0], [4.6, 1156.0], [4.7, 1156.0], [4.8, 1156.0], [4.9, 1156.0], [5.0, 1156.0], [5.1, 1156.0], [5.2, 1156.0], [5.3, 1156.0], [5.4, 1156.0], [5.5, 1156.0], [5.6, 1156.0], [5.7, 1156.0], [5.8, 1156.0], [5.9, 1156.0], [6.0, 1156.0], [6.1, 1156.0], [6.2, 1156.0], [6.3, 1156.0], [6.4, 1156.0], [6.5, 1156.0], [6.6, 1159.0], [6.7, 1159.0], [6.8, 1159.0], [6.9, 1159.0], [7.0, 1159.0], [7.1, 1159.0], [7.2, 1159.0], [7.3, 1159.0], [7.4, 1159.0], [7.5, 1159.0], [7.6, 1159.0], [7.7, 1159.0], [7.8, 1159.0], [7.9, 1159.0], [8.0, 1159.0], [8.1, 1159.0], [8.2, 1159.0], [8.3, 1159.0], [8.4, 1159.0], [8.5, 1159.0], [8.6, 1159.0], [8.7, 1171.0], [8.8, 1171.0], [8.9, 1171.0], [9.0, 1171.0], [9.1, 1171.0], [9.2, 1171.0], [9.3, 1171.0], [9.4, 1171.0], [9.5, 1171.0], [9.6, 1171.0], [9.7, 1171.0], [9.8, 1171.0], [9.9, 1171.0], [10.0, 1171.0], [10.1, 1171.0], [10.2, 1171.0], [10.3, 1171.0], [10.4, 1171.0], [10.5, 1171.0], [10.6, 1171.0], [10.7, 1171.0], [10.8, 1171.0], [10.9, 1176.0], [11.0, 1176.0], [11.1, 1176.0], [11.2, 1176.0], [11.3, 1176.0], [11.4, 1176.0], [11.5, 1176.0], [11.6, 1176.0], [11.7, 1176.0], [11.8, 1176.0], [11.9, 1176.0], [12.0, 1176.0], [12.1, 1176.0], [12.2, 1176.0], [12.3, 1176.0], [12.4, 1176.0], [12.5, 1176.0], [12.6, 1176.0], [12.7, 1176.0], [12.8, 1176.0], [12.9, 1176.0], [13.0, 1176.0], [13.1, 1228.0], [13.2, 1228.0], [13.3, 1228.0], [13.4, 1228.0], [13.5, 1228.0], [13.6, 1228.0], [13.7, 1228.0], [13.8, 1228.0], [13.9, 1228.0], [14.0, 1228.0], [14.1, 1228.0], [14.2, 1228.0], [14.3, 1228.0], [14.4, 1228.0], [14.5, 1228.0], [14.6, 1228.0], [14.7, 1228.0], [14.8, 1228.0], [14.9, 1228.0], [15.0, 1228.0], [15.1, 1228.0], [15.2, 1228.0], [15.3, 1239.0], [15.4, 1239.0], [15.5, 1239.0], [15.6, 1239.0], [15.7, 1239.0], [15.8, 1239.0], [15.9, 1239.0], [16.0, 1239.0], [16.1, 1239.0], [16.2, 1239.0], [16.3, 1239.0], [16.4, 1239.0], [16.5, 1239.0], [16.6, 1239.0], [16.7, 1239.0], [16.8, 1239.0], [16.9, 1239.0], [17.0, 1239.0], [17.1, 1239.0], [17.2, 1239.0], [17.3, 1239.0], [17.4, 1254.0], [17.5, 1254.0], [17.6, 1254.0], [17.7, 1254.0], [17.8, 1254.0], [17.9, 1254.0], [18.0, 1254.0], [18.1, 1254.0], [18.2, 1254.0], [18.3, 1254.0], [18.4, 1254.0], [18.5, 1254.0], [18.6, 1254.0], [18.7, 1254.0], [18.8, 1254.0], [18.9, 1254.0], [19.0, 1254.0], [19.1, 1254.0], [19.2, 1254.0], [19.3, 1254.0], [19.4, 1254.0], [19.5, 1254.0], [19.6, 1275.0], [19.7, 1275.0], [19.8, 1275.0], [19.9, 1275.0], [20.0, 1275.0], [20.1, 1275.0], [20.2, 1275.0], [20.3, 1275.0], [20.4, 1275.0], [20.5, 1275.0], [20.6, 1275.0], [20.7, 1275.0], [20.8, 1275.0], [20.9, 1275.0], [21.0, 1275.0], [21.1, 1275.0], [21.2, 1275.0], [21.3, 1275.0], [21.4, 1275.0], [21.5, 1275.0], [21.6, 1275.0], [21.7, 1275.0], [21.8, 1318.0], [21.9, 1318.0], [22.0, 1318.0], [22.1, 1318.0], [22.2, 1318.0], [22.3, 1318.0], [22.4, 1318.0], [22.5, 1318.0], [22.6, 1318.0], [22.7, 1318.0], [22.8, 1318.0], [22.9, 1318.0], [23.0, 1318.0], [23.1, 1318.0], [23.2, 1318.0], [23.3, 1318.0], [23.4, 1318.0], [23.5, 1318.0], [23.6, 1318.0], [23.7, 1318.0], [23.8, 1318.0], [23.9, 1318.0], [24.0, 1345.0], [24.1, 1345.0], [24.2, 1345.0], [24.3, 1345.0], [24.4, 1345.0], [24.5, 1345.0], [24.6, 1345.0], [24.7, 1345.0], [24.8, 1345.0], [24.9, 1345.0], [25.0, 1345.0], [25.1, 1345.0], [25.2, 1345.0], [25.3, 1345.0], [25.4, 1345.0], [25.5, 1345.0], [25.6, 1345.0], [25.7, 1345.0], [25.8, 1345.0], [25.9, 1345.0], [26.0, 1345.0], [26.1, 1348.0], [26.2, 1348.0], [26.3, 1348.0], [26.4, 1348.0], [26.5, 1348.0], [26.6, 1348.0], [26.7, 1348.0], [26.8, 1348.0], [26.9, 1348.0], [27.0, 1348.0], [27.1, 1348.0], [27.2, 1348.0], [27.3, 1348.0], [27.4, 1348.0], [27.5, 1348.0], [27.6, 1348.0], [27.7, 1348.0], [27.8, 1348.0], [27.9, 1348.0], [28.0, 1348.0], [28.1, 1348.0], [28.2, 1348.0], [28.3, 1364.0], [28.4, 1364.0], [28.5, 1364.0], [28.6, 1364.0], [28.7, 1364.0], [28.8, 1364.0], [28.9, 1364.0], [29.0, 1364.0], [29.1, 1364.0], [29.2, 1364.0], [29.3, 1364.0], [29.4, 1364.0], [29.5, 1364.0], [29.6, 1364.0], [29.7, 1364.0], [29.8, 1364.0], [29.9, 1364.0], [30.0, 1364.0], [30.1, 1364.0], [30.2, 1364.0], [30.3, 1364.0], [30.4, 1364.0], [30.5, 1385.0], [30.6, 1385.0], [30.7, 1385.0], [30.8, 1385.0], [30.9, 1385.0], [31.0, 1385.0], [31.1, 1385.0], [31.2, 1385.0], [31.3, 1385.0], [31.4, 1385.0], [31.5, 1385.0], [31.6, 1385.0], [31.7, 1385.0], [31.8, 1385.0], [31.9, 1385.0], [32.0, 1385.0], [32.1, 1385.0], [32.2, 1385.0], [32.3, 1385.0], [32.4, 1385.0], [32.5, 1385.0], [32.6, 1385.0], [32.7, 1417.0], [32.8, 1417.0], [32.9, 1417.0], [33.0, 1417.0], [33.1, 1417.0], [33.2, 1417.0], [33.3, 1417.0], [33.4, 1417.0], [33.5, 1417.0], [33.6, 1417.0], [33.7, 1417.0], [33.8, 1417.0], [33.9, 1417.0], [34.0, 1417.0], [34.1, 1417.0], [34.2, 1417.0], [34.3, 1417.0], [34.4, 1417.0], [34.5, 1417.0], [34.6, 1417.0], [34.7, 1417.0], [34.8, 1424.0], [34.9, 1424.0], [35.0, 1424.0], [35.1, 1424.0], [35.2, 1424.0], [35.3, 1424.0], [35.4, 1424.0], [35.5, 1424.0], [35.6, 1424.0], [35.7, 1424.0], [35.8, 1424.0], [35.9, 1424.0], [36.0, 1424.0], [36.1, 1424.0], [36.2, 1424.0], [36.3, 1424.0], [36.4, 1424.0], [36.5, 1424.0], [36.6, 1424.0], [36.7, 1424.0], [36.8, 1424.0], [36.9, 1424.0], [37.0, 1617.0], [37.1, 1617.0], [37.2, 1617.0], [37.3, 1617.0], [37.4, 1617.0], [37.5, 1617.0], [37.6, 1617.0], [37.7, 1617.0], [37.8, 1617.0], [37.9, 1617.0], [38.0, 1617.0], [38.1, 1617.0], [38.2, 1617.0], [38.3, 1617.0], [38.4, 1617.0], [38.5, 1617.0], [38.6, 1617.0], [38.7, 1617.0], [38.8, 1617.0], [38.9, 1617.0], [39.0, 1617.0], [39.1, 1617.0], [39.2, 1697.0], [39.3, 1697.0], [39.4, 1697.0], [39.5, 1697.0], [39.6, 1697.0], [39.7, 1697.0], [39.8, 1697.0], [39.9, 1697.0], [40.0, 1697.0], [40.1, 1697.0], [40.2, 1697.0], [40.3, 1697.0], [40.4, 1697.0], [40.5, 1697.0], [40.6, 1697.0], [40.7, 1697.0], [40.8, 1697.0], [40.9, 1697.0], [41.0, 1697.0], [41.1, 1697.0], [41.2, 1697.0], [41.3, 1697.0], [41.4, 1720.0], [41.5, 1720.0], [41.6, 1720.0], [41.7, 1720.0], [41.8, 1720.0], [41.9, 1720.0], [42.0, 1720.0], [42.1, 1720.0], [42.2, 1720.0], [42.3, 1720.0], [42.4, 1720.0], [42.5, 1720.0], [42.6, 1720.0], [42.7, 1720.0], [42.8, 1720.0], [42.9, 1720.0], [43.0, 1720.0], [43.1, 1720.0], [43.2, 1720.0], [43.3, 1720.0], [43.4, 1720.0], [43.5, 1937.0], [43.6, 1937.0], [43.7, 1937.0], [43.8, 1937.0], [43.9, 1937.0], [44.0, 1937.0], [44.1, 1937.0], [44.2, 1937.0], [44.3, 1937.0], [44.4, 1937.0], [44.5, 1937.0], [44.6, 1937.0], [44.7, 1937.0], [44.8, 1937.0], [44.9, 1937.0], [45.0, 1937.0], [45.1, 1937.0], [45.2, 1937.0], [45.3, 1937.0], [45.4, 1937.0], [45.5, 1937.0], [45.6, 1937.0], [45.7, 2118.0], [45.8, 2118.0], [45.9, 2118.0], [46.0, 2118.0], [46.1, 2118.0], [46.2, 2118.0], [46.3, 2118.0], [46.4, 2118.0], [46.5, 2118.0], [46.6, 2118.0], [46.7, 2118.0], [46.8, 2118.0], [46.9, 2118.0], [47.0, 2118.0], [47.1, 2118.0], [47.2, 2118.0], [47.3, 2118.0], [47.4, 2118.0], [47.5, 2118.0], [47.6, 2118.0], [47.7, 2118.0], [47.8, 2118.0], [47.9, 2154.0], [48.0, 2154.0], [48.1, 2154.0], [48.2, 2154.0], [48.3, 2154.0], [48.4, 2154.0], [48.5, 2154.0], [48.6, 2154.0], [48.7, 2154.0], [48.8, 2154.0], [48.9, 2154.0], [49.0, 2154.0], [49.1, 2154.0], [49.2, 2154.0], [49.3, 2154.0], [49.4, 2154.0], [49.5, 2154.0], [49.6, 2154.0], [49.7, 2154.0], [49.8, 2154.0], [49.9, 2154.0], [50.0, 2284.0], [50.1, 2284.0], [50.2, 2284.0], [50.3, 2284.0], [50.4, 2284.0], [50.5, 2284.0], [50.6, 2284.0], [50.7, 2284.0], [50.8, 2284.0], [50.9, 2284.0], [51.0, 2284.0], [51.1, 2284.0], [51.2, 2284.0], [51.3, 2284.0], [51.4, 2284.0], [51.5, 2284.0], [51.6, 2284.0], [51.7, 2284.0], [51.8, 2284.0], [51.9, 2284.0], [52.0, 2284.0], [52.1, 2284.0], [52.2, 2293.0], [52.3, 2293.0], [52.4, 2293.0], [52.5, 2293.0], [52.6, 2293.0], [52.7, 2293.0], [52.8, 2293.0], [52.9, 2293.0], [53.0, 2293.0], [53.1, 2293.0], [53.2, 2293.0], [53.3, 2293.0], [53.4, 2293.0], [53.5, 2293.0], [53.6, 2293.0], [53.7, 2293.0], [53.8, 2293.0], [53.9, 2293.0], [54.0, 2293.0], [54.1, 2293.0], [54.2, 2293.0], [54.3, 2293.0], [54.4, 2306.0], [54.5, 2306.0], [54.6, 2306.0], [54.7, 2306.0], [54.8, 2306.0], [54.9, 2306.0], [55.0, 2306.0], [55.1, 2306.0], [55.2, 2306.0], [55.3, 2306.0], [55.4, 2306.0], [55.5, 2306.0], [55.6, 2306.0], [55.7, 2306.0], [55.8, 2306.0], [55.9, 2306.0], [56.0, 2306.0], [56.1, 2306.0], [56.2, 2306.0], [56.3, 2306.0], [56.4, 2306.0], [56.5, 2306.0], [56.6, 2306.0], [56.7, 2306.0], [56.8, 2306.0], [56.9, 2306.0], [57.0, 2306.0], [57.1, 2306.0], [57.2, 2306.0], [57.3, 2306.0], [57.4, 2306.0], [57.5, 2306.0], [57.6, 2306.0], [57.7, 2306.0], [57.8, 2306.0], [57.9, 2306.0], [58.0, 2306.0], [58.1, 2306.0], [58.2, 2306.0], [58.3, 2306.0], [58.4, 2306.0], [58.5, 2306.0], [58.6, 2306.0], [58.7, 2329.0], [58.8, 2329.0], [58.9, 2329.0], [59.0, 2329.0], [59.1, 2329.0], [59.2, 2329.0], [59.3, 2329.0], [59.4, 2329.0], [59.5, 2329.0], [59.6, 2329.0], [59.7, 2329.0], [59.8, 2329.0], [59.9, 2329.0], [60.0, 2329.0], [60.1, 2329.0], [60.2, 2329.0], [60.3, 2329.0], [60.4, 2329.0], [60.5, 2329.0], [60.6, 2329.0], [60.7, 2329.0], [60.8, 2329.0], [60.9, 2418.0], [61.0, 2418.0], [61.1, 2418.0], [61.2, 2418.0], [61.3, 2418.0], [61.4, 2418.0], [61.5, 2418.0], [61.6, 2418.0], [61.7, 2418.0], [61.8, 2418.0], [61.9, 2418.0], [62.0, 2418.0], [62.1, 2418.0], [62.2, 2418.0], [62.3, 2418.0], [62.4, 2418.0], [62.5, 2418.0], [62.6, 2418.0], [62.7, 2418.0], [62.8, 2418.0], [62.9, 2418.0], [63.0, 2418.0], [63.1, 2433.0], [63.2, 2433.0], [63.3, 2433.0], [63.4, 2433.0], [63.5, 2433.0], [63.6, 2433.0], [63.7, 2433.0], [63.8, 2433.0], [63.9, 2433.0], [64.0, 2433.0], [64.1, 2433.0], [64.2, 2433.0], [64.3, 2433.0], [64.4, 2433.0], [64.5, 2433.0], [64.6, 2433.0], [64.7, 2433.0], [64.8, 2433.0], [64.9, 2433.0], [65.0, 2433.0], [65.1, 2433.0], [65.2, 2433.0], [65.3, 2756.0], [65.4, 2756.0], [65.5, 2756.0], [65.6, 2756.0], [65.7, 2756.0], [65.8, 2756.0], [65.9, 2756.0], [66.0, 2756.0], [66.1, 2756.0], [66.2, 2756.0], [66.3, 2756.0], [66.4, 2756.0], [66.5, 2756.0], [66.6, 2756.0], [66.7, 2756.0], [66.8, 2756.0], [66.9, 2756.0], [67.0, 2756.0], [67.1, 2756.0], [67.2, 2756.0], [67.3, 2756.0], [67.4, 2767.0], [67.5, 2767.0], [67.6, 2767.0], [67.7, 2767.0], [67.8, 2767.0], [67.9, 2767.0], [68.0, 2767.0], [68.1, 2767.0], [68.2, 2767.0], [68.3, 2767.0], [68.4, 2767.0], [68.5, 2767.0], [68.6, 2767.0], [68.7, 2767.0], [68.8, 2767.0], [68.9, 2767.0], [69.0, 2767.0], [69.1, 2767.0], [69.2, 2767.0], [69.3, 2767.0], [69.4, 2767.0], [69.5, 2767.0], [69.6, 2891.0], [69.7, 2891.0], [69.8, 2891.0], [69.9, 2891.0], [70.0, 2891.0], [70.1, 2891.0], [70.2, 2891.0], [70.3, 2891.0], [70.4, 2891.0], [70.5, 2891.0], [70.6, 2891.0], [70.7, 2891.0], [70.8, 2891.0], [70.9, 2891.0], [71.0, 2891.0], [71.1, 2891.0], [71.2, 2891.0], [71.3, 2891.0], [71.4, 2891.0], [71.5, 2891.0], [71.6, 2891.0], [71.7, 2891.0], [71.8, 3136.0], [71.9, 3136.0], [72.0, 3136.0], [72.1, 3136.0], [72.2, 3136.0], [72.3, 3136.0], [72.4, 3136.0], [72.5, 3136.0], [72.6, 3136.0], [72.7, 3136.0], [72.8, 3136.0], [72.9, 3136.0], [73.0, 3136.0], [73.1, 3136.0], [73.2, 3136.0], [73.3, 3136.0], [73.4, 3136.0], [73.5, 3136.0], [73.6, 3136.0], [73.7, 3136.0], [73.8, 3136.0], [73.9, 3136.0], [74.0, 3627.0], [74.1, 3627.0], [74.2, 3627.0], [74.3, 3627.0], [74.4, 3627.0], [74.5, 3627.0], [74.6, 3627.0], [74.7, 3627.0], [74.8, 3627.0], [74.9, 3627.0], [75.0, 3627.0], [75.1, 3627.0], [75.2, 3627.0], [75.3, 3627.0], [75.4, 3627.0], [75.5, 3627.0], [75.6, 3627.0], [75.7, 3627.0], [75.8, 3627.0], [75.9, 3627.0], [76.0, 3627.0], [76.1, 3678.0], [76.2, 3678.0], [76.3, 3678.0], [76.4, 3678.0], [76.5, 3678.0], [76.6, 3678.0], [76.7, 3678.0], [76.8, 3678.0], [76.9, 3678.0], [77.0, 3678.0], [77.1, 3678.0], [77.2, 3678.0], [77.3, 3678.0], [77.4, 3678.0], [77.5, 3678.0], [77.6, 3678.0], [77.7, 3678.0], [77.8, 3678.0], [77.9, 3678.0], [78.0, 3678.0], [78.1, 3678.0], [78.2, 3678.0], [78.3, 4042.0], [78.4, 4042.0], [78.5, 4042.0], [78.6, 4042.0], [78.7, 4042.0], [78.8, 4042.0], [78.9, 4042.0], [79.0, 4042.0], [79.1, 4042.0], [79.2, 4042.0], [79.3, 4042.0], [79.4, 4042.0], [79.5, 4042.0], [79.6, 4042.0], [79.7, 4042.0], [79.8, 4042.0], [79.9, 4042.0], [80.0, 4042.0], [80.1, 4042.0], [80.2, 4042.0], [80.3, 4042.0], [80.4, 4042.0], [80.5, 4142.0], [80.6, 4142.0], [80.7, 4142.0], [80.8, 4142.0], [80.9, 4142.0], [81.0, 4142.0], [81.1, 4142.0], [81.2, 4142.0], [81.3, 4142.0], [81.4, 4142.0], [81.5, 4142.0], [81.6, 4142.0], [81.7, 4142.0], [81.8, 4142.0], [81.9, 4142.0], [82.0, 4142.0], [82.1, 4142.0], [82.2, 4142.0], [82.3, 4142.0], [82.4, 4142.0], [82.5, 4142.0], [82.6, 4142.0], [82.7, 4147.0], [82.8, 4147.0], [82.9, 4147.0], [83.0, 4147.0], [83.1, 4147.0], [83.2, 4147.0], [83.3, 4147.0], [83.4, 4147.0], [83.5, 4147.0], [83.6, 4147.0], [83.7, 4147.0], [83.8, 4147.0], [83.9, 4147.0], [84.0, 4147.0], [84.1, 4147.0], [84.2, 4147.0], [84.3, 4147.0], [84.4, 4147.0], [84.5, 4147.0], [84.6, 4147.0], [84.7, 4147.0], [84.8, 4372.0], [84.9, 4372.0], [85.0, 4372.0], [85.1, 4372.0], [85.2, 4372.0], [85.3, 4372.0], [85.4, 4372.0], [85.5, 4372.0], [85.6, 4372.0], [85.7, 4372.0], [85.8, 4372.0], [85.9, 4372.0], [86.0, 4372.0], [86.1, 4372.0], [86.2, 4372.0], [86.3, 4372.0], [86.4, 4372.0], [86.5, 4372.0], [86.6, 4372.0], [86.7, 4372.0], [86.8, 4372.0], [86.9, 4372.0], [87.0, 4406.0], [87.1, 4406.0], [87.2, 4406.0], [87.3, 4406.0], [87.4, 4406.0], [87.5, 4406.0], [87.6, 4406.0], [87.7, 4406.0], [87.8, 4406.0], [87.9, 4406.0], [88.0, 4406.0], [88.1, 4406.0], [88.2, 4406.0], [88.3, 4406.0], [88.4, 4406.0], [88.5, 4406.0], [88.6, 4406.0], [88.7, 4406.0], [88.8, 4406.0], [88.9, 4406.0], [89.0, 4406.0], [89.1, 4406.0], [89.2, 4457.0], [89.3, 4457.0], [89.4, 4457.0], [89.5, 4457.0], [89.6, 4457.0], [89.7, 4457.0], [89.8, 4457.0], [89.9, 4457.0], [90.0, 4457.0], [90.1, 4457.0], [90.2, 4457.0], [90.3, 4457.0], [90.4, 4457.0], [90.5, 4457.0], [90.6, 4457.0], [90.7, 4457.0], [90.8, 4457.0], [90.9, 4457.0], [91.0, 4457.0], [91.1, 4457.0], [91.2, 4457.0], [91.3, 4457.0], [91.4, 4508.0], [91.5, 4508.0], [91.6, 4508.0], [91.7, 4508.0], [91.8, 4508.0], [91.9, 4508.0], [92.0, 4508.0], [92.1, 4508.0], [92.2, 4508.0], [92.3, 4508.0], [92.4, 4508.0], [92.5, 4508.0], [92.6, 4508.0], [92.7, 4508.0], [92.8, 4508.0], [92.9, 4508.0], [93.0, 4508.0], [93.1, 4508.0], [93.2, 4508.0], [93.3, 4508.0], [93.4, 4508.0], [93.5, 4668.0], [93.6, 4668.0], [93.7, 4668.0], [93.8, 4668.0], [93.9, 4668.0], [94.0, 4668.0], [94.1, 4668.0], [94.2, 4668.0], [94.3, 4668.0], [94.4, 4668.0], [94.5, 4668.0], [94.6, 4668.0], [94.7, 4668.0], [94.8, 4668.0], [94.9, 4668.0], [95.0, 4668.0], [95.1, 4668.0], [95.2, 4668.0], [95.3, 4668.0], [95.4, 4668.0], [95.5, 4668.0], [95.6, 4668.0], [95.7, 4961.0], [95.8, 4961.0], [95.9, 4961.0], [96.0, 4961.0], [96.1, 4961.0], [96.2, 4961.0], [96.3, 4961.0], [96.4, 4961.0], [96.5, 4961.0], [96.6, 4961.0], [96.7, 4961.0], [96.8, 4961.0], [96.9, 4961.0], [97.0, 4961.0], [97.1, 4961.0], [97.2, 4961.0], [97.3, 4961.0], [97.4, 4961.0], [97.5, 4961.0], [97.6, 4961.0], [97.7, 4961.0], [97.8, 4961.0], [97.9, 4966.0], [98.0, 4966.0], [98.1, 4966.0], [98.2, 4966.0], [98.3, 4966.0], [98.4, 4966.0], [98.5, 4966.0], [98.6, 4966.0], [98.7, 4966.0], [98.8, 4966.0], [98.9, 4966.0], [99.0, 4966.0], [99.1, 4966.0], [99.2, 4966.0], [99.3, 4966.0], [99.4, 4966.0], [99.5, 4966.0], [99.6, 4966.0], [99.7, 4966.0], [99.8, 4966.0], [99.9, 4966.0], [100.0, 4966.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 108.0], [0.3, 113.0], [0.4, 116.0], [0.5, 119.0], [0.6, 122.0], [0.7, 123.0], [0.8, 127.0], [0.9, 129.0], [1.0, 131.0], [1.1, 134.0], [1.2, 136.0], [1.3, 138.0], [1.4, 140.0], [1.5, 143.0], [1.6, 144.0], [1.7, 146.0], [1.8, 149.0], [1.9, 150.0], [2.0, 152.0], [2.1, 154.0], [2.2, 155.0], [2.3, 158.0], [2.4, 159.0], [2.5, 161.0], [2.6, 162.0], [2.7, 164.0], [2.8, 166.0], [2.9, 167.0], [3.0, 169.0], [3.1, 170.0], [3.2, 171.0], [3.3, 172.0], [3.4, 173.0], [3.5, 174.0], [3.6, 175.0], [3.7, 176.0], [3.8, 176.0], [3.9, 179.0], [4.0, 181.0], [4.1, 182.0], [4.2, 183.0], [4.3, 184.0], [4.4, 186.0], [4.5, 187.0], [4.6, 189.0], [4.7, 190.0], [4.8, 190.0], [4.9, 192.0], [5.0, 193.0], [5.1, 194.0], [5.2, 195.0], [5.3, 197.0], [5.4, 198.0], [5.5, 199.0], [5.6, 200.0], [5.7, 201.0], [5.8, 201.0], [5.9, 203.0], [6.0, 204.0], [6.1, 205.0], [6.2, 206.0], [6.3, 207.0], [6.4, 208.0], [6.5, 210.0], [6.6, 210.0], [6.7, 212.0], [6.8, 213.0], [6.9, 214.0], [7.0, 216.0], [7.1, 217.0], [7.2, 218.0], [7.3, 219.0], [7.4, 221.0], [7.5, 222.0], [7.6, 224.0], [7.7, 226.0], [7.8, 228.0], [7.9, 229.0], [8.0, 230.0], [8.1, 232.0], [8.2, 234.0], [8.3, 235.0], [8.4, 236.0], [8.5, 237.0], [8.6, 239.0], [8.7, 240.0], [8.8, 241.0], [8.9, 243.0], [9.0, 244.0], [9.1, 246.0], [9.2, 247.0], [9.3, 249.0], [9.4, 250.0], [9.5, 251.0], [9.6, 252.0], [9.7, 254.0], [9.8, 255.0], [9.9, 256.0], [10.0, 259.0], [10.1, 260.0], [10.2, 262.0], [10.3, 263.0], [10.4, 265.0], [10.5, 267.0], [10.6, 269.0], [10.7, 270.0], [10.8, 274.0], [10.9, 275.0], [11.0, 276.0], [11.1, 278.0], [11.2, 279.0], [11.3, 281.0], [11.4, 284.0], [11.5, 286.0], [11.6, 288.0], [11.7, 290.0], [11.8, 291.0], [11.9, 292.0], [12.0, 294.0], [12.1, 296.0], [12.2, 298.0], [12.3, 300.0], [12.4, 302.0], [12.5, 303.0], [12.6, 307.0], [12.7, 310.0], [12.8, 313.0], [12.9, 315.0], [13.0, 317.0], [13.1, 319.0], [13.2, 321.0], [13.3, 322.0], [13.4, 324.0], [13.5, 325.0], [13.6, 329.0], [13.7, 331.0], [13.8, 332.0], [13.9, 335.0], [14.0, 336.0], [14.1, 338.0], [14.2, 340.0], [14.3, 341.0], [14.4, 343.0], [14.5, 345.0], [14.6, 348.0], [14.7, 351.0], [14.8, 353.0], [14.9, 355.0], [15.0, 357.0], [15.1, 358.0], [15.2, 361.0], [15.3, 364.0], [15.4, 368.0], [15.5, 369.0], [15.6, 371.0], [15.7, 374.0], [15.8, 376.0], [15.9, 378.0], [16.0, 381.0], [16.1, 382.0], [16.2, 383.0], [16.3, 385.0], [16.4, 386.0], [16.5, 387.0], [16.6, 390.0], [16.7, 392.0], [16.8, 394.0], [16.9, 396.0], [17.0, 398.0], [17.1, 400.0], [17.2, 402.0], [17.3, 404.0], [17.4, 407.0], [17.5, 408.0], [17.6, 410.0], [17.7, 412.0], [17.8, 414.0], [17.9, 415.0], [18.0, 417.0], [18.1, 419.0], [18.2, 420.0], [18.3, 421.0], [18.4, 423.0], [18.5, 424.0], [18.6, 426.0], [18.7, 428.0], [18.8, 429.0], [18.9, 431.0], [19.0, 433.0], [19.1, 434.0], [19.2, 437.0], [19.3, 438.0], [19.4, 439.0], [19.5, 441.0], [19.6, 442.0], [19.7, 444.0], [19.8, 447.0], [19.9, 449.0], [20.0, 450.0], [20.1, 451.0], [20.2, 452.0], [20.3, 453.0], [20.4, 455.0], [20.5, 457.0], [20.6, 458.0], [20.7, 459.0], [20.8, 462.0], [20.9, 463.0], [21.0, 464.0], [21.1, 465.0], [21.2, 467.0], [21.3, 469.0], [21.4, 471.0], [21.5, 473.0], [21.6, 475.0], [21.7, 476.0], [21.8, 478.0], [21.9, 480.0], [22.0, 481.0], [22.1, 483.0], [22.2, 484.0], [22.3, 487.0], [22.4, 490.0], [22.5, 493.0], [22.6, 494.0], [22.7, 495.0], [22.8, 498.0], [22.9, 500.0], [23.0, 504.0], [23.1, 505.0], [23.2, 508.0], [23.3, 512.0], [23.4, 513.0], [23.5, 517.0], [23.6, 518.0], [23.7, 520.0], [23.8, 522.0], [23.9, 524.0], [24.0, 526.0], [24.1, 529.0], [24.2, 532.0], [24.3, 533.0], [24.4, 537.0], [24.5, 539.0], [24.6, 541.0], [24.7, 544.0], [24.8, 545.0], [24.9, 547.0], [25.0, 549.0], [25.1, 552.0], [25.2, 554.0], [25.3, 557.0], [25.4, 560.0], [25.5, 562.0], [25.6, 564.0], [25.7, 566.0], [25.8, 568.0], [25.9, 571.0], [26.0, 575.0], [26.1, 577.0], [26.2, 581.0], [26.3, 587.0], [26.4, 589.0], [26.5, 592.0], [26.6, 595.0], [26.7, 598.0], [26.8, 600.0], [26.9, 601.0], [27.0, 603.0], [27.1, 604.0], [27.2, 606.0], [27.3, 609.0], [27.4, 610.0], [27.5, 612.0], [27.6, 614.0], [27.7, 616.0], [27.8, 619.0], [27.9, 622.0], [28.0, 624.0], [28.1, 626.0], [28.2, 629.0], [28.3, 632.0], [28.4, 634.0], [28.5, 636.0], [28.6, 639.0], [28.7, 641.0], [28.8, 644.0], [28.9, 646.0], [29.0, 648.0], [29.1, 650.0], [29.2, 653.0], [29.3, 657.0], [29.4, 661.0], [29.5, 663.0], [29.6, 666.0], [29.7, 669.0], [29.8, 671.0], [29.9, 673.0], [30.0, 675.0], [30.1, 678.0], [30.2, 681.0], [30.3, 683.0], [30.4, 687.0], [30.5, 688.0], [30.6, 690.0], [30.7, 693.0], [30.8, 696.0], [30.9, 699.0], [31.0, 700.0], [31.1, 704.0], [31.2, 707.0], [31.3, 710.0], [31.4, 712.0], [31.5, 715.0], [31.6, 718.0], [31.7, 721.0], [31.8, 725.0], [31.9, 728.0], [32.0, 731.0], [32.1, 734.0], [32.2, 736.0], [32.3, 740.0], [32.4, 742.0], [32.5, 743.0], [32.6, 747.0], [32.7, 750.0], [32.8, 753.0], [32.9, 754.0], [33.0, 757.0], [33.1, 760.0], [33.2, 763.0], [33.3, 766.0], [33.4, 769.0], [33.5, 771.0], [33.6, 775.0], [33.7, 779.0], [33.8, 783.0], [33.9, 786.0], [34.0, 789.0], [34.1, 793.0], [34.2, 796.0], [34.3, 799.0], [34.4, 803.0], [34.5, 807.0], [34.6, 809.0], [34.7, 812.0], [34.8, 816.0], [34.9, 817.0], [35.0, 822.0], [35.1, 826.0], [35.2, 828.0], [35.3, 831.0], [35.4, 836.0], [35.5, 838.0], [35.6, 844.0], [35.7, 848.0], [35.8, 850.0], [35.9, 854.0], [36.0, 857.0], [36.1, 859.0], [36.2, 862.0], [36.3, 865.0], [36.4, 866.0], [36.5, 869.0], [36.6, 871.0], [36.7, 874.0], [36.8, 877.0], [36.9, 880.0], [37.0, 884.0], [37.1, 889.0], [37.2, 891.0], [37.3, 894.0], [37.4, 898.0], [37.5, 904.0], [37.6, 909.0], [37.7, 912.0], [37.8, 917.0], [37.9, 921.0], [38.0, 926.0], [38.1, 929.0], [38.2, 932.0], [38.3, 935.0], [38.4, 939.0], [38.5, 941.0], [38.6, 945.0], [38.7, 949.0], [38.8, 952.0], [38.9, 955.0], [39.0, 958.0], [39.1, 963.0], [39.2, 966.0], [39.3, 969.0], [39.4, 972.0], [39.5, 976.0], [39.6, 981.0], [39.7, 983.0], [39.8, 987.0], [39.9, 995.0], [40.0, 998.0], [40.1, 1002.0], [40.2, 1005.0], [40.3, 1008.0], [40.4, 1016.0], [40.5, 1023.0], [40.6, 1025.0], [40.7, 1030.0], [40.8, 1032.0], [40.9, 1036.0], [41.0, 1039.0], [41.1, 1040.0], [41.2, 1045.0], [41.3, 1049.0], [41.4, 1055.0], [41.5, 1057.0], [41.6, 1063.0], [41.7, 1067.0], [41.8, 1071.0], [41.9, 1075.0], [42.0, 1077.0], [42.1, 1081.0], [42.2, 1083.0], [42.3, 1087.0], [42.4, 1092.0], [42.5, 1094.0], [42.6, 1101.0], [42.7, 1106.0], [42.8, 1111.0], [42.9, 1115.0], [43.0, 1121.0], [43.1, 1123.0], [43.2, 1131.0], [43.3, 1134.0], [43.4, 1137.0], [43.5, 1141.0], [43.6, 1145.0], [43.7, 1149.0], [43.8, 1152.0], [43.9, 1153.0], [44.0, 1157.0], [44.1, 1161.0], [44.2, 1165.0], [44.3, 1169.0], [44.4, 1174.0], [44.5, 1177.0], [44.6, 1185.0], [44.7, 1193.0], [44.8, 1197.0], [44.9, 1203.0], [45.0, 1207.0], [45.1, 1211.0], [45.2, 1215.0], [45.3, 1220.0], [45.4, 1226.0], [45.5, 1231.0], [45.6, 1234.0], [45.7, 1240.0], [45.8, 1245.0], [45.9, 1247.0], [46.0, 1250.0], [46.1, 1256.0], [46.2, 1258.0], [46.3, 1262.0], [46.4, 1266.0], [46.5, 1270.0], [46.6, 1276.0], [46.7, 1280.0], [46.8, 1286.0], [46.9, 1290.0], [47.0, 1294.0], [47.1, 1297.0], [47.2, 1299.0], [47.3, 1304.0], [47.4, 1309.0], [47.5, 1312.0], [47.6, 1317.0], [47.7, 1319.0], [47.8, 1322.0], [47.9, 1327.0], [48.0, 1332.0], [48.1, 1337.0], [48.2, 1341.0], [48.3, 1346.0], [48.4, 1350.0], [48.5, 1354.0], [48.6, 1356.0], [48.7, 1359.0], [48.8, 1363.0], [48.9, 1366.0], [49.0, 1374.0], [49.1, 1381.0], [49.2, 1389.0], [49.3, 1392.0], [49.4, 1394.0], [49.5, 1399.0], [49.6, 1405.0], [49.7, 1409.0], [49.8, 1417.0], [49.9, 1421.0], [50.0, 1426.0], [50.1, 1429.0], [50.2, 1432.0], [50.3, 1439.0], [50.4, 1444.0], [50.5, 1450.0], [50.6, 1456.0], [50.7, 1461.0], [50.8, 1467.0], [50.9, 1472.0], [51.0, 1477.0], [51.1, 1484.0], [51.2, 1489.0], [51.3, 1495.0], [51.4, 1498.0], [51.5, 1504.0], [51.6, 1508.0], [51.7, 1513.0], [51.8, 1516.0], [51.9, 1523.0], [52.0, 1526.0], [52.1, 1538.0], [52.2, 1544.0], [52.3, 1554.0], [52.4, 1562.0], [52.5, 1565.0], [52.6, 1572.0], [52.7, 1578.0], [52.8, 1582.0], [52.9, 1589.0], [53.0, 1593.0], [53.1, 1597.0], [53.2, 1600.0], [53.3, 1606.0], [53.4, 1609.0], [53.5, 1616.0], [53.6, 1620.0], [53.7, 1627.0], [53.8, 1631.0], [53.9, 1636.0], [54.0, 1641.0], [54.1, 1645.0], [54.2, 1653.0], [54.3, 1657.0], [54.4, 1661.0], [54.5, 1664.0], [54.6, 1672.0], [54.7, 1680.0], [54.8, 1684.0], [54.9, 1690.0], [55.0, 1698.0], [55.1, 1705.0], [55.2, 1713.0], [55.3, 1721.0], [55.4, 1729.0], [55.5, 1735.0], [55.6, 1743.0], [55.7, 1748.0], [55.8, 1750.0], [55.9, 1758.0], [56.0, 1763.0], [56.1, 1766.0], [56.2, 1772.0], [56.3, 1777.0], [56.4, 1784.0], [56.5, 1793.0], [56.6, 1799.0], [56.7, 1805.0], [56.8, 1812.0], [56.9, 1821.0], [57.0, 1826.0], [57.1, 1831.0], [57.2, 1835.0], [57.3, 1838.0], [57.4, 1843.0], [57.5, 1853.0], [57.6, 1859.0], [57.7, 1863.0], [57.8, 1872.0], [57.9, 1878.0], [58.0, 1882.0], [58.1, 1889.0], [58.2, 1897.0], [58.3, 1899.0], [58.4, 1907.0], [58.5, 1916.0], [58.6, 1923.0], [58.7, 1930.0], [58.8, 1936.0], [58.9, 1944.0], [59.0, 1951.0], [59.1, 1957.0], [59.2, 1963.0], [59.3, 1967.0], [59.4, 1971.0], [59.5, 1978.0], [59.6, 1985.0], [59.7, 1991.0], [59.8, 1999.0], [59.9, 2002.0], [60.0, 2006.0], [60.1, 2012.0], [60.2, 2022.0], [60.3, 2028.0], [60.4, 2038.0], [60.5, 2043.0], [60.6, 2046.0], [60.7, 2052.0], [60.8, 2061.0], [60.9, 2066.0], [61.0, 2073.0], [61.1, 2082.0], [61.2, 2090.0], [61.3, 2099.0], [61.4, 2103.0], [61.5, 2109.0], [61.6, 2116.0], [61.7, 2121.0], [61.8, 2125.0], [61.9, 2130.0], [62.0, 2141.0], [62.1, 2146.0], [62.2, 2155.0], [62.3, 2160.0], [62.4, 2169.0], [62.5, 2177.0], [62.6, 2184.0], [62.7, 2197.0], [62.8, 2200.0], [62.9, 2204.0], [63.0, 2207.0], [63.1, 2217.0], [63.2, 2229.0], [63.3, 2235.0], [63.4, 2241.0], [63.5, 2250.0], [63.6, 2257.0], [63.7, 2269.0], [63.8, 2275.0], [63.9, 2279.0], [64.0, 2288.0], [64.1, 2298.0], [64.2, 2302.0], [64.3, 2312.0], [64.4, 2318.0], [64.5, 2326.0], [64.6, 2334.0], [64.7, 2341.0], [64.8, 2353.0], [64.9, 2361.0], [65.0, 2372.0], [65.1, 2379.0], [65.2, 2385.0], [65.3, 2392.0], [65.4, 2399.0], [65.5, 2404.0], [65.6, 2414.0], [65.7, 2424.0], [65.8, 2435.0], [65.9, 2439.0], [66.0, 2451.0], [66.1, 2458.0], [66.2, 2465.0], [66.3, 2475.0], [66.4, 2482.0], [66.5, 2492.0], [66.6, 2498.0], [66.7, 2507.0], [66.8, 2514.0], [66.9, 2523.0], [67.0, 2531.0], [67.1, 2538.0], [67.2, 2545.0], [67.3, 2556.0], [67.4, 2564.0], [67.5, 2576.0], [67.6, 2583.0], [67.7, 2587.0], [67.8, 2599.0], [67.9, 2603.0], [68.0, 2612.0], [68.1, 2616.0], [68.2, 2626.0], [68.3, 2634.0], [68.4, 2643.0], [68.5, 2651.0], [68.6, 2660.0], [68.7, 2665.0], [68.8, 2674.0], [68.9, 2680.0], [69.0, 2694.0], [69.1, 2704.0], [69.2, 2711.0], [69.3, 2718.0], [69.4, 2726.0], [69.5, 2733.0], [69.6, 2743.0], [69.7, 2747.0], [69.8, 2755.0], [69.9, 2768.0], [70.0, 2778.0], [70.1, 2786.0], [70.2, 2794.0], [70.3, 2797.0], [70.4, 2806.0], [70.5, 2817.0], [70.6, 2825.0], [70.7, 2836.0], [70.8, 2844.0], [70.9, 2854.0], [71.0, 2860.0], [71.1, 2869.0], [71.2, 2881.0], [71.3, 2890.0], [71.4, 2896.0], [71.5, 2907.0], [71.6, 2913.0], [71.7, 2925.0], [71.8, 2934.0], [71.9, 2950.0], [72.0, 2963.0], [72.1, 2969.0], [72.2, 2973.0], [72.3, 2981.0], [72.4, 2992.0], [72.5, 3004.0], [72.6, 3019.0], [72.7, 3027.0], [72.8, 3032.0], [72.9, 3045.0], [73.0, 3057.0], [73.1, 3063.0], [73.2, 3076.0], [73.3, 3086.0], [73.4, 3094.0], [73.5, 3106.0], [73.6, 3132.0], [73.7, 3138.0], [73.8, 3151.0], [73.9, 3160.0], [74.0, 3173.0], [74.1, 3193.0], [74.2, 3202.0], [74.3, 3207.0], [74.4, 3214.0], [74.5, 3223.0], [74.6, 3235.0], [74.7, 3244.0], [74.8, 3254.0], [74.9, 3258.0], [75.0, 3268.0], [75.1, 3280.0], [75.2, 3291.0], [75.3, 3308.0], [75.4, 3314.0], [75.5, 3321.0], [75.6, 3330.0], [75.7, 3340.0], [75.8, 3351.0], [75.9, 3359.0], [76.0, 3364.0], [76.1, 3377.0], [76.2, 3385.0], [76.3, 3400.0], [76.4, 3412.0], [76.5, 3421.0], [76.6, 3427.0], [76.7, 3436.0], [76.8, 3451.0], [76.9, 3460.0], [77.0, 3466.0], [77.1, 3475.0], [77.2, 3481.0], [77.3, 3486.0], [77.4, 3498.0], [77.5, 3505.0], [77.6, 3516.0], [77.7, 3528.0], [77.8, 3535.0], [77.9, 3546.0], [78.0, 3556.0], [78.1, 3570.0], [78.2, 3576.0], [78.3, 3592.0], [78.4, 3602.0], [78.5, 3611.0], [78.6, 3622.0], [78.7, 3630.0], [78.8, 3644.0], [78.9, 3663.0], [79.0, 3668.0], [79.1, 3678.0], [79.2, 3691.0], [79.3, 3698.0], [79.4, 3710.0], [79.5, 3721.0], [79.6, 3737.0], [79.7, 3752.0], [79.8, 3761.0], [79.9, 3782.0], [80.0, 3799.0], [80.1, 3816.0], [80.2, 3827.0], [80.3, 3843.0], [80.4, 3855.0], [80.5, 3880.0], [80.6, 3898.0], [80.7, 3911.0], [80.8, 3925.0], [80.9, 3942.0], [81.0, 3970.0], [81.1, 3998.0], [81.2, 4008.0], [81.3, 4024.0], [81.4, 4045.0], [81.5, 4058.0], [81.6, 4071.0], [81.7, 4082.0], [81.8, 4088.0], [81.9, 4100.0], [82.0, 4116.0], [82.1, 4134.0], [82.2, 4145.0], [82.3, 4162.0], [82.4, 4187.0], [82.5, 4213.0], [82.6, 4237.0], [82.7, 4266.0], [82.8, 4304.0], [82.9, 4325.0], [83.0, 4342.0], [83.1, 4364.0], [83.2, 4388.0], [83.3, 4404.0], [83.4, 4426.0], [83.5, 4446.0], [83.6, 4473.0], [83.7, 4488.0], [83.8, 4511.0], [83.9, 4530.0], [84.0, 4549.0], [84.1, 4579.0], [84.2, 4617.0], [84.3, 4631.0], [84.4, 4650.0], [84.5, 4665.0], [84.6, 4682.0], [84.7, 4709.0], [84.8, 4732.0], [84.9, 4740.0], [85.0, 4760.0], [85.1, 4787.0], [85.2, 4816.0], [85.3, 4835.0], [85.4, 4864.0], [85.5, 4876.0], [85.6, 4899.0], [85.7, 4922.0], [85.8, 4951.0], [85.9, 4980.0], [86.0, 5000.0], [86.1, 5017.0], [86.2, 5035.0], [86.3, 5051.0], [86.4, 5067.0], [86.5, 5088.0], [86.6, 5112.0], [86.7, 5138.0], [86.8, 5163.0], [86.9, 5212.0], [87.0, 5235.0], [87.1, 5269.0], [87.2, 5304.0], [87.3, 5317.0], [87.4, 5348.0], [87.5, 5376.0], [87.6, 5407.0], [87.7, 5422.0], [87.8, 5439.0], [87.9, 5466.0], [88.0, 5477.0], [88.1, 5502.0], [88.2, 5523.0], [88.3, 5534.0], [88.4, 5546.0], [88.5, 5582.0], [88.6, 5601.0], [88.7, 5631.0], [88.8, 5652.0], [88.9, 5671.0], [89.0, 5689.0], [89.1, 5718.0], [89.2, 5750.0], [89.3, 5770.0], [89.4, 5798.0], [89.5, 5830.0], [89.6, 5848.0], [89.7, 5857.0], [89.8, 5870.0], [89.9, 5888.0], [90.0, 5918.0], [90.1, 5936.0], [90.2, 5961.0], [90.3, 5976.0], [90.4, 5996.0], [90.5, 6017.0], [90.6, 6033.0], [90.7, 6056.0], [90.8, 6075.0], [90.9, 6103.0], [91.0, 6138.0], [91.1, 6159.0], [91.2, 6181.0], [91.3, 6208.0], [91.4, 6235.0], [91.5, 6248.0], [91.6, 6271.0], [91.7, 6284.0], [91.8, 6303.0], [91.9, 6324.0], [92.0, 6341.0], [92.1, 6357.0], [92.2, 6364.0], [92.3, 6376.0], [92.4, 6389.0], [92.5, 6410.0], [92.6, 6428.0], [92.7, 6444.0], [92.8, 6453.0], [92.9, 6466.0], [93.0, 6476.0], [93.1, 6488.0], [93.2, 6514.0], [93.3, 6525.0], [93.4, 6536.0], [93.5, 6555.0], [93.6, 6566.0], [93.7, 6586.0], [93.8, 6606.0], [93.9, 6625.0], [94.0, 6639.0], [94.1, 6664.0], [94.2, 6672.0], [94.3, 6688.0], [94.4, 6699.0], [94.5, 6720.0], [94.6, 6743.0], [94.7, 6750.0], [94.8, 6765.0], [94.9, 6780.0], [95.0, 6803.0], [95.1, 6820.0], [95.2, 6834.0], [95.3, 6847.0], [95.4, 6861.0], [95.5, 6879.0], [95.6, 6898.0], [95.7, 6913.0], [95.8, 6928.0], [95.9, 6944.0], [96.0, 6968.0], [96.1, 6993.0], [96.2, 7011.0], [96.3, 7025.0], [96.4, 7042.0], [96.5, 7056.0], [96.6, 7077.0], [96.7, 7095.0], [96.8, 7117.0], [96.9, 7131.0], [97.0, 7152.0], [97.1, 7169.0], [97.2, 7206.0], [97.3, 7218.0], [97.4, 7228.0], [97.5, 7245.0], [97.6, 7254.0], [97.7, 7276.0], [97.8, 7300.0], [97.9, 7331.0], [98.0, 7353.0], [98.1, 7385.0], [98.2, 7417.0], [98.3, 7457.0], [98.4, 7481.0], [98.5, 7518.0], [98.6, 7564.0], [98.7, 7605.0], [98.8, 7656.0], [98.9, 7713.0], [99.0, 7788.0], [99.1, 7869.0], [99.2, 7936.0], [99.3, 8195.0], [99.4, 9259.0], [99.5, 11346.0], [99.6, 11920.0], [99.7, 13181.0], [99.8, 14301.0], [99.9, 15190.0], [100.0, 22945.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[0.0, 666.0], [0.1, 666.0], [0.2, 666.0], [0.3, 666.0], [0.4, 666.0], [0.5, 666.0], [0.6, 666.0], [0.7, 666.0], [0.8, 666.0], [0.9, 666.0], [1.0, 666.0], [1.1, 666.0], [1.2, 666.0], [1.3, 666.0], [1.4, 666.0], [1.5, 666.0], [1.6, 666.0], [1.7, 666.0], [1.8, 666.0], [1.9, 666.0], [2.0, 666.0], [2.1, 746.0], [2.2, 746.0], [2.3, 746.0], [2.4, 746.0], [2.5, 746.0], [2.6, 746.0], [2.7, 746.0], [2.8, 746.0], [2.9, 746.0], [3.0, 746.0], [3.1, 746.0], [3.2, 746.0], [3.3, 746.0], [3.4, 746.0], [3.5, 746.0], [3.6, 746.0], [3.7, 746.0], [3.8, 746.0], [3.9, 746.0], [4.0, 746.0], [4.1, 1051.0], [4.2, 1051.0], [4.3, 1051.0], [4.4, 1051.0], [4.5, 1051.0], [4.6, 1051.0], [4.7, 1051.0], [4.8, 1051.0], [4.9, 1051.0], [5.0, 1051.0], [5.1, 1051.0], [5.2, 1051.0], [5.3, 1051.0], [5.4, 1051.0], [5.5, 1051.0], [5.6, 1051.0], [5.7, 1051.0], [5.8, 1051.0], [5.9, 1051.0], [6.0, 1051.0], [6.1, 1051.0], [6.2, 1091.0], [6.3, 1091.0], [6.4, 1091.0], [6.5, 1091.0], [6.6, 1091.0], [6.7, 1091.0], [6.8, 1091.0], [6.9, 1091.0], [7.0, 1091.0], [7.1, 1091.0], [7.2, 1091.0], [7.3, 1091.0], [7.4, 1091.0], [7.5, 1091.0], [7.6, 1091.0], [7.7, 1091.0], [7.8, 1091.0], [7.9, 1091.0], [8.0, 1091.0], [8.1, 1091.0], [8.2, 1442.0], [8.3, 1442.0], [8.4, 1442.0], [8.5, 1442.0], [8.6, 1442.0], [8.7, 1442.0], [8.8, 1442.0], [8.9, 1442.0], [9.0, 1442.0], [9.1, 1442.0], [9.2, 1442.0], [9.3, 1442.0], [9.4, 1442.0], [9.5, 1442.0], [9.6, 1442.0], [9.7, 1442.0], [9.8, 1442.0], [9.9, 1442.0], [10.0, 1442.0], [10.1, 1442.0], [10.2, 1442.0], [10.3, 3274.0], [10.4, 3274.0], [10.5, 3274.0], [10.6, 3274.0], [10.7, 3274.0], [10.8, 3274.0], [10.9, 3274.0], [11.0, 3274.0], [11.1, 3274.0], [11.2, 3274.0], [11.3, 3274.0], [11.4, 3274.0], [11.5, 3274.0], [11.6, 3274.0], [11.7, 3274.0], [11.8, 3274.0], [11.9, 3274.0], [12.0, 3274.0], [12.1, 3274.0], [12.2, 3274.0], [12.3, 3408.0], [12.4, 3408.0], [12.5, 3408.0], [12.6, 3408.0], [12.7, 3408.0], [12.8, 3408.0], [12.9, 3408.0], [13.0, 3408.0], [13.1, 3408.0], [13.2, 3408.0], [13.3, 3408.0], [13.4, 3408.0], [13.5, 3408.0], [13.6, 3408.0], [13.7, 3408.0], [13.8, 3408.0], [13.9, 3408.0], [14.0, 3408.0], [14.1, 3408.0], [14.2, 3408.0], [14.3, 3432.0], [14.4, 3432.0], [14.5, 3432.0], [14.6, 3432.0], [14.7, 3432.0], [14.8, 3432.0], [14.9, 3432.0], [15.0, 3432.0], [15.1, 3432.0], [15.2, 3432.0], [15.3, 3432.0], [15.4, 3432.0], [15.5, 3432.0], [15.6, 3432.0], [15.7, 3432.0], [15.8, 3432.0], [15.9, 3432.0], [16.0, 3432.0], [16.1, 3432.0], [16.2, 3432.0], [16.3, 3432.0], [16.4, 5108.0], [16.5, 5108.0], [16.6, 5108.0], [16.7, 5108.0], [16.8, 5108.0], [16.9, 5108.0], [17.0, 5108.0], [17.1, 5108.0], [17.2, 5108.0], [17.3, 5108.0], [17.4, 5108.0], [17.5, 5108.0], [17.6, 5108.0], [17.7, 5108.0], [17.8, 5108.0], [17.9, 5108.0], [18.0, 5108.0], [18.1, 5108.0], [18.2, 5108.0], [18.3, 5108.0], [18.4, 5648.0], [18.5, 5648.0], [18.6, 5648.0], [18.7, 5648.0], [18.8, 5648.0], [18.9, 5648.0], [19.0, 5648.0], [19.1, 5648.0], [19.2, 5648.0], [19.3, 5648.0], [19.4, 5648.0], [19.5, 5648.0], [19.6, 5648.0], [19.7, 5648.0], [19.8, 5648.0], [19.9, 5648.0], [20.0, 5648.0], [20.1, 5648.0], [20.2, 5648.0], [20.3, 5648.0], [20.4, 5648.0], [20.5, 5761.0], [20.6, 5761.0], [20.7, 5761.0], [20.8, 5761.0], [20.9, 5761.0], [21.0, 5761.0], [21.1, 5761.0], [21.2, 5761.0], [21.3, 5761.0], [21.4, 5761.0], [21.5, 5761.0], [21.6, 5761.0], [21.7, 5761.0], [21.8, 5761.0], [21.9, 5761.0], [22.0, 5761.0], [22.1, 5761.0], [22.2, 5761.0], [22.3, 5761.0], [22.4, 5761.0], [22.5, 6042.0], [22.6, 6042.0], [22.7, 6042.0], [22.8, 6042.0], [22.9, 6042.0], [23.0, 6042.0], [23.1, 6042.0], [23.2, 6042.0], [23.3, 6042.0], [23.4, 6042.0], [23.5, 6042.0], [23.6, 6042.0], [23.7, 6042.0], [23.8, 6042.0], [23.9, 6042.0], [24.0, 6042.0], [24.1, 6042.0], [24.2, 6042.0], [24.3, 6042.0], [24.4, 6042.0], [24.5, 6151.0], [24.6, 6151.0], [24.7, 6151.0], [24.8, 6151.0], [24.9, 6151.0], [25.0, 6151.0], [25.1, 6151.0], [25.2, 6151.0], [25.3, 6151.0], [25.4, 6151.0], [25.5, 6151.0], [25.6, 6151.0], [25.7, 6151.0], [25.8, 6151.0], [25.9, 6151.0], [26.0, 6151.0], [26.1, 6151.0], [26.2, 6151.0], [26.3, 6151.0], [26.4, 6151.0], [26.5, 6151.0], [26.6, 6310.0], [26.7, 6310.0], [26.8, 6310.0], [26.9, 6310.0], [27.0, 6310.0], [27.1, 6310.0], [27.2, 6310.0], [27.3, 6310.0], [27.4, 6310.0], [27.5, 6310.0], [27.6, 6310.0], [27.7, 6310.0], [27.8, 6310.0], [27.9, 6310.0], [28.0, 6310.0], [28.1, 6310.0], [28.2, 6310.0], [28.3, 6310.0], [28.4, 6310.0], [28.5, 6310.0], [28.6, 6416.0], [28.7, 6416.0], [28.8, 6416.0], [28.9, 6416.0], [29.0, 6416.0], [29.1, 6416.0], [29.2, 6416.0], [29.3, 6416.0], [29.4, 6416.0], [29.5, 6416.0], [29.6, 6416.0], [29.7, 6416.0], [29.8, 6416.0], [29.9, 6416.0], [30.0, 6416.0], [30.1, 6416.0], [30.2, 6416.0], [30.3, 6416.0], [30.4, 6416.0], [30.5, 6416.0], [30.6, 6416.0], [30.7, 6470.0], [30.8, 6470.0], [30.9, 6470.0], [31.0, 6470.0], [31.1, 6470.0], [31.2, 6470.0], [31.3, 6470.0], [31.4, 6470.0], [31.5, 6470.0], [31.6, 6470.0], [31.7, 6470.0], [31.8, 6470.0], [31.9, 6470.0], [32.0, 6470.0], [32.1, 6470.0], [32.2, 6470.0], [32.3, 6470.0], [32.4, 6470.0], [32.5, 6470.0], [32.6, 6470.0], [32.7, 6591.0], [32.8, 6591.0], [32.9, 6591.0], [33.0, 6591.0], [33.1, 6591.0], [33.2, 6591.0], [33.3, 6591.0], [33.4, 6591.0], [33.5, 6591.0], [33.6, 6591.0], [33.7, 6591.0], [33.8, 6591.0], [33.9, 6591.0], [34.0, 6591.0], [34.1, 6591.0], [34.2, 6591.0], [34.3, 6591.0], [34.4, 6591.0], [34.5, 6591.0], [34.6, 6591.0], [34.7, 6616.0], [34.8, 6616.0], [34.9, 6616.0], [35.0, 6616.0], [35.1, 6616.0], [35.2, 6616.0], [35.3, 6616.0], [35.4, 6616.0], [35.5, 6616.0], [35.6, 6616.0], [35.7, 6616.0], [35.8, 6616.0], [35.9, 6616.0], [36.0, 6616.0], [36.1, 6616.0], [36.2, 6616.0], [36.3, 6616.0], [36.4, 6616.0], [36.5, 6616.0], [36.6, 6616.0], [36.7, 6616.0], [36.8, 6941.0], [36.9, 6941.0], [37.0, 6941.0], [37.1, 6941.0], [37.2, 6941.0], [37.3, 6941.0], [37.4, 6941.0], [37.5, 6941.0], [37.6, 6941.0], [37.7, 6941.0], [37.8, 6941.0], [37.9, 6941.0], [38.0, 6941.0], [38.1, 6941.0], [38.2, 6941.0], [38.3, 6941.0], [38.4, 6941.0], [38.5, 6941.0], [38.6, 6941.0], [38.7, 6941.0], [38.8, 7612.0], [38.9, 7612.0], [39.0, 7612.0], [39.1, 7612.0], [39.2, 7612.0], [39.3, 7612.0], [39.4, 7612.0], [39.5, 7612.0], [39.6, 7612.0], [39.7, 7612.0], [39.8, 7612.0], [39.9, 7612.0], [40.0, 7612.0], [40.1, 7612.0], [40.2, 7612.0], [40.3, 7612.0], [40.4, 7612.0], [40.5, 7612.0], [40.6, 7612.0], [40.7, 7612.0], [40.8, 7612.0], [40.9, 8175.0], [41.0, 8175.0], [41.1, 8175.0], [41.2, 8175.0], [41.3, 8175.0], [41.4, 8175.0], [41.5, 8175.0], [41.6, 8175.0], [41.7, 8175.0], [41.8, 8175.0], [41.9, 8175.0], [42.0, 8175.0], [42.1, 8175.0], [42.2, 8175.0], [42.3, 8175.0], [42.4, 8175.0], [42.5, 8175.0], [42.6, 8175.0], [42.7, 8175.0], [42.8, 8175.0], [42.9, 9483.0], [43.0, 9483.0], [43.1, 9483.0], [43.2, 9483.0], [43.3, 9483.0], [43.4, 9483.0], [43.5, 9483.0], [43.6, 9483.0], [43.7, 9483.0], [43.8, 9483.0], [43.9, 9483.0], [44.0, 9483.0], [44.1, 9483.0], [44.2, 9483.0], [44.3, 9483.0], [44.4, 9483.0], [44.5, 9483.0], [44.6, 9483.0], [44.7, 9483.0], [44.8, 9483.0], [44.9, 9684.0], [45.0, 9684.0], [45.1, 9684.0], [45.2, 9684.0], [45.3, 9684.0], [45.4, 9684.0], [45.5, 9684.0], [45.6, 9684.0], [45.7, 9684.0], [45.8, 9684.0], [45.9, 9684.0], [46.0, 9684.0], [46.1, 9684.0], [46.2, 9684.0], [46.3, 9684.0], [46.4, 9684.0], [46.5, 9684.0], [46.6, 9684.0], [46.7, 9684.0], [46.8, 9684.0], [46.9, 9684.0], [47.0, 10447.0], [47.1, 10447.0], [47.2, 10447.0], [47.3, 10447.0], [47.4, 10447.0], [47.5, 10447.0], [47.6, 10447.0], [47.7, 10447.0], [47.8, 10447.0], [47.9, 10447.0], [48.0, 10447.0], [48.1, 10447.0], [48.2, 10447.0], [48.3, 10447.0], [48.4, 10447.0], [48.5, 10447.0], [48.6, 10447.0], [48.7, 10447.0], [48.8, 10447.0], [48.9, 10447.0], [49.0, 10669.0], [49.1, 10669.0], [49.2, 10669.0], [49.3, 10669.0], [49.4, 10669.0], [49.5, 10669.0], [49.6, 10669.0], [49.7, 10669.0], [49.8, 10669.0], [49.9, 10669.0], [50.0, 10669.0], [50.1, 10669.0], [50.2, 10669.0], [50.3, 10669.0], [50.4, 10669.0], [50.5, 10669.0], [50.6, 10669.0], [50.7, 10669.0], [50.8, 10669.0], [50.9, 10669.0], [51.0, 10669.0], [51.1, 11386.0], [51.2, 11386.0], [51.3, 11386.0], [51.4, 11386.0], [51.5, 11386.0], [51.6, 11386.0], [51.7, 11386.0], [51.8, 11386.0], [51.9, 11386.0], [52.0, 11386.0], [52.1, 11386.0], [52.2, 11386.0], [52.3, 11386.0], [52.4, 11386.0], [52.5, 11386.0], [52.6, 11386.0], [52.7, 11386.0], [52.8, 11386.0], [52.9, 11386.0], [53.0, 11386.0], [53.1, 11957.0], [53.2, 11957.0], [53.3, 11957.0], [53.4, 11957.0], [53.5, 11957.0], [53.6, 11957.0], [53.7, 11957.0], [53.8, 11957.0], [53.9, 11957.0], [54.0, 11957.0], [54.1, 11957.0], [54.2, 11957.0], [54.3, 11957.0], [54.4, 11957.0], [54.5, 11957.0], [54.6, 11957.0], [54.7, 11957.0], [54.8, 11957.0], [54.9, 11957.0], [55.0, 11957.0], [55.1, 11957.0], [55.2, 12069.0], [55.3, 12069.0], [55.4, 12069.0], [55.5, 12069.0], [55.6, 12069.0], [55.7, 12069.0], [55.8, 12069.0], [55.9, 12069.0], [56.0, 12069.0], [56.1, 12069.0], [56.2, 12069.0], [56.3, 12069.0], [56.4, 12069.0], [56.5, 12069.0], [56.6, 12069.0], [56.7, 12069.0], [56.8, 12069.0], [56.9, 12069.0], [57.0, 12069.0], [57.1, 12069.0], [57.2, 12310.0], [57.3, 12310.0], [57.4, 12310.0], [57.5, 12310.0], [57.6, 12310.0], [57.7, 12310.0], [57.8, 12310.0], [57.9, 12310.0], [58.0, 12310.0], [58.1, 12310.0], [58.2, 12310.0], [58.3, 12310.0], [58.4, 12310.0], [58.5, 12310.0], [58.6, 12310.0], [58.7, 12310.0], [58.8, 12310.0], [58.9, 12310.0], [59.0, 12310.0], [59.1, 12310.0], [59.2, 12803.0], [59.3, 12803.0], [59.4, 12803.0], [59.5, 12803.0], [59.6, 12803.0], [59.7, 12803.0], [59.8, 12803.0], [59.9, 12803.0], [60.0, 12803.0], [60.1, 12803.0], [60.2, 12803.0], [60.3, 12803.0], [60.4, 12803.0], [60.5, 12803.0], [60.6, 12803.0], [60.7, 12803.0], [60.8, 12803.0], [60.9, 12803.0], [61.0, 12803.0], [61.1, 12803.0], [61.2, 12803.0], [61.3, 12876.0], [61.4, 12876.0], [61.5, 12876.0], [61.6, 12876.0], [61.7, 12876.0], [61.8, 12876.0], [61.9, 12876.0], [62.0, 12876.0], [62.1, 12876.0], [62.2, 12876.0], [62.3, 12876.0], [62.4, 12876.0], [62.5, 12876.0], [62.6, 12876.0], [62.7, 12876.0], [62.8, 12876.0], [62.9, 12876.0], [63.0, 12876.0], [63.1, 12876.0], [63.2, 12876.0], [63.3, 12928.0], [63.4, 12928.0], [63.5, 12928.0], [63.6, 12928.0], [63.7, 12928.0], [63.8, 12928.0], [63.9, 12928.0], [64.0, 12928.0], [64.1, 12928.0], [64.2, 12928.0], [64.3, 12928.0], [64.4, 12928.0], [64.5, 12928.0], [64.6, 12928.0], [64.7, 12928.0], [64.8, 12928.0], [64.9, 12928.0], [65.0, 12928.0], [65.1, 12928.0], [65.2, 12928.0], [65.3, 12928.0], [65.4, 12929.0], [65.5, 12929.0], [65.6, 12929.0], [65.7, 12929.0], [65.8, 12929.0], [65.9, 12929.0], [66.0, 12929.0], [66.1, 12929.0], [66.2, 12929.0], [66.3, 12929.0], [66.4, 12929.0], [66.5, 12929.0], [66.6, 12929.0], [66.7, 12929.0], [66.8, 12929.0], [66.9, 12929.0], [67.0, 12929.0], [67.1, 12929.0], [67.2, 12929.0], [67.3, 12929.0], [67.4, 12939.0], [67.5, 12939.0], [67.6, 12939.0], [67.7, 12939.0], [67.8, 12939.0], [67.9, 12939.0], [68.0, 12939.0], [68.1, 12939.0], [68.2, 12939.0], [68.3, 12939.0], [68.4, 12939.0], [68.5, 12939.0], [68.6, 12939.0], [68.7, 12939.0], [68.8, 12939.0], [68.9, 12939.0], [69.0, 12939.0], [69.1, 12939.0], [69.2, 12939.0], [69.3, 12939.0], [69.4, 13142.0], [69.5, 13142.0], [69.6, 13142.0], [69.7, 13142.0], [69.8, 13142.0], [69.9, 13142.0], [70.0, 13142.0], [70.1, 13142.0], [70.2, 13142.0], [70.3, 13142.0], [70.4, 13142.0], [70.5, 13142.0], [70.6, 13142.0], [70.7, 13142.0], [70.8, 13142.0], [70.9, 13142.0], [71.0, 13142.0], [71.1, 13142.0], [71.2, 13142.0], [71.3, 13142.0], [71.4, 13142.0], [71.5, 14121.0], [71.6, 14121.0], [71.7, 14121.0], [71.8, 14121.0], [71.9, 14121.0], [72.0, 14121.0], [72.1, 14121.0], [72.2, 14121.0], [72.3, 14121.0], [72.4, 14121.0], [72.5, 14121.0], [72.6, 14121.0], [72.7, 14121.0], [72.8, 14121.0], [72.9, 14121.0], [73.0, 14121.0], [73.1, 14121.0], [73.2, 14121.0], [73.3, 14121.0], [73.4, 14121.0], [73.5, 14543.0], [73.6, 14543.0], [73.7, 14543.0], [73.8, 14543.0], [73.9, 14543.0], [74.0, 14543.0], [74.1, 14543.0], [74.2, 14543.0], [74.3, 14543.0], [74.4, 14543.0], [74.5, 14543.0], [74.6, 14543.0], [74.7, 14543.0], [74.8, 14543.0], [74.9, 14543.0], [75.0, 14543.0], [75.1, 14543.0], [75.2, 14543.0], [75.3, 14543.0], [75.4, 14543.0], [75.5, 14543.0], [75.6, 14660.0], [75.7, 14660.0], [75.8, 14660.0], [75.9, 14660.0], [76.0, 14660.0], [76.1, 14660.0], [76.2, 14660.0], [76.3, 14660.0], [76.4, 14660.0], [76.5, 14660.0], [76.6, 14660.0], [76.7, 14660.0], [76.8, 14660.0], [76.9, 14660.0], [77.0, 14660.0], [77.1, 14660.0], [77.2, 14660.0], [77.3, 14660.0], [77.4, 14660.0], [77.5, 14660.0], [77.6, 14706.0], [77.7, 14706.0], [77.8, 14706.0], [77.9, 14706.0], [78.0, 14706.0], [78.1, 14706.0], [78.2, 14706.0], [78.3, 14706.0], [78.4, 14706.0], [78.5, 14706.0], [78.6, 14706.0], [78.7, 14706.0], [78.8, 14706.0], [78.9, 14706.0], [79.0, 14706.0], [79.1, 14706.0], [79.2, 14706.0], [79.3, 14706.0], [79.4, 14706.0], [79.5, 14706.0], [79.6, 15234.0], [79.7, 15234.0], [79.8, 15234.0], [79.9, 15234.0], [80.0, 15234.0], [80.1, 15234.0], [80.2, 15234.0], [80.3, 15234.0], [80.4, 15234.0], [80.5, 15234.0], [80.6, 15234.0], [80.7, 15234.0], [80.8, 15234.0], [80.9, 15234.0], [81.0, 15234.0], [81.1, 15234.0], [81.2, 15234.0], [81.3, 15234.0], [81.4, 15234.0], [81.5, 15234.0], [81.6, 15234.0], [81.7, 15287.0], [81.8, 15287.0], [81.9, 15287.0], [82.0, 15287.0], [82.1, 15287.0], [82.2, 15287.0], [82.3, 15287.0], [82.4, 15287.0], [82.5, 15287.0], [82.6, 15287.0], [82.7, 15287.0], [82.8, 15287.0], [82.9, 15287.0], [83.0, 15287.0], [83.1, 15287.0], [83.2, 15287.0], [83.3, 15287.0], [83.4, 15287.0], [83.5, 15287.0], [83.6, 15287.0], [83.7, 15329.0], [83.8, 15329.0], [83.9, 15329.0], [84.0, 15329.0], [84.1, 15329.0], [84.2, 15329.0], [84.3, 15329.0], [84.4, 15329.0], [84.5, 15329.0], [84.6, 15329.0], [84.7, 15329.0], [84.8, 15329.0], [84.9, 15329.0], [85.0, 15329.0], [85.1, 15329.0], [85.2, 15329.0], [85.3, 15329.0], [85.4, 15329.0], [85.5, 15329.0], [85.6, 15329.0], [85.7, 15329.0], [85.8, 15429.0], [85.9, 15429.0], [86.0, 15429.0], [86.1, 15429.0], [86.2, 15429.0], [86.3, 15429.0], [86.4, 15429.0], [86.5, 15429.0], [86.6, 15429.0], [86.7, 15429.0], [86.8, 15429.0], [86.9, 15429.0], [87.0, 15429.0], [87.1, 15429.0], [87.2, 15429.0], [87.3, 15429.0], [87.4, 15429.0], [87.5, 15429.0], [87.6, 15429.0], [87.7, 15429.0], [87.8, 15513.0], [87.9, 15513.0], [88.0, 15513.0], [88.1, 15513.0], [88.2, 15513.0], [88.3, 15513.0], [88.4, 15513.0], [88.5, 15513.0], [88.6, 15513.0], [88.7, 15513.0], [88.8, 15513.0], [88.9, 15513.0], [89.0, 15513.0], [89.1, 15513.0], [89.2, 15513.0], [89.3, 15513.0], [89.4, 15513.0], [89.5, 15513.0], [89.6, 15513.0], [89.7, 15513.0], [89.8, 15571.0], [89.9, 15571.0], [90.0, 15571.0], [90.1, 15571.0], [90.2, 15571.0], [90.3, 15571.0], [90.4, 15571.0], [90.5, 15571.0], [90.6, 15571.0], [90.7, 15571.0], [90.8, 15571.0], [90.9, 15571.0], [91.0, 15571.0], [91.1, 15571.0], [91.2, 15571.0], [91.3, 15571.0], [91.4, 15571.0], [91.5, 15571.0], [91.6, 15571.0], [91.7, 15571.0], [91.8, 15571.0], [91.9, 15783.0], [92.0, 15783.0], [92.1, 15783.0], [92.2, 15783.0], [92.3, 15783.0], [92.4, 15783.0], [92.5, 15783.0], [92.6, 15783.0], [92.7, 15783.0], [92.8, 15783.0], [92.9, 15783.0], [93.0, 15783.0], [93.1, 15783.0], [93.2, 15783.0], [93.3, 15783.0], [93.4, 15783.0], [93.5, 15783.0], [93.6, 15783.0], [93.7, 15783.0], [93.8, 15783.0], [93.9, 15803.0], [94.0, 15803.0], [94.1, 15803.0], [94.2, 15803.0], [94.3, 15803.0], [94.4, 15803.0], [94.5, 15803.0], [94.6, 15803.0], [94.7, 15803.0], [94.8, 15803.0], [94.9, 15803.0], [95.0, 15803.0], [95.1, 15803.0], [95.2, 15803.0], [95.3, 15803.0], [95.4, 15803.0], [95.5, 15803.0], [95.6, 15803.0], [95.7, 15803.0], [95.8, 15803.0], [95.9, 15803.0], [96.0, 15868.0], [96.1, 15868.0], [96.2, 15868.0], [96.3, 15868.0], [96.4, 15868.0], [96.5, 15868.0], [96.6, 15868.0], [96.7, 15868.0], [96.8, 15868.0], [96.9, 15868.0], [97.0, 15868.0], [97.1, 15868.0], [97.2, 15868.0], [97.3, 15868.0], [97.4, 15868.0], [97.5, 15868.0], [97.6, 15868.0], [97.7, 15868.0], [97.8, 15868.0], [97.9, 15868.0], [98.0, 16209.0], [98.1, 16209.0], [98.2, 16209.0], [98.3, 16209.0], [98.4, 16209.0], [98.5, 16209.0], [98.6, 16209.0], [98.7, 16209.0], [98.8, 16209.0], [98.9, 16209.0], [99.0, 16209.0], [99.1, 16209.0], [99.2, 16209.0], [99.3, 16209.0], [99.4, 16209.0], [99.5, 16209.0], [99.6, 16209.0], [99.7, 16209.0], [99.8, 16209.0], [99.9, 16209.0], [100.0, 16209.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[0.0, 95.0], [0.1, 95.0], [0.2, 95.0], [0.3, 95.0], [0.4, 95.0], [0.5, 95.0], [0.6, 95.0], [0.7, 95.0], [0.8, 95.0], [0.9, 95.0], [1.0, 95.0], [1.1, 95.0], [1.2, 95.0], [1.3, 95.0], [1.4, 95.0], [1.5, 95.0], [1.6, 95.0], [1.7, 95.0], [1.8, 95.0], [1.9, 95.0], [2.0, 95.0], [2.1, 95.0], [2.2, 95.0], [2.3, 95.0], [2.4, 95.0], [2.5, 95.0], [2.6, 98.0], [2.7, 98.0], [2.8, 98.0], [2.9, 98.0], [3.0, 98.0], [3.1, 98.0], [3.2, 98.0], [3.3, 98.0], [3.4, 98.0], [3.5, 98.0], [3.6, 98.0], [3.7, 98.0], [3.8, 98.0], [3.9, 98.0], [4.0, 98.0], [4.1, 98.0], [4.2, 98.0], [4.3, 98.0], [4.4, 98.0], [4.5, 98.0], [4.6, 98.0], [4.7, 98.0], [4.8, 98.0], [4.9, 98.0], [5.0, 98.0], [5.1, 98.0], [5.2, 101.0], [5.3, 101.0], [5.4, 101.0], [5.5, 101.0], [5.6, 101.0], [5.7, 101.0], [5.8, 101.0], [5.9, 101.0], [6.0, 101.0], [6.1, 101.0], [6.2, 101.0], [6.3, 101.0], [6.4, 101.0], [6.5, 101.0], [6.6, 101.0], [6.7, 101.0], [6.8, 101.0], [6.9, 101.0], [7.0, 101.0], [7.1, 101.0], [7.2, 101.0], [7.3, 101.0], [7.4, 101.0], [7.5, 101.0], [7.6, 101.0], [7.7, 109.0], [7.8, 109.0], [7.9, 109.0], [8.0, 109.0], [8.1, 109.0], [8.2, 109.0], [8.3, 109.0], [8.4, 109.0], [8.5, 109.0], [8.6, 109.0], [8.7, 109.0], [8.8, 109.0], [8.9, 109.0], [9.0, 109.0], [9.1, 109.0], [9.2, 109.0], [9.3, 109.0], [9.4, 109.0], [9.5, 109.0], [9.6, 109.0], [9.7, 109.0], [9.8, 109.0], [9.9, 109.0], [10.0, 109.0], [10.1, 109.0], [10.2, 109.0], [10.3, 116.0], [10.4, 116.0], [10.5, 116.0], [10.6, 116.0], [10.7, 116.0], [10.8, 116.0], [10.9, 116.0], [11.0, 116.0], [11.1, 116.0], [11.2, 116.0], [11.3, 116.0], [11.4, 116.0], [11.5, 116.0], [11.6, 116.0], [11.7, 116.0], [11.8, 116.0], [11.9, 116.0], [12.0, 116.0], [12.1, 116.0], [12.2, 116.0], [12.3, 116.0], [12.4, 116.0], [12.5, 116.0], [12.6, 116.0], [12.7, 116.0], [12.8, 116.0], [12.9, 118.0], [13.0, 118.0], [13.1, 118.0], [13.2, 118.0], [13.3, 118.0], [13.4, 118.0], [13.5, 118.0], [13.6, 118.0], [13.7, 118.0], [13.8, 118.0], [13.9, 118.0], [14.0, 118.0], [14.1, 118.0], [14.2, 118.0], [14.3, 118.0], [14.4, 118.0], [14.5, 118.0], [14.6, 118.0], [14.7, 118.0], [14.8, 118.0], [14.9, 118.0], [15.0, 118.0], [15.1, 118.0], [15.2, 118.0], [15.3, 118.0], [15.4, 120.0], [15.5, 120.0], [15.6, 120.0], [15.7, 120.0], [15.8, 120.0], [15.9, 120.0], [16.0, 120.0], [16.1, 120.0], [16.2, 120.0], [16.3, 120.0], [16.4, 120.0], [16.5, 120.0], [16.6, 120.0], [16.7, 120.0], [16.8, 120.0], [16.9, 120.0], [17.0, 120.0], [17.1, 120.0], [17.2, 120.0], [17.3, 120.0], [17.4, 120.0], [17.5, 120.0], [17.6, 120.0], [17.7, 120.0], [17.8, 120.0], [17.9, 120.0], [18.0, 120.0], [18.1, 120.0], [18.2, 120.0], [18.3, 120.0], [18.4, 120.0], [18.5, 120.0], [18.6, 120.0], [18.7, 120.0], [18.8, 120.0], [18.9, 120.0], [19.0, 120.0], [19.1, 120.0], [19.2, 120.0], [19.3, 120.0], [19.4, 120.0], [19.5, 120.0], [19.6, 120.0], [19.7, 120.0], [19.8, 120.0], [19.9, 120.0], [20.0, 120.0], [20.1, 120.0], [20.2, 120.0], [20.3, 120.0], [20.4, 120.0], [20.5, 120.0], [20.6, 121.0], [20.7, 121.0], [20.8, 121.0], [20.9, 121.0], [21.0, 121.0], [21.1, 121.0], [21.2, 121.0], [21.3, 121.0], [21.4, 121.0], [21.5, 121.0], [21.6, 121.0], [21.7, 121.0], [21.8, 121.0], [21.9, 121.0], [22.0, 121.0], [22.1, 121.0], [22.2, 121.0], [22.3, 121.0], [22.4, 121.0], [22.5, 121.0], [22.6, 121.0], [22.7, 121.0], [22.8, 121.0], [22.9, 121.0], [23.0, 121.0], [23.1, 126.0], [23.2, 126.0], [23.3, 126.0], [23.4, 126.0], [23.5, 126.0], [23.6, 126.0], [23.7, 126.0], [23.8, 126.0], [23.9, 126.0], [24.0, 126.0], [24.1, 126.0], [24.2, 126.0], [24.3, 126.0], [24.4, 126.0], [24.5, 126.0], [24.6, 126.0], [24.7, 126.0], [24.8, 126.0], [24.9, 126.0], [25.0, 126.0], [25.1, 126.0], [25.2, 126.0], [25.3, 126.0], [25.4, 126.0], [25.5, 126.0], [25.6, 126.0], [25.7, 127.0], [25.8, 127.0], [25.9, 127.0], [26.0, 127.0], [26.1, 127.0], [26.2, 127.0], [26.3, 127.0], [26.4, 127.0], [26.5, 127.0], [26.6, 127.0], [26.7, 127.0], [26.8, 127.0], [26.9, 127.0], [27.0, 127.0], [27.1, 127.0], [27.2, 127.0], [27.3, 127.0], [27.4, 127.0], [27.5, 127.0], [27.6, 127.0], [27.7, 127.0], [27.8, 127.0], [27.9, 127.0], [28.0, 127.0], [28.1, 127.0], [28.2, 127.0], [28.3, 128.0], [28.4, 128.0], [28.5, 128.0], [28.6, 128.0], [28.7, 128.0], [28.8, 128.0], [28.9, 128.0], [29.0, 128.0], [29.1, 128.0], [29.2, 128.0], [29.3, 128.0], [29.4, 128.0], [29.5, 128.0], [29.6, 128.0], [29.7, 128.0], [29.8, 128.0], [29.9, 128.0], [30.0, 128.0], [30.1, 128.0], [30.2, 128.0], [30.3, 128.0], [30.4, 128.0], [30.5, 128.0], [30.6, 128.0], [30.7, 128.0], [30.8, 128.0], [30.9, 128.0], [31.0, 128.0], [31.1, 128.0], [31.2, 128.0], [31.3, 128.0], [31.4, 128.0], [31.5, 128.0], [31.6, 128.0], [31.7, 128.0], [31.8, 128.0], [31.9, 128.0], [32.0, 128.0], [32.1, 128.0], [32.2, 128.0], [32.3, 128.0], [32.4, 128.0], [32.5, 128.0], [32.6, 128.0], [32.7, 128.0], [32.8, 128.0], [32.9, 128.0], [33.0, 128.0], [33.1, 128.0], [33.2, 128.0], [33.3, 128.0], [33.4, 130.0], [33.5, 130.0], [33.6, 130.0], [33.7, 130.0], [33.8, 130.0], [33.9, 130.0], [34.0, 130.0], [34.1, 130.0], [34.2, 130.0], [34.3, 130.0], [34.4, 130.0], [34.5, 130.0], [34.6, 130.0], [34.7, 130.0], [34.8, 130.0], [34.9, 130.0], [35.0, 130.0], [35.1, 130.0], [35.2, 130.0], [35.3, 130.0], [35.4, 130.0], [35.5, 130.0], [35.6, 130.0], [35.7, 130.0], [35.8, 130.0], [35.9, 134.0], [36.0, 134.0], [36.1, 134.0], [36.2, 134.0], [36.3, 134.0], [36.4, 134.0], [36.5, 134.0], [36.6, 134.0], [36.7, 134.0], [36.8, 134.0], [36.9, 134.0], [37.0, 134.0], [37.1, 134.0], [37.2, 134.0], [37.3, 134.0], [37.4, 134.0], [37.5, 134.0], [37.6, 134.0], [37.7, 134.0], [37.8, 134.0], [37.9, 134.0], [38.0, 134.0], [38.1, 134.0], [38.2, 134.0], [38.3, 134.0], [38.4, 134.0], [38.5, 136.0], [38.6, 136.0], [38.7, 136.0], [38.8, 136.0], [38.9, 136.0], [39.0, 136.0], [39.1, 136.0], [39.2, 136.0], [39.3, 136.0], [39.4, 136.0], [39.5, 136.0], [39.6, 136.0], [39.7, 136.0], [39.8, 136.0], [39.9, 136.0], [40.0, 136.0], [40.1, 136.0], [40.2, 136.0], [40.3, 136.0], [40.4, 136.0], [40.5, 136.0], [40.6, 136.0], [40.7, 136.0], [40.8, 136.0], [40.9, 136.0], [41.0, 136.0], [41.1, 137.0], [41.2, 137.0], [41.3, 137.0], [41.4, 137.0], [41.5, 137.0], [41.6, 137.0], [41.7, 137.0], [41.8, 137.0], [41.9, 137.0], [42.0, 137.0], [42.1, 137.0], [42.2, 137.0], [42.3, 137.0], [42.4, 137.0], [42.5, 137.0], [42.6, 137.0], [42.7, 137.0], [42.8, 137.0], [42.9, 137.0], [43.0, 137.0], [43.1, 137.0], [43.2, 137.0], [43.3, 137.0], [43.4, 137.0], [43.5, 137.0], [43.6, 142.0], [43.7, 142.0], [43.8, 142.0], [43.9, 142.0], [44.0, 142.0], [44.1, 142.0], [44.2, 142.0], [44.3, 142.0], [44.4, 142.0], [44.5, 142.0], [44.6, 142.0], [44.7, 142.0], [44.8, 142.0], [44.9, 142.0], [45.0, 142.0], [45.1, 142.0], [45.2, 142.0], [45.3, 142.0], [45.4, 142.0], [45.5, 142.0], [45.6, 142.0], [45.7, 142.0], [45.8, 142.0], [45.9, 142.0], [46.0, 142.0], [46.1, 142.0], [46.2, 158.0], [46.3, 158.0], [46.4, 158.0], [46.5, 158.0], [46.6, 158.0], [46.7, 158.0], [46.8, 158.0], [46.9, 158.0], [47.0, 158.0], [47.1, 158.0], [47.2, 158.0], [47.3, 158.0], [47.4, 158.0], [47.5, 158.0], [47.6, 158.0], [47.7, 158.0], [47.8, 158.0], [47.9, 158.0], [48.0, 158.0], [48.1, 158.0], [48.2, 158.0], [48.3, 158.0], [48.4, 158.0], [48.5, 158.0], [48.6, 158.0], [48.7, 158.0], [48.8, 159.0], [48.9, 159.0], [49.0, 159.0], [49.1, 159.0], [49.2, 159.0], [49.3, 159.0], [49.4, 159.0], [49.5, 159.0], [49.6, 159.0], [49.7, 159.0], [49.8, 159.0], [49.9, 159.0], [50.0, 159.0], [50.1, 159.0], [50.2, 159.0], [50.3, 159.0], [50.4, 159.0], [50.5, 159.0], [50.6, 159.0], [50.7, 159.0], [50.8, 159.0], [50.9, 159.0], [51.0, 159.0], [51.1, 159.0], [51.2, 159.0], [51.3, 175.0], [51.4, 175.0], [51.5, 175.0], [51.6, 175.0], [51.7, 175.0], [51.8, 175.0], [51.9, 175.0], [52.0, 175.0], [52.1, 175.0], [52.2, 175.0], [52.3, 175.0], [52.4, 175.0], [52.5, 175.0], [52.6, 175.0], [52.7, 175.0], [52.8, 175.0], [52.9, 175.0], [53.0, 175.0], [53.1, 175.0], [53.2, 175.0], [53.3, 175.0], [53.4, 175.0], [53.5, 175.0], [53.6, 175.0], [53.7, 175.0], [53.8, 175.0], [53.9, 176.0], [54.0, 176.0], [54.1, 176.0], [54.2, 176.0], [54.3, 176.0], [54.4, 176.0], [54.5, 176.0], [54.6, 176.0], [54.7, 176.0], [54.8, 176.0], [54.9, 176.0], [55.0, 176.0], [55.1, 176.0], [55.2, 176.0], [55.3, 176.0], [55.4, 176.0], [55.5, 176.0], [55.6, 176.0], [55.7, 176.0], [55.8, 176.0], [55.9, 176.0], [56.0, 176.0], [56.1, 176.0], [56.2, 176.0], [56.3, 176.0], [56.4, 176.0], [56.5, 178.0], [56.6, 178.0], [56.7, 178.0], [56.8, 178.0], [56.9, 178.0], [57.0, 178.0], [57.1, 178.0], [57.2, 178.0], [57.3, 178.0], [57.4, 178.0], [57.5, 178.0], [57.6, 178.0], [57.7, 178.0], [57.8, 178.0], [57.9, 178.0], [58.0, 178.0], [58.1, 178.0], [58.2, 178.0], [58.3, 178.0], [58.4, 178.0], [58.5, 178.0], [58.6, 178.0], [58.7, 178.0], [58.8, 178.0], [58.9, 178.0], [59.0, 179.0], [59.1, 179.0], [59.2, 179.0], [59.3, 179.0], [59.4, 179.0], [59.5, 179.0], [59.6, 179.0], [59.7, 179.0], [59.8, 179.0], [59.9, 179.0], [60.0, 179.0], [60.1, 179.0], [60.2, 179.0], [60.3, 179.0], [60.4, 179.0], [60.5, 179.0], [60.6, 179.0], [60.7, 179.0], [60.8, 179.0], [60.9, 179.0], [61.0, 179.0], [61.1, 179.0], [61.2, 179.0], [61.3, 179.0], [61.4, 179.0], [61.5, 179.0], [61.6, 182.0], [61.7, 182.0], [61.8, 182.0], [61.9, 182.0], [62.0, 182.0], [62.1, 182.0], [62.2, 182.0], [62.3, 182.0], [62.4, 182.0], [62.5, 182.0], [62.6, 182.0], [62.7, 182.0], [62.8, 182.0], [62.9, 182.0], [63.0, 182.0], [63.1, 182.0], [63.2, 182.0], [63.3, 182.0], [63.4, 182.0], [63.5, 182.0], [63.6, 182.0], [63.7, 182.0], [63.8, 182.0], [63.9, 182.0], [64.0, 182.0], [64.1, 182.0], [64.2, 186.0], [64.3, 186.0], [64.4, 186.0], [64.5, 186.0], [64.6, 186.0], [64.7, 186.0], [64.8, 186.0], [64.9, 186.0], [65.0, 186.0], [65.1, 186.0], [65.2, 186.0], [65.3, 186.0], [65.4, 186.0], [65.5, 186.0], [65.6, 186.0], [65.7, 186.0], [65.8, 186.0], [65.9, 186.0], [66.0, 186.0], [66.1, 186.0], [66.2, 186.0], [66.3, 186.0], [66.4, 186.0], [66.5, 186.0], [66.6, 186.0], [66.7, 191.0], [66.8, 191.0], [66.9, 191.0], [67.0, 191.0], [67.1, 191.0], [67.2, 191.0], [67.3, 191.0], [67.4, 191.0], [67.5, 191.0], [67.6, 191.0], [67.7, 191.0], [67.8, 191.0], [67.9, 191.0], [68.0, 191.0], [68.1, 191.0], [68.2, 191.0], [68.3, 191.0], [68.4, 191.0], [68.5, 191.0], [68.6, 191.0], [68.7, 191.0], [68.8, 191.0], [68.9, 191.0], [69.0, 191.0], [69.1, 191.0], [69.2, 191.0], [69.3, 213.0], [69.4, 213.0], [69.5, 213.0], [69.6, 213.0], [69.7, 213.0], [69.8, 213.0], [69.9, 213.0], [70.0, 213.0], [70.1, 213.0], [70.2, 213.0], [70.3, 213.0], [70.4, 213.0], [70.5, 213.0], [70.6, 213.0], [70.7, 213.0], [70.8, 213.0], [70.9, 213.0], [71.0, 213.0], [71.1, 213.0], [71.2, 213.0], [71.3, 213.0], [71.4, 213.0], [71.5, 213.0], [71.6, 213.0], [71.7, 213.0], [71.8, 222.0], [71.9, 222.0], [72.0, 222.0], [72.1, 222.0], [72.2, 222.0], [72.3, 222.0], [72.4, 222.0], [72.5, 222.0], [72.6, 222.0], [72.7, 222.0], [72.8, 222.0], [72.9, 222.0], [73.0, 222.0], [73.1, 222.0], [73.2, 222.0], [73.3, 222.0], [73.4, 222.0], [73.5, 222.0], [73.6, 222.0], [73.7, 222.0], [73.8, 222.0], [73.9, 222.0], [74.0, 222.0], [74.1, 222.0], [74.2, 222.0], [74.3, 222.0], [74.4, 226.0], [74.5, 226.0], [74.6, 226.0], [74.7, 226.0], [74.8, 226.0], [74.9, 226.0], [75.0, 226.0], [75.1, 226.0], [75.2, 226.0], [75.3, 226.0], [75.4, 226.0], [75.5, 226.0], [75.6, 226.0], [75.7, 226.0], [75.8, 226.0], [75.9, 226.0], [76.0, 226.0], [76.1, 226.0], [76.2, 226.0], [76.3, 226.0], [76.4, 226.0], [76.5, 226.0], [76.6, 226.0], [76.7, 226.0], [76.8, 226.0], [76.9, 226.0], [77.0, 238.0], [77.1, 238.0], [77.2, 238.0], [77.3, 238.0], [77.4, 238.0], [77.5, 238.0], [77.6, 238.0], [77.7, 238.0], [77.8, 238.0], [77.9, 238.0], [78.0, 238.0], [78.1, 238.0], [78.2, 238.0], [78.3, 238.0], [78.4, 238.0], [78.5, 238.0], [78.6, 238.0], [78.7, 238.0], [78.8, 238.0], [78.9, 238.0], [79.0, 238.0], [79.1, 238.0], [79.2, 238.0], [79.3, 238.0], [79.4, 238.0], [79.5, 277.0], [79.6, 277.0], [79.7, 277.0], [79.8, 277.0], [79.9, 277.0], [80.0, 277.0], [80.1, 277.0], [80.2, 277.0], [80.3, 277.0], [80.4, 277.0], [80.5, 277.0], [80.6, 277.0], [80.7, 277.0], [80.8, 277.0], [80.9, 277.0], [81.0, 277.0], [81.1, 277.0], [81.2, 277.0], [81.3, 277.0], [81.4, 277.0], [81.5, 277.0], [81.6, 277.0], [81.7, 277.0], [81.8, 277.0], [81.9, 277.0], [82.0, 277.0], [82.1, 317.0], [82.2, 317.0], [82.3, 317.0], [82.4, 317.0], [82.5, 317.0], [82.6, 317.0], [82.7, 317.0], [82.8, 317.0], [82.9, 317.0], [83.0, 317.0], [83.1, 317.0], [83.2, 317.0], [83.3, 317.0], [83.4, 317.0], [83.5, 317.0], [83.6, 317.0], [83.7, 317.0], [83.8, 317.0], [83.9, 317.0], [84.0, 317.0], [84.1, 317.0], [84.2, 317.0], [84.3, 317.0], [84.4, 317.0], [84.5, 317.0], [84.6, 317.0], [84.7, 371.0], [84.8, 371.0], [84.9, 371.0], [85.0, 371.0], [85.1, 371.0], [85.2, 371.0], [85.3, 371.0], [85.4, 371.0], [85.5, 371.0], [85.6, 371.0], [85.7, 371.0], [85.8, 371.0], [85.9, 371.0], [86.0, 371.0], [86.1, 371.0], [86.2, 371.0], [86.3, 371.0], [86.4, 371.0], [86.5, 371.0], [86.6, 371.0], [86.7, 371.0], [86.8, 371.0], [86.9, 371.0], [87.0, 371.0], [87.1, 371.0], [87.2, 379.0], [87.3, 379.0], [87.4, 379.0], [87.5, 379.0], [87.6, 379.0], [87.7, 379.0], [87.8, 379.0], [87.9, 379.0], [88.0, 379.0], [88.1, 379.0], [88.2, 379.0], [88.3, 379.0], [88.4, 379.0], [88.5, 379.0], [88.6, 379.0], [88.7, 379.0], [88.8, 379.0], [88.9, 379.0], [89.0, 379.0], [89.1, 379.0], [89.2, 379.0], [89.3, 379.0], [89.4, 379.0], [89.5, 379.0], [89.6, 379.0], [89.7, 379.0], [89.8, 383.0], [89.9, 383.0], [90.0, 383.0], [90.1, 383.0], [90.2, 383.0], [90.3, 383.0], [90.4, 383.0], [90.5, 383.0], [90.6, 383.0], [90.7, 383.0], [90.8, 383.0], [90.9, 383.0], [91.0, 383.0], [91.1, 383.0], [91.2, 383.0], [91.3, 383.0], [91.4, 383.0], [91.5, 383.0], [91.6, 383.0], [91.7, 383.0], [91.8, 383.0], [91.9, 383.0], [92.0, 383.0], [92.1, 383.0], [92.2, 383.0], [92.3, 383.0], [92.4, 508.0], [92.5, 508.0], [92.6, 508.0], [92.7, 508.0], [92.8, 508.0], [92.9, 508.0], [93.0, 508.0], [93.1, 508.0], [93.2, 508.0], [93.3, 508.0], [93.4, 508.0], [93.5, 508.0], [93.6, 508.0], [93.7, 508.0], [93.8, 508.0], [93.9, 508.0], [94.0, 508.0], [94.1, 508.0], [94.2, 508.0], [94.3, 508.0], [94.4, 508.0], [94.5, 508.0], [94.6, 508.0], [94.7, 508.0], [94.8, 508.0], [94.9, 509.0], [95.0, 509.0], [95.1, 509.0], [95.2, 509.0], [95.3, 509.0], [95.4, 509.0], [95.5, 509.0], [95.6, 509.0], [95.7, 509.0], [95.8, 509.0], [95.9, 509.0], [96.0, 509.0], [96.1, 509.0], [96.2, 509.0], [96.3, 509.0], [96.4, 509.0], [96.5, 509.0], [96.6, 509.0], [96.7, 509.0], [96.8, 509.0], [96.9, 509.0], [97.0, 509.0], [97.1, 509.0], [97.2, 509.0], [97.3, 509.0], [97.4, 509.0], [97.5, 1717.0], [97.6, 1717.0], [97.7, 1717.0], [97.8, 1717.0], [97.9, 1717.0], [98.0, 1717.0], [98.1, 1717.0], [98.2, 1717.0], [98.3, 1717.0], [98.4, 1717.0], [98.5, 1717.0], [98.6, 1717.0], [98.7, 1717.0], [98.8, 1717.0], [98.9, 1717.0], [99.0, 1717.0], [99.1, 1717.0], [99.2, 1717.0], [99.3, 1717.0], [99.4, 1717.0], [99.5, 1717.0], [99.6, 1717.0], [99.7, 1717.0], [99.8, 1717.0], [99.9, 1717.0], [100.0, 1717.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 613.0, "series": [{"data": [[2100.0, 2.0], [2200.0, 2.0], [2300.0, 3.0], [2400.0, 2.0], [2700.0, 2.0], [2800.0, 1.0], [700.0, 1.0], [3100.0, 1.0], [3600.0, 2.0], [4000.0, 1.0], [4100.0, 2.0], [4300.0, 1.0], [1100.0, 5.0], [4400.0, 2.0], [4600.0, 1.0], [4500.0, 1.0], [1200.0, 4.0], [4900.0, 2.0], [1300.0, 5.0], [1400.0, 2.0], [1600.0, 2.0], [1700.0, 1.0], [1900.0, 1.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[0.0, 13.0], [100.0, 499.0], [200.0, 613.0], [300.0, 440.0], [400.0, 536.0], [500.0, 356.0], [600.0, 382.0], [700.0, 312.0], [800.0, 283.0], [900.0, 240.0], [1000.0, 234.0], [1100.0, 207.0], [1200.0, 219.0], [1300.0, 211.0], [1400.0, 176.0], [1500.0, 159.0], [1600.0, 173.0], [1700.0, 143.0], [1800.0, 155.0], [1900.0, 138.0], [2000.0, 139.0], [2100.0, 135.0], [2200.0, 122.0], [2300.0, 119.0], [2400.0, 110.0], [2500.0, 111.0], [2600.0, 111.0], [2700.0, 118.0], [2800.0, 104.0], [2900.0, 93.0], [3000.0, 90.0], [3100.0, 67.0], [3300.0, 96.0], [3200.0, 98.0], [3400.0, 101.0], [3500.0, 88.0], [3700.0, 64.0], [3600.0, 87.0], [3800.0, 57.0], [3900.0, 44.0], [4000.0, 71.0], [4300.0, 43.0], [4100.0, 51.0], [4200.0, 33.0], [4400.0, 45.0], [4500.0, 35.0], [4600.0, 48.0], [4800.0, 42.0], [4700.0, 45.0], [4900.0, 36.0], [5000.0, 53.0], [5100.0, 28.0], [5200.0, 27.0], [5300.0, 37.0], [5400.0, 46.0], [5500.0, 46.0], [5600.0, 39.0], [5700.0, 37.0], [5800.0, 51.0], [5900.0, 42.0], [6000.0, 41.0], [6100.0, 36.0], [6300.0, 61.0], [6200.0, 47.0], [6500.0, 57.0], [6400.0, 64.0], [6600.0, 60.0], [6900.0, 46.0], [6800.0, 59.0], [6700.0, 52.0], [7100.0, 42.0], [7000.0, 56.0], [7200.0, 56.0], [7400.0, 26.0], [7300.0, 34.0], [7500.0, 21.0], [7600.0, 18.0], [7700.0, 12.0], [7900.0, 9.0], [7800.0, 11.0], [8100.0, 2.0], [8000.0, 5.0], [8200.0, 4.0], [8600.0, 1.0], [8900.0, 1.0], [8800.0, 1.0], [9200.0, 1.0], [9100.0, 1.0], [9700.0, 1.0], [9500.0, 1.0], [9400.0, 1.0], [9900.0, 1.0], [10700.0, 2.0], [10400.0, 1.0], [10900.0, 1.0], [11100.0, 1.0], [11700.0, 2.0], [11300.0, 1.0], [11600.0, 2.0], [11900.0, 2.0], [11800.0, 3.0], [12100.0, 1.0], [12000.0, 1.0], [12600.0, 3.0], [12500.0, 1.0], [13000.0, 1.0], [13200.0, 2.0], [13100.0, 1.0], [12900.0, 1.0], [13300.0, 1.0], [13700.0, 1.0], [14200.0, 2.0], [14100.0, 1.0], [14000.0, 1.0], [14300.0, 1.0], [14800.0, 1.0], [14600.0, 3.0], [14500.0, 1.0], [14700.0, 1.0], [15300.0, 1.0], [14900.0, 2.0], [15100.0, 1.0], [16300.0, 1.0], [16100.0, 1.0], [16500.0, 1.0], [18200.0, 1.0], [19300.0, 1.0], [19800.0, 1.0], [20900.0, 1.0], [22900.0, 1.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[9400.0, 1.0], [9600.0, 1.0], [600.0, 1.0], [10400.0, 1.0], [10600.0, 1.0], [700.0, 1.0], [11300.0, 1.0], [12000.0, 1.0], [11900.0, 1.0], [12300.0, 1.0], [12900.0, 3.0], [12800.0, 2.0], [13100.0, 1.0], [14100.0, 1.0], [14700.0, 1.0], [14600.0, 1.0], [14500.0, 1.0], [15200.0, 2.0], [15300.0, 1.0], [15700.0, 1.0], [15400.0, 1.0], [15500.0, 2.0], [15800.0, 2.0], [16200.0, 1.0], [1000.0, 2.0], [1400.0, 1.0], [3200.0, 1.0], [3400.0, 2.0], [5100.0, 1.0], [5600.0, 1.0], [5700.0, 1.0], [6000.0, 1.0], [6100.0, 1.0], [6300.0, 1.0], [6400.0, 2.0], [6600.0, 1.0], [6500.0, 1.0], [6900.0, 1.0], [7600.0, 1.0], [8100.0, 1.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[0.0, 2.0], [300.0, 4.0], [100.0, 25.0], [200.0, 5.0], [1700.0, 1.0], [500.0, 2.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 22900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 39.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 4509.0, "series": [{"data": [[0.0, 2127.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2636.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 4509.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 39.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 3.272727272727273, "minX": 1.71819912E12, "maxY": 60.0, "series": [{"data": [[1.7182023E12, 6.962962962962965], [1.71820224E12, 17.43356643356643], [1.71820236E12, 10.130434782608694]], "isOverall": false, "label": "MixedTest", "isController": false}, {"data": [[1.71820404E12, 9.81467889908256], [1.71820434E12, 45.548780487804926], [1.71820338E12, 24.78571428571426], [1.71820446E12, 59.1070110701107], [1.7182041E12, 16.847645429362878], [1.7182044E12, 52.80195599022003], [1.71820422E12, 31.204878048780504], [1.71820452E12, 60.0], [1.71820038E12, 12.061349693251534], [1.71820416E12, 24.02307692307691], [1.71820398E12, 4.054945054945055], [1.71820008E12, 5.694444444444445], [1.71820428E12, 38.37593984962407], [1.71819912E12, 15.849206349206344], [1.71820332E12, 3.272727272727273], [1.71820014E12, 19.48366013071897], [1.71820458E12, 49.666666666666636], [1.71819918E12, 23.872340425531913], [1.71820044E12, 22.989247311827963]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71820458E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 95.0, "minX": 1.0, "maxY": 16209.0, "series": [{"data": [[2.0, 1149.5], [8.0, 1312.3333333333333], [9.0, 1254.0], [10.0, 1697.0], [11.0, 1424.0], [12.0, 1617.0], [13.0, 1680.6666666666667], [15.0, 2118.0], [4.0, 1163.5], [17.0, 2293.0], [18.0, 2295.0], [19.0, 2867.3333333333335], [5.0, 1144.25], [20.0, 2393.3333333333335], [22.0, 3892.3333333333335], [23.0, 3864.0], [6.0, 1308.0], [24.0, 3368.0], [25.0, 3641.5], [26.0, 4042.0], [27.0, 4537.0], [28.0, 4966.0], [30.0, 4508.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[15.478260869565217, 2440.5]], "isOverall": false, "label": "Directors by name-Aggregated", "isController": false}, {"data": [[2.0, 1258.0645161290322], [3.0, 945.0384615384617], [4.0, 657.768115942029], [5.0, 530.2077922077922], [6.0, 753.9411764705883], [7.0, 693.54347826087], [8.0, 639.8318584070794], [9.0, 902.8235294117645], [10.0, 647.8439716312058], [11.0, 734.4779411764708], [12.0, 869.1496062992128], [13.0, 930.2237762237758], [14.0, 913.0566037735853], [15.0, 918.3103448275862], [16.0, 942.5060975609754], [17.0, 1070.6875000000005], [18.0, 1144.5460122699392], [19.0, 1041.3803680981596], [20.0, 1169.287234042553], [21.0, 1138.6874999999993], [22.0, 1321.3941176470594], [23.0, 1311.9470588235301], [24.0, 1378.0952380952383], [25.0, 1448.190751445086], [26.0, 1498.940540540541], [27.0, 1440.593023255814], [28.0, 1694.345945945946], [29.0, 1739.0813953488375], [30.0, 1681.996539792388], [31.0, 1952.5982905982908], [32.0, 1981.5897435897427], [33.0, 2049.382608695652], [34.0, 2022.403361344538], [35.0, 2389.0990990991], [36.0, 2534.859813084112], [37.0, 2157.035714285714], [38.0, 2520.1451612903224], [39.0, 2525.705357142857], [40.0, 2579.8613861386148], [41.0, 2854.4], [42.0, 2530.9999999999995], [43.0, 3089.359223300971], [44.0, 2905.2931034482763], [45.0, 2668.159663865548], [46.0, 3009.6120689655168], [47.0, 3237.1578947368416], [48.0, 2982.4322033898297], [49.0, 3123.4196428571413], [50.0, 3605.0], [51.0, 3899.7102803738317], [52.0, 3184.722689075631], [53.0, 3237.3008130081294], [54.0, 3460.352459016393], [55.0, 3647.6788990825676], [56.0, 3891.9459459459463], [57.0, 3751.8728813559337], [58.0, 3983.559633027522], [59.0, 3746.1749999999984], [60.0, 3992.4351585014388], [1.0, 2153.0625]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[34.69216519559786, 2248.731938541999]], "isOverall": false, "label": "TitleBasics by primary_title-Aggregated", "isController": false}, {"data": [[8.0, 13142.0], [2.0, 6351.5], [9.0, 8244.0], [10.0, 8743.333333333334], [11.0, 9515.0], [12.0, 10991.5], [3.0, 12310.0], [13.0, 8799.0], [15.0, 7293.5], [16.0, 16209.0], [4.0, 12803.0], [1.0, 6238.5], [17.0, 11731.0], [18.0, 15234.0], [20.0, 9583.5], [5.0, 7992.5], [22.0, 10558.0], [6.0, 7905.333333333334], [25.0, 12504.0], [26.0, 12928.0], [27.0, 14329.5], [7.0, 9571.0], [29.0, 14121.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[12.857142857142865, 9767.938775510203]], "isOverall": false, "label": "Actors by name-Aggregated", "isController": false}, {"data": [[8.0, 175.0], [9.0, 151.0], [10.0, 150.66666666666666], [11.0, 271.5], [3.0, 131.33333333333334], [12.0, 371.0], [13.0, 116.0], [14.0, 277.0], [15.0, 120.0], [18.0, 149.66666666666666], [19.0, 212.5], [5.0, 95.0], [21.0, 133.5], [6.0, 114.0], [24.0, 925.5], [25.0, 270.6666666666667], [26.0, 186.0], [27.0, 126.0], [7.0, 213.0], [28.0, 143.0], [29.0, 508.5]], "isOverall": false, "label": "TitleBasics by params", "isController": false}, {"data": [[16.076923076923073, 234.1025641025641]], "isOverall": false, "label": "TitleBasics by params-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 60.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 25.716666666666665, "minX": 1.71819912E12, "maxY": 74330.81666666667, "series": [{"data": [[1.71820404E12, 45585.683333333334], [1.71820434E12, 67037.58333333333], [1.71820338E12, 67553.35], [1.71820446E12, 66118.88333333333], [1.7182041E12, 59144.01666666667], [1.7182044E12, 66701.06666666667], [1.71820422E12, 67055.8], [1.7182023E12, 2122.7833333333333], [1.71820452E12, 70604.78333333334], [1.71820038E12, 14938.566666666668], [1.71820224E12, 9168.55], [1.71820416E12, 62260.2], [1.71820236E12, 1204.7333333333333], [1.71820398E12, 15815.566666666668], [1.71820008E12, 3349.733333333333], [1.71820428E12, 64379.05], [1.71819912E12, 22893.233333333334], [1.71820332E12, 1091.0166666666667], [1.71820014E12, 27243.75], [1.71820458E12, 74330.81666666667], [1.71819918E12, 7917.516666666666], [1.71820044E12, 16039.216666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71820404E12, 1533.65], [1.71820434E12, 2296.0333333333333], [1.71820338E12, 2211.1833333333334], [1.71820446E12, 2275.4166666666665], [1.7182041E12, 2025.6], [1.7182044E12, 2297.6833333333334], [1.71820422E12, 2303.9333333333334], [1.7182023E12, 77.28333333333333], [1.71820452E12, 2290.4666666666667], [1.71820038E12, 453.9166666666667], [1.71820224E12, 395.98333333333335], [1.71820416E12, 2189.4], [1.71820236E12, 25.716666666666665], [1.71820398E12, 513.75], [1.71820008E12, 100.33333333333333], [1.71820428E12, 2233.383333333333], [1.71819912E12, 703.35], [1.71820332E12, 30.083333333333332], [1.71820014E12, 859.9666666666667], [1.71820458E12, 486.28333333333336], [1.71819918E12, 267.76666666666665], [1.71820044E12, 525.9]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71820458E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 149.28571428571428, "minX": 1.71819912E12, "maxY": 12336.529411764706, "series": [{"data": [[1.7182023E12, 1272.25], [1.71820224E12, 2790.9428571428575], [1.71820236E12, 1467.3333333333333]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.71820404E12, 625.2128440366971], [1.71820434E12, 2865.418292682929], [1.71820338E12, 1355.4770408163265], [1.71820446E12, 3900.327183271834], [1.7182041E12, 986.5470914127428], [1.7182044E12, 3469.987775061122], [1.71820422E12, 1858.2475609756095], [1.7182023E12, 473.72727272727275], [1.71820452E12, 3995.6658506731956], [1.71820038E12, 597.840490797546], [1.71820224E12, 825.3863636363636], [1.71820416E12, 1412.9987179487173], [1.71820236E12, 501.25], [1.71820398E12, 399.12637362637344], [1.71820008E12, 569.1111111111112], [1.71820428E12, 2412.714285714285], [1.71819912E12, 779.8015873015872], [1.71820332E12, 351.90909090909093], [1.71820014E12, 1046.3431372549023], [1.71820458E12, 7057.093567251461], [1.71819918E12, 1546.9361702127658], [1.71820044E12, 1286.4408602150543]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.7182023E12, 5761.0], [1.71820224E12, 12336.529411764706], [1.71820236E12, 3816.142857142857]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.7182023E12, 149.28571428571428], [1.71820224E12, 253.26666666666665], [1.71820236E12, 243.5]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71820458E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 147.71428571428572, "minX": 1.71819912E12, "maxY": 12336.382352941178, "series": [{"data": [[1.7182023E12, 1272.25], [1.71820224E12, 2790.8571428571436], [1.71820236E12, 1219.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.71820404E12, 623.6146788990825], [1.71820434E12, 2864.246341463415], [1.71820338E12, 1354.3061224489797], [1.71820446E12, 3899.2496924969264], [1.7182041E12, 985.1800554016614], [1.7182044E12, 3468.832518337408], [1.71820422E12, 1856.979268292683], [1.7182023E12, 472.6363636363636], [1.71820452E12, 3994.3500611995028], [1.71820038E12, 596.4049079754603], [1.71820224E12, 824.1818181818181], [1.71820416E12, 1411.1230769230772], [1.71820236E12, 394.25], [1.71820398E12, 398.021978021978], [1.71820008E12, 568.1111111111112], [1.71820428E12, 2411.605263157894], [1.71819912E12, 778.4603174603171], [1.71820332E12, 351.1818181818182], [1.71820014E12, 1044.9771241830072], [1.71820458E12, 6991.894736842106], [1.71819918E12, 1545.2978723404256], [1.71820044E12, 1285.3172043010748]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.7182023E12, 5760.0], [1.71820224E12, 12336.382352941178], [1.71820236E12, 966.5714285714283]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.7182023E12, 147.71428571428572], [1.71820224E12, 250.83333333333337], [1.71820236E12, 243.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71820458E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.71819912E12, "maxY": 64.05882352941178, "series": [{"data": [[1.7182023E12, 21.75], [1.71820224E12, 8.142857142857144], [1.71820236E12, 0.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.71820404E12, 4.165137614678901], [1.71820434E12, 4.7890243902439], [1.71820338E12, 2.2397959183673493], [1.71820446E12, 5.125461254612542], [1.7182041E12, 1.217451523545706], [1.7182044E12, 5.605134474327629], [1.71820422E12, 2.187804878048783], [1.7182023E12, 17.09090909090909], [1.71820452E12, 5.073439412484703], [1.71820038E12, 10.638036809815947], [1.71820224E12, 25.77272727272728], [1.71820416E12, 3.3730769230769235], [1.71820236E12, 21.5], [1.71820398E12, 3.164835164835165], [1.71820008E12, 46.222222222222214], [1.71820428E12, 3.5588972431077703], [1.71819912E12, 10.289682539682552], [1.71820332E12, 16.90909090909091], [1.71820014E12, 4.679738562091502], [1.71820458E12, 4.1988304093567255], [1.71819918E12, 2.75531914893617], [1.71820044E12, 3.1666666666666674]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.7182023E12, 0.0], [1.71820224E12, 64.05882352941178], [1.71820236E12, 9.642857142857142]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.7182023E12, 6.142857142857142], [1.71820224E12, 9.066666666666666], [1.71820236E12, 0.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71820458E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 94.0, "minX": 1.71819912E12, "maxY": 22945.0, "series": [{"data": [[1.71820404E12, 2123.0], [1.71820434E12, 6533.0], [1.71820338E12, 4034.0], [1.71820446E12, 8216.0], [1.7182041E12, 3155.0], [1.7182044E12, 7749.0], [1.71820422E12, 4803.0], [1.7182023E12, 5761.0], [1.71820452E12, 8263.0], [1.71820038E12, 2038.0], [1.71820224E12, 16209.0], [1.71820416E12, 4028.0], [1.71820236E12, 6941.0], [1.71820398E12, 1695.0], [1.71820008E12, 2321.0], [1.71820428E12, 7154.0], [1.71819912E12, 2948.0], [1.71820332E12, 529.0], [1.71820014E12, 3754.0], [1.71820458E12, 22945.0], [1.71819918E12, 3349.0], [1.71820044E12, 3381.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71820404E12, 104.0], [1.71820434E12, 156.0], [1.71820338E12, 100.0], [1.71820446E12, 152.0], [1.7182041E12, 107.0], [1.7182044E12, 140.0], [1.71820422E12, 145.0], [1.7182023E12, 95.0], [1.71820452E12, 162.0], [1.71820038E12, 112.0], [1.71820224E12, 98.0], [1.71820416E12, 138.0], [1.71820236E12, 116.0], [1.71820398E12, 94.0], [1.71820008E12, 120.0], [1.71820428E12, 144.0], [1.71819912E12, 111.0], [1.71820332E12, 122.0], [1.71820014E12, 118.0], [1.71820458E12, 220.0], [1.71819918E12, 173.0], [1.71820044E12, 144.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71820404E12, 1328.8000000000006], [1.71820434E12, 5503.2], [1.71820338E12, 3202.0], [1.71820446E12, 7169.6], [1.7182041E12, 2033.6000000000004], [1.7182044E12, 6420.4], [1.71820422E12, 3666.2], [1.7182023E12, 1374.6], [1.71820452E12, 7252.4], [1.71820038E12, 1522.1999999999998], [1.71820224E12, 13729.399999999994], [1.71820416E12, 2794.9], [1.71820236E12, 6941.0], [1.71820398E12, 506.00000000000017], [1.71820008E12, 1546.8000000000004], [1.71820428E12, 4624.8], [1.71819912E12, 1818.3000000000004], [1.71820332E12, 527.4], [1.71820014E12, 2407.4000000000005], [1.71820458E12, 14661.0], [1.71819918E12, 3029.5], [1.71820044E12, 2788.9]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71820404E12, 1936.9599999999973], [1.71820434E12, 6022.099999999999], [1.71820338E12, 3693.75], [1.71820446E12, 7896.589999999999], [1.7182041E12, 2817.0699999999983], [1.7182044E12, 7098.28], [1.71820422E12, 4306.439999999999], [1.7182023E12, 5761.0], [1.71820452E12, 7923.08], [1.71820038E12, 2009.8399999999992], [1.71820224E12, 16058.960000000001], [1.71820416E12, 3451.1299999999983], [1.71820236E12, 6941.0], [1.71820398E12, 1673.4199999999996], [1.71820008E12, 2321.0], [1.71820428E12, 5415.719999999998], [1.71819912E12, 2617.0899999999997], [1.71820332E12, 529.0], [1.71820014E12, 3262.5900000000006], [1.71820458E12, 21769.60000000001], [1.71819918E12, 3349.0], [1.71820044E12, 3348.81]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71820404E12, 507.0], [1.71820434E12, 2613.0], [1.71820338E12, 1111.0], [1.71820446E12, 3594.5], [1.7182041E12, 786.5], [1.7182044E12, 3223.0], [1.71820422E12, 1603.5], [1.7182023E12, 560.0], [1.71820452E12, 3672.0], [1.71820038E12, 470.0], [1.71820224E12, 1367.0], [1.71820416E12, 1159.0], [1.71820236E12, 784.0], [1.71820398E12, 393.0], [1.71820008E12, 423.0], [1.71820428E12, 2194.0], [1.71819912E12, 612.5], [1.71820332E12, 382.0], [1.71820014E12, 795.0], [1.71820458E12, 6528.0], [1.71819918E12, 1497.0], [1.71820044E12, 1081.5]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.71820404E12, 1541.4999999999995], [1.71820434E12, 5709.0], [1.71820338E12, 3418.75], [1.71820446E12, 7445.499999999999], [1.7182041E12, 2229.4], [1.7182044E12, 6689.1], [1.71820422E12, 4011.199999999999], [1.7182023E12, 4023.3999999999905], [1.71820452E12, 7533.4], [1.71820038E12, 1844.3999999999987], [1.71820224E12, 15408.999999999998], [1.71820416E12, 3011.049999999999], [1.71820236E12, 6941.0], [1.71820398E12, 916.6999999999989], [1.71820008E12, 1836.499999999999], [1.71820428E12, 4852.4], [1.71819912E12, 2073.25], [1.71820332E12, 529.0], [1.71820014E12, 2710.3], [1.71820458E12, 16108.0], [1.71819918E12, 3214.75], [1.71820044E12, 2953.75]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71820458E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 11956.5, "series": [{"data": [[2.0, 510.0], [44.0, 3329.5], [3.0, 515.0], [4.0, 461.5], [5.0, 626.5], [6.0, 457.0], [7.0, 644.0], [8.0, 718.5], [9.0, 1147.0], [10.0, 1094.5], [11.0, 1023.5], [12.0, 1393.5], [13.0, 1472.0], [14.0, 1884.5], [15.0, 1696.5], [16.0, 1811.0], [1.0, 485.5], [17.0, 1554.5], [18.0, 2247.0], [19.0, 2190.5], [20.0, 3103.0], [21.0, 1906.0], [22.0, 1593.0], [23.0, 3761.0], [25.0, 2510.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 1185.0], [4.0, 11956.5], [18.0, 0.0], [5.0, 0.0], [10.0, 3117.5], [20.0, 0.0], [23.0, 0.0], [13.0, 9141.0], [14.0, 1705.5], [15.0, 1116.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 44.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 10854.5, "series": [{"data": [[2.0, 509.5], [44.0, 3329.5], [3.0, 513.0], [4.0, 461.0], [5.0, 625.5], [6.0, 456.5], [7.0, 644.0], [8.0, 717.5], [9.0, 1145.0], [10.0, 1093.5], [11.0, 1020.5], [12.0, 1391.5], [13.0, 1471.0], [14.0, 1884.0], [15.0, 1695.5], [16.0, 1811.0], [1.0, 485.5], [17.0, 1554.0], [18.0, 2246.0], [19.0, 2190.5], [20.0, 3101.0], [21.0, 1905.0], [22.0, 1592.5], [23.0, 3761.0], [25.0, 2510.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 954.0], [4.0, 10854.5], [18.0, 0.0], [5.0, 0.0], [10.0, 2796.0], [20.0, 0.0], [23.0, 0.0], [13.0, 8147.0], [14.0, 0.0], [15.0, 868.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 44.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.21666666666666667, "minX": 1.71819912E12, "maxY": 13.783333333333333, "series": [{"data": [[1.71820404E12, 9.183333333333334], [1.71820434E12, 13.783333333333333], [1.71820338E12, 13.033333333333333], [1.71820446E12, 13.7], [1.7182041E12, 12.133333333333333], [1.7182044E12, 13.733333333333333], [1.71820422E12, 13.733333333333333], [1.7182023E12, 0.6], [1.71820452E12, 13.65], [1.71820038E12, 2.933333333333333], [1.71820224E12, 2.3833333333333333], [1.71820416E12, 13.166666666666666], [1.71820236E12, 0.23333333333333334], [1.71820398E12, 3.0833333333333335], [1.71820008E12, 0.7], [1.71820428E12, 13.383333333333333], [1.71819912E12, 4.55], [1.71820332E12, 0.21666666666666667], [1.71820014E12, 5.0], [1.71820458E12, 1.8833333333333333], [1.71819918E12, 1.2166666666666666], [1.71820044E12, 2.8833333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71820458E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71819912E12, "maxY": 13.633333333333333, "series": [{"data": [[1.71820404E12, 9.083333333333334], [1.71820434E12, 13.633333333333333], [1.71820338E12, 13.066666666666666], [1.71820446E12, 13.5], [1.7182041E12, 12.033333333333333], [1.7182044E12, 13.616666666666667], [1.71820422E12, 13.633333333333333], [1.7182023E12, 0.45], [1.71820452E12, 13.583333333333334], [1.71820038E12, 2.716666666666667], [1.71820224E12, 2.3833333333333333], [1.71820416E12, 13.0], [1.71820236E12, 0.15], [1.71820398E12, 3.033333333333333], [1.71820008E12, 0.6], [1.71820428E12, 13.25], [1.71819912E12, 4.2], [1.71820332E12, 0.18333333333333332], [1.71820014E12, 5.1], [1.71820458E12, 2.65], [1.71819918E12, 1.5666666666666667], [1.71820044E12, 3.1]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71820452E12, 0.016666666666666666], [1.71820458E12, 0.2]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.71820422E12, 0.03333333333333333], [1.71820452E12, 0.016666666666666666], [1.71820434E12, 0.03333333333333333], [1.71820446E12, 0.05], [1.71820428E12, 0.05], [1.7182044E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: java.net.URISyntaxException", "isController": false}, {"data": [[1.71820236E12, 0.23333333333333334]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71820458E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71819912E12, "maxY": 13.633333333333333, "series": [{"data": [[1.71820404E12, 9.083333333333334], [1.71820434E12, 13.633333333333333], [1.71820338E12, 13.066666666666666], [1.71820446E12, 13.5], [1.7182041E12, 12.033333333333333], [1.7182044E12, 13.616666666666667], [1.71820422E12, 13.633333333333333], [1.7182023E12, 0.18333333333333332], [1.71820452E12, 13.583333333333334], [1.71820038E12, 2.716666666666667], [1.71820224E12, 0.7333333333333333], [1.71820416E12, 13.0], [1.71820236E12, 0.05], [1.71820398E12, 3.033333333333333], [1.71820008E12, 0.6], [1.71820428E12, 13.25], [1.71819912E12, 4.2], [1.71820332E12, 0.18333333333333332], [1.71820014E12, 5.1], [1.71820458E12, 2.65], [1.71819918E12, 1.5666666666666667], [1.71820044E12, 3.1]], "isOverall": false, "label": "TitleBasics by primary_title-success", "isController": false}, {"data": [[1.71820422E12, 0.03333333333333333], [1.71820452E12, 0.03333333333333333], [1.71820434E12, 0.03333333333333333], [1.71820236E12, 0.016666666666666666], [1.71820446E12, 0.05], [1.71820428E12, 0.05], [1.71820458E12, 0.2], [1.7182044E12, 0.016666666666666666]], "isOverall": false, "label": "TitleBasics by primary_title-failure", "isController": false}, {"data": [[1.71820236E12, 0.2]], "isOverall": false, "label": "Actors by name-failure", "isController": false}, {"data": [[1.7182023E12, 0.016666666666666666], [1.71820224E12, 0.5666666666666667], [1.71820236E12, 0.03333333333333333]], "isOverall": false, "label": "Actors by name-success", "isController": false}, {"data": [[1.71820236E12, 0.016666666666666666]], "isOverall": false, "label": "Directors by name-failure", "isController": false}, {"data": [[1.7182023E12, 0.13333333333333333], [1.71820224E12, 0.5833333333333334], [1.71820236E12, 0.03333333333333333]], "isOverall": false, "label": "Directors by name-success", "isController": false}, {"data": [[1.7182023E12, 0.11666666666666667], [1.71820224E12, 0.5], [1.71820236E12, 0.03333333333333333]], "isOverall": false, "label": "TitleBasics by params-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71820458E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71819912E12, "maxY": 13.633333333333333, "series": [{"data": [[1.71820404E12, 9.083333333333334], [1.71820434E12, 13.633333333333333], [1.71820338E12, 13.066666666666666], [1.71820446E12, 13.5], [1.7182041E12, 12.033333333333333], [1.7182044E12, 13.616666666666667], [1.71820422E12, 13.633333333333333], [1.7182023E12, 0.45], [1.71820452E12, 13.583333333333334], [1.71820038E12, 2.716666666666667], [1.71820224E12, 2.3833333333333333], [1.71820416E12, 13.0], [1.71820236E12, 0.15], [1.71820398E12, 3.033333333333333], [1.71820008E12, 0.6], [1.71820428E12, 13.25], [1.71819912E12, 4.2], [1.71820332E12, 0.18333333333333332], [1.71820014E12, 5.1], [1.71820458E12, 2.65], [1.71819918E12, 1.5666666666666667], [1.71820044E12, 3.1]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.71820422E12, 0.03333333333333333], [1.71820452E12, 0.03333333333333333], [1.71820434E12, 0.03333333333333333], [1.71820236E12, 0.23333333333333334], [1.71820446E12, 0.05], [1.71820428E12, 0.05], [1.71820458E12, 0.2], [1.7182044E12, 0.016666666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71820458E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}


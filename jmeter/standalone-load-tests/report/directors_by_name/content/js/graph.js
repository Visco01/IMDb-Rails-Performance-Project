/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 95.0, "minX": 0.0, "maxY": 16209.0, "series": [{"data": [[0.0, 745.0], [0.1, 1098.0], [0.2, 1114.0], [0.3, 1123.0], [0.4, 1129.0], [0.5, 1134.0], [0.6, 1144.0], [0.7, 1156.0], [0.8, 1170.0], [0.9, 1182.0], [1.0, 1194.0], [1.1, 1213.0], [1.2, 1231.0], [1.3, 1240.0], [1.4, 1259.0], [1.5, 1270.0], [1.6, 1275.0], [1.7, 1299.0], [1.8, 1324.0], [1.9, 1348.0], [2.0, 1353.0], [2.1, 1359.0], [2.2, 1361.0], [2.3, 1368.0], [2.4, 1373.0], [2.5, 1379.0], [2.6, 1390.0], [2.7, 1396.0], [2.8, 1404.0], [2.9, 1414.0], [3.0, 1420.0], [3.1, 1421.0], [3.2, 1424.0], [3.3, 1426.0], [3.4, 1431.0], [3.5, 1434.0], [3.6, 1437.0], [3.7, 1439.0], [3.8, 1445.0], [3.9, 1450.0], [4.0, 1459.0], [4.1, 1462.0], [4.2, 1469.0], [4.3, 1475.0], [4.4, 1479.0], [4.5, 1484.0], [4.6, 1489.0], [4.7, 1491.0], [4.8, 1494.0], [4.9, 1498.0], [5.0, 1500.0], [5.1, 1504.0], [5.2, 1506.0], [5.3, 1515.0], [5.4, 1519.0], [5.5, 1519.0], [5.6, 1524.0], [5.7, 1530.0], [5.8, 1532.0], [5.9, 1535.0], [6.0, 1536.0], [6.1, 1538.0], [6.2, 1540.0], [6.3, 1542.0], [6.4, 1543.0], [6.5, 1545.0], [6.6, 1548.0], [6.7, 1551.0], [6.8, 1554.0], [6.9, 1555.0], [7.0, 1559.0], [7.1, 1563.0], [7.2, 1564.0], [7.3, 1568.0], [7.4, 1577.0], [7.5, 1580.0], [7.6, 1586.0], [7.7, 1589.0], [7.8, 1596.0], [7.9, 1598.0], [8.0, 1603.0], [8.1, 1611.0], [8.2, 1617.0], [8.3, 1627.0], [8.4, 1637.0], [8.5, 1649.0], [8.6, 1658.0], [8.7, 1661.0], [8.8, 1666.0], [8.9, 1671.0], [9.0, 1677.0], [9.1, 1690.0], [9.2, 1696.0], [9.3, 1707.0], [9.4, 1723.0], [9.5, 1730.0], [9.6, 1735.0], [9.7, 1747.0], [9.8, 1753.0], [9.9, 1759.0], [10.0, 1770.0], [10.1, 1774.0], [10.2, 1780.0], [10.3, 1792.0], [10.4, 1800.0], [10.5, 1807.0], [10.6, 1817.0], [10.7, 1834.0], [10.8, 1844.0], [10.9, 1851.0], [11.0, 1861.0], [11.1, 1864.0], [11.2, 1869.0], [11.3, 1874.0], [11.4, 1879.0], [11.5, 1889.0], [11.6, 1901.0], [11.7, 1908.0], [11.8, 1918.0], [11.9, 1927.0], [12.0, 1937.0], [12.1, 1943.0], [12.2, 1954.0], [12.3, 1964.0], [12.4, 1972.0], [12.5, 1987.0], [12.6, 1992.0], [12.7, 1998.0], [12.8, 2000.0], [12.9, 2008.0], [13.0, 2008.0], [13.1, 2011.0], [13.2, 2023.0], [13.3, 2028.0], [13.4, 2037.0], [13.5, 2041.0], [13.6, 2052.0], [13.7, 2065.0], [13.8, 2073.0], [13.9, 2077.0], [14.0, 2086.0], [14.1, 2095.0], [14.2, 2104.0], [14.3, 2118.0], [14.4, 2126.0], [14.5, 2137.0], [14.6, 2140.0], [14.7, 2145.0], [14.8, 2151.0], [14.9, 2157.0], [15.0, 2166.0], [15.1, 2169.0], [15.2, 2174.0], [15.3, 2180.0], [15.4, 2190.0], [15.5, 2196.0], [15.6, 2204.0], [15.7, 2216.0], [15.8, 2222.0], [15.9, 2234.0], [16.0, 2240.0], [16.1, 2246.0], [16.2, 2249.0], [16.3, 2254.0], [16.4, 2256.0], [16.5, 2258.0], [16.6, 2260.0], [16.7, 2264.0], [16.8, 2267.0], [16.9, 2271.0], [17.0, 2273.0], [17.1, 2274.0], [17.2, 2278.0], [17.3, 2279.0], [17.4, 2281.0], [17.5, 2283.0], [17.6, 2284.0], [17.7, 2287.0], [17.8, 2288.0], [17.9, 2289.0], [18.0, 2292.0], [18.1, 2294.0], [18.2, 2295.0], [18.3, 2298.0], [18.4, 2299.0], [18.5, 2300.0], [18.6, 2303.0], [18.7, 2304.0], [18.8, 2306.0], [18.9, 2307.0], [19.0, 2308.0], [19.1, 2312.0], [19.2, 2314.0], [19.3, 2316.0], [19.4, 2318.0], [19.5, 2321.0], [19.6, 2323.0], [19.7, 2326.0], [19.8, 2328.0], [19.9, 2331.0], [20.0, 2335.0], [20.1, 2338.0], [20.2, 2339.0], [20.3, 2341.0], [20.4, 2345.0], [20.5, 2348.0], [20.6, 2351.0], [20.7, 2352.0], [20.8, 2355.0], [20.9, 2358.0], [21.0, 2365.0], [21.1, 2367.0], [21.2, 2369.0], [21.3, 2371.0], [21.4, 2374.0], [21.5, 2377.0], [21.6, 2378.0], [21.7, 2380.0], [21.8, 2382.0], [21.9, 2386.0], [22.0, 2388.0], [22.1, 2389.0], [22.2, 2390.0], [22.3, 2391.0], [22.4, 2392.0], [22.5, 2394.0], [22.6, 2398.0], [22.7, 2402.0], [22.8, 2407.0], [22.9, 2410.0], [23.0, 2416.0], [23.1, 2418.0], [23.2, 2427.0], [23.3, 2431.0], [23.4, 2438.0], [23.5, 2443.0], [23.6, 2448.0], [23.7, 2453.0], [23.8, 2455.0], [23.9, 2458.0], [24.0, 2460.0], [24.1, 2462.0], [24.2, 2463.0], [24.3, 2464.0], [24.4, 2465.0], [24.5, 2467.0], [24.6, 2469.0], [24.7, 2472.0], [24.8, 2473.0], [24.9, 2476.0], [25.0, 2483.0], [25.1, 2491.0], [25.2, 2501.0], [25.3, 2511.0], [25.4, 2519.0], [25.5, 2531.0], [25.6, 2542.0], [25.7, 2545.0], [25.8, 2563.0], [25.9, 2577.0], [26.0, 2585.0], [26.1, 2592.0], [26.2, 2595.0], [26.3, 2599.0], [26.4, 2602.0], [26.5, 2606.0], [26.6, 2608.0], [26.7, 2611.0], [26.8, 2621.0], [26.9, 2625.0], [27.0, 2628.0], [27.1, 2632.0], [27.2, 2638.0], [27.3, 2641.0], [27.4, 2652.0], [27.5, 2660.0], [27.6, 2665.0], [27.7, 2671.0], [27.8, 2675.0], [27.9, 2679.0], [28.0, 2684.0], [28.1, 2686.0], [28.2, 2689.0], [28.3, 2694.0], [28.4, 2697.0], [28.5, 2699.0], [28.6, 2701.0], [28.7, 2704.0], [28.8, 2707.0], [28.9, 2711.0], [29.0, 2718.0], [29.1, 2721.0], [29.2, 2724.0], [29.3, 2729.0], [29.4, 2732.0], [29.5, 2734.0], [29.6, 2738.0], [29.7, 2740.0], [29.8, 2746.0], [29.9, 2751.0], [30.0, 2756.0], [30.1, 2767.0], [30.2, 2776.0], [30.3, 2783.0], [30.4, 2789.0], [30.5, 2802.0], [30.6, 2805.0], [30.7, 2808.0], [30.8, 2810.0], [30.9, 2816.0], [31.0, 2817.0], [31.1, 2820.0], [31.2, 2823.0], [31.3, 2824.0], [31.4, 2826.0], [31.5, 2829.0], [31.6, 2830.0], [31.7, 2831.0], [31.8, 2833.0], [31.9, 2835.0], [32.0, 2837.0], [32.1, 2839.0], [32.2, 2843.0], [32.3, 2851.0], [32.4, 2862.0], [32.5, 2872.0], [32.6, 2876.0], [32.7, 2881.0], [32.8, 2886.0], [32.9, 2889.0], [33.0, 2900.0], [33.1, 2911.0], [33.2, 2919.0], [33.3, 2928.0], [33.4, 2933.0], [33.5, 2939.0], [33.6, 2947.0], [33.7, 2950.0], [33.8, 2956.0], [33.9, 2960.0], [34.0, 2965.0], [34.1, 2968.0], [34.2, 2977.0], [34.3, 2980.0], [34.4, 2987.0], [34.5, 2997.0], [34.6, 3005.0], [34.7, 3009.0], [34.8, 3015.0], [34.9, 3021.0], [35.0, 3024.0], [35.1, 3027.0], [35.2, 3030.0], [35.3, 3031.0], [35.4, 3033.0], [35.5, 3035.0], [35.6, 3039.0], [35.7, 3043.0], [35.8, 3044.0], [35.9, 3047.0], [36.0, 3049.0], [36.1, 3052.0], [36.2, 3053.0], [36.3, 3057.0], [36.4, 3062.0], [36.5, 3065.0], [36.6, 3069.0], [36.7, 3073.0], [36.8, 3075.0], [36.9, 3077.0], [37.0, 3082.0], [37.1, 3083.0], [37.2, 3086.0], [37.3, 3087.0], [37.4, 3088.0], [37.5, 3089.0], [37.6, 3094.0], [37.7, 3100.0], [37.8, 3111.0], [37.9, 3124.0], [38.0, 3133.0], [38.1, 3142.0], [38.2, 3143.0], [38.3, 3152.0], [38.4, 3190.0], [38.5, 3201.0], [38.6, 3210.0], [38.7, 3213.0], [38.8, 3217.0], [38.9, 3220.0], [39.0, 3224.0], [39.1, 3230.0], [39.2, 3262.0], [39.3, 3271.0], [39.4, 3285.0], [39.5, 3323.0], [39.6, 3324.0], [39.7, 3330.0], [39.8, 3332.0], [39.9, 3333.0], [40.0, 3336.0], [40.1, 3339.0], [40.2, 3344.0], [40.3, 3345.0], [40.4, 3346.0], [40.5, 3347.0], [40.6, 3348.0], [40.7, 3352.0], [40.8, 3354.0], [40.9, 3355.0], [41.0, 3359.0], [41.1, 3364.0], [41.2, 3365.0], [41.3, 3369.0], [41.4, 3371.0], [41.5, 3373.0], [41.6, 3381.0], [41.7, 3384.0], [41.8, 3385.0], [41.9, 3390.0], [42.0, 3401.0], [42.1, 3420.0], [42.2, 3425.0], [42.3, 3426.0], [42.4, 3428.0], [42.5, 3430.0], [42.6, 3432.0], [42.7, 3435.0], [42.8, 3438.0], [42.9, 3439.0], [43.0, 3441.0], [43.1, 3443.0], [43.2, 3445.0], [43.3, 3447.0], [43.4, 3449.0], [43.5, 3451.0], [43.6, 3454.0], [43.7, 3459.0], [43.8, 3463.0], [43.9, 3466.0], [44.0, 3471.0], [44.1, 3473.0], [44.2, 3477.0], [44.3, 3479.0], [44.4, 3487.0], [44.5, 3496.0], [44.6, 3506.0], [44.7, 3513.0], [44.8, 3519.0], [44.9, 3521.0], [45.0, 3528.0], [45.1, 3533.0], [45.2, 3541.0], [45.3, 3568.0], [45.4, 3571.0], [45.5, 3576.0], [45.6, 3580.0], [45.7, 3582.0], [45.8, 3584.0], [45.9, 3588.0], [46.0, 3590.0], [46.1, 3591.0], [46.2, 3592.0], [46.3, 3594.0], [46.4, 3596.0], [46.5, 3599.0], [46.6, 3605.0], [46.7, 3656.0], [46.8, 3670.0], [46.9, 3674.0], [47.0, 3680.0], [47.1, 3680.0], [47.2, 3684.0], [47.3, 3686.0], [47.4, 3687.0], [47.5, 3690.0], [47.6, 3693.0], [47.7, 3695.0], [47.8, 3701.0], [47.9, 3705.0], [48.0, 3796.0], [48.1, 3804.0], [48.2, 3809.0], [48.3, 3814.0], [48.4, 3817.0], [48.5, 3819.0], [48.6, 3827.0], [48.7, 3842.0], [48.8, 3871.0], [48.9, 3877.0], [49.0, 3880.0], [49.1, 3883.0], [49.2, 3885.0], [49.3, 3887.0], [49.4, 3891.0], [49.5, 3892.0], [49.6, 3895.0], [49.7, 3896.0], [49.8, 3896.0], [49.9, 3900.0], [50.0, 3902.0], [50.1, 3905.0], [50.2, 3908.0], [50.3, 3912.0], [50.4, 3917.0], [50.5, 3919.0], [50.6, 3923.0], [50.7, 3944.0], [50.8, 3991.0], [50.9, 3996.0], [51.0, 4000.0], [51.1, 4002.0], [51.2, 4007.0], [51.3, 4012.0], [51.4, 4029.0], [51.5, 4085.0], [51.6, 4091.0], [51.7, 4097.0], [51.8, 4102.0], [51.9, 4110.0], [52.0, 4114.0], [52.1, 4119.0], [52.2, 4147.0], [52.3, 4192.0], [52.4, 4196.0], [52.5, 4198.0], [52.6, 4200.0], [52.7, 4200.0], [52.8, 4201.0], [52.9, 4203.0], [53.0, 4204.0], [53.1, 4207.0], [53.2, 4208.0], [53.3, 4210.0], [53.4, 4210.0], [53.5, 4212.0], [53.6, 4214.0], [53.7, 4217.0], [53.8, 4218.0], [53.9, 4219.0], [54.0, 4222.0], [54.1, 4224.0], [54.2, 4236.0], [54.3, 4267.0], [54.4, 4283.0], [54.5, 4291.0], [54.6, 4296.0], [54.7, 4301.0], [54.8, 4305.0], [54.9, 4311.0], [55.0, 4372.0], [55.1, 4396.0], [55.2, 4402.0], [55.3, 4408.0], [55.4, 4410.0], [55.5, 4416.0], [55.6, 4420.0], [55.7, 4425.0], [55.8, 4485.0], [55.9, 4497.0], [56.0, 4501.0], [56.1, 4503.0], [56.2, 4508.0], [56.3, 4509.0], [56.4, 4511.0], [56.5, 4512.0], [56.6, 4514.0], [56.7, 4515.0], [56.8, 4517.0], [56.9, 4518.0], [57.0, 4519.0], [57.1, 4520.0], [57.2, 4521.0], [57.3, 4522.0], [57.4, 4524.0], [57.5, 4526.0], [57.6, 4528.0], [57.7, 4533.0], [57.8, 4537.0], [57.9, 4544.0], [58.0, 4551.0], [58.1, 4585.0], [58.2, 4595.0], [58.3, 4599.0], [58.4, 4606.0], [58.5, 4609.0], [58.6, 4619.0], [58.7, 4627.0], [58.8, 4651.0], [58.9, 4661.0], [59.0, 4666.0], [59.1, 4669.0], [59.2, 4674.0], [59.3, 4678.0], [59.4, 4680.0], [59.5, 4692.0], [59.6, 4698.0], [59.7, 4700.0], [59.8, 4706.0], [59.9, 4708.0], [60.0, 4709.0], [60.1, 4713.0], [60.2, 4715.0], [60.3, 4720.0], [60.4, 4735.0], [60.5, 4743.0], [60.6, 4753.0], [60.7, 4757.0], [60.8, 4761.0], [60.9, 4767.0], [61.0, 4774.0], [61.1, 4806.0], [61.2, 4847.0], [61.3, 4851.0], [61.4, 4859.0], [61.5, 4864.0], [61.6, 4872.0], [61.7, 4874.0], [61.8, 4877.0], [61.9, 4881.0], [62.0, 4886.0], [62.1, 4891.0], [62.2, 4896.0], [62.3, 4900.0], [62.4, 4903.0], [62.5, 4906.0], [62.6, 4913.0], [62.7, 4922.0], [62.8, 5095.0], [62.9, 5102.0], [63.0, 5109.0], [63.1, 5111.0], [63.2, 5114.0], [63.3, 5117.0], [63.4, 5118.0], [63.5, 5119.0], [63.6, 5121.0], [63.7, 5123.0], [63.8, 5124.0], [63.9, 5126.0], [64.0, 5127.0], [64.1, 5132.0], [64.2, 5133.0], [64.3, 5136.0], [64.4, 5146.0], [64.5, 5193.0], [64.6, 5202.0], [64.7, 5204.0], [64.8, 5207.0], [64.9, 5211.0], [65.0, 5213.0], [65.1, 5215.0], [65.2, 5217.0], [65.3, 5220.0], [65.4, 5222.0], [65.5, 5225.0], [65.6, 5227.0], [65.7, 5229.0], [65.8, 5232.0], [65.9, 5238.0], [66.0, 5242.0], [66.1, 5259.0], [66.2, 5307.0], [66.3, 5309.0], [66.4, 5313.0], [66.5, 5316.0], [66.6, 5318.0], [66.7, 5320.0], [66.8, 5324.0], [66.9, 5326.0], [67.0, 5328.0], [67.1, 5331.0], [67.2, 5333.0], [67.3, 5336.0], [67.4, 5338.0], [67.5, 5341.0], [67.6, 5344.0], [67.7, 5347.0], [67.8, 5350.0], [67.9, 5417.0], [68.0, 5432.0], [68.1, 5435.0], [68.2, 5440.0], [68.3, 5443.0], [68.4, 5448.0], [68.5, 5451.0], [68.6, 5455.0], [68.7, 5466.0], [68.8, 5500.0], [68.9, 5509.0], [69.0, 5514.0], [69.1, 5519.0], [69.2, 5521.0], [69.3, 5525.0], [69.4, 5527.0], [69.5, 5531.0], [69.6, 5532.0], [69.7, 5534.0], [69.8, 5537.0], [69.9, 5540.0], [70.0, 5540.0], [70.1, 5542.0], [70.2, 5547.0], [70.3, 5550.0], [70.4, 5551.0], [70.5, 5554.0], [70.6, 5558.0], [70.7, 5717.0], [70.8, 5732.0], [70.9, 5734.0], [71.0, 5736.0], [71.1, 5739.0], [71.2, 5744.0], [71.3, 5745.0], [71.4, 5747.0], [71.5, 5752.0], [71.6, 5765.0], [71.7, 5828.0], [71.8, 5837.0], [71.9, 5841.0], [72.0, 5845.0], [72.1, 5849.0], [72.2, 5853.0], [72.3, 5858.0], [72.4, 5861.0], [72.5, 5876.0], [72.6, 5887.0], [72.7, 5899.0], [72.8, 5915.0], [72.9, 5926.0], [73.0, 5931.0], [73.1, 5932.0], [73.2, 5937.0], [73.3, 5939.0], [73.4, 5940.0], [73.5, 5941.0], [73.6, 5942.0], [73.7, 5945.0], [73.8, 5946.0], [73.9, 5948.0], [74.0, 5949.0], [74.1, 5952.0], [74.2, 5952.0], [74.3, 5954.0], [74.4, 5955.0], [74.5, 5957.0], [74.6, 5959.0], [74.7, 5960.0], [74.8, 5962.0], [74.9, 5965.0], [75.0, 5967.0], [75.1, 5974.0], [75.2, 5979.0], [75.3, 5984.0], [75.4, 5988.0], [75.5, 5993.0], [75.6, 6183.0], [75.7, 6207.0], [75.8, 6213.0], [75.9, 6222.0], [76.0, 6226.0], [76.1, 6227.0], [76.2, 6231.0], [76.3, 6233.0], [76.4, 6235.0], [76.5, 6238.0], [76.6, 6240.0], [76.7, 6242.0], [76.8, 6245.0], [76.9, 6246.0], [77.0, 6247.0], [77.1, 6248.0], [77.2, 6249.0], [77.3, 6250.0], [77.4, 6251.0], [77.5, 6253.0], [77.6, 6253.0], [77.7, 6254.0], [77.8, 6255.0], [77.9, 6257.0], [78.0, 6257.0], [78.1, 6259.0], [78.2, 6260.0], [78.3, 6263.0], [78.4, 6264.0], [78.5, 6266.0], [78.6, 6276.0], [78.7, 6287.0], [78.8, 6294.0], [78.9, 6303.0], [79.0, 6308.0], [79.1, 6313.0], [79.2, 6316.0], [79.3, 6320.0], [79.4, 6323.0], [79.5, 6328.0], [79.6, 6333.0], [79.7, 6445.0], [79.8, 6464.0], [79.9, 6470.0], [80.0, 6473.0], [80.1, 6475.0], [80.2, 6479.0], [80.3, 6484.0], [80.4, 6486.0], [80.5, 6486.0], [80.6, 6489.0], [80.7, 6498.0], [80.8, 6530.0], [80.9, 6548.0], [81.0, 6554.0], [81.1, 6556.0], [81.2, 6560.0], [81.3, 6564.0], [81.4, 6568.0], [81.5, 6568.0], [81.6, 6570.0], [81.7, 6572.0], [81.8, 6574.0], [81.9, 6576.0], [82.0, 6578.0], [82.1, 6581.0], [82.2, 6586.0], [82.3, 6587.0], [82.4, 6589.0], [82.5, 6591.0], [82.6, 6594.0], [82.7, 6598.0], [82.8, 6600.0], [82.9, 6608.0], [83.0, 6610.0], [83.1, 6614.0], [83.2, 6623.0], [83.3, 6626.0], [83.4, 6630.0], [83.5, 6637.0], [83.6, 6644.0], [83.7, 6651.0], [83.8, 6653.0], [83.9, 6657.0], [84.0, 6664.0], [84.1, 6668.0], [84.2, 6672.0], [84.3, 6675.0], [84.4, 6676.0], [84.5, 6678.0], [84.6, 6678.0], [84.7, 6679.0], [84.8, 6680.0], [84.9, 6682.0], [85.0, 6684.0], [85.1, 6685.0], [85.2, 6686.0], [85.3, 6688.0], [85.4, 6688.0], [85.5, 6689.0], [85.6, 6690.0], [85.7, 6691.0], [85.8, 6692.0], [85.9, 6692.0], [86.0, 6693.0], [86.1, 6694.0], [86.2, 6695.0], [86.3, 6695.0], [86.4, 6696.0], [86.5, 6696.0], [86.6, 6697.0], [86.7, 6697.0], [86.8, 6697.0], [86.9, 6698.0], [87.0, 6699.0], [87.1, 6699.0], [87.2, 6700.0], [87.3, 6702.0], [87.4, 6702.0], [87.5, 6703.0], [87.6, 6704.0], [87.7, 6704.0], [87.8, 6704.0], [87.9, 6705.0], [88.0, 6706.0], [88.1, 6706.0], [88.2, 6707.0], [88.3, 6707.0], [88.4, 6708.0], [88.5, 6709.0], [88.6, 6709.0], [88.7, 6710.0], [88.8, 6710.0], [88.9, 6711.0], [89.0, 6711.0], [89.1, 6711.0], [89.2, 6712.0], [89.3, 6713.0], [89.4, 6713.0], [89.5, 6714.0], [89.6, 6714.0], [89.7, 6715.0], [89.8, 6715.0], [89.9, 6716.0], [90.0, 6716.0], [90.1, 6717.0], [90.2, 6718.0], [90.3, 6718.0], [90.4, 6719.0], [90.5, 6720.0], [90.6, 6720.0], [90.7, 6721.0], [90.8, 6721.0], [90.9, 6722.0], [91.0, 6722.0], [91.1, 6723.0], [91.2, 6724.0], [91.3, 6724.0], [91.4, 6725.0], [91.5, 6725.0], [91.6, 6725.0], [91.7, 6726.0], [91.8, 6727.0], [91.9, 6727.0], [92.0, 6728.0], [92.1, 6729.0], [92.2, 6730.0], [92.3, 6731.0], [92.4, 6733.0], [92.5, 6734.0], [92.6, 6735.0], [92.7, 6737.0], [92.8, 6737.0], [92.9, 6739.0], [93.0, 6740.0], [93.1, 6741.0], [93.2, 6742.0], [93.3, 6742.0], [93.4, 6743.0], [93.5, 6744.0], [93.6, 6745.0], [93.7, 6746.0], [93.8, 6746.0], [93.9, 6747.0], [94.0, 6747.0], [94.1, 6748.0], [94.2, 6749.0], [94.3, 6751.0], [94.4, 6753.0], [94.5, 6754.0], [94.6, 6754.0], [94.7, 6755.0], [94.8, 6755.0], [94.9, 6756.0], [95.0, 6756.0], [95.1, 6757.0], [95.2, 6757.0], [95.3, 6758.0], [95.4, 6758.0], [95.5, 6759.0], [95.6, 6759.0], [95.7, 6759.0], [95.8, 6760.0], [95.9, 6760.0], [96.0, 6761.0], [96.1, 6761.0], [96.2, 6763.0], [96.3, 6763.0], [96.4, 6764.0], [96.5, 6764.0], [96.6, 6765.0], [96.7, 6765.0], [96.8, 6766.0], [96.9, 6766.0], [97.0, 6767.0], [97.1, 6768.0], [97.2, 6768.0], [97.3, 6768.0], [97.4, 6769.0], [97.5, 6769.0], [97.6, 6770.0], [97.7, 6771.0], [97.8, 6771.0], [97.9, 6771.0], [98.0, 6772.0], [98.1, 6772.0], [98.2, 6773.0], [98.3, 6774.0], [98.4, 6775.0], [98.5, 6775.0], [98.6, 6776.0], [98.7, 6777.0], [98.8, 6778.0], [98.9, 6779.0], [99.0, 6780.0], [99.1, 6780.0], [99.2, 6781.0], [99.3, 6782.0], [99.4, 6784.0], [99.5, 6788.0], [99.6, 6791.0], [99.7, 6801.0], [99.8, 8157.0], [99.9, 9396.0], [100.0, 12667.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[0.0, 109.0], [0.1, 109.0], [0.2, 109.0], [0.3, 109.0], [0.4, 109.0], [0.5, 109.0], [0.6, 109.0], [0.7, 109.0], [0.8, 109.0], [0.9, 109.0], [1.0, 109.0], [1.1, 109.0], [1.2, 109.0], [1.3, 109.0], [1.4, 109.0], [1.5, 109.0], [1.6, 109.0], [1.7, 120.0], [1.8, 120.0], [1.9, 120.0], [2.0, 120.0], [2.1, 120.0], [2.2, 120.0], [2.3, 120.0], [2.4, 120.0], [2.5, 120.0], [2.6, 120.0], [2.7, 120.0], [2.8, 120.0], [2.9, 120.0], [3.0, 120.0], [3.1, 120.0], [3.2, 120.0], [3.3, 120.0], [3.4, 129.0], [3.5, 129.0], [3.6, 129.0], [3.7, 129.0], [3.8, 129.0], [3.9, 129.0], [4.0, 129.0], [4.1, 129.0], [4.2, 129.0], [4.3, 129.0], [4.4, 129.0], [4.5, 129.0], [4.6, 129.0], [4.7, 129.0], [4.8, 129.0], [4.9, 129.0], [5.0, 129.0], [5.1, 166.0], [5.2, 166.0], [5.3, 166.0], [5.4, 166.0], [5.5, 166.0], [5.6, 166.0], [5.7, 166.0], [5.8, 166.0], [5.9, 166.0], [6.0, 166.0], [6.1, 166.0], [6.2, 166.0], [6.3, 166.0], [6.4, 166.0], [6.5, 166.0], [6.6, 166.0], [6.7, 166.0], [6.8, 167.0], [6.9, 167.0], [7.0, 167.0], [7.1, 167.0], [7.2, 167.0], [7.3, 167.0], [7.4, 167.0], [7.5, 167.0], [7.6, 167.0], [7.7, 167.0], [7.8, 167.0], [7.9, 167.0], [8.0, 167.0], [8.1, 167.0], [8.2, 167.0], [8.3, 167.0], [8.4, 167.0], [8.5, 171.0], [8.6, 171.0], [8.7, 171.0], [8.8, 171.0], [8.9, 171.0], [9.0, 171.0], [9.1, 171.0], [9.2, 171.0], [9.3, 171.0], [9.4, 171.0], [9.5, 171.0], [9.6, 171.0], [9.7, 171.0], [9.8, 171.0], [9.9, 171.0], [10.0, 171.0], [10.1, 171.0], [10.2, 198.0], [10.3, 198.0], [10.4, 198.0], [10.5, 198.0], [10.6, 198.0], [10.7, 198.0], [10.8, 198.0], [10.9, 198.0], [11.0, 198.0], [11.1, 198.0], [11.2, 198.0], [11.3, 198.0], [11.4, 198.0], [11.5, 198.0], [11.6, 198.0], [11.7, 198.0], [11.8, 198.0], [11.9, 199.0], [12.0, 199.0], [12.1, 199.0], [12.2, 199.0], [12.3, 199.0], [12.4, 199.0], [12.5, 199.0], [12.6, 199.0], [12.7, 199.0], [12.8, 199.0], [12.9, 199.0], [13.0, 199.0], [13.1, 199.0], [13.2, 199.0], [13.3, 199.0], [13.4, 199.0], [13.5, 199.0], [13.6, 201.0], [13.7, 201.0], [13.8, 201.0], [13.9, 201.0], [14.0, 201.0], [14.1, 201.0], [14.2, 201.0], [14.3, 201.0], [14.4, 201.0], [14.5, 201.0], [14.6, 201.0], [14.7, 201.0], [14.8, 201.0], [14.9, 201.0], [15.0, 201.0], [15.1, 201.0], [15.2, 201.0], [15.3, 209.0], [15.4, 209.0], [15.5, 209.0], [15.6, 209.0], [15.7, 209.0], [15.8, 209.0], [15.9, 209.0], [16.0, 209.0], [16.1, 209.0], [16.2, 209.0], [16.3, 209.0], [16.4, 209.0], [16.5, 209.0], [16.6, 209.0], [16.7, 209.0], [16.8, 209.0], [16.9, 209.0], [17.0, 213.0], [17.1, 213.0], [17.2, 213.0], [17.3, 213.0], [17.4, 213.0], [17.5, 213.0], [17.6, 213.0], [17.7, 213.0], [17.8, 213.0], [17.9, 213.0], [18.0, 213.0], [18.1, 213.0], [18.2, 213.0], [18.3, 213.0], [18.4, 213.0], [18.5, 213.0], [18.6, 213.0], [18.7, 230.0], [18.8, 230.0], [18.9, 230.0], [19.0, 230.0], [19.1, 230.0], [19.2, 230.0], [19.3, 230.0], [19.4, 230.0], [19.5, 230.0], [19.6, 230.0], [19.7, 230.0], [19.8, 230.0], [19.9, 230.0], [20.0, 230.0], [20.1, 230.0], [20.2, 230.0], [20.3, 230.0], [20.4, 254.0], [20.5, 254.0], [20.6, 254.0], [20.7, 254.0], [20.8, 254.0], [20.9, 254.0], [21.0, 254.0], [21.1, 254.0], [21.2, 254.0], [21.3, 254.0], [21.4, 254.0], [21.5, 254.0], [21.6, 254.0], [21.7, 254.0], [21.8, 254.0], [21.9, 254.0], [22.0, 254.0], [22.1, 267.0], [22.2, 267.0], [22.3, 267.0], [22.4, 267.0], [22.5, 267.0], [22.6, 267.0], [22.7, 267.0], [22.8, 267.0], [22.9, 267.0], [23.0, 267.0], [23.1, 267.0], [23.2, 267.0], [23.3, 267.0], [23.4, 267.0], [23.5, 267.0], [23.6, 267.0], [23.7, 267.0], [23.8, 278.0], [23.9, 278.0], [24.0, 278.0], [24.1, 278.0], [24.2, 278.0], [24.3, 278.0], [24.4, 278.0], [24.5, 278.0], [24.6, 278.0], [24.7, 278.0], [24.8, 278.0], [24.9, 278.0], [25.0, 278.0], [25.1, 278.0], [25.2, 278.0], [25.3, 278.0], [25.4, 278.0], [25.5, 297.0], [25.6, 297.0], [25.7, 297.0], [25.8, 297.0], [25.9, 297.0], [26.0, 297.0], [26.1, 297.0], [26.2, 297.0], [26.3, 297.0], [26.4, 297.0], [26.5, 297.0], [26.6, 297.0], [26.7, 297.0], [26.8, 297.0], [26.9, 297.0], [27.0, 297.0], [27.1, 297.0], [27.2, 324.0], [27.3, 324.0], [27.4, 324.0], [27.5, 324.0], [27.6, 324.0], [27.7, 324.0], [27.8, 324.0], [27.9, 324.0], [28.0, 324.0], [28.1, 324.0], [28.2, 324.0], [28.3, 324.0], [28.4, 324.0], [28.5, 324.0], [28.6, 324.0], [28.7, 324.0], [28.8, 324.0], [28.9, 351.0], [29.0, 351.0], [29.1, 351.0], [29.2, 351.0], [29.3, 351.0], [29.4, 351.0], [29.5, 351.0], [29.6, 351.0], [29.7, 351.0], [29.8, 351.0], [29.9, 351.0], [30.0, 351.0], [30.1, 351.0], [30.2, 351.0], [30.3, 351.0], [30.4, 351.0], [30.5, 351.0], [30.6, 421.0], [30.7, 421.0], [30.8, 421.0], [30.9, 421.0], [31.0, 421.0], [31.1, 421.0], [31.2, 421.0], [31.3, 421.0], [31.4, 421.0], [31.5, 421.0], [31.6, 421.0], [31.7, 421.0], [31.8, 421.0], [31.9, 421.0], [32.0, 421.0], [32.1, 421.0], [32.2, 421.0], [32.3, 426.0], [32.4, 426.0], [32.5, 426.0], [32.6, 426.0], [32.7, 426.0], [32.8, 426.0], [32.9, 426.0], [33.0, 426.0], [33.1, 426.0], [33.2, 426.0], [33.3, 426.0], [33.4, 426.0], [33.5, 426.0], [33.6, 426.0], [33.7, 426.0], [33.8, 426.0], [33.9, 463.0], [34.0, 463.0], [34.1, 463.0], [34.2, 463.0], [34.3, 463.0], [34.4, 463.0], [34.5, 463.0], [34.6, 463.0], [34.7, 463.0], [34.8, 463.0], [34.9, 463.0], [35.0, 463.0], [35.1, 463.0], [35.2, 463.0], [35.3, 463.0], [35.4, 463.0], [35.5, 463.0], [35.6, 513.0], [35.7, 513.0], [35.8, 513.0], [35.9, 513.0], [36.0, 513.0], [36.1, 513.0], [36.2, 513.0], [36.3, 513.0], [36.4, 513.0], [36.5, 513.0], [36.6, 513.0], [36.7, 513.0], [36.8, 513.0], [36.9, 513.0], [37.0, 513.0], [37.1, 513.0], [37.2, 513.0], [37.3, 516.0], [37.4, 516.0], [37.5, 516.0], [37.6, 516.0], [37.7, 516.0], [37.8, 516.0], [37.9, 516.0], [38.0, 516.0], [38.1, 516.0], [38.2, 516.0], [38.3, 516.0], [38.4, 516.0], [38.5, 516.0], [38.6, 516.0], [38.7, 516.0], [38.8, 516.0], [38.9, 516.0], [39.0, 541.0], [39.1, 541.0], [39.2, 541.0], [39.3, 541.0], [39.4, 541.0], [39.5, 541.0], [39.6, 541.0], [39.7, 541.0], [39.8, 541.0], [39.9, 541.0], [40.0, 541.0], [40.1, 541.0], [40.2, 541.0], [40.3, 541.0], [40.4, 541.0], [40.5, 541.0], [40.6, 541.0], [40.7, 546.0], [40.8, 546.0], [40.9, 546.0], [41.0, 546.0], [41.1, 546.0], [41.2, 546.0], [41.3, 546.0], [41.4, 546.0], [41.5, 546.0], [41.6, 546.0], [41.7, 546.0], [41.8, 546.0], [41.9, 546.0], [42.0, 546.0], [42.1, 546.0], [42.2, 546.0], [42.3, 546.0], [42.4, 560.0], [42.5, 560.0], [42.6, 560.0], [42.7, 560.0], [42.8, 560.0], [42.9, 560.0], [43.0, 560.0], [43.1, 560.0], [43.2, 560.0], [43.3, 560.0], [43.4, 560.0], [43.5, 560.0], [43.6, 560.0], [43.7, 560.0], [43.8, 560.0], [43.9, 560.0], [44.0, 560.0], [44.1, 597.0], [44.2, 597.0], [44.3, 597.0], [44.4, 597.0], [44.5, 597.0], [44.6, 597.0], [44.7, 597.0], [44.8, 597.0], [44.9, 597.0], [45.0, 597.0], [45.1, 597.0], [45.2, 597.0], [45.3, 597.0], [45.4, 597.0], [45.5, 597.0], [45.6, 597.0], [45.7, 597.0], [45.8, 604.0], [45.9, 604.0], [46.0, 604.0], [46.1, 604.0], [46.2, 604.0], [46.3, 604.0], [46.4, 604.0], [46.5, 604.0], [46.6, 604.0], [46.7, 604.0], [46.8, 604.0], [46.9, 604.0], [47.0, 604.0], [47.1, 604.0], [47.2, 604.0], [47.3, 604.0], [47.4, 604.0], [47.5, 647.0], [47.6, 647.0], [47.7, 647.0], [47.8, 647.0], [47.9, 647.0], [48.0, 647.0], [48.1, 647.0], [48.2, 647.0], [48.3, 647.0], [48.4, 647.0], [48.5, 647.0], [48.6, 647.0], [48.7, 647.0], [48.8, 647.0], [48.9, 647.0], [49.0, 647.0], [49.1, 647.0], [49.2, 676.0], [49.3, 676.0], [49.4, 676.0], [49.5, 676.0], [49.6, 676.0], [49.7, 676.0], [49.8, 676.0], [49.9, 676.0], [50.0, 676.0], [50.1, 676.0], [50.2, 676.0], [50.3, 676.0], [50.4, 676.0], [50.5, 676.0], [50.6, 676.0], [50.7, 676.0], [50.8, 676.0], [50.9, 691.0], [51.0, 691.0], [51.1, 691.0], [51.2, 691.0], [51.3, 691.0], [51.4, 691.0], [51.5, 691.0], [51.6, 691.0], [51.7, 691.0], [51.8, 691.0], [51.9, 691.0], [52.0, 691.0], [52.1, 691.0], [52.2, 691.0], [52.3, 691.0], [52.4, 691.0], [52.5, 691.0], [52.6, 719.0], [52.7, 719.0], [52.8, 719.0], [52.9, 719.0], [53.0, 719.0], [53.1, 719.0], [53.2, 719.0], [53.3, 719.0], [53.4, 719.0], [53.5, 719.0], [53.6, 719.0], [53.7, 719.0], [53.8, 719.0], [53.9, 719.0], [54.0, 719.0], [54.1, 719.0], [54.2, 719.0], [54.3, 749.0], [54.4, 749.0], [54.5, 749.0], [54.6, 749.0], [54.7, 749.0], [54.8, 749.0], [54.9, 749.0], [55.0, 749.0], [55.1, 749.0], [55.2, 749.0], [55.3, 749.0], [55.4, 749.0], [55.5, 749.0], [55.6, 749.0], [55.7, 749.0], [55.8, 749.0], [55.9, 749.0], [56.0, 784.0], [56.1, 784.0], [56.2, 784.0], [56.3, 784.0], [56.4, 784.0], [56.5, 784.0], [56.6, 784.0], [56.7, 784.0], [56.8, 784.0], [56.9, 784.0], [57.0, 784.0], [57.1, 784.0], [57.2, 784.0], [57.3, 784.0], [57.4, 784.0], [57.5, 784.0], [57.6, 784.0], [57.7, 816.0], [57.8, 816.0], [57.9, 816.0], [58.0, 816.0], [58.1, 816.0], [58.2, 816.0], [58.3, 816.0], [58.4, 816.0], [58.5, 816.0], [58.6, 816.0], [58.7, 816.0], [58.8, 816.0], [58.9, 816.0], [59.0, 816.0], [59.1, 816.0], [59.2, 816.0], [59.3, 816.0], [59.4, 826.0], [59.5, 826.0], [59.6, 826.0], [59.7, 826.0], [59.8, 826.0], [59.9, 826.0], [60.0, 826.0], [60.1, 826.0], [60.2, 826.0], [60.3, 826.0], [60.4, 826.0], [60.5, 826.0], [60.6, 826.0], [60.7, 826.0], [60.8, 826.0], [60.9, 826.0], [61.0, 826.0], [61.1, 858.0], [61.2, 858.0], [61.3, 858.0], [61.4, 858.0], [61.5, 858.0], [61.6, 858.0], [61.7, 858.0], [61.8, 858.0], [61.9, 858.0], [62.0, 858.0], [62.1, 858.0], [62.2, 858.0], [62.3, 858.0], [62.4, 858.0], [62.5, 858.0], [62.6, 858.0], [62.7, 858.0], [62.8, 859.0], [62.9, 859.0], [63.0, 859.0], [63.1, 859.0], [63.2, 859.0], [63.3, 859.0], [63.4, 859.0], [63.5, 859.0], [63.6, 859.0], [63.7, 859.0], [63.8, 859.0], [63.9, 859.0], [64.0, 859.0], [64.1, 859.0], [64.2, 859.0], [64.3, 859.0], [64.4, 859.0], [64.5, 862.0], [64.6, 862.0], [64.7, 862.0], [64.8, 862.0], [64.9, 862.0], [65.0, 862.0], [65.1, 862.0], [65.2, 862.0], [65.3, 862.0], [65.4, 862.0], [65.5, 862.0], [65.6, 862.0], [65.7, 862.0], [65.8, 862.0], [65.9, 862.0], [66.0, 862.0], [66.1, 862.0], [66.2, 864.0], [66.3, 864.0], [66.4, 864.0], [66.5, 864.0], [66.6, 864.0], [66.7, 864.0], [66.8, 864.0], [66.9, 864.0], [67.0, 864.0], [67.1, 864.0], [67.2, 864.0], [67.3, 864.0], [67.4, 864.0], [67.5, 864.0], [67.6, 864.0], [67.7, 864.0], [67.8, 866.0], [67.9, 866.0], [68.0, 866.0], [68.1, 866.0], [68.2, 866.0], [68.3, 866.0], [68.4, 866.0], [68.5, 866.0], [68.6, 866.0], [68.7, 866.0], [68.8, 866.0], [68.9, 866.0], [69.0, 866.0], [69.1, 866.0], [69.2, 866.0], [69.3, 866.0], [69.4, 866.0], [69.5, 893.0], [69.6, 893.0], [69.7, 893.0], [69.8, 893.0], [69.9, 893.0], [70.0, 893.0], [70.1, 893.0], [70.2, 893.0], [70.3, 893.0], [70.4, 893.0], [70.5, 893.0], [70.6, 893.0], [70.7, 893.0], [70.8, 893.0], [70.9, 893.0], [71.0, 893.0], [71.1, 893.0], [71.2, 964.0], [71.3, 964.0], [71.4, 964.0], [71.5, 964.0], [71.6, 964.0], [71.7, 964.0], [71.8, 964.0], [71.9, 964.0], [72.0, 964.0], [72.1, 964.0], [72.2, 964.0], [72.3, 964.0], [72.4, 964.0], [72.5, 964.0], [72.6, 964.0], [72.7, 964.0], [72.8, 964.0], [72.9, 997.0], [73.0, 997.0], [73.1, 997.0], [73.2, 997.0], [73.3, 997.0], [73.4, 997.0], [73.5, 997.0], [73.6, 997.0], [73.7, 997.0], [73.8, 997.0], [73.9, 997.0], [74.0, 997.0], [74.1, 997.0], [74.2, 997.0], [74.3, 997.0], [74.4, 997.0], [74.5, 997.0], [74.6, 1005.0], [74.7, 1005.0], [74.8, 1005.0], [74.9, 1005.0], [75.0, 1005.0], [75.1, 1005.0], [75.2, 1005.0], [75.3, 1005.0], [75.4, 1005.0], [75.5, 1005.0], [75.6, 1005.0], [75.7, 1005.0], [75.8, 1005.0], [75.9, 1005.0], [76.0, 1005.0], [76.1, 1005.0], [76.2, 1005.0], [76.3, 1010.0], [76.4, 1010.0], [76.5, 1010.0], [76.6, 1010.0], [76.7, 1010.0], [76.8, 1010.0], [76.9, 1010.0], [77.0, 1010.0], [77.1, 1010.0], [77.2, 1010.0], [77.3, 1010.0], [77.4, 1010.0], [77.5, 1010.0], [77.6, 1010.0], [77.7, 1010.0], [77.8, 1010.0], [77.9, 1010.0], [78.0, 1030.0], [78.1, 1030.0], [78.2, 1030.0], [78.3, 1030.0], [78.4, 1030.0], [78.5, 1030.0], [78.6, 1030.0], [78.7, 1030.0], [78.8, 1030.0], [78.9, 1030.0], [79.0, 1030.0], [79.1, 1030.0], [79.2, 1030.0], [79.3, 1030.0], [79.4, 1030.0], [79.5, 1030.0], [79.6, 1030.0], [79.7, 1093.0], [79.8, 1093.0], [79.9, 1093.0], [80.0, 1093.0], [80.1, 1093.0], [80.2, 1093.0], [80.3, 1093.0], [80.4, 1093.0], [80.5, 1093.0], [80.6, 1093.0], [80.7, 1093.0], [80.8, 1093.0], [80.9, 1093.0], [81.0, 1093.0], [81.1, 1093.0], [81.2, 1093.0], [81.3, 1093.0], [81.4, 1234.0], [81.5, 1234.0], [81.6, 1234.0], [81.7, 1234.0], [81.8, 1234.0], [81.9, 1234.0], [82.0, 1234.0], [82.1, 1234.0], [82.2, 1234.0], [82.3, 1234.0], [82.4, 1234.0], [82.5, 1234.0], [82.6, 1234.0], [82.7, 1234.0], [82.8, 1234.0], [82.9, 1234.0], [83.0, 1234.0], [83.1, 1317.0], [83.2, 1317.0], [83.3, 1317.0], [83.4, 1317.0], [83.5, 1317.0], [83.6, 1317.0], [83.7, 1317.0], [83.8, 1317.0], [83.9, 1317.0], [84.0, 1317.0], [84.1, 1317.0], [84.2, 1317.0], [84.3, 1317.0], [84.4, 1317.0], [84.5, 1317.0], [84.6, 1317.0], [84.7, 1317.0], [84.8, 1334.0], [84.9, 1334.0], [85.0, 1334.0], [85.1, 1334.0], [85.2, 1334.0], [85.3, 1334.0], [85.4, 1334.0], [85.5, 1334.0], [85.6, 1334.0], [85.7, 1334.0], [85.8, 1334.0], [85.9, 1334.0], [86.0, 1334.0], [86.1, 1334.0], [86.2, 1334.0], [86.3, 1334.0], [86.4, 1334.0], [86.5, 1367.0], [86.6, 1367.0], [86.7, 1367.0], [86.8, 1367.0], [86.9, 1367.0], [87.0, 1367.0], [87.1, 1367.0], [87.2, 1367.0], [87.3, 1367.0], [87.4, 1367.0], [87.5, 1367.0], [87.6, 1367.0], [87.7, 1367.0], [87.8, 1367.0], [87.9, 1367.0], [88.0, 1367.0], [88.1, 1367.0], [88.2, 1374.0], [88.3, 1374.0], [88.4, 1374.0], [88.5, 1374.0], [88.6, 1374.0], [88.7, 1374.0], [88.8, 1374.0], [88.9, 1374.0], [89.0, 1374.0], [89.1, 1374.0], [89.2, 1374.0], [89.3, 1374.0], [89.4, 1374.0], [89.5, 1374.0], [89.6, 1374.0], [89.7, 1374.0], [89.8, 1374.0], [89.9, 1385.0], [90.0, 1385.0], [90.1, 1385.0], [90.2, 1385.0], [90.3, 1385.0], [90.4, 1385.0], [90.5, 1385.0], [90.6, 1385.0], [90.7, 1385.0], [90.8, 1385.0], [90.9, 1385.0], [91.0, 1385.0], [91.1, 1385.0], [91.2, 1385.0], [91.3, 1385.0], [91.4, 1385.0], [91.5, 1385.0], [91.6, 1476.0], [91.7, 1476.0], [91.8, 1476.0], [91.9, 1476.0], [92.0, 1476.0], [92.1, 1476.0], [92.2, 1476.0], [92.3, 1476.0], [92.4, 1476.0], [92.5, 1476.0], [92.6, 1476.0], [92.7, 1476.0], [92.8, 1476.0], [92.9, 1476.0], [93.0, 1476.0], [93.1, 1476.0], [93.2, 1476.0], [93.3, 1574.0], [93.4, 1574.0], [93.5, 1574.0], [93.6, 1574.0], [93.7, 1574.0], [93.8, 1574.0], [93.9, 1574.0], [94.0, 1574.0], [94.1, 1574.0], [94.2, 1574.0], [94.3, 1574.0], [94.4, 1574.0], [94.5, 1574.0], [94.6, 1574.0], [94.7, 1574.0], [94.8, 1574.0], [94.9, 1574.0], [95.0, 1731.0], [95.1, 1731.0], [95.2, 1731.0], [95.3, 1731.0], [95.4, 1731.0], [95.5, 1731.0], [95.6, 1731.0], [95.7, 1731.0], [95.8, 1731.0], [95.9, 1731.0], [96.0, 1731.0], [96.1, 1731.0], [96.2, 1731.0], [96.3, 1731.0], [96.4, 1731.0], [96.5, 1731.0], [96.6, 1731.0], [96.7, 2026.0], [96.8, 2026.0], [96.9, 2026.0], [97.0, 2026.0], [97.1, 2026.0], [97.2, 2026.0], [97.3, 2026.0], [97.4, 2026.0], [97.5, 2026.0], [97.6, 2026.0], [97.7, 2026.0], [97.8, 2026.0], [97.9, 2026.0], [98.0, 2026.0], [98.1, 2026.0], [98.2, 2026.0], [98.3, 2026.0], [98.4, 2436.0], [98.5, 2436.0], [98.6, 2436.0], [98.7, 2436.0], [98.8, 2436.0], [98.9, 2436.0], [99.0, 2436.0], [99.1, 2436.0], [99.2, 2436.0], [99.3, 2436.0], [99.4, 2436.0], [99.5, 2436.0], [99.6, 2436.0], [99.7, 2436.0], [99.8, 2436.0], [99.9, 2436.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[0.0, 666.0], [0.1, 666.0], [0.2, 666.0], [0.3, 666.0], [0.4, 666.0], [0.5, 666.0], [0.6, 666.0], [0.7, 666.0], [0.8, 666.0], [0.9, 666.0], [1.0, 666.0], [1.1, 666.0], [1.2, 666.0], [1.3, 666.0], [1.4, 666.0], [1.5, 666.0], [1.6, 666.0], [1.7, 666.0], [1.8, 666.0], [1.9, 666.0], [2.0, 666.0], [2.1, 746.0], [2.2, 746.0], [2.3, 746.0], [2.4, 746.0], [2.5, 746.0], [2.6, 746.0], [2.7, 746.0], [2.8, 746.0], [2.9, 746.0], [3.0, 746.0], [3.1, 746.0], [3.2, 746.0], [3.3, 746.0], [3.4, 746.0], [3.5, 746.0], [3.6, 746.0], [3.7, 746.0], [3.8, 746.0], [3.9, 746.0], [4.0, 746.0], [4.1, 1051.0], [4.2, 1051.0], [4.3, 1051.0], [4.4, 1051.0], [4.5, 1051.0], [4.6, 1051.0], [4.7, 1051.0], [4.8, 1051.0], [4.9, 1051.0], [5.0, 1051.0], [5.1, 1051.0], [5.2, 1051.0], [5.3, 1051.0], [5.4, 1051.0], [5.5, 1051.0], [5.6, 1051.0], [5.7, 1051.0], [5.8, 1051.0], [5.9, 1051.0], [6.0, 1051.0], [6.1, 1051.0], [6.2, 1091.0], [6.3, 1091.0], [6.4, 1091.0], [6.5, 1091.0], [6.6, 1091.0], [6.7, 1091.0], [6.8, 1091.0], [6.9, 1091.0], [7.0, 1091.0], [7.1, 1091.0], [7.2, 1091.0], [7.3, 1091.0], [7.4, 1091.0], [7.5, 1091.0], [7.6, 1091.0], [7.7, 1091.0], [7.8, 1091.0], [7.9, 1091.0], [8.0, 1091.0], [8.1, 1091.0], [8.2, 1442.0], [8.3, 1442.0], [8.4, 1442.0], [8.5, 1442.0], [8.6, 1442.0], [8.7, 1442.0], [8.8, 1442.0], [8.9, 1442.0], [9.0, 1442.0], [9.1, 1442.0], [9.2, 1442.0], [9.3, 1442.0], [9.4, 1442.0], [9.5, 1442.0], [9.6, 1442.0], [9.7, 1442.0], [9.8, 1442.0], [9.9, 1442.0], [10.0, 1442.0], [10.1, 1442.0], [10.2, 1442.0], [10.3, 3274.0], [10.4, 3274.0], [10.5, 3274.0], [10.6, 3274.0], [10.7, 3274.0], [10.8, 3274.0], [10.9, 3274.0], [11.0, 3274.0], [11.1, 3274.0], [11.2, 3274.0], [11.3, 3274.0], [11.4, 3274.0], [11.5, 3274.0], [11.6, 3274.0], [11.7, 3274.0], [11.8, 3274.0], [11.9, 3274.0], [12.0, 3274.0], [12.1, 3274.0], [12.2, 3274.0], [12.3, 3408.0], [12.4, 3408.0], [12.5, 3408.0], [12.6, 3408.0], [12.7, 3408.0], [12.8, 3408.0], [12.9, 3408.0], [13.0, 3408.0], [13.1, 3408.0], [13.2, 3408.0], [13.3, 3408.0], [13.4, 3408.0], [13.5, 3408.0], [13.6, 3408.0], [13.7, 3408.0], [13.8, 3408.0], [13.9, 3408.0], [14.0, 3408.0], [14.1, 3408.0], [14.2, 3408.0], [14.3, 3432.0], [14.4, 3432.0], [14.5, 3432.0], [14.6, 3432.0], [14.7, 3432.0], [14.8, 3432.0], [14.9, 3432.0], [15.0, 3432.0], [15.1, 3432.0], [15.2, 3432.0], [15.3, 3432.0], [15.4, 3432.0], [15.5, 3432.0], [15.6, 3432.0], [15.7, 3432.0], [15.8, 3432.0], [15.9, 3432.0], [16.0, 3432.0], [16.1, 3432.0], [16.2, 3432.0], [16.3, 3432.0], [16.4, 5108.0], [16.5, 5108.0], [16.6, 5108.0], [16.7, 5108.0], [16.8, 5108.0], [16.9, 5108.0], [17.0, 5108.0], [17.1, 5108.0], [17.2, 5108.0], [17.3, 5108.0], [17.4, 5108.0], [17.5, 5108.0], [17.6, 5108.0], [17.7, 5108.0], [17.8, 5108.0], [17.9, 5108.0], [18.0, 5108.0], [18.1, 5108.0], [18.2, 5108.0], [18.3, 5108.0], [18.4, 5648.0], [18.5, 5648.0], [18.6, 5648.0], [18.7, 5648.0], [18.8, 5648.0], [18.9, 5648.0], [19.0, 5648.0], [19.1, 5648.0], [19.2, 5648.0], [19.3, 5648.0], [19.4, 5648.0], [19.5, 5648.0], [19.6, 5648.0], [19.7, 5648.0], [19.8, 5648.0], [19.9, 5648.0], [20.0, 5648.0], [20.1, 5648.0], [20.2, 5648.0], [20.3, 5648.0], [20.4, 5648.0], [20.5, 5761.0], [20.6, 5761.0], [20.7, 5761.0], [20.8, 5761.0], [20.9, 5761.0], [21.0, 5761.0], [21.1, 5761.0], [21.2, 5761.0], [21.3, 5761.0], [21.4, 5761.0], [21.5, 5761.0], [21.6, 5761.0], [21.7, 5761.0], [21.8, 5761.0], [21.9, 5761.0], [22.0, 5761.0], [22.1, 5761.0], [22.2, 5761.0], [22.3, 5761.0], [22.4, 5761.0], [22.5, 6042.0], [22.6, 6042.0], [22.7, 6042.0], [22.8, 6042.0], [22.9, 6042.0], [23.0, 6042.0], [23.1, 6042.0], [23.2, 6042.0], [23.3, 6042.0], [23.4, 6042.0], [23.5, 6042.0], [23.6, 6042.0], [23.7, 6042.0], [23.8, 6042.0], [23.9, 6042.0], [24.0, 6042.0], [24.1, 6042.0], [24.2, 6042.0], [24.3, 6042.0], [24.4, 6042.0], [24.5, 6151.0], [24.6, 6151.0], [24.7, 6151.0], [24.8, 6151.0], [24.9, 6151.0], [25.0, 6151.0], [25.1, 6151.0], [25.2, 6151.0], [25.3, 6151.0], [25.4, 6151.0], [25.5, 6151.0], [25.6, 6151.0], [25.7, 6151.0], [25.8, 6151.0], [25.9, 6151.0], [26.0, 6151.0], [26.1, 6151.0], [26.2, 6151.0], [26.3, 6151.0], [26.4, 6151.0], [26.5, 6151.0], [26.6, 6310.0], [26.7, 6310.0], [26.8, 6310.0], [26.9, 6310.0], [27.0, 6310.0], [27.1, 6310.0], [27.2, 6310.0], [27.3, 6310.0], [27.4, 6310.0], [27.5, 6310.0], [27.6, 6310.0], [27.7, 6310.0], [27.8, 6310.0], [27.9, 6310.0], [28.0, 6310.0], [28.1, 6310.0], [28.2, 6310.0], [28.3, 6310.0], [28.4, 6310.0], [28.5, 6310.0], [28.6, 6416.0], [28.7, 6416.0], [28.8, 6416.0], [28.9, 6416.0], [29.0, 6416.0], [29.1, 6416.0], [29.2, 6416.0], [29.3, 6416.0], [29.4, 6416.0], [29.5, 6416.0], [29.6, 6416.0], [29.7, 6416.0], [29.8, 6416.0], [29.9, 6416.0], [30.0, 6416.0], [30.1, 6416.0], [30.2, 6416.0], [30.3, 6416.0], [30.4, 6416.0], [30.5, 6416.0], [30.6, 6416.0], [30.7, 6470.0], [30.8, 6470.0], [30.9, 6470.0], [31.0, 6470.0], [31.1, 6470.0], [31.2, 6470.0], [31.3, 6470.0], [31.4, 6470.0], [31.5, 6470.0], [31.6, 6470.0], [31.7, 6470.0], [31.8, 6470.0], [31.9, 6470.0], [32.0, 6470.0], [32.1, 6470.0], [32.2, 6470.0], [32.3, 6470.0], [32.4, 6470.0], [32.5, 6470.0], [32.6, 6470.0], [32.7, 6591.0], [32.8, 6591.0], [32.9, 6591.0], [33.0, 6591.0], [33.1, 6591.0], [33.2, 6591.0], [33.3, 6591.0], [33.4, 6591.0], [33.5, 6591.0], [33.6, 6591.0], [33.7, 6591.0], [33.8, 6591.0], [33.9, 6591.0], [34.0, 6591.0], [34.1, 6591.0], [34.2, 6591.0], [34.3, 6591.0], [34.4, 6591.0], [34.5, 6591.0], [34.6, 6591.0], [34.7, 6616.0], [34.8, 6616.0], [34.9, 6616.0], [35.0, 6616.0], [35.1, 6616.0], [35.2, 6616.0], [35.3, 6616.0], [35.4, 6616.0], [35.5, 6616.0], [35.6, 6616.0], [35.7, 6616.0], [35.8, 6616.0], [35.9, 6616.0], [36.0, 6616.0], [36.1, 6616.0], [36.2, 6616.0], [36.3, 6616.0], [36.4, 6616.0], [36.5, 6616.0], [36.6, 6616.0], [36.7, 6616.0], [36.8, 6941.0], [36.9, 6941.0], [37.0, 6941.0], [37.1, 6941.0], [37.2, 6941.0], [37.3, 6941.0], [37.4, 6941.0], [37.5, 6941.0], [37.6, 6941.0], [37.7, 6941.0], [37.8, 6941.0], [37.9, 6941.0], [38.0, 6941.0], [38.1, 6941.0], [38.2, 6941.0], [38.3, 6941.0], [38.4, 6941.0], [38.5, 6941.0], [38.6, 6941.0], [38.7, 6941.0], [38.8, 7612.0], [38.9, 7612.0], [39.0, 7612.0], [39.1, 7612.0], [39.2, 7612.0], [39.3, 7612.0], [39.4, 7612.0], [39.5, 7612.0], [39.6, 7612.0], [39.7, 7612.0], [39.8, 7612.0], [39.9, 7612.0], [40.0, 7612.0], [40.1, 7612.0], [40.2, 7612.0], [40.3, 7612.0], [40.4, 7612.0], [40.5, 7612.0], [40.6, 7612.0], [40.7, 7612.0], [40.8, 7612.0], [40.9, 8175.0], [41.0, 8175.0], [41.1, 8175.0], [41.2, 8175.0], [41.3, 8175.0], [41.4, 8175.0], [41.5, 8175.0], [41.6, 8175.0], [41.7, 8175.0], [41.8, 8175.0], [41.9, 8175.0], [42.0, 8175.0], [42.1, 8175.0], [42.2, 8175.0], [42.3, 8175.0], [42.4, 8175.0], [42.5, 8175.0], [42.6, 8175.0], [42.7, 8175.0], [42.8, 8175.0], [42.9, 9483.0], [43.0, 9483.0], [43.1, 9483.0], [43.2, 9483.0], [43.3, 9483.0], [43.4, 9483.0], [43.5, 9483.0], [43.6, 9483.0], [43.7, 9483.0], [43.8, 9483.0], [43.9, 9483.0], [44.0, 9483.0], [44.1, 9483.0], [44.2, 9483.0], [44.3, 9483.0], [44.4, 9483.0], [44.5, 9483.0], [44.6, 9483.0], [44.7, 9483.0], [44.8, 9483.0], [44.9, 9684.0], [45.0, 9684.0], [45.1, 9684.0], [45.2, 9684.0], [45.3, 9684.0], [45.4, 9684.0], [45.5, 9684.0], [45.6, 9684.0], [45.7, 9684.0], [45.8, 9684.0], [45.9, 9684.0], [46.0, 9684.0], [46.1, 9684.0], [46.2, 9684.0], [46.3, 9684.0], [46.4, 9684.0], [46.5, 9684.0], [46.6, 9684.0], [46.7, 9684.0], [46.8, 9684.0], [46.9, 9684.0], [47.0, 10447.0], [47.1, 10447.0], [47.2, 10447.0], [47.3, 10447.0], [47.4, 10447.0], [47.5, 10447.0], [47.6, 10447.0], [47.7, 10447.0], [47.8, 10447.0], [47.9, 10447.0], [48.0, 10447.0], [48.1, 10447.0], [48.2, 10447.0], [48.3, 10447.0], [48.4, 10447.0], [48.5, 10447.0], [48.6, 10447.0], [48.7, 10447.0], [48.8, 10447.0], [48.9, 10447.0], [49.0, 10669.0], [49.1, 10669.0], [49.2, 10669.0], [49.3, 10669.0], [49.4, 10669.0], [49.5, 10669.0], [49.6, 10669.0], [49.7, 10669.0], [49.8, 10669.0], [49.9, 10669.0], [50.0, 10669.0], [50.1, 10669.0], [50.2, 10669.0], [50.3, 10669.0], [50.4, 10669.0], [50.5, 10669.0], [50.6, 10669.0], [50.7, 10669.0], [50.8, 10669.0], [50.9, 10669.0], [51.0, 10669.0], [51.1, 11386.0], [51.2, 11386.0], [51.3, 11386.0], [51.4, 11386.0], [51.5, 11386.0], [51.6, 11386.0], [51.7, 11386.0], [51.8, 11386.0], [51.9, 11386.0], [52.0, 11386.0], [52.1, 11386.0], [52.2, 11386.0], [52.3, 11386.0], [52.4, 11386.0], [52.5, 11386.0], [52.6, 11386.0], [52.7, 11386.0], [52.8, 11386.0], [52.9, 11386.0], [53.0, 11386.0], [53.1, 11957.0], [53.2, 11957.0], [53.3, 11957.0], [53.4, 11957.0], [53.5, 11957.0], [53.6, 11957.0], [53.7, 11957.0], [53.8, 11957.0], [53.9, 11957.0], [54.0, 11957.0], [54.1, 11957.0], [54.2, 11957.0], [54.3, 11957.0], [54.4, 11957.0], [54.5, 11957.0], [54.6, 11957.0], [54.7, 11957.0], [54.8, 11957.0], [54.9, 11957.0], [55.0, 11957.0], [55.1, 11957.0], [55.2, 12069.0], [55.3, 12069.0], [55.4, 12069.0], [55.5, 12069.0], [55.6, 12069.0], [55.7, 12069.0], [55.8, 12069.0], [55.9, 12069.0], [56.0, 12069.0], [56.1, 12069.0], [56.2, 12069.0], [56.3, 12069.0], [56.4, 12069.0], [56.5, 12069.0], [56.6, 12069.0], [56.7, 12069.0], [56.8, 12069.0], [56.9, 12069.0], [57.0, 12069.0], [57.1, 12069.0], [57.2, 12310.0], [57.3, 12310.0], [57.4, 12310.0], [57.5, 12310.0], [57.6, 12310.0], [57.7, 12310.0], [57.8, 12310.0], [57.9, 12310.0], [58.0, 12310.0], [58.1, 12310.0], [58.2, 12310.0], [58.3, 12310.0], [58.4, 12310.0], [58.5, 12310.0], [58.6, 12310.0], [58.7, 12310.0], [58.8, 12310.0], [58.9, 12310.0], [59.0, 12310.0], [59.1, 12310.0], [59.2, 12803.0], [59.3, 12803.0], [59.4, 12803.0], [59.5, 12803.0], [59.6, 12803.0], [59.7, 12803.0], [59.8, 12803.0], [59.9, 12803.0], [60.0, 12803.0], [60.1, 12803.0], [60.2, 12803.0], [60.3, 12803.0], [60.4, 12803.0], [60.5, 12803.0], [60.6, 12803.0], [60.7, 12803.0], [60.8, 12803.0], [60.9, 12803.0], [61.0, 12803.0], [61.1, 12803.0], [61.2, 12803.0], [61.3, 12876.0], [61.4, 12876.0], [61.5, 12876.0], [61.6, 12876.0], [61.7, 12876.0], [61.8, 12876.0], [61.9, 12876.0], [62.0, 12876.0], [62.1, 12876.0], [62.2, 12876.0], [62.3, 12876.0], [62.4, 12876.0], [62.5, 12876.0], [62.6, 12876.0], [62.7, 12876.0], [62.8, 12876.0], [62.9, 12876.0], [63.0, 12876.0], [63.1, 12876.0], [63.2, 12876.0], [63.3, 12928.0], [63.4, 12928.0], [63.5, 12928.0], [63.6, 12928.0], [63.7, 12928.0], [63.8, 12928.0], [63.9, 12928.0], [64.0, 12928.0], [64.1, 12928.0], [64.2, 12928.0], [64.3, 12928.0], [64.4, 12928.0], [64.5, 12928.0], [64.6, 12928.0], [64.7, 12928.0], [64.8, 12928.0], [64.9, 12928.0], [65.0, 12928.0], [65.1, 12928.0], [65.2, 12928.0], [65.3, 12928.0], [65.4, 12929.0], [65.5, 12929.0], [65.6, 12929.0], [65.7, 12929.0], [65.8, 12929.0], [65.9, 12929.0], [66.0, 12929.0], [66.1, 12929.0], [66.2, 12929.0], [66.3, 12929.0], [66.4, 12929.0], [66.5, 12929.0], [66.6, 12929.0], [66.7, 12929.0], [66.8, 12929.0], [66.9, 12929.0], [67.0, 12929.0], [67.1, 12929.0], [67.2, 12929.0], [67.3, 12929.0], [67.4, 12939.0], [67.5, 12939.0], [67.6, 12939.0], [67.7, 12939.0], [67.8, 12939.0], [67.9, 12939.0], [68.0, 12939.0], [68.1, 12939.0], [68.2, 12939.0], [68.3, 12939.0], [68.4, 12939.0], [68.5, 12939.0], [68.6, 12939.0], [68.7, 12939.0], [68.8, 12939.0], [68.9, 12939.0], [69.0, 12939.0], [69.1, 12939.0], [69.2, 12939.0], [69.3, 12939.0], [69.4, 13142.0], [69.5, 13142.0], [69.6, 13142.0], [69.7, 13142.0], [69.8, 13142.0], [69.9, 13142.0], [70.0, 13142.0], [70.1, 13142.0], [70.2, 13142.0], [70.3, 13142.0], [70.4, 13142.0], [70.5, 13142.0], [70.6, 13142.0], [70.7, 13142.0], [70.8, 13142.0], [70.9, 13142.0], [71.0, 13142.0], [71.1, 13142.0], [71.2, 13142.0], [71.3, 13142.0], [71.4, 13142.0], [71.5, 14121.0], [71.6, 14121.0], [71.7, 14121.0], [71.8, 14121.0], [71.9, 14121.0], [72.0, 14121.0], [72.1, 14121.0], [72.2, 14121.0], [72.3, 14121.0], [72.4, 14121.0], [72.5, 14121.0], [72.6, 14121.0], [72.7, 14121.0], [72.8, 14121.0], [72.9, 14121.0], [73.0, 14121.0], [73.1, 14121.0], [73.2, 14121.0], [73.3, 14121.0], [73.4, 14121.0], [73.5, 14543.0], [73.6, 14543.0], [73.7, 14543.0], [73.8, 14543.0], [73.9, 14543.0], [74.0, 14543.0], [74.1, 14543.0], [74.2, 14543.0], [74.3, 14543.0], [74.4, 14543.0], [74.5, 14543.0], [74.6, 14543.0], [74.7, 14543.0], [74.8, 14543.0], [74.9, 14543.0], [75.0, 14543.0], [75.1, 14543.0], [75.2, 14543.0], [75.3, 14543.0], [75.4, 14543.0], [75.5, 14543.0], [75.6, 14660.0], [75.7, 14660.0], [75.8, 14660.0], [75.9, 14660.0], [76.0, 14660.0], [76.1, 14660.0], [76.2, 14660.0], [76.3, 14660.0], [76.4, 14660.0], [76.5, 14660.0], [76.6, 14660.0], [76.7, 14660.0], [76.8, 14660.0], [76.9, 14660.0], [77.0, 14660.0], [77.1, 14660.0], [77.2, 14660.0], [77.3, 14660.0], [77.4, 14660.0], [77.5, 14660.0], [77.6, 14706.0], [77.7, 14706.0], [77.8, 14706.0], [77.9, 14706.0], [78.0, 14706.0], [78.1, 14706.0], [78.2, 14706.0], [78.3, 14706.0], [78.4, 14706.0], [78.5, 14706.0], [78.6, 14706.0], [78.7, 14706.0], [78.8, 14706.0], [78.9, 14706.0], [79.0, 14706.0], [79.1, 14706.0], [79.2, 14706.0], [79.3, 14706.0], [79.4, 14706.0], [79.5, 14706.0], [79.6, 15234.0], [79.7, 15234.0], [79.8, 15234.0], [79.9, 15234.0], [80.0, 15234.0], [80.1, 15234.0], [80.2, 15234.0], [80.3, 15234.0], [80.4, 15234.0], [80.5, 15234.0], [80.6, 15234.0], [80.7, 15234.0], [80.8, 15234.0], [80.9, 15234.0], [81.0, 15234.0], [81.1, 15234.0], [81.2, 15234.0], [81.3, 15234.0], [81.4, 15234.0], [81.5, 15234.0], [81.6, 15234.0], [81.7, 15287.0], [81.8, 15287.0], [81.9, 15287.0], [82.0, 15287.0], [82.1, 15287.0], [82.2, 15287.0], [82.3, 15287.0], [82.4, 15287.0], [82.5, 15287.0], [82.6, 15287.0], [82.7, 15287.0], [82.8, 15287.0], [82.9, 15287.0], [83.0, 15287.0], [83.1, 15287.0], [83.2, 15287.0], [83.3, 15287.0], [83.4, 15287.0], [83.5, 15287.0], [83.6, 15287.0], [83.7, 15329.0], [83.8, 15329.0], [83.9, 15329.0], [84.0, 15329.0], [84.1, 15329.0], [84.2, 15329.0], [84.3, 15329.0], [84.4, 15329.0], [84.5, 15329.0], [84.6, 15329.0], [84.7, 15329.0], [84.8, 15329.0], [84.9, 15329.0], [85.0, 15329.0], [85.1, 15329.0], [85.2, 15329.0], [85.3, 15329.0], [85.4, 15329.0], [85.5, 15329.0], [85.6, 15329.0], [85.7, 15329.0], [85.8, 15429.0], [85.9, 15429.0], [86.0, 15429.0], [86.1, 15429.0], [86.2, 15429.0], [86.3, 15429.0], [86.4, 15429.0], [86.5, 15429.0], [86.6, 15429.0], [86.7, 15429.0], [86.8, 15429.0], [86.9, 15429.0], [87.0, 15429.0], [87.1, 15429.0], [87.2, 15429.0], [87.3, 15429.0], [87.4, 15429.0], [87.5, 15429.0], [87.6, 15429.0], [87.7, 15429.0], [87.8, 15513.0], [87.9, 15513.0], [88.0, 15513.0], [88.1, 15513.0], [88.2, 15513.0], [88.3, 15513.0], [88.4, 15513.0], [88.5, 15513.0], [88.6, 15513.0], [88.7, 15513.0], [88.8, 15513.0], [88.9, 15513.0], [89.0, 15513.0], [89.1, 15513.0], [89.2, 15513.0], [89.3, 15513.0], [89.4, 15513.0], [89.5, 15513.0], [89.6, 15513.0], [89.7, 15513.0], [89.8, 15571.0], [89.9, 15571.0], [90.0, 15571.0], [90.1, 15571.0], [90.2, 15571.0], [90.3, 15571.0], [90.4, 15571.0], [90.5, 15571.0], [90.6, 15571.0], [90.7, 15571.0], [90.8, 15571.0], [90.9, 15571.0], [91.0, 15571.0], [91.1, 15571.0], [91.2, 15571.0], [91.3, 15571.0], [91.4, 15571.0], [91.5, 15571.0], [91.6, 15571.0], [91.7, 15571.0], [91.8, 15571.0], [91.9, 15783.0], [92.0, 15783.0], [92.1, 15783.0], [92.2, 15783.0], [92.3, 15783.0], [92.4, 15783.0], [92.5, 15783.0], [92.6, 15783.0], [92.7, 15783.0], [92.8, 15783.0], [92.9, 15783.0], [93.0, 15783.0], [93.1, 15783.0], [93.2, 15783.0], [93.3, 15783.0], [93.4, 15783.0], [93.5, 15783.0], [93.6, 15783.0], [93.7, 15783.0], [93.8, 15783.0], [93.9, 15803.0], [94.0, 15803.0], [94.1, 15803.0], [94.2, 15803.0], [94.3, 15803.0], [94.4, 15803.0], [94.5, 15803.0], [94.6, 15803.0], [94.7, 15803.0], [94.8, 15803.0], [94.9, 15803.0], [95.0, 15803.0], [95.1, 15803.0], [95.2, 15803.0], [95.3, 15803.0], [95.4, 15803.0], [95.5, 15803.0], [95.6, 15803.0], [95.7, 15803.0], [95.8, 15803.0], [95.9, 15803.0], [96.0, 15868.0], [96.1, 15868.0], [96.2, 15868.0], [96.3, 15868.0], [96.4, 15868.0], [96.5, 15868.0], [96.6, 15868.0], [96.7, 15868.0], [96.8, 15868.0], [96.9, 15868.0], [97.0, 15868.0], [97.1, 15868.0], [97.2, 15868.0], [97.3, 15868.0], [97.4, 15868.0], [97.5, 15868.0], [97.6, 15868.0], [97.7, 15868.0], [97.8, 15868.0], [97.9, 15868.0], [98.0, 16209.0], [98.1, 16209.0], [98.2, 16209.0], [98.3, 16209.0], [98.4, 16209.0], [98.5, 16209.0], [98.6, 16209.0], [98.7, 16209.0], [98.8, 16209.0], [98.9, 16209.0], [99.0, 16209.0], [99.1, 16209.0], [99.2, 16209.0], [99.3, 16209.0], [99.4, 16209.0], [99.5, 16209.0], [99.6, 16209.0], [99.7, 16209.0], [99.8, 16209.0], [99.9, 16209.0], [100.0, 16209.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[0.0, 95.0], [0.1, 95.0], [0.2, 95.0], [0.3, 95.0], [0.4, 95.0], [0.5, 95.0], [0.6, 95.0], [0.7, 95.0], [0.8, 95.0], [0.9, 95.0], [1.0, 95.0], [1.1, 95.0], [1.2, 95.0], [1.3, 95.0], [1.4, 95.0], [1.5, 95.0], [1.6, 95.0], [1.7, 95.0], [1.8, 95.0], [1.9, 95.0], [2.0, 95.0], [2.1, 95.0], [2.2, 95.0], [2.3, 95.0], [2.4, 95.0], [2.5, 95.0], [2.6, 98.0], [2.7, 98.0], [2.8, 98.0], [2.9, 98.0], [3.0, 98.0], [3.1, 98.0], [3.2, 98.0], [3.3, 98.0], [3.4, 98.0], [3.5, 98.0], [3.6, 98.0], [3.7, 98.0], [3.8, 98.0], [3.9, 98.0], [4.0, 98.0], [4.1, 98.0], [4.2, 98.0], [4.3, 98.0], [4.4, 98.0], [4.5, 98.0], [4.6, 98.0], [4.7, 98.0], [4.8, 98.0], [4.9, 98.0], [5.0, 98.0], [5.1, 98.0], [5.2, 101.0], [5.3, 101.0], [5.4, 101.0], [5.5, 101.0], [5.6, 101.0], [5.7, 101.0], [5.8, 101.0], [5.9, 101.0], [6.0, 101.0], [6.1, 101.0], [6.2, 101.0], [6.3, 101.0], [6.4, 101.0], [6.5, 101.0], [6.6, 101.0], [6.7, 101.0], [6.8, 101.0], [6.9, 101.0], [7.0, 101.0], [7.1, 101.0], [7.2, 101.0], [7.3, 101.0], [7.4, 101.0], [7.5, 101.0], [7.6, 101.0], [7.7, 109.0], [7.8, 109.0], [7.9, 109.0], [8.0, 109.0], [8.1, 109.0], [8.2, 109.0], [8.3, 109.0], [8.4, 109.0], [8.5, 109.0], [8.6, 109.0], [8.7, 109.0], [8.8, 109.0], [8.9, 109.0], [9.0, 109.0], [9.1, 109.0], [9.2, 109.0], [9.3, 109.0], [9.4, 109.0], [9.5, 109.0], [9.6, 109.0], [9.7, 109.0], [9.8, 109.0], [9.9, 109.0], [10.0, 109.0], [10.1, 109.0], [10.2, 109.0], [10.3, 116.0], [10.4, 116.0], [10.5, 116.0], [10.6, 116.0], [10.7, 116.0], [10.8, 116.0], [10.9, 116.0], [11.0, 116.0], [11.1, 116.0], [11.2, 116.0], [11.3, 116.0], [11.4, 116.0], [11.5, 116.0], [11.6, 116.0], [11.7, 116.0], [11.8, 116.0], [11.9, 116.0], [12.0, 116.0], [12.1, 116.0], [12.2, 116.0], [12.3, 116.0], [12.4, 116.0], [12.5, 116.0], [12.6, 116.0], [12.7, 116.0], [12.8, 116.0], [12.9, 118.0], [13.0, 118.0], [13.1, 118.0], [13.2, 118.0], [13.3, 118.0], [13.4, 118.0], [13.5, 118.0], [13.6, 118.0], [13.7, 118.0], [13.8, 118.0], [13.9, 118.0], [14.0, 118.0], [14.1, 118.0], [14.2, 118.0], [14.3, 118.0], [14.4, 118.0], [14.5, 118.0], [14.6, 118.0], [14.7, 118.0], [14.8, 118.0], [14.9, 118.0], [15.0, 118.0], [15.1, 118.0], [15.2, 118.0], [15.3, 118.0], [15.4, 120.0], [15.5, 120.0], [15.6, 120.0], [15.7, 120.0], [15.8, 120.0], [15.9, 120.0], [16.0, 120.0], [16.1, 120.0], [16.2, 120.0], [16.3, 120.0], [16.4, 120.0], [16.5, 120.0], [16.6, 120.0], [16.7, 120.0], [16.8, 120.0], [16.9, 120.0], [17.0, 120.0], [17.1, 120.0], [17.2, 120.0], [17.3, 120.0], [17.4, 120.0], [17.5, 120.0], [17.6, 120.0], [17.7, 120.0], [17.8, 120.0], [17.9, 120.0], [18.0, 120.0], [18.1, 120.0], [18.2, 120.0], [18.3, 120.0], [18.4, 120.0], [18.5, 120.0], [18.6, 120.0], [18.7, 120.0], [18.8, 120.0], [18.9, 120.0], [19.0, 120.0], [19.1, 120.0], [19.2, 120.0], [19.3, 120.0], [19.4, 120.0], [19.5, 120.0], [19.6, 120.0], [19.7, 120.0], [19.8, 120.0], [19.9, 120.0], [20.0, 120.0], [20.1, 120.0], [20.2, 120.0], [20.3, 120.0], [20.4, 120.0], [20.5, 120.0], [20.6, 121.0], [20.7, 121.0], [20.8, 121.0], [20.9, 121.0], [21.0, 121.0], [21.1, 121.0], [21.2, 121.0], [21.3, 121.0], [21.4, 121.0], [21.5, 121.0], [21.6, 121.0], [21.7, 121.0], [21.8, 121.0], [21.9, 121.0], [22.0, 121.0], [22.1, 121.0], [22.2, 121.0], [22.3, 121.0], [22.4, 121.0], [22.5, 121.0], [22.6, 121.0], [22.7, 121.0], [22.8, 121.0], [22.9, 121.0], [23.0, 121.0], [23.1, 126.0], [23.2, 126.0], [23.3, 126.0], [23.4, 126.0], [23.5, 126.0], [23.6, 126.0], [23.7, 126.0], [23.8, 126.0], [23.9, 126.0], [24.0, 126.0], [24.1, 126.0], [24.2, 126.0], [24.3, 126.0], [24.4, 126.0], [24.5, 126.0], [24.6, 126.0], [24.7, 126.0], [24.8, 126.0], [24.9, 126.0], [25.0, 126.0], [25.1, 126.0], [25.2, 126.0], [25.3, 126.0], [25.4, 126.0], [25.5, 126.0], [25.6, 126.0], [25.7, 127.0], [25.8, 127.0], [25.9, 127.0], [26.0, 127.0], [26.1, 127.0], [26.2, 127.0], [26.3, 127.0], [26.4, 127.0], [26.5, 127.0], [26.6, 127.0], [26.7, 127.0], [26.8, 127.0], [26.9, 127.0], [27.0, 127.0], [27.1, 127.0], [27.2, 127.0], [27.3, 127.0], [27.4, 127.0], [27.5, 127.0], [27.6, 127.0], [27.7, 127.0], [27.8, 127.0], [27.9, 127.0], [28.0, 127.0], [28.1, 127.0], [28.2, 127.0], [28.3, 128.0], [28.4, 128.0], [28.5, 128.0], [28.6, 128.0], [28.7, 128.0], [28.8, 128.0], [28.9, 128.0], [29.0, 128.0], [29.1, 128.0], [29.2, 128.0], [29.3, 128.0], [29.4, 128.0], [29.5, 128.0], [29.6, 128.0], [29.7, 128.0], [29.8, 128.0], [29.9, 128.0], [30.0, 128.0], [30.1, 128.0], [30.2, 128.0], [30.3, 128.0], [30.4, 128.0], [30.5, 128.0], [30.6, 128.0], [30.7, 128.0], [30.8, 128.0], [30.9, 128.0], [31.0, 128.0], [31.1, 128.0], [31.2, 128.0], [31.3, 128.0], [31.4, 128.0], [31.5, 128.0], [31.6, 128.0], [31.7, 128.0], [31.8, 128.0], [31.9, 128.0], [32.0, 128.0], [32.1, 128.0], [32.2, 128.0], [32.3, 128.0], [32.4, 128.0], [32.5, 128.0], [32.6, 128.0], [32.7, 128.0], [32.8, 128.0], [32.9, 128.0], [33.0, 128.0], [33.1, 128.0], [33.2, 128.0], [33.3, 128.0], [33.4, 130.0], [33.5, 130.0], [33.6, 130.0], [33.7, 130.0], [33.8, 130.0], [33.9, 130.0], [34.0, 130.0], [34.1, 130.0], [34.2, 130.0], [34.3, 130.0], [34.4, 130.0], [34.5, 130.0], [34.6, 130.0], [34.7, 130.0], [34.8, 130.0], [34.9, 130.0], [35.0, 130.0], [35.1, 130.0], [35.2, 130.0], [35.3, 130.0], [35.4, 130.0], [35.5, 130.0], [35.6, 130.0], [35.7, 130.0], [35.8, 130.0], [35.9, 134.0], [36.0, 134.0], [36.1, 134.0], [36.2, 134.0], [36.3, 134.0], [36.4, 134.0], [36.5, 134.0], [36.6, 134.0], [36.7, 134.0], [36.8, 134.0], [36.9, 134.0], [37.0, 134.0], [37.1, 134.0], [37.2, 134.0], [37.3, 134.0], [37.4, 134.0], [37.5, 134.0], [37.6, 134.0], [37.7, 134.0], [37.8, 134.0], [37.9, 134.0], [38.0, 134.0], [38.1, 134.0], [38.2, 134.0], [38.3, 134.0], [38.4, 134.0], [38.5, 136.0], [38.6, 136.0], [38.7, 136.0], [38.8, 136.0], [38.9, 136.0], [39.0, 136.0], [39.1, 136.0], [39.2, 136.0], [39.3, 136.0], [39.4, 136.0], [39.5, 136.0], [39.6, 136.0], [39.7, 136.0], [39.8, 136.0], [39.9, 136.0], [40.0, 136.0], [40.1, 136.0], [40.2, 136.0], [40.3, 136.0], [40.4, 136.0], [40.5, 136.0], [40.6, 136.0], [40.7, 136.0], [40.8, 136.0], [40.9, 136.0], [41.0, 136.0], [41.1, 137.0], [41.2, 137.0], [41.3, 137.0], [41.4, 137.0], [41.5, 137.0], [41.6, 137.0], [41.7, 137.0], [41.8, 137.0], [41.9, 137.0], [42.0, 137.0], [42.1, 137.0], [42.2, 137.0], [42.3, 137.0], [42.4, 137.0], [42.5, 137.0], [42.6, 137.0], [42.7, 137.0], [42.8, 137.0], [42.9, 137.0], [43.0, 137.0], [43.1, 137.0], [43.2, 137.0], [43.3, 137.0], [43.4, 137.0], [43.5, 137.0], [43.6, 142.0], [43.7, 142.0], [43.8, 142.0], [43.9, 142.0], [44.0, 142.0], [44.1, 142.0], [44.2, 142.0], [44.3, 142.0], [44.4, 142.0], [44.5, 142.0], [44.6, 142.0], [44.7, 142.0], [44.8, 142.0], [44.9, 142.0], [45.0, 142.0], [45.1, 142.0], [45.2, 142.0], [45.3, 142.0], [45.4, 142.0], [45.5, 142.0], [45.6, 142.0], [45.7, 142.0], [45.8, 142.0], [45.9, 142.0], [46.0, 142.0], [46.1, 142.0], [46.2, 158.0], [46.3, 158.0], [46.4, 158.0], [46.5, 158.0], [46.6, 158.0], [46.7, 158.0], [46.8, 158.0], [46.9, 158.0], [47.0, 158.0], [47.1, 158.0], [47.2, 158.0], [47.3, 158.0], [47.4, 158.0], [47.5, 158.0], [47.6, 158.0], [47.7, 158.0], [47.8, 158.0], [47.9, 158.0], [48.0, 158.0], [48.1, 158.0], [48.2, 158.0], [48.3, 158.0], [48.4, 158.0], [48.5, 158.0], [48.6, 158.0], [48.7, 158.0], [48.8, 159.0], [48.9, 159.0], [49.0, 159.0], [49.1, 159.0], [49.2, 159.0], [49.3, 159.0], [49.4, 159.0], [49.5, 159.0], [49.6, 159.0], [49.7, 159.0], [49.8, 159.0], [49.9, 159.0], [50.0, 159.0], [50.1, 159.0], [50.2, 159.0], [50.3, 159.0], [50.4, 159.0], [50.5, 159.0], [50.6, 159.0], [50.7, 159.0], [50.8, 159.0], [50.9, 159.0], [51.0, 159.0], [51.1, 159.0], [51.2, 159.0], [51.3, 175.0], [51.4, 175.0], [51.5, 175.0], [51.6, 175.0], [51.7, 175.0], [51.8, 175.0], [51.9, 175.0], [52.0, 175.0], [52.1, 175.0], [52.2, 175.0], [52.3, 175.0], [52.4, 175.0], [52.5, 175.0], [52.6, 175.0], [52.7, 175.0], [52.8, 175.0], [52.9, 175.0], [53.0, 175.0], [53.1, 175.0], [53.2, 175.0], [53.3, 175.0], [53.4, 175.0], [53.5, 175.0], [53.6, 175.0], [53.7, 175.0], [53.8, 175.0], [53.9, 176.0], [54.0, 176.0], [54.1, 176.0], [54.2, 176.0], [54.3, 176.0], [54.4, 176.0], [54.5, 176.0], [54.6, 176.0], [54.7, 176.0], [54.8, 176.0], [54.9, 176.0], [55.0, 176.0], [55.1, 176.0], [55.2, 176.0], [55.3, 176.0], [55.4, 176.0], [55.5, 176.0], [55.6, 176.0], [55.7, 176.0], [55.8, 176.0], [55.9, 176.0], [56.0, 176.0], [56.1, 176.0], [56.2, 176.0], [56.3, 176.0], [56.4, 176.0], [56.5, 178.0], [56.6, 178.0], [56.7, 178.0], [56.8, 178.0], [56.9, 178.0], [57.0, 178.0], [57.1, 178.0], [57.2, 178.0], [57.3, 178.0], [57.4, 178.0], [57.5, 178.0], [57.6, 178.0], [57.7, 178.0], [57.8, 178.0], [57.9, 178.0], [58.0, 178.0], [58.1, 178.0], [58.2, 178.0], [58.3, 178.0], [58.4, 178.0], [58.5, 178.0], [58.6, 178.0], [58.7, 178.0], [58.8, 178.0], [58.9, 178.0], [59.0, 179.0], [59.1, 179.0], [59.2, 179.0], [59.3, 179.0], [59.4, 179.0], [59.5, 179.0], [59.6, 179.0], [59.7, 179.0], [59.8, 179.0], [59.9, 179.0], [60.0, 179.0], [60.1, 179.0], [60.2, 179.0], [60.3, 179.0], [60.4, 179.0], [60.5, 179.0], [60.6, 179.0], [60.7, 179.0], [60.8, 179.0], [60.9, 179.0], [61.0, 179.0], [61.1, 179.0], [61.2, 179.0], [61.3, 179.0], [61.4, 179.0], [61.5, 179.0], [61.6, 182.0], [61.7, 182.0], [61.8, 182.0], [61.9, 182.0], [62.0, 182.0], [62.1, 182.0], [62.2, 182.0], [62.3, 182.0], [62.4, 182.0], [62.5, 182.0], [62.6, 182.0], [62.7, 182.0], [62.8, 182.0], [62.9, 182.0], [63.0, 182.0], [63.1, 182.0], [63.2, 182.0], [63.3, 182.0], [63.4, 182.0], [63.5, 182.0], [63.6, 182.0], [63.7, 182.0], [63.8, 182.0], [63.9, 182.0], [64.0, 182.0], [64.1, 182.0], [64.2, 186.0], [64.3, 186.0], [64.4, 186.0], [64.5, 186.0], [64.6, 186.0], [64.7, 186.0], [64.8, 186.0], [64.9, 186.0], [65.0, 186.0], [65.1, 186.0], [65.2, 186.0], [65.3, 186.0], [65.4, 186.0], [65.5, 186.0], [65.6, 186.0], [65.7, 186.0], [65.8, 186.0], [65.9, 186.0], [66.0, 186.0], [66.1, 186.0], [66.2, 186.0], [66.3, 186.0], [66.4, 186.0], [66.5, 186.0], [66.6, 186.0], [66.7, 191.0], [66.8, 191.0], [66.9, 191.0], [67.0, 191.0], [67.1, 191.0], [67.2, 191.0], [67.3, 191.0], [67.4, 191.0], [67.5, 191.0], [67.6, 191.0], [67.7, 191.0], [67.8, 191.0], [67.9, 191.0], [68.0, 191.0], [68.1, 191.0], [68.2, 191.0], [68.3, 191.0], [68.4, 191.0], [68.5, 191.0], [68.6, 191.0], [68.7, 191.0], [68.8, 191.0], [68.9, 191.0], [69.0, 191.0], [69.1, 191.0], [69.2, 191.0], [69.3, 213.0], [69.4, 213.0], [69.5, 213.0], [69.6, 213.0], [69.7, 213.0], [69.8, 213.0], [69.9, 213.0], [70.0, 213.0], [70.1, 213.0], [70.2, 213.0], [70.3, 213.0], [70.4, 213.0], [70.5, 213.0], [70.6, 213.0], [70.7, 213.0], [70.8, 213.0], [70.9, 213.0], [71.0, 213.0], [71.1, 213.0], [71.2, 213.0], [71.3, 213.0], [71.4, 213.0], [71.5, 213.0], [71.6, 213.0], [71.7, 213.0], [71.8, 222.0], [71.9, 222.0], [72.0, 222.0], [72.1, 222.0], [72.2, 222.0], [72.3, 222.0], [72.4, 222.0], [72.5, 222.0], [72.6, 222.0], [72.7, 222.0], [72.8, 222.0], [72.9, 222.0], [73.0, 222.0], [73.1, 222.0], [73.2, 222.0], [73.3, 222.0], [73.4, 222.0], [73.5, 222.0], [73.6, 222.0], [73.7, 222.0], [73.8, 222.0], [73.9, 222.0], [74.0, 222.0], [74.1, 222.0], [74.2, 222.0], [74.3, 222.0], [74.4, 226.0], [74.5, 226.0], [74.6, 226.0], [74.7, 226.0], [74.8, 226.0], [74.9, 226.0], [75.0, 226.0], [75.1, 226.0], [75.2, 226.0], [75.3, 226.0], [75.4, 226.0], [75.5, 226.0], [75.6, 226.0], [75.7, 226.0], [75.8, 226.0], [75.9, 226.0], [76.0, 226.0], [76.1, 226.0], [76.2, 226.0], [76.3, 226.0], [76.4, 226.0], [76.5, 226.0], [76.6, 226.0], [76.7, 226.0], [76.8, 226.0], [76.9, 226.0], [77.0, 238.0], [77.1, 238.0], [77.2, 238.0], [77.3, 238.0], [77.4, 238.0], [77.5, 238.0], [77.6, 238.0], [77.7, 238.0], [77.8, 238.0], [77.9, 238.0], [78.0, 238.0], [78.1, 238.0], [78.2, 238.0], [78.3, 238.0], [78.4, 238.0], [78.5, 238.0], [78.6, 238.0], [78.7, 238.0], [78.8, 238.0], [78.9, 238.0], [79.0, 238.0], [79.1, 238.0], [79.2, 238.0], [79.3, 238.0], [79.4, 238.0], [79.5, 277.0], [79.6, 277.0], [79.7, 277.0], [79.8, 277.0], [79.9, 277.0], [80.0, 277.0], [80.1, 277.0], [80.2, 277.0], [80.3, 277.0], [80.4, 277.0], [80.5, 277.0], [80.6, 277.0], [80.7, 277.0], [80.8, 277.0], [80.9, 277.0], [81.0, 277.0], [81.1, 277.0], [81.2, 277.0], [81.3, 277.0], [81.4, 277.0], [81.5, 277.0], [81.6, 277.0], [81.7, 277.0], [81.8, 277.0], [81.9, 277.0], [82.0, 277.0], [82.1, 317.0], [82.2, 317.0], [82.3, 317.0], [82.4, 317.0], [82.5, 317.0], [82.6, 317.0], [82.7, 317.0], [82.8, 317.0], [82.9, 317.0], [83.0, 317.0], [83.1, 317.0], [83.2, 317.0], [83.3, 317.0], [83.4, 317.0], [83.5, 317.0], [83.6, 317.0], [83.7, 317.0], [83.8, 317.0], [83.9, 317.0], [84.0, 317.0], [84.1, 317.0], [84.2, 317.0], [84.3, 317.0], [84.4, 317.0], [84.5, 317.0], [84.6, 317.0], [84.7, 371.0], [84.8, 371.0], [84.9, 371.0], [85.0, 371.0], [85.1, 371.0], [85.2, 371.0], [85.3, 371.0], [85.4, 371.0], [85.5, 371.0], [85.6, 371.0], [85.7, 371.0], [85.8, 371.0], [85.9, 371.0], [86.0, 371.0], [86.1, 371.0], [86.2, 371.0], [86.3, 371.0], [86.4, 371.0], [86.5, 371.0], [86.6, 371.0], [86.7, 371.0], [86.8, 371.0], [86.9, 371.0], [87.0, 371.0], [87.1, 371.0], [87.2, 379.0], [87.3, 379.0], [87.4, 379.0], [87.5, 379.0], [87.6, 379.0], [87.7, 379.0], [87.8, 379.0], [87.9, 379.0], [88.0, 379.0], [88.1, 379.0], [88.2, 379.0], [88.3, 379.0], [88.4, 379.0], [88.5, 379.0], [88.6, 379.0], [88.7, 379.0], [88.8, 379.0], [88.9, 379.0], [89.0, 379.0], [89.1, 379.0], [89.2, 379.0], [89.3, 379.0], [89.4, 379.0], [89.5, 379.0], [89.6, 379.0], [89.7, 379.0], [89.8, 383.0], [89.9, 383.0], [90.0, 383.0], [90.1, 383.0], [90.2, 383.0], [90.3, 383.0], [90.4, 383.0], [90.5, 383.0], [90.6, 383.0], [90.7, 383.0], [90.8, 383.0], [90.9, 383.0], [91.0, 383.0], [91.1, 383.0], [91.2, 383.0], [91.3, 383.0], [91.4, 383.0], [91.5, 383.0], [91.6, 383.0], [91.7, 383.0], [91.8, 383.0], [91.9, 383.0], [92.0, 383.0], [92.1, 383.0], [92.2, 383.0], [92.3, 383.0], [92.4, 508.0], [92.5, 508.0], [92.6, 508.0], [92.7, 508.0], [92.8, 508.0], [92.9, 508.0], [93.0, 508.0], [93.1, 508.0], [93.2, 508.0], [93.3, 508.0], [93.4, 508.0], [93.5, 508.0], [93.6, 508.0], [93.7, 508.0], [93.8, 508.0], [93.9, 508.0], [94.0, 508.0], [94.1, 508.0], [94.2, 508.0], [94.3, 508.0], [94.4, 508.0], [94.5, 508.0], [94.6, 508.0], [94.7, 508.0], [94.8, 508.0], [94.9, 509.0], [95.0, 509.0], [95.1, 509.0], [95.2, 509.0], [95.3, 509.0], [95.4, 509.0], [95.5, 509.0], [95.6, 509.0], [95.7, 509.0], [95.8, 509.0], [95.9, 509.0], [96.0, 509.0], [96.1, 509.0], [96.2, 509.0], [96.3, 509.0], [96.4, 509.0], [96.5, 509.0], [96.6, 509.0], [96.7, 509.0], [96.8, 509.0], [96.9, 509.0], [97.0, 509.0], [97.1, 509.0], [97.2, 509.0], [97.3, 509.0], [97.4, 509.0], [97.5, 1717.0], [97.6, 1717.0], [97.7, 1717.0], [97.8, 1717.0], [97.9, 1717.0], [98.0, 1717.0], [98.1, 1717.0], [98.2, 1717.0], [98.3, 1717.0], [98.4, 1717.0], [98.5, 1717.0], [98.6, 1717.0], [98.7, 1717.0], [98.8, 1717.0], [98.9, 1717.0], [99.0, 1717.0], [99.1, 1717.0], [99.2, 1717.0], [99.3, 1717.0], [99.4, 1717.0], [99.5, 1717.0], [99.6, 1717.0], [99.7, 1717.0], [99.8, 1717.0], [99.9, 1717.0], [100.0, 1717.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 672.0, "series": [{"data": [[700.0, 1.0], [1000.0, 6.0], [1100.0, 49.0], [1200.0, 36.0], [1300.0, 57.0], [1400.0, 118.0], [1500.0, 158.0], [1600.0, 72.0], [1700.0, 61.0], [1800.0, 65.0], [1900.0, 62.0], [2000.0, 75.0], [2100.0, 76.0], [2200.0, 153.0], [2300.0, 227.0], [2400.0, 137.0], [2500.0, 61.0], [2600.0, 121.0], [2700.0, 103.0], [2800.0, 135.0], [2900.0, 83.0], [3000.0, 168.0], [3100.0, 44.0], [3200.0, 51.0], [3300.0, 137.0], [3400.0, 139.0], [3500.0, 104.0], [3700.0, 15.0], [3600.0, 68.0], [3800.0, 99.0], [3900.0, 58.0], [4000.0, 41.0], [4100.0, 45.0], [4300.0, 23.0], [4200.0, 114.0], [4500.0, 126.0], [4400.0, 45.0], [4600.0, 72.0], [4700.0, 77.0], [4800.0, 64.0], [4900.0, 25.0], [5100.0, 92.0], [5000.0, 5.0], [5300.0, 95.0], [5200.0, 85.0], [5500.0, 100.0], [5600.0, 2.0], [5400.0, 48.0], [5800.0, 60.0], [5700.0, 50.0], [6100.0, 4.0], [6000.0, 1.0], [5900.0, 151.0], [6200.0, 173.0], [6300.0, 45.0], [6400.0, 57.0], [6500.0, 107.0], [6600.0, 237.0], [6900.0, 1.0], [6700.0, 672.0], [6800.0, 2.0], [7000.0, 1.0], [7600.0, 1.0], [7800.0, 1.0], [8000.0, 1.0], [8100.0, 1.0], [8500.0, 2.0], [8300.0, 1.0], [8900.0, 1.0], [9300.0, 1.0], [10000.0, 1.0], [10100.0, 1.0], [9800.0, 1.0], [11400.0, 1.0], [12600.0, 1.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[600.0, 4.0], [2400.0, 1.0], [700.0, 3.0], [200.0, 8.0], [800.0, 8.0], [900.0, 2.0], [1000.0, 4.0], [300.0, 2.0], [1200.0, 1.0], [1300.0, 5.0], [1400.0, 1.0], [1500.0, 1.0], [100.0, 8.0], [400.0, 3.0], [1700.0, 1.0], [500.0, 6.0], [2000.0, 1.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[9400.0, 1.0], [9600.0, 1.0], [600.0, 1.0], [10400.0, 1.0], [10600.0, 1.0], [700.0, 1.0], [11300.0, 1.0], [12000.0, 1.0], [11900.0, 1.0], [12300.0, 1.0], [12900.0, 3.0], [12800.0, 2.0], [13100.0, 1.0], [14100.0, 1.0], [14700.0, 1.0], [14600.0, 1.0], [14500.0, 1.0], [15200.0, 2.0], [15300.0, 1.0], [15700.0, 1.0], [15400.0, 1.0], [15500.0, 2.0], [15800.0, 2.0], [16200.0, 1.0], [1000.0, 2.0], [1400.0, 1.0], [3200.0, 1.0], [3400.0, 2.0], [5100.0, 1.0], [5600.0, 1.0], [5700.0, 1.0], [6000.0, 1.0], [6100.0, 1.0], [6300.0, 1.0], [6400.0, 2.0], [6600.0, 1.0], [6500.0, 1.0], [6900.0, 1.0], [7600.0, 1.0], [8100.0, 1.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[0.0, 2.0], [300.0, 4.0], [100.0, 25.0], [200.0, 5.0], [1700.0, 1.0], [500.0, 2.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 16200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 14.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 5144.0, "series": [{"data": [[0.0, 56.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 306.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 5144.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 14.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.71819918E12, "maxY": 60.0, "series": [{"data": [[1.7182005E12, 22.132812500000004], [1.71820554E12, 44.100628930817706], [1.71820524E12, 8.639344262295076], [1.7182002E12, 20.038674033149178], [1.71819924E12, 24.22471910112359], [1.7182035E12, 25.82222222222221], [1.71820578E12, 54.21666666666668], [1.71820548E12, 37.03805496828758], [1.71820344E12, 2.0], [1.71820518E12, 2.9999999999999996], [1.71820536E12, 22.595505617977548], [1.71820356E12, 17.866666666666664], [1.71820572E12, 60.0], [1.71820542E12, 29.77564102564103], [1.7182056E12, 51.29108910891085], [1.7182053E12, 15.432795698924725], [1.71820014E12, 4.6000000000000005], [1.71819918E12, 15.043478260869566], [1.71820044E12, 11.271186440677969], [1.71820566E12, 58.27745664739879]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.7182023E12, 6.962962962962965], [1.71820224E12, 17.43356643356643], [1.71820236E12, 10.130434782608694]], "isOverall": false, "label": "MixedTest", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71820578E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 95.0, "minX": 1.0, "maxY": 16209.0, "series": [{"data": [[2.0, 1271.4375], [3.0, 2062.454545454545], [4.0, 1694.7096774193546], [5.0, 1584.685714285714], [6.0, 1753.5686274509803], [7.0, 1788.1136363636363], [8.0, 1796.4821428571431], [9.0, 1490.8571428571427], [10.0, 1741.3484848484843], [11.0, 1691.10294117647], [12.0, 1628.8169014084503], [13.0, 2007.2446808510642], [14.0, 1975.1506849315065], [15.0, 1964.0533333333333], [16.0, 2294.3578947368414], [17.0, 2228.0602409638554], [18.0, 2259.1818181818194], [19.0, 2370.3370786516857], [20.0, 2437.3218390804586], [21.0, 2413.2340425531906], [22.0, 2603.2857142857147], [23.0, 2969.829545454544], [24.0, 2689.974358974359], [25.0, 2740.3095238095243], [26.0, 2933.855769230769], [27.0, 2981.6395348837214], [28.0, 3121.136], [29.0, 3194.57], [30.0, 3185.4507042253513], [31.0, 3671.390625000001], [32.0, 3616.5873015873008], [33.0, 3708.0923076923086], [34.0, 3996.757142857144], [35.0, 3962.9999999999995], [36.0, 4080.901408450705], [37.0, 4310.306666666665], [38.0, 4214.135135135136], [39.0, 4405.181818181818], [40.0, 4610.89024390244], [41.0, 4631.0609756097565], [42.0, 4753.285714285715], [43.0, 4789.858823529412], [44.0, 4946.444444444444], [45.0, 5121.266666666667], [46.0, 5123.888888888888], [47.0, 5247.02105263158], [48.0, 5365.291666666665], [49.0, 5432.628865979379], [50.0, 5571.568627450982], [51.0, 5707.792079207921], [52.0, 5973.4629629629635], [53.0, 5868.981132075472], [54.0, 6014.358490566037], [55.0, 6122.073394495414], [56.0, 6276.706896551725], [57.0, 6348.280701754386], [58.0, 6375.192982456138], [59.0, 6544.649572649574], [60.0, 6724.053215077602], [1.0, 1700.857142857143]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[36.13865624418379, 4172.253117439036]], "isOverall": false, "label": "Directors by name-Aggregated", "isController": false}, {"data": [[2.0, 516.0], [3.0, 440.66666666666663], [4.0, 560.0], [5.0, 167.0], [6.0, 321.0], [7.0, 463.0], [8.0, 171.0], [9.0, 462.6666666666667], [10.0, 546.0], [11.0, 634.75], [13.0, 789.0], [14.0, 670.5], [15.0, 166.0], [16.0, 840.0], [17.0, 862.0], [18.0, 866.0], [19.0, 528.0], [20.0, 916.3333333333334], [21.0, 724.3333333333334], [22.0, 990.0], [25.0, 1835.0], [26.0, 542.0], [27.0, 759.0], [28.0, 1358.3333333333333], [29.0, 2026.0], [30.0, 877.0]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[16.01694915254238, 737.8474576271186]], "isOverall": false, "label": "TitleBasics by primary_title-Aggregated", "isController": false}, {"data": [[8.0, 13142.0], [2.0, 6351.5], [9.0, 8244.0], [10.0, 8743.333333333334], [11.0, 9515.0], [12.0, 10991.5], [3.0, 12310.0], [13.0, 8799.0], [15.0, 7293.5], [16.0, 16209.0], [4.0, 12803.0], [1.0, 6238.5], [17.0, 11731.0], [18.0, 15234.0], [20.0, 9583.5], [5.0, 7992.5], [22.0, 10558.0], [6.0, 7905.333333333334], [25.0, 12504.0], [26.0, 12928.0], [27.0, 14329.5], [7.0, 9571.0], [29.0, 14121.0]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[12.857142857142865, 9767.938775510203]], "isOverall": false, "label": "Actors by name-Aggregated", "isController": false}, {"data": [[8.0, 175.0], [9.0, 151.0], [10.0, 150.66666666666666], [11.0, 271.5], [3.0, 131.33333333333334], [12.0, 371.0], [13.0, 116.0], [14.0, 277.0], [15.0, 120.0], [18.0, 149.66666666666666], [19.0, 212.5], [5.0, 95.0], [21.0, 133.5], [6.0, 114.0], [24.0, 925.5], [25.0, 270.6666666666667], [26.0, 186.0], [27.0, 126.0], [7.0, 213.0], [28.0, 143.0], [29.0, 508.5]], "isOverall": false, "label": "TitleBasics by params", "isController": false}, {"data": [[16.076923076923073, 234.1025641025641]], "isOverall": false, "label": "TitleBasics by params-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 60.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2.683333333333333, "minX": 1.71819918E12, "maxY": 10164.683333333332, "series": [{"data": [[1.7182005E12, 2397.4333333333334], [1.71820554E12, 9296.05], [1.71820524E12, 4687.983333333334], [1.7182002E12, 3395.3333333333335], [1.71819924E12, 1669.15], [1.7182035E12, 7596.166666666667], [1.71820578E12, 5935.433333333333], [1.71820548E12, 9174.733333333334], [1.71820344E12, 18.216666666666665], [1.71820518E12, 920.8666666666667], [1.71820536E12, 8617.283333333333], [1.7182023E12, 2122.7833333333333], [1.71820356E12, 570.4833333333333], [1.71820224E12, 9168.55], [1.71820572E12, 9427.483333333334], [1.71820542E12, 9085.85], [1.71820236E12, 1204.7333333333333], [1.7182056E12, 9812.916666666666], [1.7182053E12, 7245.333333333333], [1.71820014E12, 186.61666666666667], [1.71819918E12, 1727.1333333333334], [1.71820044E12, 1108.9166666666667], [1.71820566E12, 10164.683333333332]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7182005E12, 340.03333333333336], [1.71820554E12, 1275.0333333333333], [1.71820524E12, 652.6166666666667], [1.7182002E12, 481.68333333333334], [1.71819924E12, 236.33333333333334], [1.7182035E12, 1079.2166666666667], [1.71820578E12, 801.75], [1.71820548E12, 1263.5], [1.71820344E12, 2.683333333333333], [1.71820518E12, 130.85], [1.71820536E12, 1188.8333333333333], [1.7182023E12, 77.28333333333333], [1.71820356E12, 80.55], [1.71820224E12, 395.98333333333335], [1.71820572E12, 1283.0833333333333], [1.71820542E12, 1250.4166666666667], [1.71820236E12, 25.716666666666665], [1.7182056E12, 1349.6], [1.7182053E12, 995.2333333333333], [1.71820014E12, 26.533333333333335], [1.71819918E12, 245.43333333333334], [1.71820044E12, 157.66666666666666], [1.71820566E12, 1386.3166666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71820578E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 149.28571428571428, "minX": 1.71819918E12, "maxY": 12336.529411764706, "series": [{"data": [[1.7182005E12, 2502.9375], [1.71820554E12, 4931.228511530398], [1.71820524E12, 1566.3196721311485], [1.7182002E12, 2355.9392265193396], [1.71819924E12, 2725.269662921348], [1.7182035E12, 2805.8716049382733], [1.71820578E12, 6711.436666666665], [1.71820548E12, 4192.689217758988], [1.71820344E12, 1151.0], [1.71820518E12, 1266.142857142857], [1.71820536E12, 2609.1617977528076], [1.7182023E12, 1272.25], [1.71820356E12, 3474.0666666666666], [1.71820224E12, 2790.9428571428575], [1.71820572E12, 6739.097916666669], [1.71820542E12, 3382.318376068375], [1.71820236E12, 1467.3333333333333], [1.7182056E12, 5706.635643564357], [1.7182053E12, 2021.0967741935485], [1.71820014E12, 1230.0], [1.71819918E12, 2048.9891304347825], [1.71820044E12, 1659.1016949152547], [1.71820566E12, 6493.252408477843]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.7182023E12, 473.72727272727275], [1.71820224E12, 825.3863636363636], [1.71820236E12, 501.25]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.7182023E12, 5761.0], [1.71820224E12, 12336.529411764706], [1.71820236E12, 3816.142857142857]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.7182023E12, 149.28571428571428], [1.71820224E12, 253.26666666666665], [1.71820236E12, 243.5]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71820578E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 147.71428571428572, "minX": 1.71819918E12, "maxY": 12336.382352941178, "series": [{"data": [[1.7182005E12, 2502.929687499999], [1.71820554E12, 4931.224318658281], [1.71820524E12, 1566.3196721311485], [1.7182002E12, 2355.9226519337017], [1.71819924E12, 2725.2584269662925], [1.7182035E12, 2805.8518518518513], [1.71820578E12, 6711.420000000004], [1.71820548E12, 4192.687103594081], [1.71820344E12, 1151.0], [1.71820518E12, 1266.142857142857], [1.71820536E12, 2608.343820224719], [1.7182023E12, 1272.25], [1.71820356E12, 3474.0333333333333], [1.71820224E12, 2790.8571428571436], [1.71820572E12, 6739.097916666669], [1.71820542E12, 3382.307692307692], [1.71820236E12, 1219.0], [1.7182056E12, 5706.6297029703], [1.7182053E12, 2021.080645161291], [1.71820014E12, 1229.9], [1.71819918E12, 2048.9673913043475], [1.71820044E12, 1659.0847457627121], [1.71820566E12, 6493.225433526021]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.7182023E12, 472.6363636363636], [1.71820224E12, 824.1818181818181], [1.71820236E12, 394.25]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.7182023E12, 5760.0], [1.71820224E12, 12336.382352941178], [1.71820236E12, 966.5714285714283]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.7182023E12, 147.71428571428572], [1.71820224E12, 250.83333333333337], [1.71820236E12, 243.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71820578E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.71819918E12, "maxY": 64.05882352941178, "series": [{"data": [[1.7182005E12, 9.664062499999998], [1.71820554E12, 4.180293501048216], [1.71820524E12, 2.20081967213115], [1.7182002E12, 18.889502762430936], [1.71819924E12, 5.39325842696629], [1.7182035E12, 11.209876543209859], [1.71820578E12, 5.1400000000000015], [1.71820548E12, 3.583509513742072], [1.71820344E12, 49.0], [1.71820518E12, 3.6326530612244907], [1.71820536E12, 2.519101123595509], [1.7182023E12, 21.75], [1.71820356E12, 0.0], [1.71820224E12, 8.142857142857144], [1.71820572E12, 5.202083333333331], [1.71820542E12, 3.096153846153847], [1.71820236E12, 0.0], [1.7182056E12, 4.312871287128718], [1.7182053E12, 5.526881720430104], [1.71820014E12, 24.6], [1.71819918E12, 26.326086956521735], [1.71820044E12, 29.932203389830512], [1.71820566E12, 5.171483622350677]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[1.7182023E12, 17.09090909090909], [1.71820224E12, 25.77272727272728], [1.71820236E12, 21.5]], "isOverall": false, "label": "TitleBasics by primary_title", "isController": false}, {"data": [[1.7182023E12, 0.0], [1.71820224E12, 64.05882352941178], [1.71820236E12, 9.642857142857142]], "isOverall": false, "label": "Actors by name", "isController": false}, {"data": [[1.7182023E12, 6.142857142857142], [1.71820224E12, 9.066666666666666], [1.71820236E12, 0.0]], "isOverall": false, "label": "TitleBasics by params", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71820578E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 95.0, "minX": 1.71819918E12, "maxY": 16209.0, "series": [{"data": [[1.7182005E12, 3773.0], [1.71820554E12, 9396.0], [1.71820524E12, 2607.0], [1.7182002E12, 3915.0], [1.71819924E12, 4143.0], [1.7182035E12, 4280.0], [1.71820578E12, 6780.0], [1.71820548E12, 8031.0], [1.71820344E12, 1151.0], [1.71820518E12, 1554.0], [1.71820536E12, 3701.0], [1.7182023E12, 5761.0], [1.71820356E12, 3498.0], [1.71820224E12, 16209.0], [1.71820572E12, 6791.0], [1.71820542E12, 5636.0], [1.71820236E12, 6941.0], [1.7182056E12, 10116.0], [1.7182053E12, 3209.0], [1.71820014E12, 1410.0], [1.71819918E12, 5551.0], [1.71820044E12, 2783.0], [1.71820566E12, 12667.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7182005E12, 1756.0], [1.71820554E12, 4506.0], [1.71820524E12, 1131.0], [1.7182002E12, 1212.0], [1.71819924E12, 2386.0], [1.7182035E12, 1118.0], [1.71820578E12, 6648.0], [1.71820548E12, 3796.0], [1.71820344E12, 1151.0], [1.71820518E12, 1071.0], [1.71820536E12, 1851.0], [1.7182023E12, 95.0], [1.71820356E12, 3447.0], [1.71820224E12, 98.0], [1.71820572E12, 6661.0], [1.71820542E12, 3005.0], [1.71820236E12, 116.0], [1.7182056E12, 5299.0], [1.7182053E12, 1415.0], [1.71820014E12, 1106.0], [1.71819918E12, 1197.0], [1.71820044E12, 1119.0], [1.71820566E12, 6183.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7182005E12, 3018.600000000001], [1.71820554E12, 5221.2], [1.71820524E12, 1784.0], [1.7182002E12, 2944.0000000000005], [1.71819924E12, 3084.0], [1.7182035E12, 3452.0], [1.71820578E12, 6745.9], [1.71820548E12, 4513.0], [1.71820344E12, 1151.0], [1.71820518E12, 1541.0], [1.71820536E12, 2873.0], [1.7182023E12, 1374.6], [1.71820356E12, 3495.4], [1.71820224E12, 13729.399999999994], [1.71820572E12, 6774.0], [1.71820542E12, 3683.1], [1.71820236E12, 6941.0], [1.7182056E12, 5960.0], [1.7182053E12, 2324.4], [1.71820014E12, 1406.5], [1.71819918E12, 2633.4], [1.71820044E12, 2514.0], [1.71820566E12, 6746.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7182005E12, 3734.7199999999993], [1.71820554E12, 6588.059999999961], [1.71820524E12, 2597.75], [1.7182002E12, 3914.18], [1.71819924E12, 4143.0], [1.7182035E12, 4128.46], [1.71820578E12, 6770.92], [1.71820548E12, 5698.019999999996], [1.71820344E12, 1151.0], [1.71820518E12, 1554.0], [1.71820536E12, 3583.54], [1.7182023E12, 5761.0], [1.71820356E12, 3498.0], [1.71820224E12, 16058.960000000001], [1.71820572E12, 6785.19], [1.71820542E12, 4611.460000000002], [1.71820236E12, 6941.0], [1.7182056E12, 7765.3399999999965], [1.7182053E12, 2839.7799999999997], [1.71820014E12, 1410.0], [1.71819918E12, 5551.0], [1.71820044E12, 2783.0], [1.71820566E12, 6948.999999999992]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7182005E12, 2421.5], [1.71820554E12, 4875.0], [1.71820524E12, 1511.5], [1.7182002E12, 2448.0], [1.71819924E12, 2639.0], [1.7182035E12, 2963.0], [1.71820578E12, 6710.0], [1.71820548E12, 4202.0], [1.71820344E12, 1151.0], [1.71820518E12, 1182.0], [1.71820536E12, 2636.0], [1.7182023E12, 560.0], [1.71820356E12, 3474.0], [1.71820224E12, 1367.0], [1.71820572E12, 6747.5], [1.71820542E12, 3358.0], [1.71820236E12, 784.0], [1.7182056E12, 5735.0], [1.7182053E12, 2027.5], [1.71820014E12, 1174.0], [1.71819918E12, 2057.5], [1.71820044E12, 1536.0], [1.71820566E12, 6486.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.7182005E12, 3344.5499999999993], [1.71820554E12, 5232.1], [1.71820524E12, 2294.75], [1.7182002E12, 3469.9], [1.71819924E12, 3288.5], [1.7182035E12, 3567.2999999999997], [1.71820578E12, 6754.95], [1.71820548E12, 4520.3], [1.71820344E12, 1151.0], [1.71820518E12, 1544.5], [1.71820536E12, 3336.5], [1.7182023E12, 4023.3999999999905], [1.71820356E12, 3497.45], [1.71820224E12, 15408.999999999998], [1.71820572E12, 6778.95], [1.71820542E12, 3695.0], [1.71820236E12, 6941.0], [1.7182056E12, 5979.0], [1.7182053E12, 2367.0], [1.71820014E12, 1410.0], [1.71819918E12, 2784.6], [1.71820044E12, 2718.0], [1.71820566E12, 6779.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71820578E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1254.0, "minX": 1.0, "maxY": 6724.0, "series": [{"data": [[2.0, 1682.5], [3.0, 1541.0], [4.0, 1546.0], [5.0, 1845.0], [6.0, 1679.5], [7.0, 1834.0], [8.0, 1953.5], [9.0, 1602.0], [10.0, 1660.0], [11.0, 2290.0], [12.0, 2481.0], [13.0, 2669.0], [14.0, 2441.5], [15.0, 2281.0], [16.0, 2586.5], [17.0, 2621.0], [18.0, 2307.5], [19.0, 2384.0], [20.0, 2377.0], [22.0, 2905.0], [23.0, 2696.0], [24.0, 2829.0], [26.0, 3052.0], [27.0, 3050.0], [28.0, 3206.5], [29.0, 3349.0], [30.0, 3445.0], [31.0, 3568.5], [32.0, 3664.0], [33.0, 3796.5], [34.0, 3889.0], [35.0, 3983.0], [36.0, 4186.5], [37.0, 4210.0], [38.0, 4296.5], [39.0, 4483.5], [40.0, 4530.0], [41.0, 4678.0], [42.0, 4674.0], [43.0, 4833.5], [44.0, 4900.5], [45.0, 5167.5], [46.0, 5117.5], [47.0, 5312.0], [48.0, 5319.0], [49.0, 5501.5], [50.0, 5543.0], [51.0, 5743.0], [52.0, 5899.0], [53.0, 5941.0], [54.0, 5969.5], [55.0, 6246.0], [56.0, 6250.0], [58.0, 6483.0], [59.0, 6576.0], [60.0, 6724.0], [1.0, 1254.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[14.0, 2358.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 60.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 6724.0, "series": [{"data": [[2.0, 1682.5], [3.0, 1541.0], [4.0, 1546.0], [5.0, 1845.0], [6.0, 1679.5], [7.0, 1834.0], [8.0, 1953.5], [9.0, 1602.0], [10.0, 1660.0], [11.0, 2290.0], [12.0, 2481.0], [13.0, 2669.0], [14.0, 2441.5], [15.0, 2281.0], [16.0, 2586.5], [17.0, 2621.0], [18.0, 2307.5], [19.0, 2384.0], [20.0, 2377.0], [22.0, 2905.0], [23.0, 2696.0], [24.0, 2829.0], [26.0, 3052.0], [27.0, 3050.0], [28.0, 3206.5], [29.0, 3349.0], [30.0, 3445.0], [31.0, 3568.5], [32.0, 3664.0], [33.0, 3796.5], [34.0, 3889.0], [35.0, 3983.0], [36.0, 4186.5], [37.0, 4210.0], [38.0, 4296.5], [39.0, 4483.5], [40.0, 4530.0], [41.0, 4678.0], [42.0, 4674.0], [43.0, 4833.5], [44.0, 4900.5], [45.0, 5167.5], [46.0, 5117.5], [47.0, 5312.0], [48.0, 5319.0], [49.0, 5501.5], [50.0, 5543.0], [51.0, 5743.0], [52.0, 5899.0], [53.0, 5941.0], [54.0, 5969.5], [55.0, 6246.0], [56.0, 6250.0], [58.0, 6483.0], [59.0, 6576.0], [60.0, 6724.0], [1.0, 1254.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[14.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 60.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.71819918E12, "maxY": 8.733333333333333, "series": [{"data": [[1.7182005E12, 1.8833333333333333], [1.71820554E12, 8.066666666666666], [1.71820524E12, 4.133333333333334], [1.7182002E12, 2.9166666666666665], [1.71819924E12, 1.1833333333333333], [1.7182035E12, 7.233333333333333], [1.71820578E12, 4.0], [1.71820548E12, 8.016666666666667], [1.71820344E12, 0.03333333333333333], [1.71820518E12, 0.9], [1.71820536E12, 7.533333333333333], [1.7182023E12, 0.6], [1.71820224E12, 2.3833333333333333], [1.71820572E12, 8.0], [1.71820542E12, 7.916666666666667], [1.71820236E12, 0.23333333333333334], [1.7182056E12, 8.533333333333333], [1.7182053E12, 6.366666666666666], [1.71820014E12, 0.26666666666666666], [1.71819918E12, 1.8333333333333333], [1.71820044E12, 1.2333333333333334], [1.71820566E12, 8.733333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71820578E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71819918E12, "maxY": 8.65, "series": [{"data": [[1.7182005E12, 2.1333333333333333], [1.71820554E12, 7.95], [1.71820524E12, 4.066666666666666], [1.7182002E12, 3.0166666666666666], [1.71819924E12, 1.4833333333333334], [1.7182035E12, 6.75], [1.71820578E12, 5.0], [1.71820548E12, 7.883333333333334], [1.71820344E12, 0.016666666666666666], [1.71820518E12, 0.8166666666666667], [1.71820536E12, 7.416666666666667], [1.7182023E12, 0.45], [1.71820356E12, 0.5], [1.71820224E12, 2.3833333333333333], [1.71820572E12, 8.0], [1.71820542E12, 7.8], [1.71820236E12, 0.15], [1.7182056E12, 8.416666666666666], [1.7182053E12, 6.2], [1.71820014E12, 0.16666666666666666], [1.71819918E12, 1.5333333333333334], [1.71820044E12, 0.9833333333333333], [1.71820566E12, 8.65]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71820236E12, 0.23333333333333334]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71820578E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71819918E12, "maxY": 8.65, "series": [{"data": [[1.7182023E12, 0.18333333333333332], [1.71820224E12, 0.7333333333333333], [1.71820236E12, 0.05]], "isOverall": false, "label": "TitleBasics by primary_title-success", "isController": false}, {"data": [[1.71820236E12, 0.016666666666666666]], "isOverall": false, "label": "TitleBasics by primary_title-failure", "isController": false}, {"data": [[1.71820236E12, 0.2]], "isOverall": false, "label": "Actors by name-failure", "isController": false}, {"data": [[1.7182023E12, 0.016666666666666666], [1.71820224E12, 0.5666666666666667], [1.71820236E12, 0.03333333333333333]], "isOverall": false, "label": "Actors by name-success", "isController": false}, {"data": [[1.71820236E12, 0.016666666666666666]], "isOverall": false, "label": "Directors by name-failure", "isController": false}, {"data": [[1.7182005E12, 2.1333333333333333], [1.71820554E12, 7.95], [1.71820524E12, 4.066666666666666], [1.7182002E12, 3.0166666666666666], [1.71819924E12, 1.4833333333333334], [1.7182035E12, 6.75], [1.71820578E12, 5.0], [1.71820548E12, 7.883333333333334], [1.71820344E12, 0.016666666666666666], [1.71820518E12, 0.8166666666666667], [1.71820536E12, 7.416666666666667], [1.7182023E12, 0.13333333333333333], [1.71820356E12, 0.5], [1.71820224E12, 0.5833333333333334], [1.71820572E12, 8.0], [1.71820542E12, 7.8], [1.71820236E12, 0.03333333333333333], [1.7182056E12, 8.416666666666666], [1.7182053E12, 6.2], [1.71820014E12, 0.16666666666666666], [1.71819918E12, 1.5333333333333334], [1.71820044E12, 0.9833333333333333], [1.71820566E12, 8.65]], "isOverall": false, "label": "Directors by name-success", "isController": false}, {"data": [[1.7182023E12, 0.11666666666666667], [1.71820224E12, 0.5], [1.71820236E12, 0.03333333333333333]], "isOverall": false, "label": "TitleBasics by params-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71820578E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71819918E12, "maxY": 8.65, "series": [{"data": [[1.7182005E12, 2.1333333333333333], [1.71820554E12, 7.95], [1.71820524E12, 4.066666666666666], [1.7182002E12, 3.0166666666666666], [1.71819924E12, 1.4833333333333334], [1.7182035E12, 6.75], [1.71820578E12, 5.0], [1.71820548E12, 7.883333333333334], [1.71820344E12, 0.016666666666666666], [1.71820518E12, 0.8166666666666667], [1.71820536E12, 7.416666666666667], [1.7182023E12, 0.45], [1.71820356E12, 0.5], [1.71820224E12, 2.3833333333333333], [1.71820572E12, 8.0], [1.71820542E12, 7.8], [1.71820236E12, 0.15], [1.7182056E12, 8.416666666666666], [1.7182053E12, 6.2], [1.71820014E12, 0.16666666666666666], [1.71819918E12, 1.5333333333333334], [1.71820044E12, 0.9833333333333333], [1.71820566E12, 8.65]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.71820236E12, 0.23333333333333334]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71820578E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}


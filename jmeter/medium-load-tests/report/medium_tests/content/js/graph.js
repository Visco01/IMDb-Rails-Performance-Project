/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 36.0, "minX": 0.0, "maxY": 1146.0, "series": [{"data": [[0.0, 36.0], [0.1, 38.0], [0.2, 38.0], [0.3, 38.0], [0.4, 38.0], [0.5, 38.0], [0.6, 39.0], [0.7, 39.0], [0.8, 39.0], [0.9, 39.0], [1.0, 39.0], [1.1, 39.0], [1.2, 39.0], [1.3, 39.0], [1.4, 39.0], [1.5, 39.0], [1.6, 39.0], [1.7, 39.0], [1.8, 39.0], [1.9, 39.0], [2.0, 39.0], [2.1, 39.0], [2.2, 39.0], [2.3, 39.0], [2.4, 39.0], [2.5, 39.0], [2.6, 39.0], [2.7, 40.0], [2.8, 40.0], [2.9, 40.0], [3.0, 40.0], [3.1, 40.0], [3.2, 40.0], [3.3, 40.0], [3.4, 40.0], [3.5, 40.0], [3.6, 40.0], [3.7, 40.0], [3.8, 40.0], [3.9, 40.0], [4.0, 40.0], [4.1, 40.0], [4.2, 40.0], [4.3, 40.0], [4.4, 40.0], [4.5, 40.0], [4.6, 40.0], [4.7, 40.0], [4.8, 40.0], [4.9, 40.0], [5.0, 40.0], [5.1, 40.0], [5.2, 40.0], [5.3, 40.0], [5.4, 40.0], [5.5, 40.0], [5.6, 40.0], [5.7, 40.0], [5.8, 40.0], [5.9, 40.0], [6.0, 40.0], [6.1, 40.0], [6.2, 40.0], [6.3, 41.0], [6.4, 41.0], [6.5, 41.0], [6.6, 41.0], [6.7, 41.0], [6.8, 41.0], [6.9, 41.0], [7.0, 41.0], [7.1, 41.0], [7.2, 41.0], [7.3, 41.0], [7.4, 41.0], [7.5, 41.0], [7.6, 41.0], [7.7, 41.0], [7.8, 41.0], [7.9, 41.0], [8.0, 41.0], [8.1, 41.0], [8.2, 41.0], [8.3, 41.0], [8.4, 41.0], [8.5, 41.0], [8.6, 41.0], [8.7, 41.0], [8.8, 41.0], [8.9, 41.0], [9.0, 41.0], [9.1, 41.0], [9.2, 41.0], [9.3, 41.0], [9.4, 41.0], [9.5, 41.0], [9.6, 41.0], [9.7, 41.0], [9.8, 41.0], [9.9, 41.0], [10.0, 41.0], [10.1, 41.0], [10.2, 41.0], [10.3, 41.0], [10.4, 41.0], [10.5, 41.0], [10.6, 41.0], [10.7, 41.0], [10.8, 42.0], [10.9, 42.0], [11.0, 42.0], [11.1, 42.0], [11.2, 42.0], [11.3, 42.0], [11.4, 42.0], [11.5, 42.0], [11.6, 42.0], [11.7, 42.0], [11.8, 42.0], [11.9, 42.0], [12.0, 42.0], [12.1, 42.0], [12.2, 42.0], [12.3, 42.0], [12.4, 42.0], [12.5, 42.0], [12.6, 42.0], [12.7, 42.0], [12.8, 42.0], [12.9, 42.0], [13.0, 42.0], [13.1, 42.0], [13.2, 42.0], [13.3, 42.0], [13.4, 42.0], [13.5, 42.0], [13.6, 42.0], [13.7, 42.0], [13.8, 42.0], [13.9, 42.0], [14.0, 42.0], [14.1, 42.0], [14.2, 42.0], [14.3, 42.0], [14.4, 42.0], [14.5, 42.0], [14.6, 42.0], [14.7, 42.0], [14.8, 42.0], [14.9, 42.0], [15.0, 42.0], [15.1, 42.0], [15.2, 42.0], [15.3, 42.0], [15.4, 42.0], [15.5, 42.0], [15.6, 42.0], [15.7, 42.0], [15.8, 42.0], [15.9, 42.0], [16.0, 42.0], [16.1, 42.0], [16.2, 42.0], [16.3, 42.0], [16.4, 42.0], [16.5, 42.0], [16.6, 42.0], [16.7, 42.0], [16.8, 42.0], [16.9, 42.0], [17.0, 42.0], [17.1, 42.0], [17.2, 42.0], [17.3, 42.0], [17.4, 42.0], [17.5, 42.0], [17.6, 42.0], [17.7, 42.0], [17.8, 42.0], [17.9, 42.0], [18.0, 42.0], [18.1, 42.0], [18.2, 42.0], [18.3, 42.0], [18.4, 42.0], [18.5, 42.0], [18.6, 42.0], [18.7, 42.0], [18.8, 42.0], [18.9, 42.0], [19.0, 42.0], [19.1, 43.0], [19.2, 43.0], [19.3, 43.0], [19.4, 43.0], [19.5, 43.0], [19.6, 43.0], [19.7, 43.0], [19.8, 43.0], [19.9, 43.0], [20.0, 43.0], [20.1, 43.0], [20.2, 43.0], [20.3, 43.0], [20.4, 43.0], [20.5, 43.0], [20.6, 43.0], [20.7, 43.0], [20.8, 43.0], [20.9, 43.0], [21.0, 43.0], [21.1, 43.0], [21.2, 43.0], [21.3, 43.0], [21.4, 43.0], [21.5, 43.0], [21.6, 43.0], [21.7, 43.0], [21.8, 43.0], [21.9, 43.0], [22.0, 43.0], [22.1, 43.0], [22.2, 43.0], [22.3, 43.0], [22.4, 43.0], [22.5, 43.0], [22.6, 43.0], [22.7, 43.0], [22.8, 43.0], [22.9, 43.0], [23.0, 43.0], [23.1, 43.0], [23.2, 43.0], [23.3, 43.0], [23.4, 43.0], [23.5, 43.0], [23.6, 43.0], [23.7, 43.0], [23.8, 43.0], [23.9, 43.0], [24.0, 43.0], [24.1, 43.0], [24.2, 43.0], [24.3, 43.0], [24.4, 43.0], [24.5, 43.0], [24.6, 43.0], [24.7, 43.0], [24.8, 43.0], [24.9, 43.0], [25.0, 43.0], [25.1, 43.0], [25.2, 43.0], [25.3, 43.0], [25.4, 43.0], [25.5, 43.0], [25.6, 43.0], [25.7, 43.0], [25.8, 43.0], [25.9, 43.0], [26.0, 43.0], [26.1, 43.0], [26.2, 43.0], [26.3, 43.0], [26.4, 43.0], [26.5, 43.0], [26.6, 43.0], [26.7, 43.0], [26.8, 43.0], [26.9, 43.0], [27.0, 43.0], [27.1, 43.0], [27.2, 43.0], [27.3, 43.0], [27.4, 43.0], [27.5, 43.0], [27.6, 43.0], [27.7, 43.0], [27.8, 43.0], [27.9, 43.0], [28.0, 43.0], [28.1, 43.0], [28.2, 43.0], [28.3, 43.0], [28.4, 43.0], [28.5, 43.0], [28.6, 43.0], [28.7, 43.0], [28.8, 43.0], [28.9, 43.0], [29.0, 43.0], [29.1, 43.0], [29.2, 43.0], [29.3, 43.0], [29.4, 43.0], [29.5, 43.0], [29.6, 43.0], [29.7, 43.0], [29.8, 43.0], [29.9, 43.0], [30.0, 43.0], [30.1, 43.0], [30.2, 43.0], [30.3, 43.0], [30.4, 43.0], [30.5, 43.0], [30.6, 43.0], [30.7, 43.0], [30.8, 43.0], [30.9, 43.0], [31.0, 43.0], [31.1, 43.0], [31.2, 43.0], [31.3, 43.0], [31.4, 43.0], [31.5, 43.0], [31.6, 43.0], [31.7, 43.0], [31.8, 43.0], [31.9, 43.0], [32.0, 43.0], [32.1, 43.0], [32.2, 43.0], [32.3, 43.0], [32.4, 43.0], [32.5, 44.0], [32.6, 44.0], [32.7, 44.0], [32.8, 44.0], [32.9, 44.0], [33.0, 44.0], [33.1, 44.0], [33.2, 44.0], [33.3, 44.0], [33.4, 44.0], [33.5, 44.0], [33.6, 44.0], [33.7, 44.0], [33.8, 44.0], [33.9, 44.0], [34.0, 44.0], [34.1, 44.0], [34.2, 44.0], [34.3, 44.0], [34.4, 44.0], [34.5, 44.0], [34.6, 44.0], [34.7, 44.0], [34.8, 44.0], [34.9, 44.0], [35.0, 44.0], [35.1, 44.0], [35.2, 44.0], [35.3, 44.0], [35.4, 44.0], [35.5, 44.0], [35.6, 44.0], [35.7, 44.0], [35.8, 44.0], [35.9, 44.0], [36.0, 44.0], [36.1, 44.0], [36.2, 44.0], [36.3, 44.0], [36.4, 44.0], [36.5, 44.0], [36.6, 44.0], [36.7, 44.0], [36.8, 44.0], [36.9, 44.0], [37.0, 44.0], [37.1, 44.0], [37.2, 44.0], [37.3, 44.0], [37.4, 44.0], [37.5, 44.0], [37.6, 44.0], [37.7, 44.0], [37.8, 44.0], [37.9, 44.0], [38.0, 44.0], [38.1, 44.0], [38.2, 44.0], [38.3, 44.0], [38.4, 44.0], [38.5, 44.0], [38.6, 44.0], [38.7, 44.0], [38.8, 44.0], [38.9, 44.0], [39.0, 44.0], [39.1, 44.0], [39.2, 44.0], [39.3, 44.0], [39.4, 44.0], [39.5, 44.0], [39.6, 44.0], [39.7, 44.0], [39.8, 44.0], [39.9, 44.0], [40.0, 44.0], [40.1, 44.0], [40.2, 44.0], [40.3, 44.0], [40.4, 44.0], [40.5, 44.0], [40.6, 44.0], [40.7, 44.0], [40.8, 44.0], [40.9, 44.0], [41.0, 44.0], [41.1, 44.0], [41.2, 44.0], [41.3, 44.0], [41.4, 44.0], [41.5, 44.0], [41.6, 44.0], [41.7, 44.0], [41.8, 44.0], [41.9, 44.0], [42.0, 44.0], [42.1, 44.0], [42.2, 44.0], [42.3, 44.0], [42.4, 44.0], [42.5, 44.0], [42.6, 45.0], [42.7, 45.0], [42.8, 45.0], [42.9, 45.0], [43.0, 45.0], [43.1, 45.0], [43.2, 45.0], [43.3, 45.0], [43.4, 45.0], [43.5, 45.0], [43.6, 45.0], [43.7, 45.0], [43.8, 45.0], [43.9, 45.0], [44.0, 45.0], [44.1, 45.0], [44.2, 45.0], [44.3, 45.0], [44.4, 45.0], [44.5, 45.0], [44.6, 45.0], [44.7, 45.0], [44.8, 45.0], [44.9, 45.0], [45.0, 45.0], [45.1, 45.0], [45.2, 45.0], [45.3, 45.0], [45.4, 45.0], [45.5, 45.0], [45.6, 45.0], [45.7, 45.0], [45.8, 45.0], [45.9, 45.0], [46.0, 45.0], [46.1, 45.0], [46.2, 45.0], [46.3, 45.0], [46.4, 45.0], [46.5, 45.0], [46.6, 45.0], [46.7, 45.0], [46.8, 45.0], [46.9, 45.0], [47.0, 45.0], [47.1, 45.0], [47.2, 45.0], [47.3, 45.0], [47.4, 45.0], [47.5, 45.0], [47.6, 45.0], [47.7, 45.0], [47.8, 45.0], [47.9, 45.0], [48.0, 45.0], [48.1, 45.0], [48.2, 45.0], [48.3, 45.0], [48.4, 45.0], [48.5, 45.0], [48.6, 45.0], [48.7, 45.0], [48.8, 45.0], [48.9, 45.0], [49.0, 45.0], [49.1, 45.0], [49.2, 45.0], [49.3, 45.0], [49.4, 45.0], [49.5, 45.0], [49.6, 45.0], [49.7, 45.0], [49.8, 45.0], [49.9, 45.0], [50.0, 46.0], [50.1, 46.0], [50.2, 46.0], [50.3, 46.0], [50.4, 46.0], [50.5, 46.0], [50.6, 46.0], [50.7, 46.0], [50.8, 46.0], [50.9, 46.0], [51.0, 46.0], [51.1, 46.0], [51.2, 46.0], [51.3, 46.0], [51.4, 46.0], [51.5, 46.0], [51.6, 46.0], [51.7, 46.0], [51.8, 46.0], [51.9, 46.0], [52.0, 46.0], [52.1, 46.0], [52.2, 46.0], [52.3, 46.0], [52.4, 46.0], [52.5, 46.0], [52.6, 46.0], [52.7, 46.0], [52.8, 46.0], [52.9, 46.0], [53.0, 46.0], [53.1, 46.0], [53.2, 46.0], [53.3, 46.0], [53.4, 46.0], [53.5, 46.0], [53.6, 46.0], [53.7, 46.0], [53.8, 46.0], [53.9, 46.0], [54.0, 46.0], [54.1, 46.0], [54.2, 46.0], [54.3, 46.0], [54.4, 46.0], [54.5, 46.0], [54.6, 46.0], [54.7, 46.0], [54.8, 46.0], [54.9, 46.0], [55.0, 46.0], [55.1, 46.0], [55.2, 46.0], [55.3, 46.0], [55.4, 46.0], [55.5, 46.0], [55.6, 46.0], [55.7, 47.0], [55.8, 47.0], [55.9, 47.0], [56.0, 47.0], [56.1, 47.0], [56.2, 47.0], [56.3, 47.0], [56.4, 47.0], [56.5, 47.0], [56.6, 47.0], [56.7, 47.0], [56.8, 47.0], [56.9, 47.0], [57.0, 47.0], [57.1, 47.0], [57.2, 47.0], [57.3, 47.0], [57.4, 47.0], [57.5, 47.0], [57.6, 47.0], [57.7, 47.0], [57.8, 47.0], [57.9, 47.0], [58.0, 47.0], [58.1, 47.0], [58.2, 47.0], [58.3, 47.0], [58.4, 47.0], [58.5, 47.0], [58.6, 47.0], [58.7, 47.0], [58.8, 47.0], [58.9, 47.0], [59.0, 47.0], [59.1, 47.0], [59.2, 47.0], [59.3, 47.0], [59.4, 47.0], [59.5, 47.0], [59.6, 47.0], [59.7, 47.0], [59.8, 47.0], [59.9, 47.0], [60.0, 47.0], [60.1, 47.0], [60.2, 47.0], [60.3, 48.0], [60.4, 48.0], [60.5, 48.0], [60.6, 48.0], [60.7, 48.0], [60.8, 48.0], [60.9, 48.0], [61.0, 48.0], [61.1, 48.0], [61.2, 48.0], [61.3, 48.0], [61.4, 48.0], [61.5, 48.0], [61.6, 48.0], [61.7, 48.0], [61.8, 48.0], [61.9, 48.0], [62.0, 48.0], [62.1, 48.0], [62.2, 48.0], [62.3, 48.0], [62.4, 48.0], [62.5, 48.0], [62.6, 48.0], [62.7, 48.0], [62.8, 48.0], [62.9, 48.0], [63.0, 48.0], [63.1, 48.0], [63.2, 48.0], [63.3, 48.0], [63.4, 48.0], [63.5, 48.0], [63.6, 48.0], [63.7, 48.0], [63.8, 48.0], [63.9, 48.0], [64.0, 48.0], [64.1, 48.0], [64.2, 48.0], [64.3, 49.0], [64.4, 49.0], [64.5, 49.0], [64.6, 49.0], [64.7, 49.0], [64.8, 49.0], [64.9, 49.0], [65.0, 49.0], [65.1, 49.0], [65.2, 49.0], [65.3, 49.0], [65.4, 49.0], [65.5, 49.0], [65.6, 49.0], [65.7, 49.0], [65.8, 49.0], [65.9, 49.0], [66.0, 49.0], [66.1, 49.0], [66.2, 49.0], [66.3, 49.0], [66.4, 49.0], [66.5, 49.0], [66.6, 49.0], [66.7, 49.0], [66.8, 49.0], [66.9, 49.0], [67.0, 49.0], [67.1, 49.0], [67.2, 49.0], [67.3, 49.0], [67.4, 49.0], [67.5, 49.0], [67.6, 49.0], [67.7, 49.0], [67.8, 49.0], [67.9, 49.0], [68.0, 50.0], [68.1, 50.0], [68.2, 50.0], [68.3, 50.0], [68.4, 50.0], [68.5, 50.0], [68.6, 50.0], [68.7, 50.0], [68.8, 50.0], [68.9, 50.0], [69.0, 50.0], [69.1, 50.0], [69.2, 50.0], [69.3, 50.0], [69.4, 50.0], [69.5, 50.0], [69.6, 50.0], [69.7, 50.0], [69.8, 50.0], [69.9, 50.0], [70.0, 50.0], [70.1, 50.0], [70.2, 50.0], [70.3, 50.0], [70.4, 50.0], [70.5, 50.0], [70.6, 50.0], [70.7, 50.0], [70.8, 50.0], [70.9, 50.0], [71.0, 51.0], [71.1, 51.0], [71.2, 51.0], [71.3, 51.0], [71.4, 51.0], [71.5, 51.0], [71.6, 51.0], [71.7, 51.0], [71.8, 51.0], [71.9, 51.0], [72.0, 51.0], [72.1, 51.0], [72.2, 51.0], [72.3, 51.0], [72.4, 51.0], [72.5, 51.0], [72.6, 51.0], [72.7, 51.0], [72.8, 51.0], [72.9, 51.0], [73.0, 51.0], [73.1, 51.0], [73.2, 51.0], [73.3, 51.0], [73.4, 51.0], [73.5, 52.0], [73.6, 52.0], [73.7, 52.0], [73.8, 52.0], [73.9, 52.0], [74.0, 52.0], [74.1, 52.0], [74.2, 52.0], [74.3, 52.0], [74.4, 52.0], [74.5, 52.0], [74.6, 52.0], [74.7, 52.0], [74.8, 52.0], [74.9, 52.0], [75.0, 52.0], [75.1, 52.0], [75.2, 52.0], [75.3, 52.0], [75.4, 52.0], [75.5, 52.0], [75.6, 52.0], [75.7, 53.0], [75.8, 53.0], [75.9, 53.0], [76.0, 53.0], [76.1, 53.0], [76.2, 53.0], [76.3, 53.0], [76.4, 53.0], [76.5, 53.0], [76.6, 53.0], [76.7, 53.0], [76.8, 53.0], [76.9, 53.0], [77.0, 53.0], [77.1, 53.0], [77.2, 53.0], [77.3, 53.0], [77.4, 53.0], [77.5, 54.0], [77.6, 54.0], [77.7, 54.0], [77.8, 54.0], [77.9, 54.0], [78.0, 54.0], [78.1, 54.0], [78.2, 54.0], [78.3, 54.0], [78.4, 54.0], [78.5, 54.0], [78.6, 54.0], [78.7, 54.0], [78.8, 54.0], [78.9, 54.0], [79.0, 54.0], [79.1, 55.0], [79.2, 55.0], [79.3, 55.0], [79.4, 55.0], [79.5, 55.0], [79.6, 55.0], [79.7, 55.0], [79.8, 55.0], [79.9, 55.0], [80.0, 55.0], [80.1, 55.0], [80.2, 55.0], [80.3, 55.0], [80.4, 55.0], [80.5, 56.0], [80.6, 56.0], [80.7, 56.0], [80.8, 56.0], [80.9, 56.0], [81.0, 56.0], [81.1, 56.0], [81.2, 56.0], [81.3, 56.0], [81.4, 56.0], [81.5, 56.0], [81.6, 56.0], [81.7, 56.0], [81.8, 57.0], [81.9, 57.0], [82.0, 57.0], [82.1, 57.0], [82.2, 57.0], [82.3, 57.0], [82.4, 57.0], [82.5, 57.0], [82.6, 57.0], [82.7, 57.0], [82.8, 57.0], [82.9, 57.0], [83.0, 58.0], [83.1, 58.0], [83.2, 58.0], [83.3, 58.0], [83.4, 58.0], [83.5, 58.0], [83.6, 58.0], [83.7, 58.0], [83.8, 58.0], [83.9, 58.0], [84.0, 58.0], [84.1, 59.0], [84.2, 59.0], [84.3, 59.0], [84.4, 59.0], [84.5, 59.0], [84.6, 59.0], [84.7, 59.0], [84.8, 59.0], [84.9, 59.0], [85.0, 59.0], [85.1, 60.0], [85.2, 60.0], [85.3, 60.0], [85.4, 60.0], [85.5, 60.0], [85.6, 60.0], [85.7, 60.0], [85.8, 60.0], [85.9, 60.0], [86.0, 61.0], [86.1, 61.0], [86.2, 61.0], [86.3, 61.0], [86.4, 61.0], [86.5, 61.0], [86.6, 61.0], [86.7, 61.0], [86.8, 61.0], [86.9, 62.0], [87.0, 62.0], [87.1, 62.0], [87.2, 62.0], [87.3, 62.0], [87.4, 62.0], [87.5, 62.0], [87.6, 62.0], [87.7, 63.0], [87.8, 63.0], [87.9, 63.0], [88.0, 63.0], [88.1, 63.0], [88.2, 63.0], [88.3, 63.0], [88.4, 64.0], [88.5, 64.0], [88.6, 64.0], [88.7, 64.0], [88.8, 64.0], [88.9, 64.0], [89.0, 64.0], [89.1, 65.0], [89.2, 65.0], [89.3, 65.0], [89.4, 65.0], [89.5, 65.0], [89.6, 65.0], [89.7, 66.0], [89.8, 66.0], [89.9, 66.0], [90.0, 66.0], [90.1, 66.0], [90.2, 66.0], [90.3, 67.0], [90.4, 67.0], [90.5, 67.0], [90.6, 67.0], [90.7, 67.0], [90.8, 67.0], [90.9, 68.0], [91.0, 68.0], [91.1, 68.0], [91.2, 68.0], [91.3, 68.0], [91.4, 69.0], [91.5, 69.0], [91.6, 69.0], [91.7, 69.0], [91.8, 70.0], [91.9, 70.0], [92.0, 70.0], [92.1, 70.0], [92.2, 70.0], [92.3, 71.0], [92.4, 71.0], [92.5, 71.0], [92.6, 71.0], [92.7, 72.0], [92.8, 72.0], [92.9, 72.0], [93.0, 72.0], [93.1, 73.0], [93.2, 73.0], [93.3, 73.0], [93.4, 73.0], [93.5, 74.0], [93.6, 74.0], [93.7, 74.0], [93.8, 75.0], [93.9, 75.0], [94.0, 75.0], [94.1, 75.0], [94.2, 76.0], [94.3, 76.0], [94.4, 76.0], [94.5, 77.0], [94.6, 77.0], [94.7, 77.0], [94.8, 77.0], [94.9, 78.0], [95.0, 78.0], [95.1, 78.0], [95.2, 78.0], [95.3, 79.0], [95.4, 79.0], [95.5, 79.0], [95.6, 80.0], [95.7, 80.0], [95.8, 80.0], [95.9, 80.0], [96.0, 81.0], [96.1, 81.0], [96.2, 81.0], [96.3, 82.0], [96.4, 82.0], [96.5, 82.0], [96.6, 83.0], [96.7, 83.0], [96.8, 83.0], [96.9, 84.0], [97.0, 84.0], [97.1, 84.0], [97.2, 85.0], [97.3, 85.0], [97.4, 86.0], [97.5, 86.0], [97.6, 87.0], [97.7, 88.0], [97.8, 88.0], [97.9, 89.0], [98.0, 90.0], [98.1, 90.0], [98.2, 91.0], [98.3, 92.0], [98.4, 93.0], [98.5, 94.0], [98.6, 96.0], [98.7, 97.0], [98.8, 99.0], [98.9, 100.0], [99.0, 102.0], [99.1, 104.0], [99.2, 107.0], [99.3, 109.0], [99.4, 112.0], [99.5, 116.0], [99.6, 121.0], [99.7, 127.0], [99.8, 137.0], [99.9, 153.0], [100.0, 1146.0]], "isOverall": false, "label": "Directors by name", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 1526278.0, "series": [{"data": [[0.0, 1526278.0], [1100.0, 4.0], [300.0, 238.0], [600.0, 2.0], [100.0, 17180.0], [400.0, 24.0], [200.0, 278.0], [900.0, 2.0], [500.0, 12.0]], "isOverall": false, "label": "Directors by name", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 20.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1543998.0, "series": [{"data": [[0.0, 1543998.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 20.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 1.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.2272727272727266, "minX": 1.71906438E12, "maxY": 400.0, "series": [{"data": [[1.71906846E12, 80.0], [1.71906876E12, 80.0], [1.7190681E12, 80.0], [1.7190684E12, 80.0], [1.7190687E12, 80.0], [1.71906804E12, 77.08995873452542], [1.719069E12, 80.0], [1.71906906E12, 80.0], [1.71906834E12, 80.0], [1.71906864E12, 80.0], [1.71906894E12, 80.0], [1.71906798E12, 29.95505617977529], [1.71906912E12, 80.0], [1.71906828E12, 80.0], [1.71906858E12, 80.0], [1.71906888E12, 80.0], [1.71906918E12, 78.87531261164696], [1.71906822E12, 80.0], [1.71906852E12, 80.0], [1.71906882E12, 80.0], [1.71906816E12, 80.0]], "isOverall": false, "label": "Directors by name D", "isController": false}, {"data": [[1.71906684E12, 19.336622807017548], [1.7190675E12, 20.0], [1.7190678E12, 20.0], [1.71906714E12, 20.0], [1.71906744E12, 20.0], [1.71906774E12, 20.0], [1.71906678E12, 7.753424657534245], [1.71906708E12, 20.0], [1.71906738E12, 20.0], [1.71906768E12, 20.0], [1.71906702E12, 20.0], [1.71906798E12, 19.728183118741057], [1.71906732E12, 20.0], [1.71906762E12, 20.0], [1.71906696E12, 20.0], [1.71906792E12, 20.0], [1.71906726E12, 20.0], [1.71906756E12, 20.0], [1.71906786E12, 20.0], [1.7190669E12, 20.0], [1.7190672E12, 20.0]], "isOverall": false, "label": "Directors by name C", "isController": false}, {"data": [[1.71906588E12, 10.0], [1.71906654E12, 10.0], [1.71906558E12, 4.1], [1.71906648E12, 10.0], [1.71906618E12, 10.0], [1.71906612E12, 10.0], [1.71906678E12, 9.870689655172411], [1.71906582E12, 10.0], [1.71906672E12, 10.0], [1.71906576E12, 10.0], [1.71906642E12, 10.0], [1.71906636E12, 10.0], [1.71906606E12, 10.0], [1.719066E12, 10.0], [1.71906666E12, 10.0], [1.7190657E12, 10.0], [1.7190666E12, 10.0], [1.71906564E12, 9.703947368421046], [1.7190663E12, 10.0], [1.71906624E12, 10.0], [1.71906594E12, 10.0]], "isOverall": false, "label": "Directors by name B", "isController": false}, {"data": [[1.71906492E12, 5.0], [1.71906456E12, 5.0], [1.71906558E12, 4.942857142857143], [1.71906462E12, 5.0], [1.71906552E12, 5.0], [1.71906522E12, 5.0], [1.7190645E12, 5.0], [1.71906516E12, 5.0], [1.7190648E12, 5.0], [1.71906486E12, 5.0], [1.71906546E12, 5.0], [1.71906474E12, 5.0], [1.7190654E12, 5.0], [1.7190651E12, 5.0], [1.71906504E12, 5.0], [1.71906444E12, 4.87878787878788], [1.71906534E12, 5.0], [1.71906438E12, 2.2272727272727266], [1.71906528E12, 5.0], [1.71906468E12, 5.0], [1.71906498E12, 5.0]], "isOverall": false, "label": "Directors by name A", "isController": false}, {"data": [[1.71907218E12, 400.0], [1.71907248E12, 400.0], [1.71907254E12, 400.0], [1.71907158E12, 146.22884012539177], [1.71907188E12, 400.0], [1.71907194E12, 400.0], [1.71907224E12, 400.0], [1.7190723E12, 400.0], [1.7190726E12, 400.0], [1.71907164E12, 384.70997397131123], [1.71907266E12, 400.0], [1.7190717E12, 400.0], [1.719072E12, 400.0], [1.71907206E12, 400.0], [1.71907236E12, 400.0], [1.71907242E12, 400.0], [1.71907272E12, 400.0], [1.71907176E12, 400.0], [1.71907278E12, 394.3475909187957], [1.71907182E12, 400.0], [1.71907212E12, 400.0]], "isOverall": false, "label": "Directors by name G", "isController": false}, {"data": [[1.71907056E12, 200.0], [1.71907122E12, 200.0], [1.71907152E12, 200.0], [1.71907092E12, 200.0], [1.71907158E12, 197.17487895186554], [1.71907062E12, 200.0], [1.71907098E12, 200.0], [1.71907128E12, 200.0], [1.71907068E12, 200.0], [1.71907134E12, 200.0], [1.71907038E12, 73.72222222222219], [1.71907104E12, 200.0], [1.71907074E12, 200.0], [1.71907044E12, 192.49425033171187], [1.7190711E12, 200.0], [1.7190714E12, 200.0], [1.7190708E12, 200.0], [1.71907146E12, 200.0], [1.7190705E12, 200.0], [1.71907086E12, 200.0], [1.71907116E12, 200.0]], "isOverall": false, "label": "Directors by name F", "isController": false}, {"data": [[1.7190696E12, 100.0], [1.71907026E12, 100.0], [1.7190693E12, 100.0], [1.71906996E12, 100.0], [1.71906966E12, 100.0], [1.71907032E12, 100.0], [1.71906936E12, 100.0], [1.71907002E12, 100.0], [1.71906972E12, 100.0], [1.71907038E12, 98.59127210496297], [1.71906942E12, 100.0], [1.71907008E12, 100.0], [1.71906978E12, 100.0], [1.71906948E12, 100.0], [1.71907014E12, 100.0], [1.71906918E12, 37.217522658610285], [1.71906984E12, 100.0], [1.71906954E12, 100.0], [1.7190702E12, 100.0], [1.71906924E12, 96.3199735741024], [1.7190699E12, 100.0]], "isOverall": false, "label": "Directors by name E", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71907278E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 41.18749999999999, "minX": 1.0, "maxY": 79.50000000000001, "series": [{"data": [[2.0, 67.42857142857142], [3.0, 54.00000000000001], [4.0, 60.73684210526318], [5.0, 55.42398469062311], [6.0, 55.06666666666666], [7.0, 54.87500000000001], [8.0, 58.47368421052632], [9.0, 57.39024390243903], [10.0, 51.60251491901094], [11.0, 55.86363636363636], [12.0, 57.00000000000001], [13.0, 55.79310344827586], [14.0, 57.655172413793096], [15.0, 53.80645161290324], [16.0, 52.11538461538463], [17.0, 56.28205128205127], [18.0, 58.50000000000001], [19.0, 53.92857142857141], [20.0, 49.59939164309719], [21.0, 62.39999999999999], [22.0, 60.714285714285715], [23.0, 59.10000000000001], [24.0, 60.42105263157895], [25.0, 55.526315789473685], [26.0, 58.826086956521735], [27.0, 54.40909090909091], [28.0, 54.09523809523808], [29.0, 51.173913043478265], [30.0, 55.00000000000001], [31.0, 56.91666666666668], [32.0, 60.875000000000014], [33.0, 56.83999999999999], [34.0, 56.33333333333333], [35.0, 52.03448275862068], [36.0, 51.24137931034484], [37.0, 51.8076923076923], [38.0, 49.774193548387096], [39.0, 52.612903225806456], [40.0, 54.516129032258064], [41.0, 51.36666666666666], [42.0, 55.65625], [43.0, 50.13888888888891], [44.0, 54.87499999999999], [45.0, 56.15625], [46.0, 50.27027027027027], [47.0, 51.28571428571426], [48.0, 48.138888888888886], [49.0, 47.77777777777777], [50.0, 49.921052631578945], [51.0, 49.84615384615385], [52.0, 51.24390243902439], [53.0, 49.24390243902441], [54.0, 51.18421052631579], [55.0, 48.68292682926829], [56.0, 50.88095238095238], [57.0, 47.58974358974359], [58.0, 50.560975609756106], [59.0, 49.977777777777774], [60.0, 52.76190476190476], [61.0, 49.61363636363637], [62.0, 52.51923076923076], [63.0, 49.21739130434783], [64.0, 48.170212765957466], [65.0, 48.045454545454554], [66.0, 48.379999999999995], [67.0, 48.07843137254903], [68.0, 50.660714285714285], [69.0, 48.071428571428584], [70.0, 51.60377358490567], [71.0, 52.711864406779675], [72.0, 51.415094339622655], [73.0, 49.381818181818176], [74.0, 51.89999999999999], [75.0, 51.965517241379295], [76.0, 49.1311475409836], [77.0, 52.000000000000014], [78.0, 48.36842105263158], [79.0, 47.13333333333334], [80.0, 47.990087782491884], [81.0, 46.89473684210525], [82.0, 52.10344827586206], [83.0, 51.94736842105263], [84.0, 49.0], [85.0, 51.735294117647065], [86.0, 50.64864864864863], [87.0, 48.65789473684208], [88.0, 51.17021276595745], [89.0, 50.270270270270245], [90.0, 50.090909090909115], [91.0, 48.59090909090907], [92.0, 46.999999999999986], [93.0, 47.70270270270271], [94.0, 45.97727272727273], [95.0, 51.45238095238097], [96.0, 48.333333333333336], [97.0, 47.604651162790695], [98.0, 60.363636363636374], [99.0, 45.66666666666667], [100.0, 48.65112504138173], [101.0, 47.22727272727273], [102.0, 48.44444444444445], [103.0, 50.94736842105264], [104.0, 46.65217391304347], [105.0, 51.76470588235293], [106.0, 54.0], [107.0, 66.18518518518516], [108.0, 54.099999999999994], [109.0, 52.095238095238095], [110.0, 49.25], [111.0, 49.44444444444444], [112.0, 46.64], [113.0, 52.916666666666664], [114.0, 48.64705882352941], [115.0, 47.52941176470589], [116.0, 49.173913043478265], [117.0, 48.68421052631579], [118.0, 49.96153846153845], [119.0, 49.8095238095238], [120.0, 51.08333333333332], [121.0, 47.85000000000001], [122.0, 51.499999999999986], [123.0, 50.28571428571429], [124.0, 55.75000000000001], [125.0, 52.45833333333333], [126.0, 55.71428571428572], [127.0, 51.10714285714285], [128.0, 54.352941176470594], [129.0, 49.18749999999999], [130.0, 45.91304347826087], [131.0, 50.63636363636363], [132.0, 48.879999999999995], [133.0, 50.095238095238095], [134.0, 46.56666666666668], [135.0, 50.60000000000001], [136.0, 48.782608695652186], [137.0, 45.999999999999986], [138.0, 54.59259259259261], [139.0, 50.608695652173914], [140.0, 64.80000000000001], [141.0, 56.766666666666694], [142.0, 51.42857142857142], [143.0, 50.56], [144.0, 54.57142857142856], [145.0, 53.3225806451613], [146.0, 53.26923076923078], [147.0, 58.78947368421052], [148.0, 57.03999999999999], [149.0, 50.44444444444445], [150.0, 47.96], [151.0, 49.906250000000014], [152.0, 49.99999999999999], [153.0, 51.363636363636374], [154.0, 54.999999999999986], [155.0, 50.27586206896553], [156.0, 52.29166666666667], [157.0, 49.62162162162162], [158.0, 46.68000000000001], [159.0, 49.129032258064505], [160.0, 54.11111111111111], [161.0, 50.20689655172414], [162.0, 54.71874999999999], [163.0, 53.06060606060608], [164.0, 50.88461538461539], [165.0, 53.48000000000001], [166.0, 52.83333333333334], [167.0, 53.228571428571406], [168.0, 53.96969696969699], [169.0, 55.3448275862069], [170.0, 49.035714285714285], [171.0, 50.90243902439025], [172.0, 49.20833333333335], [173.0, 56.89285714285714], [174.0, 62.684210526315795], [175.0, 55.600000000000016], [176.0, 50.53846153846153], [177.0, 52.94594594594594], [178.0, 55.11999999999999], [179.0, 61.83333333333333], [180.0, 51.41176470588237], [181.0, 50.23076923076922], [182.0, 55.25925925925926], [183.0, 49.304347826086946], [184.0, 46.6764705882353], [185.0, 51.027027027027025], [186.0, 46.86111111111112], [187.0, 46.027777777777764], [188.0, 57.5], [189.0, 49.97142857142856], [190.0, 53.806451612903224], [191.0, 52.333333333333336], [192.0, 51.2972972972973], [193.0, 56.21052631578947], [194.0, 49.424242424242394], [195.0, 44.61290322580645], [196.0, 47.88372093023256], [197.0, 46.74193548387096], [198.0, 48.935483870967744], [199.0, 47.65116279069767], [200.0, 48.54818086651956], [201.0, 49.923076923076934], [202.0, 51.54545454545455], [203.0, 44.00000000000001], [204.0, 54.909090909090914], [205.0, 49.66666666666666], [206.0, 53.099999999999994], [207.0, 53.333333333333336], [208.0, 61.70000000000001], [209.0, 54.73333333333333], [210.0, 43.555555555555564], [211.0, 45.63636363636363], [212.0, 58.312500000000014], [213.0, 53.66666666666667], [214.0, 59.25], [215.0, 57.199999999999996], [216.0, 48.375], [217.0, 49.16666666666668], [218.0, 49.083333333333336], [219.0, 51.42857142857141], [220.0, 41.18749999999999], [221.0, 52.58823529411765], [222.0, 47.41666666666667], [223.0, 48.84615384615385], [224.0, 49.61538461538461], [225.0, 45.421052631578945], [226.0, 47.18181818181817], [227.0, 45.57142857142858], [228.0, 49.375], [229.0, 46.00000000000001], [230.0, 50.571428571428584], [231.0, 43.27272727272727], [232.0, 46.82352941176472], [233.0, 46.8888888888889], [234.0, 46.8], [235.0, 44.46153846153845], [236.0, 47.5625], [237.0, 44.8125], [238.0, 49.214285714285715], [239.0, 49.86666666666667], [240.0, 46.46153846153847], [241.0, 43.681818181818166], [242.0, 49.785714285714285], [243.0, 43.111111111111114], [244.0, 46.800000000000004], [245.0, 45.285714285714285], [246.0, 51.76190476190475], [247.0, 52.38461538461539], [248.0, 53.75000000000001], [249.0, 47.619047619047606], [250.0, 47.000000000000014], [251.0, 52.266666666666666], [252.0, 56.52941176470588], [253.0, 45.882352941176464], [254.0, 47.42857142857144], [255.0, 49.33333333333333], [257.0, 44.93333333333333], [256.0, 43.5], [258.0, 48.40909090909091], [259.0, 46.42857142857143], [260.0, 43.0], [261.0, 45.5625], [262.0, 47.6111111111111], [263.0, 46.99999999999999], [264.0, 43.4], [270.0, 46.84000000000001], [271.0, 45.42857142857143], [268.0, 50.63636363636363], [269.0, 51.22222222222223], [265.0, 47.64705882352941], [266.0, 47.22727272727273], [267.0, 47.00000000000002], [273.0, 45.333333333333336], [272.0, 48.0625], [274.0, 51.875], [275.0, 53.809523809523796], [276.0, 46.76923076923077], [277.0, 46.357142857142854], [278.0, 44.93333333333333], [279.0, 53.80000000000001], [280.0, 55.214285714285715], [286.0, 49.095238095238095], [287.0, 50.4375], [284.0, 47.06249999999999], [285.0, 42.88235294117647], [281.0, 60.352941176470594], [282.0, 55.76190476190477], [283.0, 50.69999999999999], [289.0, 47.33333333333333], [288.0, 48.79999999999998], [290.0, 50.99999999999999], [291.0, 50.523809523809526], [292.0, 45.44444444444444], [293.0, 49.71428571428572], [294.0, 54.266666666666666], [295.0, 56.70588235294117], [296.0, 53.35000000000001], [302.0, 44.599999999999994], [303.0, 45.909090909090914], [300.0, 45.54166666666667], [301.0, 48.31818181818182], [297.0, 49.86666666666667], [298.0, 47.50000000000001], [299.0, 44.68749999999999], [305.0, 47.85], [304.0, 51.125], [306.0, 45.00000000000001], [307.0, 46.64285714285714], [308.0, 46.46153846153846], [309.0, 50.941176470588246], [310.0, 44.53846153846154], [311.0, 46.368421052631575], [312.0, 55.357142857142854], [318.0, 48.38095238095237], [319.0, 47.04999999999999], [316.0, 45.18181818181819], [317.0, 50.9], [313.0, 65.85714285714286], [314.0, 52.0], [315.0, 49.318181818181806], [321.0, 45.76470588235294], [320.0, 53.0], [322.0, 47.63636363636364], [323.0, 47.60000000000001], [324.0, 49.28571428571428], [325.0, 46.21739130434782], [326.0, 47.882352941176464], [327.0, 48.705882352941174], [328.0, 41.64705882352941], [334.0, 51.30434782608697], [335.0, 50.315789473684234], [332.0, 52.09090909090908], [333.0, 49.166666666666664], [329.0, 48.46153846153847], [330.0, 47.56000000000001], [331.0, 47.160000000000004], [337.0, 55.68], [336.0, 48.63636363636364], [338.0, 50.15789473684211], [339.0, 46.80000000000001], [340.0, 45.22222222222223], [341.0, 54.66666666666668], [342.0, 52.523809523809526], [343.0, 46.187500000000014], [344.0, 48.54545454545455], [350.0, 50.4375], [351.0, 47.22222222222223], [348.0, 68.6086956521739], [349.0, 60.6857142857143], [345.0, 58.00000000000001], [346.0, 55.18750000000001], [347.0, 68.61111111111111], [353.0, 45.57142857142858], [352.0, 50.52173913043478], [354.0, 44.60869565217392], [355.0, 43.1304347826087], [356.0, 46.333333333333336], [357.0, 45.05555555555556], [358.0, 47.449999999999996], [359.0, 46.30769230769232], [360.0, 44.21428571428572], [366.0, 49.36363636363637], [367.0, 47.703703703703695], [364.0, 42.90624999999999], [365.0, 48.27272727272728], [361.0, 48.96153846153846], [362.0, 46.416666666666664], [363.0, 46.31578947368421], [369.0, 45.54166666666666], [368.0, 48.434782608695656], [370.0, 46.38095238095237], [371.0, 47.428571428571445], [372.0, 45.69565217391305], [373.0, 45.82608695652174], [374.0, 46.72222222222222], [375.0, 52.629629629629626], [376.0, 46.81818181818182], [382.0, 51.45], [383.0, 62.3125], [380.0, 47.130434782608695], [381.0, 49.000000000000014], [377.0, 47.33333333333333], [378.0, 45.160000000000004], [379.0, 48.88235294117647], [385.0, 45.521739130434796], [384.0, 47.42857142857143], [386.0, 43.409090909090914], [387.0, 47.84615384615384], [388.0, 46.20833333333334], [389.0, 46.71999999999999], [390.0, 46.04166666666668], [391.0, 48.0], [392.0, 45.51515151515151], [398.0, 45.959999999999994], [399.0, 48.83870967741936], [396.0, 47.199999999999996], [397.0, 51.56666666666667], [393.0, 45.222222222222214], [394.0, 46.39130434782609], [395.0, 45.83333333333333], [400.0, 52.13420624122898], [1.0, 79.50000000000001]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[264.79740262094055, 50.37393216918392]], "isOverall": false, "label": "Directors by name-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 400.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 117.03333333333333, "minX": 1.71906438E12, "maxY": 836882.9333333333, "series": [{"data": [[1.71907218E12, 794308.6], [1.71906654E12, 19374.533333333333], [1.71906876E12, 153188.66666666666], [1.71906552E12, 10005.366666666667], [1.71906996E12, 191567.9], [1.7190645E12, 9621.066666666668], [1.71906774E12, 38080.63333333333], [1.71907098E12, 399309.5333333333], [1.71906672E12, 19843.7], [1.71906894E12, 150155.8], [1.71906912E12, 152451.3], [1.71907014E12, 187084.06666666668], [1.71907236E12, 759208.3], [1.7190657E12, 19076.2], [1.71906792E12, 39070.13333333333], [1.71906468E12, 9959.766666666666], [1.7190669E12, 37959.86666666667], [1.71907116E12, 380834.3333333333], [1.71906588E12, 19599.2], [1.7190693E12, 186283.86666666667], [1.71907152E12, 379795.9666666667], [1.7190681E12, 149189.3], [1.71907254E12, 743784.8], [1.71907032E12, 190628.83333333334], [1.71906486E12, 10215.366666666667], [1.71906708E12, 38799.36666666667], [1.71907134E12, 373394.5], [1.7190717E12, 738451.5666666667], [1.71906606E12, 20550.633333333335], [1.71906828E12, 151061.3], [1.71906504E12, 10450.666666666666], [1.71906948E12, 189072.7], [1.71906726E12, 40090.23333333333], [1.7190705E12, 370752.9666666667], [1.71907272E12, 759394.0], [1.71906624E12, 20827.5], [1.71906846E12, 158497.73333333334], [1.71906522E12, 10275.866666666667], [1.71906744E12, 41225.566666666666], [1.71906966E12, 197447.83333333334], [1.71907188E12, 747058.2], [1.71907068E12, 375152.06666666665], [1.71906642E12, 20331.9], [1.71906864E12, 160790.76666666666], [1.71907104E12, 399756.36666666664], [1.7190654E12, 9716.933333333332], [1.71906762E12, 39895.4], [1.71907206E12, 786139.8], [1.7190666E12, 19385.333333333332], [1.71906984E12, 201235.8], [1.71906438E12, 893.9666666666667], [1.71906882E12, 156111.33333333334], [1.71907086E12, 392867.6666666667], [1.71907122E12, 388599.63333333336], [1.71906456E12, 10130.166666666666], [1.71906558E12, 8779.633333333333], [1.7190678E12, 37770.1], [1.71906678E12, 16958.566666666666], [1.719069E12, 148423.4], [1.71907224E12, 797761.1333333333], [1.71907002E12, 194812.8], [1.71906576E12, 19875.7], [1.71906474E12, 9646.066666666668], [1.71906798E12, 38139.76666666667], [1.71906696E12, 39003.26666666667], [1.71906918E12, 121204.46666666666], [1.7190714E12, 368342.9], [1.71907242E12, 769933.7333333333], [1.7190702E12, 184719.43333333332], [1.71906594E12, 19562.933333333334], [1.71906816E12, 152703.9], [1.71907056E12, 380029.7], [1.71906492E12, 10361.233333333334], [1.71906714E12, 38531.1], [1.71907158E12, 318868.9666666667], [1.71906612E12, 20591.666666666668], [1.71906936E12, 190738.6], [1.71906834E12, 149972.9], [1.71907038E12, 160228.4], [1.7190726E12, 733491.6333333333], [1.71907074E12, 372880.4666666667], [1.7190651E12, 10100.133333333333], [1.71906732E12, 40832.96666666667], [1.7190663E12, 20067.866666666665], [1.71906852E12, 158839.56666666668], [1.71906954E12, 187147.8], [1.71907176E12, 756637.3], [1.71907278E12, 540166.8333333334], [1.71906528E12, 10610.833333333334], [1.7190675E12, 39609.96666666667], [1.71906648E12, 20976.2], [1.71907092E12, 393600.5333333333], [1.7190687E12, 154328.43333333332], [1.71907194E12, 741493.6666666666], [1.71906972E12, 196582.96666666667], [1.71906546E12, 9695.166666666666], [1.71906768E12, 41137.36666666667], [1.71907008E12, 199226.16666666666], [1.71906444E12, 9399.066666666668], [1.71906666E12, 19792.366666666665], [1.71906888E12, 160238.03333333333], [1.7190711E12, 384952.8], [1.71906564E12, 18206.233333333334], [1.71906786E12, 38886.4], [1.7190699E12, 193445.8], [1.71907212E12, 780889.1333333333], [1.71906684E12, 36156.23333333333], [1.71907026E12, 189891.5], [1.71907248E12, 796583.3], [1.71906462E12, 10233.633333333333], [1.7190648E12, 11191.733333333334], [1.71906804E12, 141401.93333333332], [1.71906582E12, 20137.733333333334], [1.71906906E12, 152278.8], [1.71907128E12, 399464.36666666664], [1.7190723E12, 769453.2], [1.71907266E12, 748873.2333333333], [1.71906702E12, 39940.0], [1.719066E12, 21855.266666666666], [1.71907044E12, 349579.9], [1.71906822E12, 156326.96666666667], [1.71907146E12, 377442.8], [1.71906924E12, 176303.36666666667], [1.71906498E12, 10334.5], [1.7190672E12, 43387.4], [1.7190696E12, 211645.6], [1.71906618E12, 20943.266666666666], [1.7190684E12, 169486.93333333332], [1.71907062E12, 389330.3333333333], [1.71906516E12, 10048.733333333334], [1.71906738E12, 41236.53333333333], [1.71906942E12, 194952.43333333332], [1.71907164E12, 696434.2333333333], [1.71906636E12, 19928.8], [1.71906978E12, 200524.43333333332], [1.719072E12, 836882.9333333333], [1.71906858E12, 161342.4], [1.7190708E12, 421638.76666666666], [1.71906534E12, 9735.9], [1.71906756E12, 39367.36666666667], [1.71907182E12, 771029.6333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71907218E12, 102126.3], [1.71906654E12, 2558.266666666667], [1.71906876E12, 20525.866666666665], [1.71906552E12, 1281.4666666666667], [1.71906996E12, 25709.933333333334], [1.7190645E12, 1267.2666666666667], [1.71906774E12, 5109.433333333333], [1.71907098E12, 51296.1], [1.71906672E12, 2563.3333333333335], [1.71906894E12, 20438.8], [1.71906912E12, 20500.3], [1.71907014E12, 25508.233333333334], [1.71907236E12, 102477.13333333333], [1.7190657E12, 2551.5], [1.71906792E12, 5111.4], [1.71906468E12, 1269.5333333333333], [1.7190669E12, 5117.8], [1.71907116E12, 51301.9], [1.71906588E12, 2539.1], [1.7190693E12, 25637.966666666667], [1.71907152E12, 51314.26666666667], [1.7190681E12, 20493.8], [1.71907254E12, 101950.03333333334], [1.71907032E12, 25653.466666666667], [1.71906486E12, 1269.0333333333333], [1.71906708E12, 5083.333333333333], [1.71907134E12, 51106.4], [1.7190717E12, 102191.93333333333], [1.71906606E12, 2565.4333333333334], [1.71906828E12, 20306.5], [1.71906504E12, 1276.7], [1.71906948E12, 25464.1], [1.71906726E12, 5093.333333333333], [1.7190705E12, 51212.3], [1.71907272E12, 102309.5], [1.71906624E12, 2549.0], [1.71906846E12, 20577.533333333333], [1.71906522E12, 1282.5], [1.71906744E12, 5128.966666666666], [1.71906966E12, 25670.8], [1.71907188E12, 101018.5], [1.71907068E12, 50715.566666666666], [1.71906642E12, 2554.7], [1.71906864E12, 20553.933333333334], [1.71907104E12, 51317.76666666667], [1.7190654E12, 1270.7666666666667], [1.71906762E12, 5128.733333333334], [1.71907206E12, 102498.93333333333], [1.7190666E12, 2563.5333333333333], [1.71906984E12, 25730.4], [1.71906438E12, 117.03333333333333], [1.71906882E12, 20516.033333333333], [1.71907086E12, 51232.3], [1.71907122E12, 51399.0], [1.71906456E12, 1288.1666666666667], [1.71906558E12, 1143.9], [1.7190678E12, 5130.0], [1.71906678E12, 2240.2], [1.719069E12, 20570.5], [1.71907224E12, 102444.53333333334], [1.71907002E12, 25654.5], [1.71906576E12, 2549.233333333333], [1.71906474E12, 1278.0333333333333], [1.71906798E12, 5141.066666666667], [1.71906696E12, 5125.6], [1.71906918E12, 16654.533333333333], [1.7190714E12, 51337.63333333333], [1.71907242E12, 102578.26666666666], [1.7190702E12, 25643.3], [1.71906594E12, 2560.4], [1.71906816E12, 20539.366666666665], [1.71907056E12, 51423.73333333333], [1.71906492E12, 1275.2], [1.71906714E12, 5121.833333333333], [1.71907158E12, 44150.76666666667], [1.71906612E12, 2545.366666666667], [1.71906936E12, 25698.0], [1.71906834E12, 20461.0], [1.71907038E12, 22104.333333333332], [1.7190726E12, 102400.46666666666], [1.71907074E12, 51191.36666666667], [1.7190651E12, 1271.0333333333333], [1.71906732E12, 5106.433333333333], [1.7190663E12, 2546.6], [1.71906852E12, 20463.7], [1.71906954E12, 25594.933333333334], [1.71907176E12, 102614.13333333333], [1.71907278E12, 74748.66666666667], [1.71906528E12, 1277.0666666666666], [1.7190675E12, 5104.0], [1.71906648E12, 2554.1666666666665], [1.71907092E12, 51054.53333333333], [1.7190687E12, 20463.2], [1.71907194E12, 101962.33333333333], [1.71906972E12, 25330.666666666668], [1.71906546E12, 1250.7666666666667], [1.71906768E12, 5120.166666666667], [1.71907008E12, 25440.9], [1.71906444E12, 1237.7], [1.71906666E12, 2558.6], [1.71906888E12, 20437.833333333332], [1.7190711E12, 51287.73333333333], [1.71906564E12, 2442.9333333333334], [1.71906786E12, 5125.766666666666], [1.7190699E12, 25710.4], [1.71907212E12, 101851.13333333333], [1.71906684E12, 4886.266666666666], [1.71907026E12, 25674.333333333332], [1.71907248E12, 101781.1], [1.71906462E12, 1271.5], [1.7190648E12, 1273.3], [1.71906804E12, 19473.966666666667], [1.71906582E12, 2580.6666666666665], [1.71906906E12, 20546.3], [1.71907128E12, 51226.86666666667], [1.7190723E12, 102512.53333333334], [1.71907266E12, 102546.9], [1.71906702E12, 5119.0], [1.719066E12, 2535.8333333333335], [1.71907044E12, 48451.73333333333], [1.71906822E12, 20545.0], [1.71907146E12, 51265.2], [1.71906924E12, 24327.566666666666], [1.71906498E12, 1277.6333333333334], [1.7190672E12, 5129.3], [1.7190696E12, 25612.366666666665], [1.71906618E12, 2564.9666666666667], [1.7190684E12, 20478.7], [1.71907062E12, 51440.2], [1.71906516E12, 1276.8], [1.71906738E12, 5146.966666666666], [1.71906942E12, 25663.633333333335], [1.71907164E12, 96735.56666666667], [1.71906636E12, 2563.8333333333335], [1.71906978E12, 25722.0], [1.719072E12, 102084.4], [1.71906858E12, 20612.633333333335], [1.7190708E12, 51237.666666666664], [1.71906534E12, 1265.4333333333334], [1.71906756E12, 5129.233333333334], [1.71907182E12, 102143.36666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71907278E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 46.504362276692895, "minX": 1.71906438E12, "maxY": 82.31196581196579, "series": [{"data": [[1.71907218E12, 52.74011092507319], [1.71906654E12, 50.54261954261954], [1.71906876E12, 47.41864097891172], [1.71906552E12, 53.466666666666654], [1.71906996E12, 48.95281646227413], [1.7190645E12, 53.382352941176485], [1.71906774E12, 47.407908428720106], [1.71907098E12, 47.71965829773907], [1.71906672E12, 50.695833333333326], [1.71906894E12, 49.04604578563987], [1.71906912E12, 51.02657634184474], [1.71907014E12, 48.924327704815724], [1.71907236E12, 50.568004168838456], [1.7190657E12, 52.6367432150313], [1.71906792E12, 49.95297805642629], [1.71906468E12, 53.070833333333375], [1.7190669E12, 48.0686784599375], [1.71907116E12, 49.90720683191004], [1.71906588E12, 49.50833333333333], [1.7190693E12, 46.87702534275025], [1.71907152E12, 49.424690329967994], [1.7190681E12, 47.57718295218303], [1.71907254E12, 51.73811387714617], [1.71907032E12, 49.110139496148285], [1.71906486E12, 54.80252100840337], [1.71906708E12, 48.64203954214357], [1.71907134E12, 48.02039542143607], [1.7190717E12, 51.57176360225107], [1.71906606E12, 50.557172557172585], [1.71906828E12, 47.69887991664481], [1.71906504E12, 53.39330543933058], [1.71906948E12, 46.504362276692895], [1.71906726E12, 50.025130890052424], [1.7190705E12, 47.99168053244616], [1.71907272E12, 55.2995877472212], [1.71906624E12, 53.08176100628931], [1.71906846E12, 46.7169517884915], [1.71906522E12, 54.8875], [1.71906744E12, 49.43541666666673], [1.71906966E12, 48.01080407230399], [1.71907188E12, 56.27664921465974], [1.71907068E12, 48.82770129328361], [1.71906642E12, 51.42050209205025], [1.71906864E12, 46.58305172861978], [1.71907104E12, 48.89859448204074], [1.7190654E12, 54.18487394957984], [1.71906762E12, 49.30520833333324], [1.71907206E12, 52.01540783925867], [1.7190666E12, 50.54791666666668], [1.71906984E12, 47.79962624584699], [1.71906438E12, 80.22727272727273], [1.71906882E12, 47.47149179901059], [1.71907086E12, 48.47870900572605], [1.71907122E12, 47.73586278586265], [1.71906456E12, 53.71369294605806], [1.71906558E12, 55.74883720930232], [1.7190678E12, 50.64895833333318], [1.71906678E12, 51.21377672209031], [1.719069E12, 47.73447648739925], [1.71907224E12, 51.77528031290773], [1.71907002E12, 49.95481990422642], [1.71906576E12, 53.23060796645699], [1.71906474E12, 52.24166666666665], [1.71906798E12, 51.24327122153213], [1.71906696E12, 48.82273201251299], [1.71906918E12, 49.72875399361018], [1.7190714E12, 48.24542048293075], [1.71907242E12, 51.30662565813502], [1.7190702E12, 49.538237132736086], [1.71906594E12, 50.166320166320155], [1.71906816E12, 47.89253187613856], [1.71907056E12, 48.71468662301249], [1.71906492E12, 54.7208333333333], [1.71906714E12, 49.056133056133], [1.71907158E12, 49.62979031091841], [1.71906612E12, 55.82254697286013], [1.71906936E12, 47.397046589018196], [1.71906834E12, 48.521207390059864], [1.71907038E12, 50.95714973519495], [1.7190726E12, 50.83613993013928], [1.71907074E12, 48.089443577743225], [1.7190651E12, 55.10924369747897], [1.71906732E12, 50.27471383975032], [1.7190663E12, 51.10691823899374], [1.71906852E12, 47.25499870163595], [1.71906954E12, 47.494487206157594], [1.71907176E12, 51.24429628086269], [1.71907278E12, 50.88100491068258], [1.71906528E12, 56.45416666666667], [1.7190675E12, 52.51882845188284], [1.71906648E12, 53.98958333333334], [1.71907092E12, 48.62656119900086], [1.7190687E12, 51.901643621184554], [1.71907194E12, 51.419934213961334], [1.71906972E12, 55.54457730228663], [1.71906546E12, 82.31196581196579], [1.71906768E12, 48.69022869022859], [1.71907008E12, 51.731799163179836], [1.71906444E12, 52.190476190476126], [1.71906666E12, 50.484342379958235], [1.71906888E12, 46.87369791666679], [1.7190711E12, 48.72551264702814], [1.71906564E12, 53.42324561403509], [1.71906786E12, 52.24374999999998], [1.7190699E12, 46.74605481727589], [1.71907212E12, 51.2369848721961], [1.71906684E12, 47.929824561403485], [1.71907026E12, 49.92721979621542], [1.71907248E12, 51.79125071865378], [1.71906462E12, 51.079831932773075], [1.7190648E12, 53.50209205020923], [1.71906804E12, 47.12984869325986], [1.71906582E12, 49.32298136645968], [1.71906906E12, 46.92647440893737], [1.71907128E12, 47.978807396634224], [1.7190723E12, 52.35996250390595], [1.71907266E12, 51.63062171035491], [1.71906702E12, 49.99582463465554], [1.719066E12, 51.5189075630252], [1.71907044E12, 49.71141088014113], [1.71906822E12, 47.22548764629391], [1.71907146E12, 49.59737554676136], [1.71906924E12, 46.60074873375896], [1.71906498E12, 55.31799163179917], [1.7190672E12, 49.715472481827646], [1.7190696E12, 47.37991266375537], [1.71906618E12, 53.77916666666664], [1.7190684E12, 47.620806241872614], [1.71907062E12, 47.7871611093799], [1.71906516E12, 54.48953974895401], [1.71906738E12, 49.0737279335411], [1.71906942E12, 47.54278575890066], [1.71907164E12, 51.51802625020757], [1.71906636E12, 49.73541666666665], [1.71906978E12, 47.02493247454791], [1.719072E12, 52.715567612687494], [1.71906858E12, 48.178117708063354], [1.7190708E12, 48.10446985446963], [1.71906534E12, 55.65546218487397], [1.71906756E12, 50.13437500000008], [1.71907182E12, 52.92722611698231]], "isOverall": false, "label": "Directors by name", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71907278E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 46.50290818446194, "minX": 1.71906438E12, "maxY": 82.3076923076923, "series": [{"data": [[1.71907218E12, 52.71107157806598], [1.71906654E12, 50.54261954261954], [1.71906876E12, 47.41785993230943], [1.71906552E12, 53.46249999999997], [1.71906996E12, 48.94990646435251], [1.7190645E12, 53.36134453781507], [1.71906774E12, 47.406867845993766], [1.71907098E12, 47.6953849359306], [1.71906672E12, 50.575], [1.71906894E12, 49.045265348595166], [1.71906912E12, 51.020844189682], [1.71907014E12, 48.918490723368706], [1.71907236E12, 50.56013548723313], [1.7190657E12, 52.6367432150313], [1.71906792E12, 49.945663531870466], [1.71906468E12, 53.070833333333375], [1.7190669E12, 48.0676378772112], [1.71907116E12, 49.83940845657149], [1.71906588E12, 49.50624999999997], [1.7190693E12, 46.8757789779809], [1.71907152E12, 49.41500988862279], [1.7190681E12, 47.56262993763005], [1.71907254E12, 51.73195553467966], [1.71907032E12, 49.103060587133136], [1.71906486E12, 54.80252100840337], [1.71906708E12, 48.640998959417225], [1.71907134E12, 48.01758584807451], [1.7190717E12, 51.56879299562216], [1.71906606E12, 50.553014553014584], [1.71906828E12, 47.69549361812977], [1.71906504E12, 53.38493723849374], [1.71906948E12, 46.50290818446194], [1.71906726E12, 50.01780104712039], [1.7190705E12, 47.98918469217975], [1.71907272E12, 55.08646871575462], [1.71906624E12, 53.079664570230634], [1.71906846E12, 46.69984447900465], [1.71906522E12, 54.883333333333276], [1.71906744E12, 49.415625], [1.71906966E12, 48.00685643050073], [1.71907188E12, 56.2694764397904], [1.71907068E12, 48.822069253233266], [1.71906642E12, 51.42050209205025], [1.71906864E12, 46.57681310111773], [1.71907104E12, 48.88662155127524], [1.7190654E12, 54.18487394957984], [1.71906762E12, 49.29479166666663], [1.71907206E12, 51.99854250169208], [1.7190666E12, 50.54583333333336], [1.71906984E12, 47.79049003322271], [1.71906438E12, 80.18181818181819], [1.71906882E12, 47.46107784431148], [1.71907086E12, 48.46892243623146], [1.71907122E12, 47.722972972973196], [1.71906456E12, 53.70539419087135], [1.71906558E12, 55.7395348837209], [1.7190678E12, 50.64895833333318], [1.71906678E12, 51.21140142517814], [1.719069E12, 47.73395687191475], [1.71907224E12, 51.7598956975231], [1.71907002E12, 49.9431605246723], [1.71906576E12, 53.23060796645699], [1.71906474E12, 52.23749999999997], [1.71906798E12, 51.24223602484467], [1.71906696E12, 48.81751824817515], [1.71906918E12, 49.72715654952086], [1.7190714E12, 48.24250624479595], [1.71907242E12, 51.291508106135666], [1.7190702E12, 49.536986872265125], [1.71906594E12, 50.16424116424119], [1.71906816E12, 47.890450169138695], [1.71907056E12, 48.709801475937965], [1.71906492E12, 54.56249999999997], [1.71906714E12, 49.056133056133], [1.71907158E12, 49.62870571221983], [1.71906612E12, 55.79749478079337], [1.71906936E12, 47.3939267886856], [1.71906834E12, 48.51912568306007], [1.71907038E12, 50.956186807895975], [1.7190726E12, 50.83327250925416], [1.71907074E12, 48.08642745709844], [1.7190651E12, 55.105042016806735], [1.71906732E12, 50.26222684703441], [1.7190663E12, 51.10691823899374], [1.71906852E12, 47.23578291352889], [1.71906954E12, 47.492822966507255], [1.71907176E12, 51.23622252317962], [1.71907278E12, 50.878442815458136], [1.71906528E12, 56.45416666666667], [1.7190675E12, 52.51882845188284], [1.71906648E12, 53.987499999999926], [1.71907092E12, 48.59138218151543], [1.7190687E12, 51.79337333681201], [1.71907194E12, 51.41617501174719], [1.71906972E12, 55.51646737990353], [1.71906546E12, 82.3076923076923], [1.71906768E12, 48.688149688149664], [1.71907008E12, 51.71945606694558], [1.71906444E12, 52.16883116883116], [1.71906666E12, 50.48016701461379], [1.71906888E12, 46.86041666666671], [1.7190711E12, 48.714895388778984], [1.71906564E12, 53.42105263157894], [1.71906786E12, 52.24270833333332], [1.7190699E12, 46.73608803986707], [1.71907212E12, 51.214553990610455], [1.71906684E12, 47.924342105263115], [1.71907026E12, 49.92014971927626], [1.71907248E12, 51.77191240265515], [1.71906462E12, 51.06722689075629], [1.7190648E12, 53.49790794979077], [1.71906804E12, 47.128473177441506], [1.71906582E12, 49.32298136645968], [1.71906906E12, 46.923616523772345], [1.71907128E12, 47.96415956783691], [1.7190723E12, 52.34475575460891], [1.71907266E12, 51.62608786283821], [1.71906702E12, 49.994780793319364], [1.719066E12, 51.510504201680675], [1.71907044E12, 49.70953118089337], [1.71906822E12, 47.219765929779015], [1.71907146E12, 49.59320974796934], [1.71906924E12, 46.600528517947446], [1.71906498E12, 55.2970711297071], [1.7190672E12, 49.712357217030174], [1.7190696E12, 47.35579122478688], [1.71906618E12, 53.758333333333205], [1.7190684E12, 47.58127438231463], [1.71907062E12, 47.78092863820499], [1.71906516E12, 54.48953974895401], [1.71906738E12, 49.05815160955349], [1.71906942E12, 47.53653966271095], [1.71907164E12, 51.51581104280894], [1.71906636E12, 49.73541666666665], [1.71906978E12, 47.00664865987948], [1.719072E12, 52.67576168614337], [1.71906858E12, 48.07285455016841], [1.7190708E12, 48.080041580041765], [1.71906534E12, 55.651260504201666], [1.71906756E12, 50.12916666666673], [1.71907182E12, 52.913623522026064]], "isOverall": false, "label": "Directors by name", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71907278E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.630252100840336, "minX": 1.71906438E12, "maxY": 5.363636363636363, "series": [{"data": [[1.71907218E12, 0.7523545416492264], [1.71906654E12, 0.7359667359667358], [1.71906876E12, 0.7659463681333029], [1.71906552E12, 0.7916666666666657], [1.71906996E12, 0.7489087507794641], [1.7190645E12, 0.764705882352941], [1.71906774E12, 0.7866805411030175], [1.71907098E12, 0.6984060839670805], [1.71906672E12, 0.7770833333333333], [1.71906894E12, 0.7489594172736732], [1.71906912E12, 0.8397602918186576], [1.71907014E12, 0.7515113612674548], [1.71907236E12, 0.7227201667535235], [1.7190657E12, 0.7244258872651363], [1.71906792E12, 0.7419017763845358], [1.71906468E12, 0.7666666666666664], [1.7190669E12, 0.7513007284079087], [1.71907116E12, 0.7427619245990459], [1.71906588E12, 0.770833333333334], [1.7190693E12, 0.749065226422937], [1.71907152E12, 0.754970334131354], [1.7190681E12, 0.7294698544698556], [1.71907254E12, 0.7881112676791385], [1.71907032E12, 0.7501561524047446], [1.71906486E12, 0.7352941176470595], [1.71906708E12, 0.76378772112383], [1.71907134E12, 0.7505723204994825], [1.7190717E12, 0.7319157806962686], [1.71906606E12, 0.7380457380457385], [1.71906828E12, 0.7337848398020297], [1.71906504E12, 0.7364016736401673], [1.71906948E12, 0.7270461154964662], [1.71906726E12, 0.7026178010471202], [1.7190705E12, 0.7211938435940087], [1.71907272E12, 0.7427855763711351], [1.71906624E12, 0.6897274633123696], [1.71906846E12, 0.6969932607568687], [1.71906522E12, 0.7333333333333333], [1.71906744E12, 0.7520833333333341], [1.71906966E12, 0.7400789528360692], [1.71907188E12, 0.7667015706806292], [1.71907068E12, 0.733416770963706], [1.71906642E12, 0.7531380753138078], [1.71906864E12, 0.7023654795944866], [1.71907104E12, 0.7342009370119702], [1.7190654E12, 0.7521008403361341], [1.71906762E12, 0.837499999999999], [1.71907206E12, 0.7506116287543569], [1.7190666E12, 0.7312499999999996], [1.71906984E12, 0.7556063122923574], [1.71906438E12, 5.363636363636363], [1.71906882E12, 0.7646446237958852], [1.71907086E12, 0.7460697553357638], [1.71907122E12, 0.7183991683991678], [1.71906456E12, 0.7219917012448132], [1.71906558E12, 1.4697674418604643], [1.7190678E12, 0.8260416666666675], [1.71906678E12, 1.5938242280285035], [1.719069E12, 0.753442452585086], [1.71907224E12, 0.7571838331160311], [1.71907002E12, 0.7601499063085568], [1.71906576E12, 0.8134171907756813], [1.71906474E12, 0.7416666666666668], [1.71906798E12, 2.1252587991718417], [1.71906696E12, 0.7372262773722624], [1.71906918E12, 1.4194888178913734], [1.7190714E12, 0.7381348875936709], [1.71907242E12, 0.7339310848146762], [1.7190702E12, 0.7687018128776831], [1.71906594E12, 0.7775467775467768], [1.71906816E12, 0.7319802237835024], [1.71907056E12, 0.7261199459515666], [1.71906492E12, 0.7500000000000004], [1.71906714E12, 0.7661122661122657], [1.71907158E12, 1.6702819956616124], [1.71906612E12, 1.348643006263048], [1.71906936E12, 0.7125623960066537], [1.71906834E12, 0.7585219880301848], [1.71907038E12, 1.692344727973035], [1.7190726E12, 0.7386997549658556], [1.71907074E12, 0.7233489339573633], [1.7190651E12, 0.7605042016806722], [1.71906732E12, 0.701352757544226], [1.7190663E12, 0.7358490566037732], [1.71906852E12, 0.7359127499350807], [1.71906954E12, 0.7489078427293506], [1.71907176E12, 0.7609646838212304], [1.71907278E12, 0.8485517045050113], [1.71906528E12, 0.9083333333333339], [1.7190675E12, 0.7771966527196672], [1.71906648E12, 0.7312499999999992], [1.71907092E12, 0.7345961698584517], [1.7190687E12, 0.7438038090268642], [1.71907194E12, 0.7499608416436003], [1.71906972E12, 0.9032934759807023], [1.71906546E12, 0.8162393162393167], [1.71906768E12, 0.7754677754677762], [1.71907008E12, 0.761297071129704], [1.71906444E12, 0.8787878787878795], [1.71906666E12, 0.7348643006263054], [1.71906888E12, 0.7195312499999994], [1.7190711E12, 0.7364421775788499], [1.71906564E12, 0.7807017543859643], [1.71906786E12, 0.7791666666666673], [1.7190699E12, 0.7360880398671101], [1.71907212E12, 0.740323422013566], [1.71906684E12, 0.7478070175438588], [1.71907026E12, 0.7521314202536886], [1.71907248E12, 0.7538807296294364], [1.71906462E12, 0.630252100840336], [1.7190648E12, 0.7447698744769878], [1.71906804E12, 0.7628610729023406], [1.71906582E12, 0.7225672877846779], [1.71906906E12, 0.730319563522993], [1.71907128E12, 0.7524413047994997], [1.7190723E12, 0.7402874700552], [1.71907266E12, 0.7452707280212625], [1.71906702E12, 0.7766179540709808], [1.719066E12, 0.6701680672268912], [1.71907044E12, 0.789031402034502], [1.71906822E12, 0.7224967490247105], [1.71907146E12, 0.9023120183295137], [1.71906924E12, 0.7531380753138093], [1.71906498E12, 0.7405857740585773], [1.7190672E12, 0.7528556593977157], [1.7190696E12, 0.6849656893325009], [1.71906618E12, 0.8083333333333341], [1.7190684E12, 0.7274382314694386], [1.71907062E12, 0.7256673937883044], [1.71906516E12, 0.7447698744769877], [1.71906738E12, 0.7476635514018696], [1.71906942E12, 0.698313554028732], [1.71907164E12, 0.7795314836351532], [1.71906636E12, 0.7270833333333325], [1.71906978E12, 0.7078745065447711], [1.719072E12, 0.7429570116861356], [1.71906858E12, 0.7425460202229697], [1.7190708E12, 0.7227650727650693], [1.71906534E12, 0.7563025210084036], [1.71906756E12, 0.8093749999999986], [1.71907182E12, 0.7568797739876539]], "isOverall": false, "label": "Directors by name", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71907278E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 36.0, "minX": 1.71906438E12, "maxY": 1146.0, "series": [{"data": [[1.71907218E12, 283.0], [1.71906654E12, 88.0], [1.71906876E12, 148.0], [1.71906552E12, 98.0], [1.71906996E12, 127.0], [1.7190645E12, 403.0], [1.71906774E12, 132.0], [1.71907098E12, 138.0], [1.71906672E12, 101.0], [1.71906894E12, 153.0], [1.71906912E12, 567.0], [1.71907014E12, 298.0], [1.71907236E12, 139.0], [1.7190657E12, 104.0], [1.71906792E12, 147.0], [1.71906468E12, 367.0], [1.7190669E12, 134.0], [1.71907116E12, 615.0], [1.71906588E12, 94.0], [1.7190693E12, 119.0], [1.71907152E12, 298.0], [1.7190681E12, 306.0], [1.71907254E12, 1146.0], [1.71907032E12, 118.0], [1.71906486E12, 461.0], [1.71906708E12, 104.0], [1.71907134E12, 148.0], [1.7190717E12, 183.0], [1.71906606E12, 90.0], [1.71906828E12, 141.0], [1.71906504E12, 96.0], [1.71906948E12, 131.0], [1.71906726E12, 155.0], [1.7190705E12, 200.0], [1.71907272E12, 554.0], [1.71906624E12, 144.0], [1.71906846E12, 142.0], [1.71906522E12, 97.0], [1.71906744E12, 133.0], [1.71906966E12, 182.0], [1.71907188E12, 443.0], [1.71907068E12, 145.0], [1.71906642E12, 102.0], [1.71906864E12, 142.0], [1.71907104E12, 166.0], [1.7190654E12, 128.0], [1.71906762E12, 147.0], [1.71907206E12, 200.0], [1.7190666E12, 103.0], [1.71906984E12, 140.0], [1.71906438E12, 377.0], [1.71906882E12, 123.0], [1.71907086E12, 143.0], [1.71907122E12, 131.0], [1.71906456E12, 378.0], [1.71906558E12, 114.0], [1.7190678E12, 148.0], [1.71906678E12, 114.0], [1.719069E12, 142.0], [1.71907224E12, 364.0], [1.71907002E12, 136.0], [1.71906576E12, 150.0], [1.71906474E12, 257.0], [1.71906798E12, 152.0], [1.71906696E12, 116.0], [1.71906918E12, 128.0], [1.7190714E12, 288.0], [1.71907242E12, 286.0], [1.7190702E12, 144.0], [1.71906594E12, 142.0], [1.71906816E12, 137.0], [1.71907056E12, 160.0], [1.71906492E12, 150.0], [1.71906714E12, 114.0], [1.71907158E12, 155.0], [1.71906612E12, 367.0], [1.71906936E12, 146.0], [1.71906834E12, 164.0], [1.71907038E12, 149.0], [1.7190726E12, 285.0], [1.71907074E12, 175.0], [1.7190651E12, 94.0], [1.71906732E12, 280.0], [1.7190663E12, 90.0], [1.71906852E12, 141.0], [1.71906954E12, 144.0], [1.71907176E12, 177.0], [1.71907278E12, 195.0], [1.71906528E12, 123.0], [1.7190675E12, 138.0], [1.71906648E12, 109.0], [1.71907092E12, 146.0], [1.7190687E12, 337.0], [1.71907194E12, 204.0], [1.71906972E12, 189.0], [1.71906546E12, 945.0], [1.71906768E12, 151.0], [1.71907008E12, 155.0], [1.71906444E12, 344.0], [1.71906666E12, 89.0], [1.71906888E12, 146.0], [1.7190711E12, 181.0], [1.71906564E12, 99.0], [1.71906786E12, 197.0], [1.7190699E12, 121.0], [1.71907212E12, 171.0], [1.71906684E12, 94.0], [1.71907026E12, 131.0], [1.71907248E12, 169.0], [1.71906462E12, 96.0], [1.7190648E12, 111.0], [1.71906804E12, 150.0], [1.71906582E12, 87.0], [1.71906906E12, 133.0], [1.71907128E12, 205.0], [1.7190723E12, 380.0], [1.71907266E12, 174.0], [1.71906702E12, 119.0], [1.719066E12, 97.0], [1.71907044E12, 166.0], [1.71906822E12, 124.0], [1.71907146E12, 1104.0], [1.71906924E12, 146.0], [1.71906498E12, 206.0], [1.7190672E12, 98.0], [1.7190696E12, 160.0], [1.71906618E12, 114.0], [1.7190684E12, 143.0], [1.71907062E12, 143.0], [1.71906516E12, 95.0], [1.71906738E12, 133.0], [1.71906942E12, 159.0], [1.71907164E12, 191.0], [1.71906636E12, 88.0], [1.71906978E12, 120.0], [1.719072E12, 241.0], [1.71906858E12, 352.0], [1.7190708E12, 129.0], [1.71906534E12, 499.0], [1.71906756E12, 129.0], [1.71907182E12, 194.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71907218E12, 36.0], [1.71906654E12, 39.0], [1.71906876E12, 37.0], [1.71906552E12, 40.0], [1.71906996E12, 38.0], [1.7190645E12, 39.0], [1.71906774E12, 38.0], [1.71907098E12, 37.0], [1.71906672E12, 39.0], [1.71906894E12, 38.0], [1.71906912E12, 38.0], [1.71907014E12, 37.0], [1.71907236E12, 36.0], [1.7190657E12, 39.0], [1.71906792E12, 38.0], [1.71906468E12, 40.0], [1.7190669E12, 38.0], [1.71907116E12, 37.0], [1.71906588E12, 37.0], [1.7190693E12, 37.0], [1.71907152E12, 37.0], [1.7190681E12, 38.0], [1.71907254E12, 37.0], [1.71907032E12, 38.0], [1.71906486E12, 39.0], [1.71906708E12, 39.0], [1.71907134E12, 36.0], [1.7190717E12, 37.0], [1.71906606E12, 39.0], [1.71906828E12, 37.0], [1.71906504E12, 39.0], [1.71906948E12, 37.0], [1.71906726E12, 39.0], [1.7190705E12, 37.0], [1.71907272E12, 36.0], [1.71906624E12, 39.0], [1.71906846E12, 37.0], [1.71906522E12, 40.0], [1.71906744E12, 39.0], [1.71906966E12, 38.0], [1.71907188E12, 37.0], [1.71907068E12, 37.0], [1.71906642E12, 40.0], [1.71906864E12, 38.0], [1.71907104E12, 37.0], [1.7190654E12, 38.0], [1.71906762E12, 38.0], [1.71907206E12, 37.0], [1.7190666E12, 39.0], [1.71906984E12, 37.0], [1.71906438E12, 43.0], [1.71906882E12, 37.0], [1.71907086E12, 37.0], [1.71907122E12, 37.0], [1.71906456E12, 40.0], [1.71906558E12, 40.0], [1.7190678E12, 38.0], [1.71906678E12, 40.0], [1.719069E12, 36.0], [1.71907224E12, 37.0], [1.71907002E12, 37.0], [1.71906576E12, 40.0], [1.71906474E12, 40.0], [1.71906798E12, 37.0], [1.71906696E12, 38.0], [1.71906918E12, 38.0], [1.7190714E12, 37.0], [1.71907242E12, 37.0], [1.7190702E12, 37.0], [1.71906594E12, 38.0], [1.71906816E12, 38.0], [1.71907056E12, 36.0], [1.71906492E12, 39.0], [1.71906714E12, 38.0], [1.71907158E12, 37.0], [1.71906612E12, 40.0], [1.71906936E12, 37.0], [1.71906834E12, 37.0], [1.71907038E12, 37.0], [1.7190726E12, 37.0], [1.71907074E12, 37.0], [1.7190651E12, 40.0], [1.71906732E12, 39.0], [1.7190663E12, 39.0], [1.71906852E12, 37.0], [1.71906954E12, 37.0], [1.71907176E12, 37.0], [1.71907278E12, 37.0], [1.71906528E12, 39.0], [1.7190675E12, 39.0], [1.71906648E12, 39.0], [1.71907092E12, 37.0], [1.7190687E12, 38.0], [1.71907194E12, 36.0], [1.71906972E12, 36.0], [1.71906546E12, 41.0], [1.71906768E12, 38.0], [1.71907008E12, 38.0], [1.71906444E12, 39.0], [1.71906666E12, 40.0], [1.71906888E12, 37.0], [1.7190711E12, 37.0], [1.71906564E12, 39.0], [1.71906786E12, 39.0], [1.7190699E12, 37.0], [1.71907212E12, 37.0], [1.71906684E12, 38.0], [1.71907026E12, 37.0], [1.71907248E12, 37.0], [1.71906462E12, 41.0], [1.7190648E12, 42.0], [1.71906804E12, 37.0], [1.71906582E12, 39.0], [1.71906906E12, 38.0], [1.71907128E12, 37.0], [1.7190723E12, 37.0], [1.71907266E12, 37.0], [1.71906702E12, 37.0], [1.719066E12, 39.0], [1.71907044E12, 37.0], [1.71906822E12, 37.0], [1.71907146E12, 37.0], [1.71906924E12, 37.0], [1.71906498E12, 40.0], [1.7190672E12, 39.0], [1.7190696E12, 37.0], [1.71906618E12, 40.0], [1.7190684E12, 38.0], [1.71907062E12, 37.0], [1.71906516E12, 41.0], [1.71906738E12, 39.0], [1.71906942E12, 38.0], [1.71907164E12, 37.0], [1.71906636E12, 40.0], [1.71906978E12, 37.0], [1.719072E12, 36.0], [1.71906858E12, 37.0], [1.7190708E12, 37.0], [1.71906534E12, 40.0], [1.71906756E12, 38.0], [1.71907182E12, 37.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71907218E12, 73.0], [1.71906654E12, 62.0], [1.71906876E12, 58.0], [1.71906552E12, 65.90000000000003], [1.71906996E12, 62.0], [1.7190645E12, 60.0], [1.71906774E12, 54.0], [1.71907098E12, 59.0], [1.71906672E12, 60.0], [1.71906894E12, 62.100000000000364], [1.71906912E12, 65.0], [1.71907014E12, 62.0], [1.71907236E12, 67.0], [1.7190657E12, 67.0], [1.71906792E12, 62.0], [1.71906468E12, 59.0], [1.7190669E12, 54.0], [1.71907116E12, 64.0], [1.71906588E12, 57.0], [1.7190693E12, 56.0], [1.71907152E12, 63.0], [1.7190681E12, 58.0], [1.71907254E12, 69.0], [1.71907032E12, 61.0], [1.71906486E12, 65.0], [1.71906708E12, 57.0], [1.71907134E12, 60.0], [1.7190717E12, 72.0], [1.71906606E12, 62.0], [1.71906828E12, 59.0], [1.71906504E12, 70.0], [1.71906948E12, 54.0], [1.71906726E12, 61.0], [1.7190705E12, 59.0], [1.71907272E12, 75.0], [1.71906624E12, 66.0], [1.71906846E12, 55.0], [1.71906522E12, 66.90000000000003], [1.71906744E12, 59.90000000000009], [1.71906966E12, 60.0], [1.71907188E12, 79.0], [1.71907068E12, 63.0], [1.71906642E12, 61.0], [1.71906864E12, 55.0], [1.71907104E12, 63.0], [1.7190654E12, 64.0], [1.71906762E12, 61.0], [1.71907206E12, 70.0], [1.7190666E12, 59.0], [1.71906984E12, 59.0], [1.71906438E12, 213.0], [1.71906882E12, 58.0], [1.71907086E12, 61.0], [1.71907122E12, 59.0], [1.71906456E12, 61.0], [1.71906558E12, 75.0], [1.7190678E12, 63.0], [1.71906678E12, 61.700000000000045], [1.719069E12, 58.0], [1.71907224E12, 69.0], [1.71907002E12, 64.0], [1.71906576E12, 66.0], [1.71906474E12, 58.900000000000034], [1.71906798E12, 69.0], [1.71906696E12, 59.0], [1.71906918E12, 64.0], [1.7190714E12, 60.0], [1.71907242E12, 66.0], [1.7190702E12, 62.0], [1.71906594E12, 58.0], [1.71906816E12, 60.0], [1.71907056E12, 62.0], [1.71906492E12, 67.80000000000007], [1.71906714E12, 59.0], [1.71907158E12, 66.0], [1.71906612E12, 69.0], [1.71906936E12, 58.0], [1.71906834E12, 61.0], [1.71907038E12, 67.0], [1.7190726E12, 63.0], [1.71907074E12, 60.0], [1.7190651E12, 70.0], [1.71906732E12, 61.700000000000045], [1.7190663E12, 62.0], [1.71906852E12, 57.0], [1.71906954E12, 58.0], [1.71907176E12, 69.0], [1.71907278E12, 68.0], [1.71906528E12, 74.0], [1.7190675E12, 69.0], [1.71906648E12, 70.0], [1.71907092E12, 61.0], [1.7190687E12, 66.0], [1.71907194E12, 68.0], [1.71906972E12, 86.0], [1.71906546E12, 170.10000000000002], [1.71906768E12, 59.0], [1.71907008E12, 68.0], [1.71906444E12, 58.0], [1.71906666E12, 59.0], [1.71906888E12, 56.0], [1.7190711E12, 61.0], [1.71906564E12, 71.0], [1.71906786E12, 66.0], [1.7190699E12, 56.0], [1.71907212E12, 67.0], [1.71906684E12, 56.5], [1.71907026E12, 63.0], [1.71907248E12, 70.0], [1.71906462E12, 59.0], [1.7190648E12, 68.0], [1.71906804E12, 56.0], [1.71906582E12, 59.30000000000007], [1.71906906E12, 54.0], [1.71907128E12, 60.0], [1.7190723E12, 77.0], [1.71907266E12, 71.0], [1.71906702E12, 62.0], [1.719066E12, 65.0], [1.71907044E12, 63.0], [1.71906822E12, 57.0], [1.71907146E12, 64.0], [1.71906924E12, 55.0], [1.71906498E12, 69.0], [1.7190672E12, 62.0], [1.7190696E12, 58.0], [1.71906618E12, 68.0], [1.7190684E12, 58.0], [1.71907062E12, 58.0], [1.71906516E12, 68.0], [1.71906738E12, 57.0], [1.71906942E12, 59.0], [1.71907164E12, 71.0], [1.71906636E12, 56.0], [1.71906978E12, 57.0], [1.719072E12, 72.0], [1.71906858E12, 60.0], [1.7190708E12, 60.0], [1.71906534E12, 68.0], [1.71906756E12, 64.0], [1.71907182E12, 75.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71907218E12, 122.9900000000016], [1.71906654E12, 84.0], [1.71906876E12, 87.0], [1.71906552E12, 91.38], [1.71906996E12, 86.0], [1.7190645E12, 170.88000000000466], [1.71906774E12, 92.0], [1.71907098E12, 87.0], [1.71906672E12, 86.0], [1.71906894E12, 101.21999999999935], [1.71906912E12, 99.0], [1.71907014E12, 88.0], [1.71907236E12, 100.0], [1.7190657E12, 94.0], [1.71906792E12, 87.0], [1.71906468E12, 83.32999999999998], [1.7190669E12, 83.0], [1.71907116E12, 93.0], [1.71906588E12, 83.0], [1.7190693E12, 86.0], [1.71907152E12, 92.84999999999854], [1.7190681E12, 87.0], [1.71907254E12, 102.9900000000016], [1.71907032E12, 87.93000000000029], [1.71906486E12, 150.29000000000224], [1.71906708E12, 84.0], [1.71907134E12, 89.0], [1.7190717E12, 104.0], [1.71906606E12, 83.0], [1.71906828E12, 88.0], [1.71906504E12, 90.25999999999988], [1.71906948E12, 82.0], [1.71906726E12, 96.0], [1.7190705E12, 87.0], [1.71907272E12, 289.9400000000096], [1.71906624E12, 101.0], [1.71906846E12, 83.0], [1.71906522E12, 92.38], [1.71906744E12, 86.0], [1.71906966E12, 91.0], [1.71907188E12, 171.0], [1.71907068E12, 92.0], [1.71906642E12, 84.0], [1.71906864E12, 82.0], [1.71907104E12, 94.88999999999942], [1.7190654E12, 94.69000000000005], [1.71906762E12, 102.0], [1.71907206E12, 108.0], [1.7190666E12, 86.0], [1.71906984E12, 87.0], [1.71906438E12, 377.0], [1.71906882E12, 86.17000000000007], [1.71907086E12, 92.0], [1.71907122E12, 85.0], [1.71906456E12, 97.85000000000008], [1.71906558E12, 94.69], [1.7190678E12, 95.0], [1.71906678E12, 87.13999999999987], [1.719069E12, 84.0], [1.71907224E12, 96.0], [1.71907002E12, 98.0], [1.71906576E12, 106.0], [1.71906474E12, 89.13999999999999], [1.71906798E12, 93.0], [1.71906696E12, 84.0], [1.71906918E12, 92.39000000000033], [1.7190714E12, 90.0], [1.71907242E12, 99.0], [1.7190702E12, 89.0], [1.71906594E12, 85.0], [1.71906816E12, 90.0], [1.71907056E12, 94.0], [1.71906492E12, 141.95], [1.71906714E12, 85.0], [1.71907158E12, 94.0], [1.71906612E12, 150.0], [1.71906936E12, 83.0], [1.71906834E12, 91.13000000000011], [1.71907038E12, 101.0], [1.7190726E12, 91.0], [1.71907074E12, 86.0], [1.7190651E12, 91.23000000000002], [1.71906732E12, 88.0], [1.7190663E12, 85.0], [1.71906852E12, 86.0], [1.71906954E12, 88.0], [1.71907176E12, 108.0], [1.71907278E12, 107.0], [1.71906528E12, 104.13999999999999], [1.7190675E12, 105.0], [1.71906648E12, 87.0], [1.71907092E12, 90.0], [1.7190687E12, 96.0], [1.71907194E12, 121.9900000000016], [1.71906972E12, 128.0], [1.71906546E12, 311.7500000000003], [1.71906768E12, 91.0], [1.71907008E12, 106.0], [1.71906444E12, 187.19000000000085], [1.71906666E12, 84.0], [1.71906888E12, 84.1899999999996], [1.7190711E12, 97.0], [1.71906564E12, 96.0], [1.71906786E12, 110.0], [1.7190699E12, 85.0], [1.71907212E12, 106.0], [1.71906684E12, 81.75], [1.71907026E12, 89.0], [1.71907248E12, 100.0], [1.71906462E12, 92.23000000000002], [1.7190648E12, 88.20999999999998], [1.71906804E12, 83.0], [1.71906582E12, 84.0], [1.71906906E12, 90.01000000000022], [1.71907128E12, 87.47000000000116], [1.7190723E12, 124.0], [1.71907266E12, 109.0], [1.71906702E12, 90.0], [1.719066E12, 85.0], [1.71907044E12, 91.0], [1.71906822E12, 88.09000000000015], [1.71907146E12, 95.0], [1.71906924E12, 83.0], [1.71906498E12, 98.62999999999994], [1.7190672E12, 85.0], [1.7190696E12, 85.0], [1.71906618E12, 99.0], [1.7190684E12, 84.0], [1.71907062E12, 85.0], [1.71906516E12, 91.20999999999998], [1.71906738E12, 87.0], [1.71906942E12, 87.0], [1.71907164E12, 112.0], [1.71906636E12, 85.0], [1.71906978E12, 83.0], [1.719072E12, 107.0], [1.71906858E12, 87.0], [1.7190708E12, 89.0], [1.71906534E12, 107.52000000000044], [1.71906756E12, 94.0], [1.71907182E12, 109.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71907218E12, 47.0], [1.71906654E12, 48.0], [1.71906876E12, 44.0], [1.71906552E12, 51.0], [1.71906996E12, 45.0], [1.7190645E12, 48.0], [1.71906774E12, 44.0], [1.71907098E12, 44.0], [1.71906672E12, 49.0], [1.71906894E12, 44.0], [1.71906912E12, 46.0], [1.71907014E12, 45.0], [1.71907236E12, 46.0], [1.7190657E12, 50.0], [1.71906792E12, 47.0], [1.71906468E12, 51.0], [1.7190669E12, 45.0], [1.71907116E12, 45.0], [1.71906588E12, 48.0], [1.7190693E12, 44.0], [1.71907152E12, 46.0], [1.7190681E12, 44.0], [1.71907254E12, 46.0], [1.71907032E12, 45.0], [1.71906486E12, 50.0], [1.71906708E12, 46.0], [1.71907134E12, 44.0], [1.7190717E12, 47.0], [1.71906606E12, 49.0], [1.71906828E12, 44.0], [1.71906504E12, 51.0], [1.71906948E12, 44.0], [1.71906726E12, 47.0], [1.7190705E12, 44.0], [1.71907272E12, 50.0], [1.71906624E12, 50.0], [1.71906846E12, 44.0], [1.71906522E12, 52.0], [1.71906744E12, 47.0], [1.71906966E12, 44.0], [1.71907188E12, 47.0], [1.71907068E12, 45.0], [1.71906642E12, 49.0], [1.71906864E12, 44.0], [1.71907104E12, 45.0], [1.7190654E12, 52.0], [1.71906762E12, 46.0], [1.71907206E12, 47.0], [1.7190666E12, 49.0], [1.71906984E12, 44.0], [1.71906438E12, 51.0], [1.71906882E12, 44.0], [1.71907086E12, 45.0], [1.71907122E12, 44.0], [1.71906456E12, 51.0], [1.71906558E12, 52.0], [1.7190678E12, 47.0], [1.71906678E12, 49.0], [1.719069E12, 44.0], [1.71907224E12, 47.0], [1.71907002E12, 46.0], [1.71906576E12, 51.0], [1.71906474E12, 49.0], [1.71906798E12, 47.0], [1.71906696E12, 46.0], [1.71906918E12, 45.0], [1.7190714E12, 44.0], [1.71907242E12, 46.0], [1.7190702E12, 46.0], [1.71906594E12, 49.0], [1.71906816E12, 44.0], [1.71907056E12, 45.0], [1.71906492E12, 52.0], [1.71906714E12, 46.5], [1.71907158E12, 45.0], [1.71906612E12, 51.0], [1.71906936E12, 44.0], [1.71906834E12, 44.0], [1.71907038E12, 46.0], [1.7190726E12, 46.0], [1.71907074E12, 44.0], [1.7190651E12, 52.0], [1.71906732E12, 47.0], [1.7190663E12, 49.0], [1.71906852E12, 44.0], [1.71906954E12, 44.0], [1.71907176E12, 47.0], [1.71907278E12, 46.0], [1.71906528E12, 53.0], [1.7190675E12, 49.0], [1.71906648E12, 50.0], [1.71907092E12, 45.0], [1.7190687E12, 47.0], [1.71907194E12, 47.0], [1.71906972E12, 45.0], [1.71906546E12, 55.0], [1.71906768E12, 45.0], [1.71907008E12, 47.0], [1.71906444E12, 49.0], [1.71906666E12, 49.0], [1.71906888E12, 44.0], [1.7190711E12, 45.0], [1.71906564E12, 50.0], [1.71906786E12, 49.0], [1.7190699E12, 44.0], [1.71907212E12, 46.0], [1.71906684E12, 45.0], [1.71907026E12, 46.0], [1.71907248E12, 47.0], [1.71906462E12, 50.0], [1.7190648E12, 51.0], [1.71906804E12, 44.0], [1.71906582E12, 47.0], [1.71906906E12, 44.0], [1.71907128E12, 44.0], [1.7190723E12, 47.0], [1.71907266E12, 47.0], [1.71906702E12, 47.0], [1.719066E12, 49.0], [1.71907044E12, 46.0], [1.71906822E12, 44.0], [1.71907146E12, 45.0], [1.71906924E12, 44.0], [1.71906498E12, 52.0], [1.7190672E12, 47.0], [1.7190696E12, 44.0], [1.71906618E12, 51.0], [1.7190684E12, 44.0], [1.71907062E12, 44.0], [1.71906516E12, 52.0], [1.71906738E12, 46.0], [1.71906942E12, 44.0], [1.71907164E12, 47.0], [1.71906636E12, 48.0], [1.71906978E12, 44.0], [1.719072E12, 47.0], [1.71906858E12, 44.0], [1.7190708E12, 44.0], [1.71906534E12, 51.0], [1.71906756E12, 47.0], [1.71907182E12, 48.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.71907218E12, 85.0], [1.71906654E12, 73.0], [1.71906876E12, 68.84999999999945], [1.71906552E12, 78.0], [1.71906996E12, 71.0], [1.7190645E12, 78.0], [1.71906774E12, 64.0], [1.71907098E12, 70.0], [1.71906672E12, 69.94999999999993], [1.71906894E12, 75.0], [1.71906912E12, 73.0], [1.71907014E12, 70.0], [1.71907236E12, 78.0], [1.7190657E12, 79.0], [1.71906792E12, 73.0], [1.71906468E12, 68.94999999999999], [1.7190669E12, 66.0], [1.71907116E12, 75.0], [1.71906588E12, 67.89999999999986], [1.7190693E12, 67.0], [1.71907152E12, 75.0], [1.7190681E12, 67.0], [1.71907254E12, 80.0], [1.71907032E12, 71.0], [1.71906486E12, 76.0], [1.71906708E12, 68.0], [1.71907134E12, 71.0], [1.7190717E12, 82.0], [1.71906606E12, 70.84999999999991], [1.71906828E12, 70.0], [1.71906504E12, 77.0], [1.71906948E12, 64.0], [1.71906726E12, 73.0], [1.7190705E12, 70.0], [1.71907272E12, 86.0], [1.71906624E12, 75.0], [1.71906846E12, 64.0], [1.71906522E12, 79.94999999999999], [1.71906744E12, 68.0], [1.71906966E12, 72.0], [1.71907188E12, 100.0], [1.71907068E12, 74.0], [1.71906642E12, 71.0], [1.71906864E12, 64.0], [1.71907104E12, 74.0], [1.7190654E12, 78.0], [1.71906762E12, 71.94999999999982], [1.71907206E12, 80.0], [1.7190666E12, 71.94999999999993], [1.71906984E12, 70.0], [1.71906438E12, 369.5], [1.71906882E12, 69.0], [1.71907086E12, 72.0], [1.71907122E12, 69.95000000000073], [1.71906456E12, 76.69999999999993], [1.71906558E12, 84.0], [1.7190678E12, 73.94999999999982], [1.71906678E12, 73.84999999999991], [1.719069E12, 70.04999999999927], [1.71907224E12, 78.0], [1.71907002E12, 76.0], [1.71906576E12, 75.0], [1.71906474E12, 73.0], [1.71906798E12, 79.0], [1.71906696E12, 69.0], [1.71906918E12, 76.0], [1.7190714E12, 72.0], [1.71907242E12, 75.0], [1.7190702E12, 72.0], [1.71906594E12, 71.0], [1.71906816E12, 71.0], [1.71907056E12, 72.0], [1.71906492E12, 84.0], [1.71906714E12, 70.0], [1.71907158E12, 78.0], [1.71906612E12, 86.0], [1.71906936E12, 68.0], [1.71906834E12, 72.0], [1.71907038E12, 79.0], [1.7190726E12, 72.0], [1.71907074E12, 71.0], [1.7190651E12, 83.0], [1.71906732E12, 75.0], [1.7190663E12, 69.0], [1.71906852E12, 67.0], [1.71906954E12, 69.0], [1.71907176E12, 81.0], [1.71907278E12, 81.0], [1.71906528E12, 82.94999999999999], [1.7190675E12, 82.0], [1.71906648E12, 79.0], [1.71907092E12, 73.0], [1.7190687E12, 76.0], [1.71907194E12, 81.0], [1.71906972E12, 104.0], [1.71906546E12, 232.0], [1.71906768E12, 70.0], [1.71907008E12, 80.0], [1.71906444E12, 68.0], [1.71906666E12, 70.0], [1.71906888E12, 65.0], [1.7190711E12, 72.0], [1.71906564E12, 80.0], [1.71906786E12, 77.0], [1.7190699E12, 66.0], [1.71907212E12, 79.0], [1.71906684E12, 66.0], [1.71907026E12, 73.0], [1.71907248E12, 80.0], [1.71906462E12, 64.0], [1.7190648E12, 78.0], [1.71906804E12, 68.0], [1.71906582E12, 69.0], [1.71906906E12, 66.0], [1.71907128E12, 71.0], [1.7190723E12, 96.0], [1.71907266E12, 81.0], [1.71906702E12, 72.0], [1.719066E12, 74.0], [1.71907044E12, 72.54999999999927], [1.71906822E12, 69.0], [1.71907146E12, 75.0], [1.71906924E12, 66.0], [1.71906498E12, 80.0], [1.7190672E12, 73.0], [1.7190696E12, 69.0], [1.71906618E12, 82.0], [1.7190684E12, 68.0], [1.71907062E12, 69.0], [1.71906516E12, 78.0], [1.71906738E12, 69.64999999999986], [1.71906942E12, 70.0], [1.71907164E12, 81.0], [1.71906636E12, 65.89999999999986], [1.71906978E12, 66.0], [1.719072E12, 81.0], [1.71906858E12, 70.0], [1.7190708E12, 72.0], [1.71906534E12, 83.0], [1.71906756E12, 75.0], [1.71907182E12, 86.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71907278E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 43.0, "minX": 2.0, "maxY": 55.0, "series": [{"data": [[2.0, 52.0], [4.0, 52.0], [6.0, 52.0], [8.0, 51.0], [10.0, 51.0], [12.0, 49.0], [14.0, 49.0], [16.0, 49.0], [18.0, 49.0], [20.0, 49.0], [22.0, 47.0], [24.0, 47.0], [26.0, 46.0], [28.0, 46.0], [30.0, 46.0], [32.0, 46.0], [34.0, 47.0], [36.0, 47.0], [38.0, 47.0], [40.0, 47.0], [42.0, 51.0], [44.0, 48.0], [46.0, 44.0], [52.0, 52.0], [54.0, 51.0], [56.0, 48.0], [58.0, 45.0], [60.0, 47.0], [62.0, 44.0], [64.0, 46.0], [66.0, 48.0], [70.0, 45.0], [68.0, 45.0], [72.0, 45.0], [74.0, 44.0], [78.0, 45.0], [76.0, 44.0], [82.0, 44.0], [80.0, 44.0], [86.0, 44.0], [84.0, 44.0], [88.0, 43.0], [90.0, 44.0], [92.0, 44.0], [94.0, 45.0], [98.0, 44.0], [96.0, 44.0], [102.0, 44.0], [100.0, 44.0], [106.0, 44.0], [104.0, 44.0], [108.0, 44.0], [110.0, 44.0], [114.0, 44.0], [112.0, 44.0], [116.0, 44.0], [118.0, 44.0], [122.0, 44.0], [120.0, 44.0], [124.0, 44.0], [126.0, 44.0], [130.0, 44.0], [132.0, 44.0], [134.0, 44.0], [128.0, 44.0], [138.0, 45.0], [136.0, 44.0], [140.0, 44.0], [142.0, 44.0], [144.0, 44.0], [148.0, 44.0], [146.0, 44.0], [150.0, 45.0], [152.0, 44.0], [154.0, 44.0], [156.0, 44.0], [158.0, 44.0], [162.0, 44.0], [164.0, 44.0], [160.0, 44.0], [166.0, 44.0], [170.0, 45.0], [168.0, 44.5], [172.0, 45.0], [174.0, 45.0], [176.0, 45.0], [180.0, 46.0], [182.0, 45.0], [178.0, 45.0], [184.0, 45.0], [188.0, 45.0], [190.0, 46.0], [186.0, 46.0], [194.0, 45.0], [196.0, 44.0], [192.0, 45.0], [198.0, 45.0], [200.0, 44.0], [206.0, 43.0], [208.0, 44.0], [210.0, 44.0], [214.0, 45.0], [212.0, 45.0], [222.0, 48.0], [220.0, 45.0], [228.0, 44.0], [226.0, 45.0], [236.0, 45.0], [234.0, 45.0], [238.0, 44.0], [246.0, 44.0], [242.0, 45.0], [240.0, 44.0], [252.0, 46.0], [250.0, 44.0], [254.0, 45.0], [266.0, 46.0], [270.0, 45.0], [260.0, 45.0], [262.0, 45.0], [258.0, 44.0], [264.0, 45.0], [256.0, 44.0], [268.0, 45.0], [278.0, 46.0], [286.0, 45.0], [280.0, 45.0], [274.0, 45.0], [282.0, 45.0], [284.0, 45.0], [272.0, 46.0], [276.0, 46.0], [300.0, 45.0], [292.0, 45.0], [302.0, 45.0], [298.0, 45.0], [294.0, 45.0], [296.0, 45.0], [290.0, 45.0], [288.0, 44.0], [306.0, 45.0], [314.0, 45.0], [304.0, 45.0], [312.0, 44.0], [308.0, 44.0], [316.0, 44.0], [318.0, 44.0], [310.0, 45.0], [326.0, 44.0], [332.0, 45.0], [324.0, 45.0], [320.0, 45.0], [322.0, 44.0], [328.0, 45.0], [334.0, 44.0], [330.0, 45.0], [344.0, 44.0], [338.0, 44.0], [348.0, 44.0], [350.0, 44.0], [342.0, 44.0], [340.0, 44.0], [336.0, 45.0], [346.0, 44.0], [352.0, 44.0], [360.0, 45.0], [354.0, 45.0], [356.0, 45.0], [358.0, 45.0], [364.0, 45.0], [366.0, 45.0], [362.0, 45.0], [368.0, 44.0], [370.0, 45.0], [380.0, 44.0], [372.0, 45.0], [378.0, 44.0], [376.0, 44.0], [382.0, 45.0], [384.0, 45.0], [386.0, 45.0], [388.0, 44.0], [390.0, 45.0], [394.0, 46.0], [392.0, 47.0], [398.0, 46.0], [396.0, 43.0], [406.0, 44.0], [412.0, 45.0], [428.0, 46.0], [436.0, 47.0], [450.0, 45.0], [448.0, 45.0], [460.0, 48.0], [458.0, 45.0], [476.0, 45.0], [472.0, 47.5], [474.0, 44.0], [464.0, 46.0], [478.0, 45.0], [470.0, 46.0], [492.0, 45.0], [484.0, 45.0], [494.0, 46.0], [482.0, 45.0], [488.0, 45.0], [508.0, 46.0], [506.0, 46.0], [496.0, 46.0], [498.0, 45.0], [500.0, 45.0], [502.0, 46.0], [504.0, 47.0], [538.0, 48.0], [530.0, 46.0], [524.0, 47.0], [520.0, 47.0], [522.0, 45.0], [526.0, 45.0], [514.0, 46.0], [536.0, 46.0], [516.0, 49.0], [540.0, 46.0], [542.0, 46.0], [528.0, 46.0], [512.0, 55.0], [534.0, 46.0], [532.0, 44.0], [568.0, 45.0], [554.0, 45.0], [566.0, 46.0], [552.0, 46.0], [570.0, 47.0], [564.0, 45.0], [562.0, 46.0], [574.0, 46.0], [560.0, 46.0], [572.0, 46.0], [546.0, 45.0], [548.0, 46.0], [550.0, 46.0], [544.0, 45.0], [556.0, 45.0], [558.0, 46.0], [604.0, 47.0], [596.0, 46.0], [602.0, 47.0], [600.0, 46.0], [580.0, 46.0], [578.0, 46.0], [582.0, 46.0], [594.0, 46.0], [598.0, 47.0], [586.0, 46.0], [584.0, 47.0], [576.0, 47.0], [588.0, 46.0], [590.0, 46.0], [592.0, 47.0], [606.0, 46.0], [614.0, 46.0], [620.0, 46.0], [618.0, 46.0], [612.0, 47.0], [610.0, 48.0], [628.0, 47.0], [616.0, 47.0], [636.0, 47.0], [632.0, 48.0], [634.0, 46.0], [624.0, 48.0], [626.0, 47.0], [638.0, 47.0], [630.0, 47.0], [622.0, 46.0], [608.0, 46.0], [668.0, 47.0], [658.0, 46.0], [644.0, 47.0], [664.0, 46.0], [666.0, 47.0], [646.0, 48.0], [642.0, 46.0], [660.0, 47.0], [662.0, 46.0], [670.0, 47.0], [656.0, 46.0], [652.0, 47.0], [654.0, 47.0], [640.0, 47.0], [648.0, 47.0], [650.0, 47.0], [676.0, 46.0], [680.0, 47.0], [682.0, 47.0], [696.0, 46.0], [678.0, 47.0], [686.0, 47.0], [672.0, 47.0], [674.0, 47.0], [698.0, 46.0], [690.0, 47.0], [702.0, 47.0], [700.0, 47.0], [688.0, 47.0], [684.0, 47.0], [692.0, 47.0], [694.0, 46.0], [710.0, 46.0], [706.0, 47.0], [728.0, 46.0], [730.0, 46.0], [714.0, 46.0], [712.0, 45.0], [708.0, 47.0], [704.0, 47.0], [718.0, 49.0], [716.0, 47.0], [732.0, 45.0], [734.0, 46.0], [720.0, 46.0], [724.0, 46.0], [726.0, 47.0], [722.0, 48.0], [744.0, 48.0], [736.0, 46.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 744.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 43.0, "minX": 2.0, "maxY": 54.5, "series": [{"data": [[2.0, 52.0], [4.0, 52.0], [6.0, 52.0], [8.0, 51.0], [10.0, 51.0], [12.0, 49.0], [14.0, 49.0], [16.0, 49.0], [18.0, 49.0], [20.0, 49.0], [22.0, 47.0], [24.0, 47.0], [26.0, 46.0], [28.0, 46.0], [30.0, 46.0], [32.0, 46.0], [34.0, 47.0], [36.0, 47.0], [38.0, 47.0], [40.0, 47.0], [42.0, 51.0], [44.0, 48.0], [46.0, 44.0], [52.0, 52.0], [54.0, 51.0], [56.0, 48.0], [58.0, 45.0], [60.0, 47.0], [62.0, 44.0], [64.0, 46.0], [66.0, 48.0], [70.0, 45.0], [68.0, 45.0], [72.0, 45.0], [74.0, 44.0], [78.0, 45.0], [76.0, 44.0], [82.0, 44.0], [80.0, 44.0], [86.0, 44.0], [84.0, 44.0], [88.0, 43.0], [90.0, 44.0], [92.0, 44.0], [94.0, 45.0], [98.0, 44.0], [96.0, 44.0], [102.0, 44.0], [100.0, 44.0], [106.0, 44.0], [104.0, 44.0], [108.0, 44.0], [110.0, 44.0], [114.0, 44.0], [112.0, 44.0], [116.0, 44.0], [118.0, 44.0], [122.0, 44.0], [120.0, 44.0], [124.0, 44.0], [126.0, 44.0], [130.0, 44.0], [132.0, 44.0], [134.0, 44.0], [128.0, 44.0], [138.0, 45.0], [136.0, 44.0], [140.0, 44.0], [142.0, 44.0], [144.0, 44.0], [148.0, 44.0], [146.0, 44.0], [150.0, 45.0], [152.0, 44.0], [154.0, 44.0], [156.0, 44.0], [158.0, 44.0], [162.0, 44.0], [164.0, 44.0], [160.0, 44.0], [166.0, 44.0], [170.0, 45.0], [168.0, 44.0], [172.0, 45.0], [174.0, 45.0], [176.0, 45.0], [180.0, 46.0], [182.0, 45.0], [178.0, 45.0], [184.0, 45.0], [188.0, 45.0], [190.0, 46.0], [186.0, 46.0], [194.0, 45.0], [196.0, 44.0], [192.0, 45.0], [198.0, 45.0], [200.0, 44.0], [206.0, 43.0], [208.0, 44.0], [210.0, 44.0], [214.0, 45.0], [212.0, 45.0], [222.0, 48.0], [220.0, 45.0], [228.0, 44.0], [226.0, 45.0], [236.0, 45.0], [234.0, 45.0], [238.0, 44.0], [246.0, 44.0], [242.0, 45.0], [240.0, 44.0], [252.0, 46.0], [250.0, 44.0], [254.0, 45.0], [266.0, 46.0], [270.0, 45.0], [260.0, 45.0], [262.0, 45.0], [258.0, 44.0], [264.0, 45.0], [256.0, 44.0], [268.0, 45.0], [278.0, 46.0], [286.0, 45.0], [280.0, 45.0], [274.0, 45.0], [282.0, 45.0], [284.0, 45.0], [272.0, 45.5], [276.0, 46.0], [300.0, 45.0], [292.0, 45.0], [302.0, 45.0], [298.0, 45.0], [294.0, 45.0], [296.0, 45.0], [290.0, 45.0], [288.0, 44.0], [306.0, 45.0], [314.0, 45.0], [304.0, 45.0], [312.0, 44.0], [308.0, 44.0], [316.0, 44.0], [318.0, 44.0], [310.0, 45.0], [326.0, 44.0], [332.0, 45.0], [324.0, 45.0], [320.0, 45.0], [322.0, 44.0], [328.0, 45.0], [334.0, 44.0], [330.0, 45.0], [344.0, 44.0], [338.0, 44.0], [348.0, 44.0], [350.0, 44.0], [342.0, 44.0], [340.0, 44.0], [336.0, 45.0], [346.0, 44.0], [352.0, 44.0], [360.0, 45.0], [354.0, 45.0], [356.0, 45.0], [358.0, 45.0], [364.0, 45.0], [366.0, 45.0], [362.0, 45.0], [368.0, 44.0], [370.0, 45.0], [380.0, 44.0], [372.0, 45.0], [378.0, 44.0], [376.0, 44.0], [382.0, 45.0], [384.0, 45.0], [386.0, 45.0], [388.0, 44.0], [390.0, 45.0], [394.0, 46.0], [392.0, 47.0], [398.0, 46.0], [396.0, 43.0], [406.0, 44.0], [412.0, 45.0], [428.0, 46.0], [436.0, 47.0], [450.0, 45.0], [448.0, 45.0], [460.0, 48.0], [458.0, 45.0], [476.0, 45.0], [472.0, 47.5], [474.0, 44.0], [464.0, 46.0], [478.0, 45.0], [470.0, 46.0], [492.0, 45.0], [484.0, 45.0], [494.0, 46.0], [482.0, 45.0], [488.0, 45.0], [508.0, 46.0], [506.0, 46.0], [496.0, 46.0], [498.0, 45.0], [500.0, 45.0], [502.0, 46.0], [504.0, 47.0], [538.0, 48.0], [530.0, 46.0], [524.0, 47.0], [520.0, 47.0], [522.0, 45.0], [526.0, 45.0], [514.0, 46.0], [536.0, 46.0], [516.0, 49.0], [540.0, 45.0], [542.0, 46.0], [528.0, 46.0], [512.0, 54.5], [534.0, 46.0], [532.0, 44.0], [568.0, 45.0], [554.0, 45.0], [566.0, 46.0], [552.0, 46.0], [570.0, 47.0], [564.0, 45.0], [562.0, 46.0], [574.0, 46.0], [560.0, 46.0], [572.0, 46.0], [546.0, 45.0], [548.0, 46.0], [550.0, 46.0], [544.0, 45.0], [556.0, 45.0], [558.0, 46.0], [604.0, 47.0], [596.0, 46.0], [602.0, 47.0], [600.0, 46.0], [580.0, 46.0], [578.0, 46.0], [582.0, 46.0], [594.0, 46.0], [598.0, 47.0], [586.0, 46.0], [584.0, 47.0], [576.0, 47.0], [588.0, 46.0], [590.0, 46.0], [592.0, 47.0], [606.0, 46.0], [614.0, 46.0], [620.0, 46.0], [618.0, 46.0], [612.0, 47.0], [610.0, 48.0], [628.0, 47.0], [616.0, 47.0], [636.0, 47.0], [632.0, 48.0], [634.0, 46.0], [624.0, 48.0], [626.0, 47.0], [638.0, 47.0], [630.0, 47.0], [622.0, 46.0], [608.0, 46.0], [668.0, 47.0], [658.0, 46.0], [644.0, 47.0], [664.0, 46.0], [666.0, 47.0], [646.0, 48.0], [642.0, 46.0], [660.0, 47.0], [662.0, 46.0], [670.0, 47.0], [656.0, 46.0], [652.0, 47.0], [654.0, 47.0], [640.0, 47.0], [648.0, 47.0], [650.0, 47.0], [676.0, 46.0], [680.0, 47.0], [682.0, 47.0], [696.0, 46.0], [678.0, 47.0], [686.0, 47.0], [672.0, 47.0], [674.0, 47.0], [698.0, 46.0], [690.0, 47.0], [702.0, 47.0], [700.0, 47.0], [688.0, 47.0], [684.0, 47.0], [692.0, 47.0], [694.0, 46.0], [710.0, 46.0], [706.0, 47.0], [728.0, 46.0], [730.0, 46.0], [714.0, 46.0], [712.0, 45.0], [708.0, 47.0], [704.0, 47.0], [718.0, 49.0], [716.0, 47.0], [732.0, 45.0], [734.0, 46.0], [720.0, 46.0], [724.0, 46.0], [726.0, 47.0], [722.0, 48.0], [744.0, 48.0], [736.0, 46.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 744.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.7333333333333333, "minX": 1.71906438E12, "maxY": 640.3666666666667, "series": [{"data": [[1.71907218E12, 636.0333333333333], [1.71906654E12, 16.033333333333335], [1.71906876E12, 128.03333333333333], [1.71906552E12, 8.0], [1.71906996E12, 160.16666666666666], [1.7190645E12, 7.933333333333334], [1.71906774E12, 32.03333333333333], [1.71907098E12, 320.23333333333335], [1.71906672E12, 16.0], [1.71906894E12, 128.1], [1.71906912E12, 128.0], [1.71907014E12, 160.06666666666666], [1.71907236E12, 639.9666666666667], [1.7190657E12, 15.966666666666667], [1.71906792E12, 31.866666666666667], [1.71906468E12, 7.966666666666667], [1.7190669E12, 32.03333333333333], [1.71907116E12, 319.96666666666664], [1.71906588E12, 16.0], [1.7190693E12, 160.23333333333332], [1.71907152E12, 320.1666666666667], [1.7190681E12, 128.2], [1.71907254E12, 639.1333333333333], [1.71907032E12, 160.16666666666666], [1.71906486E12, 7.933333333333334], [1.71906708E12, 32.03333333333333], [1.71907134E12, 320.3], [1.7190717E12, 639.2], [1.71906606E12, 16.033333333333335], [1.71906828E12, 128.03333333333333], [1.71906504E12, 7.966666666666667], [1.71906948E12, 160.4], [1.71906726E12, 31.833333333333332], [1.7190705E12, 320.3333333333333], [1.71907272E12, 638.4], [1.71906624E12, 15.933333333333334], [1.71906846E12, 128.6], [1.71906522E12, 8.0], [1.71906744E12, 32.03333333333333], [1.71906966E12, 160.43333333333334], [1.71907188E12, 637.2333333333333], [1.71907068E12, 319.8333333333333], [1.71906642E12, 15.966666666666667], [1.71906864E12, 128.2], [1.71907104E12, 319.93333333333334], [1.7190654E12, 7.966666666666667], [1.71906762E12, 31.933333333333334], [1.71907206E12, 640.3666666666667], [1.7190666E12, 16.0], [1.71906984E12, 160.23333333333332], [1.71906438E12, 0.7333333333333333], [1.71906882E12, 128.1], [1.71907086E12, 320.3], [1.71907122E12, 320.73333333333335], [1.71906456E12, 8.033333333333333], [1.71906558E12, 7.166666666666667], [1.7190678E12, 32.03333333333333], [1.71906678E12, 14.033333333333333], [1.719069E12, 128.3], [1.71907224E12, 638.7333333333333], [1.71907002E12, 160.16666666666666], [1.71906576E12, 15.933333333333334], [1.71906474E12, 8.0], [1.71906798E12, 32.266666666666666], [1.71906696E12, 31.933333333333334], [1.71906918E12, 104.13333333333334], [1.7190714E12, 320.26666666666665], [1.71907242E12, 639.2666666666667], [1.7190702E12, 159.83333333333334], [1.71906594E12, 16.0], [1.71906816E12, 128.2], [1.71907056E12, 320.8333333333333], [1.71906492E12, 8.0], [1.71906714E12, 32.1], [1.71907158E12, 277.06666666666666], [1.71906612E12, 15.933333333333334], [1.71906936E12, 160.3], [1.71906834E12, 128.16666666666666], [1.71907038E12, 138.43333333333334], [1.7190726E12, 639.4666666666667], [1.71907074E12, 320.3], [1.7190651E12, 7.933333333333334], [1.71906732E12, 32.03333333333333], [1.7190663E12, 15.866666666666667], [1.71906852E12, 128.63333333333333], [1.71906954E12, 160.13333333333333], [1.71907176E12, 639.7333333333333], [1.71907278E12, 468.23333333333335], [1.71906528E12, 8.0], [1.7190675E12, 32.0], [1.71906648E12, 15.933333333333334], [1.71907092E12, 320.3], [1.7190687E12, 127.7], [1.71907194E12, 639.0666666666667], [1.71906972E12, 159.0], [1.71906546E12, 7.766666666666667], [1.71906768E12, 32.06666666666667], [1.71907008E12, 159.26666666666668], [1.71906444E12, 7.7], [1.71906666E12, 15.966666666666667], [1.71906888E12, 128.0], [1.7190711E12, 320.23333333333335], [1.71906564E12, 15.2], [1.71906786E12, 32.0], [1.7190699E12, 160.66666666666666], [1.71907212E12, 640.2666666666667], [1.71906684E12, 30.433333333333334], [1.71907026E12, 160.26666666666668], [1.71907248E12, 637.7666666666667], [1.71906462E12, 7.966666666666667], [1.7190648E12, 7.966666666666667], [1.71906804E12, 121.2], [1.71906582E12, 16.1], [1.71906906E12, 128.46666666666667], [1.71907128E12, 320.9], [1.7190723E12, 640.1], [1.71907266E12, 639.2], [1.71906702E12, 31.933333333333334], [1.719066E12, 15.9], [1.71907044E12, 301.6666666666667], [1.71906822E12, 128.03333333333333], [1.71907146E12, 319.96666666666664], [1.71906924E12, 151.53333333333333], [1.71906498E12, 7.966666666666667], [1.7190672E12, 32.06666666666667], [1.7190696E12, 160.26666666666668], [1.71906618E12, 16.0], [1.7190684E12, 128.23333333333332], [1.71907062E12, 320.9], [1.71906516E12, 7.966666666666667], [1.71906738E12, 32.1], [1.71906942E12, 160.33333333333334], [1.71907164E12, 602.3333333333334], [1.71906636E12, 16.033333333333335], [1.71906978E12, 160.7], [1.719072E12, 637.7], [1.71906858E12, 128.2], [1.7190708E12, 320.4], [1.71906534E12, 7.933333333333334], [1.71906756E12, 31.9], [1.71907182E12, 637.3]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71907278E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.7333333333333333, "minX": 1.71906438E12, "maxY": 640.3666666666667, "series": [{"data": [[1.71907218E12, 637.0666666666667], [1.71906654E12, 16.033333333333335], [1.71906876E12, 128.03333333333333], [1.71906552E12, 8.0], [1.71906996E12, 160.36666666666667], [1.7190645E12, 7.933333333333334], [1.71906774E12, 32.03333333333333], [1.71907098E12, 319.96666666666664], [1.71906672E12, 16.0], [1.71906894E12, 128.13333333333333], [1.71906912E12, 127.93333333333334], [1.71907014E12, 159.9], [1.71907236E12, 639.6666666666666], [1.7190657E12, 15.966666666666667], [1.71906792E12, 31.9], [1.71906468E12, 8.0], [1.7190669E12, 32.03333333333333], [1.71907116E12, 320.06666666666666], [1.71906588E12, 16.0], [1.7190693E12, 160.46666666666667], [1.71907152E12, 320.23333333333335], [1.7190681E12, 128.26666666666668], [1.71907254E12, 638.7], [1.71907032E12, 160.1], [1.71906486E12, 7.933333333333334], [1.71906708E12, 32.03333333333333], [1.71907134E12, 320.3333333333333], [1.7190717E12, 639.6], [1.71906606E12, 16.033333333333335], [1.71906828E12, 127.96666666666667], [1.71906504E12, 7.966666666666667], [1.71906948E12, 160.46666666666667], [1.71906726E12, 31.833333333333332], [1.7190705E12, 320.53333333333336], [1.71907272E12, 638.7666666666667], [1.71906624E12, 15.9], [1.71906846E12, 128.6], [1.71906522E12, 8.0], [1.71906744E12, 32.0], [1.71906966E12, 160.43333333333334], [1.71907188E12, 636.6666666666666], [1.71907068E12, 319.6], [1.71906642E12, 15.933333333333334], [1.71906864E12, 128.23333333333332], [1.71907104E12, 320.1666666666667], [1.7190654E12, 7.933333333333334], [1.71906762E12, 32.0], [1.71907206E12, 640.3666666666667], [1.7190666E12, 16.0], [1.71906984E12, 160.53333333333333], [1.71906438E12, 0.7333333333333333], [1.71906882E12, 128.03333333333333], [1.71907086E12, 320.1666666666667], [1.71907122E12, 320.6666666666667], [1.71906456E12, 8.033333333333333], [1.71906558E12, 7.166666666666667], [1.7190678E12, 32.0], [1.71906678E12, 14.033333333333333], [1.719069E12, 128.3], [1.71907224E12, 639.1666666666666], [1.71907002E12, 160.1], [1.71906576E12, 15.9], [1.71906474E12, 8.0], [1.71906798E12, 32.2], [1.71906696E12, 31.966666666666665], [1.71906918E12, 104.33333333333333], [1.7190714E12, 320.26666666666665], [1.71907242E12, 639.4333333333333], [1.7190702E12, 159.96666666666667], [1.71906594E12, 16.033333333333335], [1.71906816E12, 128.1], [1.71907056E12, 320.7], [1.71906492E12, 8.0], [1.71906714E12, 32.06666666666667], [1.71907158E12, 276.6], [1.71906612E12, 15.966666666666667], [1.71906936E12, 160.26666666666668], [1.71906834E12, 128.1], [1.71907038E12, 138.46666666666667], [1.7190726E12, 639.3666666666667], [1.71907074E12, 320.5], [1.7190651E12, 7.933333333333334], [1.71906732E12, 32.03333333333333], [1.7190663E12, 15.9], [1.71906852E12, 128.36666666666667], [1.71906954E12, 160.23333333333332], [1.71907176E12, 639.9333333333333], [1.71907278E12, 468.3666666666667], [1.71906528E12, 8.0], [1.7190675E12, 31.866666666666667], [1.71906648E12, 16.0], [1.71907092E12, 320.26666666666665], [1.7190687E12, 127.76666666666667], [1.71907194E12, 638.4333333333333], [1.71906972E12, 158.9], [1.71906546E12, 7.8], [1.71906768E12, 32.06666666666667], [1.71907008E12, 159.33333333333334], [1.71906444E12, 7.7], [1.71906666E12, 15.966666666666667], [1.71906888E12, 128.0], [1.7190711E12, 320.23333333333335], [1.71906564E12, 15.2], [1.71906786E12, 32.0], [1.7190699E12, 160.53333333333333], [1.71907212E12, 639.0], [1.71906684E12, 30.4], [1.71907026E12, 160.3], [1.71907248E12, 637.7666666666667], [1.71906462E12, 7.933333333333334], [1.7190648E12, 7.966666666666667], [1.71906804E12, 121.16666666666667], [1.71906582E12, 16.1], [1.71906906E12, 128.3], [1.71907128E12, 320.8666666666667], [1.7190723E12, 640.0666666666667], [1.71907266E12, 639.6333333333333], [1.71906702E12, 31.933333333333334], [1.719066E12, 15.866666666666667], [1.71907044E12, 301.46666666666664], [1.71906822E12, 128.16666666666666], [1.71907146E12, 320.06666666666666], [1.71906924E12, 151.36666666666667], [1.71906498E12, 7.966666666666667], [1.7190672E12, 32.1], [1.7190696E12, 160.3], [1.71906618E12, 16.0], [1.7190684E12, 128.16666666666666], [1.71907062E12, 320.9], [1.71906516E12, 7.966666666666667], [1.71906738E12, 32.1], [1.71906942E12, 160.1], [1.71907164E12, 601.9], [1.71906636E12, 16.0], [1.71906978E12, 160.43333333333334], [1.719072E12, 638.9333333333333], [1.71906858E12, 128.56666666666666], [1.7190708E12, 320.6666666666667], [1.71906534E12, 7.933333333333334], [1.71906756E12, 32.0], [1.71907182E12, 637.1333333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71907278E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.7333333333333333, "minX": 1.71906438E12, "maxY": 640.3666666666667, "series": [{"data": [[1.71907218E12, 637.0666666666667], [1.71906654E12, 16.033333333333335], [1.71906876E12, 128.03333333333333], [1.71906552E12, 8.0], [1.71906996E12, 160.36666666666667], [1.7190645E12, 7.933333333333334], [1.71906774E12, 32.03333333333333], [1.71907098E12, 319.96666666666664], [1.71906672E12, 16.0], [1.71906894E12, 128.13333333333333], [1.71906912E12, 127.93333333333334], [1.71907014E12, 159.9], [1.71907236E12, 639.6666666666666], [1.7190657E12, 15.966666666666667], [1.71906792E12, 31.9], [1.71906468E12, 8.0], [1.7190669E12, 32.03333333333333], [1.71907116E12, 320.06666666666666], [1.71906588E12, 16.0], [1.7190693E12, 160.46666666666667], [1.71907152E12, 320.23333333333335], [1.7190681E12, 128.26666666666668], [1.71907254E12, 638.7], [1.71907032E12, 160.1], [1.71906486E12, 7.933333333333334], [1.71906708E12, 32.03333333333333], [1.71907134E12, 320.3333333333333], [1.7190717E12, 639.6], [1.71906606E12, 16.033333333333335], [1.71906828E12, 127.96666666666667], [1.71906504E12, 7.966666666666667], [1.71906948E12, 160.46666666666667], [1.71906726E12, 31.833333333333332], [1.7190705E12, 320.53333333333336], [1.71907272E12, 638.7666666666667], [1.71906624E12, 15.9], [1.71906846E12, 128.6], [1.71906522E12, 8.0], [1.71906744E12, 32.0], [1.71906966E12, 160.43333333333334], [1.71907188E12, 636.6666666666666], [1.71907068E12, 319.6], [1.71906642E12, 15.933333333333334], [1.71906864E12, 128.23333333333332], [1.71907104E12, 320.1666666666667], [1.7190654E12, 7.933333333333334], [1.71906762E12, 32.0], [1.71907206E12, 640.3666666666667], [1.7190666E12, 16.0], [1.71906984E12, 160.53333333333333], [1.71906438E12, 0.7333333333333333], [1.71906882E12, 128.03333333333333], [1.71907086E12, 320.1666666666667], [1.71907122E12, 320.6666666666667], [1.71906456E12, 8.033333333333333], [1.71906558E12, 7.166666666666667], [1.7190678E12, 32.0], [1.71906678E12, 14.033333333333333], [1.719069E12, 128.3], [1.71907224E12, 639.1666666666666], [1.71907002E12, 160.1], [1.71906576E12, 15.9], [1.71906474E12, 8.0], [1.71906798E12, 32.2], [1.71906696E12, 31.966666666666665], [1.71906918E12, 104.33333333333333], [1.7190714E12, 320.26666666666665], [1.71907242E12, 639.4333333333333], [1.7190702E12, 159.96666666666667], [1.71906594E12, 16.033333333333335], [1.71906816E12, 128.1], [1.71907056E12, 320.7], [1.71906492E12, 8.0], [1.71906714E12, 32.06666666666667], [1.71907158E12, 276.6], [1.71906612E12, 15.966666666666667], [1.71906936E12, 160.26666666666668], [1.71906834E12, 128.1], [1.71907038E12, 138.46666666666667], [1.7190726E12, 639.3666666666667], [1.71907074E12, 320.5], [1.7190651E12, 7.933333333333334], [1.71906732E12, 32.03333333333333], [1.7190663E12, 15.9], [1.71906852E12, 128.36666666666667], [1.71906954E12, 160.23333333333332], [1.71907176E12, 639.9333333333333], [1.71907278E12, 468.3666666666667], [1.71906528E12, 8.0], [1.7190675E12, 31.866666666666667], [1.71906648E12, 16.0], [1.71907092E12, 320.26666666666665], [1.7190687E12, 127.76666666666667], [1.71907194E12, 638.4333333333333], [1.71906972E12, 158.9], [1.71906546E12, 7.8], [1.71906768E12, 32.06666666666667], [1.71907008E12, 159.33333333333334], [1.71906444E12, 7.7], [1.71906666E12, 15.966666666666667], [1.71906888E12, 128.0], [1.7190711E12, 320.23333333333335], [1.71906564E12, 15.2], [1.71906786E12, 32.0], [1.7190699E12, 160.53333333333333], [1.71907212E12, 639.0], [1.71906684E12, 30.4], [1.71907026E12, 160.3], [1.71907248E12, 637.7666666666667], [1.71906462E12, 7.933333333333334], [1.7190648E12, 7.966666666666667], [1.71906804E12, 121.16666666666667], [1.71906582E12, 16.1], [1.71906906E12, 128.3], [1.71907128E12, 320.8666666666667], [1.7190723E12, 640.0666666666667], [1.71907266E12, 639.6333333333333], [1.71906702E12, 31.933333333333334], [1.719066E12, 15.866666666666667], [1.71907044E12, 301.46666666666664], [1.71906822E12, 128.16666666666666], [1.71907146E12, 320.06666666666666], [1.71906924E12, 151.36666666666667], [1.71906498E12, 7.966666666666667], [1.7190672E12, 32.1], [1.7190696E12, 160.3], [1.71906618E12, 16.0], [1.7190684E12, 128.16666666666666], [1.71907062E12, 320.9], [1.71906516E12, 7.966666666666667], [1.71906738E12, 32.1], [1.71906942E12, 160.1], [1.71907164E12, 601.9], [1.71906636E12, 16.0], [1.71906978E12, 160.43333333333334], [1.719072E12, 638.9333333333333], [1.71906858E12, 128.56666666666666], [1.7190708E12, 320.6666666666667], [1.71906534E12, 7.933333333333334], [1.71906756E12, 32.0], [1.71907182E12, 637.1333333333333]], "isOverall": false, "label": "Directors by name-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71907278E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.7333333333333333, "minX": 1.71906438E12, "maxY": 640.3666666666667, "series": [{"data": [[1.71907218E12, 637.0666666666667], [1.71906654E12, 16.033333333333335], [1.71906876E12, 128.03333333333333], [1.71906552E12, 8.0], [1.71906996E12, 160.36666666666667], [1.7190645E12, 7.933333333333334], [1.71906774E12, 32.03333333333333], [1.71907098E12, 319.96666666666664], [1.71906672E12, 16.0], [1.71906894E12, 128.13333333333333], [1.71906912E12, 127.93333333333334], [1.71907014E12, 159.9], [1.71907236E12, 639.6666666666666], [1.7190657E12, 15.966666666666667], [1.71906792E12, 31.9], [1.71906468E12, 8.0], [1.7190669E12, 32.03333333333333], [1.71907116E12, 320.06666666666666], [1.71906588E12, 16.0], [1.7190693E12, 160.46666666666667], [1.71907152E12, 320.23333333333335], [1.7190681E12, 128.26666666666668], [1.71907254E12, 638.7], [1.71907032E12, 160.1], [1.71906486E12, 7.933333333333334], [1.71906708E12, 32.03333333333333], [1.71907134E12, 320.3333333333333], [1.7190717E12, 639.6], [1.71906606E12, 16.033333333333335], [1.71906828E12, 127.96666666666667], [1.71906504E12, 7.966666666666667], [1.71906948E12, 160.46666666666667], [1.71906726E12, 31.833333333333332], [1.7190705E12, 320.53333333333336], [1.71907272E12, 638.7666666666667], [1.71906624E12, 15.9], [1.71906846E12, 128.6], [1.71906522E12, 8.0], [1.71906744E12, 32.0], [1.71906966E12, 160.43333333333334], [1.71907188E12, 636.6666666666666], [1.71907068E12, 319.6], [1.71906642E12, 15.933333333333334], [1.71906864E12, 128.23333333333332], [1.71907104E12, 320.1666666666667], [1.7190654E12, 7.933333333333334], [1.71906762E12, 32.0], [1.71907206E12, 640.3666666666667], [1.7190666E12, 16.0], [1.71906984E12, 160.53333333333333], [1.71906438E12, 0.7333333333333333], [1.71906882E12, 128.03333333333333], [1.71907086E12, 320.1666666666667], [1.71907122E12, 320.6666666666667], [1.71906456E12, 8.033333333333333], [1.71906558E12, 7.166666666666667], [1.7190678E12, 32.0], [1.71906678E12, 14.033333333333333], [1.719069E12, 128.3], [1.71907224E12, 639.1666666666666], [1.71907002E12, 160.1], [1.71906576E12, 15.9], [1.71906474E12, 8.0], [1.71906798E12, 32.2], [1.71906696E12, 31.966666666666665], [1.71906918E12, 104.33333333333333], [1.7190714E12, 320.26666666666665], [1.71907242E12, 639.4333333333333], [1.7190702E12, 159.96666666666667], [1.71906594E12, 16.033333333333335], [1.71906816E12, 128.1], [1.71907056E12, 320.7], [1.71906492E12, 8.0], [1.71906714E12, 32.06666666666667], [1.71907158E12, 276.6], [1.71906612E12, 15.966666666666667], [1.71906936E12, 160.26666666666668], [1.71906834E12, 128.1], [1.71907038E12, 138.46666666666667], [1.7190726E12, 639.3666666666667], [1.71907074E12, 320.5], [1.7190651E12, 7.933333333333334], [1.71906732E12, 32.03333333333333], [1.7190663E12, 15.9], [1.71906852E12, 128.36666666666667], [1.71906954E12, 160.23333333333332], [1.71907176E12, 639.9333333333333], [1.71907278E12, 468.3666666666667], [1.71906528E12, 8.0], [1.7190675E12, 31.866666666666667], [1.71906648E12, 16.0], [1.71907092E12, 320.26666666666665], [1.7190687E12, 127.76666666666667], [1.71907194E12, 638.4333333333333], [1.71906972E12, 158.9], [1.71906546E12, 7.8], [1.71906768E12, 32.06666666666667], [1.71907008E12, 159.33333333333334], [1.71906444E12, 7.7], [1.71906666E12, 15.966666666666667], [1.71906888E12, 128.0], [1.7190711E12, 320.23333333333335], [1.71906564E12, 15.2], [1.71906786E12, 32.0], [1.7190699E12, 160.53333333333333], [1.71907212E12, 639.0], [1.71906684E12, 30.4], [1.71907026E12, 160.3], [1.71907248E12, 637.7666666666667], [1.71906462E12, 7.933333333333334], [1.7190648E12, 7.966666666666667], [1.71906804E12, 121.16666666666667], [1.71906582E12, 16.1], [1.71906906E12, 128.3], [1.71907128E12, 320.8666666666667], [1.7190723E12, 640.0666666666667], [1.71907266E12, 639.6333333333333], [1.71906702E12, 31.933333333333334], [1.719066E12, 15.866666666666667], [1.71907044E12, 301.46666666666664], [1.71906822E12, 128.16666666666666], [1.71907146E12, 320.06666666666666], [1.71906924E12, 151.36666666666667], [1.71906498E12, 7.966666666666667], [1.7190672E12, 32.1], [1.7190696E12, 160.3], [1.71906618E12, 16.0], [1.7190684E12, 128.16666666666666], [1.71907062E12, 320.9], [1.71906516E12, 7.966666666666667], [1.71906738E12, 32.1], [1.71906942E12, 160.1], [1.71907164E12, 601.9], [1.71906636E12, 16.0], [1.71906978E12, 160.43333333333334], [1.719072E12, 638.9333333333333], [1.71906858E12, 128.56666666666666], [1.7190708E12, 320.6666666666667], [1.71906534E12, 7.933333333333334], [1.71906756E12, 32.0], [1.71907182E12, 637.1333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71907278E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}


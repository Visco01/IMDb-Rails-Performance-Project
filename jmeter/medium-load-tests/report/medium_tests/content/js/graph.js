/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 62031.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 37.0], [0.6, 37.0], [0.7, 38.0], [0.8, 38.0], [0.9, 38.0], [1.0, 38.0], [1.1, 38.0], [1.2, 38.0], [1.3, 38.0], [1.4, 38.0], [1.5, 38.0], [1.6, 39.0], [1.7, 39.0], [1.8, 39.0], [1.9, 39.0], [2.0, 39.0], [2.1, 39.0], [2.2, 39.0], [2.3, 39.0], [2.4, 39.0], [2.5, 39.0], [2.6, 39.0], [2.7, 39.0], [2.8, 39.0], [2.9, 39.0], [3.0, 39.0], [3.1, 39.0], [3.2, 39.0], [3.3, 39.0], [3.4, 39.0], [3.5, 39.0], [3.6, 39.0], [3.7, 39.0], [3.8, 39.0], [3.9, 39.0], [4.0, 39.0], [4.1, 39.0], [4.2, 39.0], [4.3, 39.0], [4.4, 39.0], [4.5, 39.0], [4.6, 39.0], [4.7, 40.0], [4.8, 40.0], [4.9, 40.0], [5.0, 40.0], [5.1, 40.0], [5.2, 40.0], [5.3, 40.0], [5.4, 40.0], [5.5, 40.0], [5.6, 40.0], [5.7, 40.0], [5.8, 40.0], [5.9, 40.0], [6.0, 40.0], [6.1, 40.0], [6.2, 40.0], [6.3, 40.0], [6.4, 40.0], [6.5, 40.0], [6.6, 40.0], [6.7, 40.0], [6.8, 40.0], [6.9, 40.0], [7.0, 40.0], [7.1, 40.0], [7.2, 40.0], [7.3, 40.0], [7.4, 40.0], [7.5, 40.0], [7.6, 40.0], [7.7, 40.0], [7.8, 40.0], [7.9, 40.0], [8.0, 40.0], [8.1, 40.0], [8.2, 40.0], [8.3, 40.0], [8.4, 40.0], [8.5, 40.0], [8.6, 40.0], [8.7, 40.0], [8.8, 40.0], [8.9, 40.0], [9.0, 40.0], [9.1, 40.0], [9.2, 40.0], [9.3, 40.0], [9.4, 40.0], [9.5, 40.0], [9.6, 40.0], [9.7, 40.0], [9.8, 40.0], [9.9, 41.0], [10.0, 41.0], [10.1, 41.0], [10.2, 41.0], [10.3, 41.0], [10.4, 41.0], [10.5, 41.0], [10.6, 41.0], [10.7, 41.0], [10.8, 41.0], [10.9, 41.0], [11.0, 41.0], [11.1, 41.0], [11.2, 41.0], [11.3, 41.0], [11.4, 41.0], [11.5, 41.0], [11.6, 41.0], [11.7, 41.0], [11.8, 41.0], [11.9, 41.0], [12.0, 41.0], [12.1, 41.0], [12.2, 41.0], [12.3, 41.0], [12.4, 41.0], [12.5, 41.0], [12.6, 41.0], [12.7, 41.0], [12.8, 41.0], [12.9, 41.0], [13.0, 41.0], [13.1, 41.0], [13.2, 41.0], [13.3, 41.0], [13.4, 41.0], [13.5, 41.0], [13.6, 41.0], [13.7, 41.0], [13.8, 41.0], [13.9, 41.0], [14.0, 41.0], [14.1, 41.0], [14.2, 41.0], [14.3, 41.0], [14.4, 41.0], [14.5, 41.0], [14.6, 41.0], [14.7, 41.0], [14.8, 41.0], [14.9, 41.0], [15.0, 41.0], [15.1, 41.0], [15.2, 41.0], [15.3, 41.0], [15.4, 41.0], [15.5, 41.0], [15.6, 41.0], [15.7, 41.0], [15.8, 41.0], [15.9, 41.0], [16.0, 41.0], [16.1, 42.0], [16.2, 42.0], [16.3, 42.0], [16.4, 42.0], [16.5, 42.0], [16.6, 42.0], [16.7, 42.0], [16.8, 42.0], [16.9, 42.0], [17.0, 42.0], [17.1, 42.0], [17.2, 42.0], [17.3, 42.0], [17.4, 42.0], [17.5, 42.0], [17.6, 42.0], [17.7, 42.0], [17.8, 42.0], [17.9, 42.0], [18.0, 42.0], [18.1, 42.0], [18.2, 42.0], [18.3, 42.0], [18.4, 42.0], [18.5, 42.0], [18.6, 42.0], [18.7, 42.0], [18.8, 42.0], [18.9, 42.0], [19.0, 42.0], [19.1, 42.0], [19.2, 42.0], [19.3, 42.0], [19.4, 42.0], [19.5, 42.0], [19.6, 42.0], [19.7, 42.0], [19.8, 42.0], [19.9, 42.0], [20.0, 42.0], [20.1, 42.0], [20.2, 42.0], [20.3, 42.0], [20.4, 42.0], [20.5, 42.0], [20.6, 42.0], [20.7, 42.0], [20.8, 42.0], [20.9, 42.0], [21.0, 42.0], [21.1, 42.0], [21.2, 42.0], [21.3, 42.0], [21.4, 42.0], [21.5, 42.0], [21.6, 42.0], [21.7, 42.0], [21.8, 42.0], [21.9, 42.0], [22.0, 42.0], [22.1, 42.0], [22.2, 42.0], [22.3, 42.0], [22.4, 42.0], [22.5, 42.0], [22.6, 42.0], [22.7, 42.0], [22.8, 43.0], [22.9, 43.0], [23.0, 43.0], [23.1, 43.0], [23.2, 43.0], [23.3, 43.0], [23.4, 43.0], [23.5, 43.0], [23.6, 43.0], [23.7, 43.0], [23.8, 43.0], [23.9, 43.0], [24.0, 43.0], [24.1, 43.0], [24.2, 43.0], [24.3, 43.0], [24.4, 43.0], [24.5, 43.0], [24.6, 43.0], [24.7, 43.0], [24.8, 43.0], [24.9, 43.0], [25.0, 43.0], [25.1, 43.0], [25.2, 43.0], [25.3, 43.0], [25.4, 43.0], [25.5, 43.0], [25.6, 43.0], [25.7, 43.0], [25.8, 43.0], [25.9, 43.0], [26.0, 43.0], [26.1, 43.0], [26.2, 43.0], [26.3, 43.0], [26.4, 43.0], [26.5, 43.0], [26.6, 43.0], [26.7, 43.0], [26.8, 43.0], [26.9, 43.0], [27.0, 43.0], [27.1, 43.0], [27.2, 43.0], [27.3, 43.0], [27.4, 43.0], [27.5, 43.0], [27.6, 43.0], [27.7, 43.0], [27.8, 43.0], [27.9, 43.0], [28.0, 43.0], [28.1, 43.0], [28.2, 43.0], [28.3, 43.0], [28.4, 43.0], [28.5, 43.0], [28.6, 43.0], [28.7, 43.0], [28.8, 43.0], [28.9, 43.0], [29.0, 43.0], [29.1, 43.0], [29.2, 43.0], [29.3, 43.0], [29.4, 43.0], [29.5, 43.0], [29.6, 43.0], [29.7, 43.0], [29.8, 44.0], [29.9, 44.0], [30.0, 44.0], [30.1, 44.0], [30.2, 44.0], [30.3, 44.0], [30.4, 44.0], [30.5, 44.0], [30.6, 44.0], [30.7, 44.0], [30.8, 44.0], [30.9, 44.0], [31.0, 44.0], [31.1, 44.0], [31.2, 44.0], [31.3, 44.0], [31.4, 44.0], [31.5, 44.0], [31.6, 44.0], [31.7, 44.0], [31.8, 44.0], [31.9, 44.0], [32.0, 44.0], [32.1, 44.0], [32.2, 44.0], [32.3, 44.0], [32.4, 44.0], [32.5, 44.0], [32.6, 44.0], [32.7, 44.0], [32.8, 44.0], [32.9, 44.0], [33.0, 44.0], [33.1, 44.0], [33.2, 44.0], [33.3, 44.0], [33.4, 44.0], [33.5, 44.0], [33.6, 44.0], [33.7, 44.0], [33.8, 44.0], [33.9, 44.0], [34.0, 44.0], [34.1, 44.0], [34.2, 44.0], [34.3, 44.0], [34.4, 44.0], [34.5, 44.0], [34.6, 44.0], [34.7, 44.0], [34.8, 44.0], [34.9, 44.0], [35.0, 44.0], [35.1, 44.0], [35.2, 44.0], [35.3, 44.0], [35.4, 44.0], [35.5, 44.0], [35.6, 44.0], [35.7, 44.0], [35.8, 44.0], [35.9, 45.0], [36.0, 45.0], [36.1, 45.0], [36.2, 45.0], [36.3, 45.0], [36.4, 45.0], [36.5, 45.0], [36.6, 45.0], [36.7, 45.0], [36.8, 45.0], [36.9, 45.0], [37.0, 45.0], [37.1, 45.0], [37.2, 45.0], [37.3, 45.0], [37.4, 45.0], [37.5, 45.0], [37.6, 45.0], [37.7, 45.0], [37.8, 45.0], [37.9, 45.0], [38.0, 45.0], [38.1, 45.0], [38.2, 45.0], [38.3, 45.0], [38.4, 45.0], [38.5, 45.0], [38.6, 45.0], [38.7, 45.0], [38.8, 45.0], [38.9, 45.0], [39.0, 45.0], [39.1, 45.0], [39.2, 45.0], [39.3, 45.0], [39.4, 45.0], [39.5, 45.0], [39.6, 45.0], [39.7, 45.0], [39.8, 45.0], [39.9, 45.0], [40.0, 45.0], [40.1, 45.0], [40.2, 45.0], [40.3, 45.0], [40.4, 45.0], [40.5, 45.0], [40.6, 45.0], [40.7, 45.0], [40.8, 45.0], [40.9, 45.0], [41.0, 45.0], [41.1, 46.0], [41.2, 46.0], [41.3, 46.0], [41.4, 46.0], [41.5, 46.0], [41.6, 46.0], [41.7, 46.0], [41.8, 46.0], [41.9, 46.0], [42.0, 46.0], [42.1, 46.0], [42.2, 46.0], [42.3, 46.0], [42.4, 46.0], [42.5, 46.0], [42.6, 46.0], [42.7, 46.0], [42.8, 46.0], [42.9, 46.0], [43.0, 46.0], [43.1, 46.0], [43.2, 46.0], [43.3, 46.0], [43.4, 46.0], [43.5, 46.0], [43.6, 46.0], [43.7, 46.0], [43.8, 46.0], [43.9, 46.0], [44.0, 46.0], [44.1, 46.0], [44.2, 46.0], [44.3, 46.0], [44.4, 46.0], [44.5, 46.0], [44.6, 46.0], [44.7, 46.0], [44.8, 46.0], [44.9, 46.0], [45.0, 46.0], [45.1, 46.0], [45.2, 46.0], [45.3, 46.0], [45.4, 47.0], [45.5, 47.0], [45.6, 47.0], [45.7, 47.0], [45.8, 47.0], [45.9, 47.0], [46.0, 47.0], [46.1, 47.0], [46.2, 47.0], [46.3, 47.0], [46.4, 47.0], [46.5, 47.0], [46.6, 47.0], [46.7, 47.0], [46.8, 47.0], [46.9, 47.0], [47.0, 47.0], [47.1, 47.0], [47.2, 47.0], [47.3, 47.0], [47.4, 47.0], [47.5, 47.0], [47.6, 47.0], [47.7, 47.0], [47.8, 47.0], [47.9, 47.0], [48.0, 47.0], [48.1, 47.0], [48.2, 47.0], [48.3, 47.0], [48.4, 47.0], [48.5, 47.0], [48.6, 47.0], [48.7, 47.0], [48.8, 47.0], [48.9, 47.0], [49.0, 47.0], [49.1, 48.0], [49.2, 48.0], [49.3, 48.0], [49.4, 48.0], [49.5, 48.0], [49.6, 48.0], [49.7, 48.0], [49.8, 48.0], [49.9, 48.0], [50.0, 48.0], [50.1, 48.0], [50.2, 48.0], [50.3, 48.0], [50.4, 48.0], [50.5, 48.0], [50.6, 48.0], [50.7, 48.0], [50.8, 48.0], [50.9, 48.0], [51.0, 48.0], [51.1, 48.0], [51.2, 48.0], [51.3, 48.0], [51.4, 48.0], [51.5, 48.0], [51.6, 48.0], [51.7, 48.0], [51.8, 48.0], [51.9, 48.0], [52.0, 48.0], [52.1, 48.0], [52.2, 48.0], [52.3, 49.0], [52.4, 49.0], [52.5, 49.0], [52.6, 49.0], [52.7, 49.0], [52.8, 49.0], [52.9, 49.0], [53.0, 49.0], [53.1, 49.0], [53.2, 49.0], [53.3, 49.0], [53.4, 49.0], [53.5, 49.0], [53.6, 49.0], [53.7, 49.0], [53.8, 49.0], [53.9, 49.0], [54.0, 49.0], [54.1, 49.0], [54.2, 49.0], [54.3, 49.0], [54.4, 49.0], [54.5, 49.0], [54.6, 49.0], [54.7, 49.0], [54.8, 49.0], [54.9, 49.0], [55.0, 49.0], [55.1, 50.0], [55.2, 50.0], [55.3, 50.0], [55.4, 50.0], [55.5, 50.0], [55.6, 50.0], [55.7, 50.0], [55.8, 50.0], [55.9, 50.0], [56.0, 50.0], [56.1, 50.0], [56.2, 50.0], [56.3, 50.0], [56.4, 50.0], [56.5, 50.0], [56.6, 50.0], [56.7, 50.0], [56.8, 50.0], [56.9, 50.0], [57.0, 50.0], [57.1, 50.0], [57.2, 50.0], [57.3, 50.0], [57.4, 50.0], [57.5, 50.0], [57.6, 51.0], [57.7, 51.0], [57.8, 51.0], [57.9, 51.0], [58.0, 51.0], [58.1, 51.0], [58.2, 51.0], [58.3, 51.0], [58.4, 51.0], [58.5, 51.0], [58.6, 51.0], [58.7, 51.0], [58.8, 51.0], [58.9, 51.0], [59.0, 51.0], [59.1, 51.0], [59.2, 51.0], [59.3, 51.0], [59.4, 51.0], [59.5, 51.0], [59.6, 51.0], [59.7, 51.0], [59.8, 51.0], [59.9, 52.0], [60.0, 52.0], [60.1, 52.0], [60.2, 52.0], [60.3, 52.0], [60.4, 52.0], [60.5, 52.0], [60.6, 52.0], [60.7, 52.0], [60.8, 52.0], [60.9, 52.0], [61.0, 52.0], [61.1, 52.0], [61.2, 52.0], [61.3, 52.0], [61.4, 52.0], [61.5, 52.0], [61.6, 52.0], [61.7, 52.0], [61.8, 52.0], [61.9, 53.0], [62.0, 53.0], [62.1, 53.0], [62.2, 53.0], [62.3, 53.0], [62.4, 53.0], [62.5, 53.0], [62.6, 53.0], [62.7, 53.0], [62.8, 53.0], [62.9, 53.0], [63.0, 53.0], [63.1, 53.0], [63.2, 53.0], [63.3, 53.0], [63.4, 53.0], [63.5, 53.0], [63.6, 53.0], [63.7, 54.0], [63.8, 54.0], [63.9, 54.0], [64.0, 54.0], [64.1, 54.0], [64.2, 54.0], [64.3, 54.0], [64.4, 54.0], [64.5, 54.0], [64.6, 54.0], [64.7, 54.0], [64.8, 54.0], [64.9, 54.0], [65.0, 54.0], [65.1, 54.0], [65.2, 54.0], [65.3, 54.0], [65.4, 54.0], [65.5, 55.0], [65.6, 55.0], [65.7, 55.0], [65.8, 55.0], [65.9, 55.0], [66.0, 55.0], [66.1, 55.0], [66.2, 55.0], [66.3, 55.0], [66.4, 55.0], [66.5, 55.0], [66.6, 55.0], [66.7, 55.0], [66.8, 55.0], [66.9, 55.0], [67.0, 56.0], [67.1, 56.0], [67.2, 56.0], [67.3, 56.0], [67.4, 56.0], [67.5, 56.0], [67.6, 56.0], [67.7, 56.0], [67.8, 56.0], [67.9, 56.0], [68.0, 56.0], [68.1, 56.0], [68.2, 56.0], [68.3, 56.0], [68.4, 56.0], [68.5, 57.0], [68.6, 57.0], [68.7, 57.0], [68.8, 57.0], [68.9, 57.0], [69.0, 57.0], [69.1, 57.0], [69.2, 57.0], [69.3, 57.0], [69.4, 57.0], [69.5, 57.0], [69.6, 57.0], [69.7, 57.0], [69.8, 57.0], [69.9, 58.0], [70.0, 58.0], [70.1, 58.0], [70.2, 58.0], [70.3, 58.0], [70.4, 58.0], [70.5, 58.0], [70.6, 58.0], [70.7, 58.0], [70.8, 58.0], [70.9, 58.0], [71.0, 58.0], [71.1, 58.0], [71.2, 59.0], [71.3, 59.0], [71.4, 59.0], [71.5, 59.0], [71.6, 59.0], [71.7, 59.0], [71.8, 59.0], [71.9, 59.0], [72.0, 59.0], [72.1, 59.0], [72.2, 59.0], [72.3, 59.0], [72.4, 59.0], [72.5, 60.0], [72.6, 60.0], [72.7, 60.0], [72.8, 60.0], [72.9, 60.0], [73.0, 60.0], [73.1, 60.0], [73.2, 60.0], [73.3, 60.0], [73.4, 60.0], [73.5, 60.0], [73.6, 60.0], [73.7, 61.0], [73.8, 61.0], [73.9, 61.0], [74.0, 61.0], [74.1, 61.0], [74.2, 61.0], [74.3, 61.0], [74.4, 61.0], [74.5, 61.0], [74.6, 61.0], [74.7, 61.0], [74.8, 62.0], [74.9, 62.0], [75.0, 62.0], [75.1, 62.0], [75.2, 62.0], [75.3, 62.0], [75.4, 62.0], [75.5, 62.0], [75.6, 62.0], [75.7, 62.0], [75.8, 62.0], [75.9, 63.0], [76.0, 63.0], [76.1, 63.0], [76.2, 63.0], [76.3, 63.0], [76.4, 63.0], [76.5, 63.0], [76.6, 63.0], [76.7, 63.0], [76.8, 63.0], [76.9, 64.0], [77.0, 64.0], [77.1, 64.0], [77.2, 64.0], [77.3, 64.0], [77.4, 64.0], [77.5, 64.0], [77.6, 64.0], [77.7, 64.0], [77.8, 65.0], [77.9, 65.0], [78.0, 65.0], [78.1, 65.0], [78.2, 65.0], [78.3, 65.0], [78.4, 65.0], [78.5, 65.0], [78.6, 65.0], [78.7, 66.0], [78.8, 66.0], [78.9, 66.0], [79.0, 66.0], [79.1, 66.0], [79.2, 66.0], [79.3, 66.0], [79.4, 66.0], [79.5, 66.0], [79.6, 67.0], [79.7, 67.0], [79.8, 67.0], [79.9, 67.0], [80.0, 67.0], [80.1, 67.0], [80.2, 67.0], [80.3, 67.0], [80.4, 68.0], [80.5, 68.0], [80.6, 68.0], [80.7, 68.0], [80.8, 68.0], [80.9, 68.0], [81.0, 68.0], [81.1, 68.0], [81.2, 69.0], [81.3, 69.0], [81.4, 69.0], [81.5, 69.0], [81.6, 69.0], [81.7, 69.0], [81.8, 69.0], [81.9, 70.0], [82.0, 70.0], [82.1, 70.0], [82.2, 70.0], [82.3, 70.0], [82.4, 70.0], [82.5, 70.0], [82.6, 71.0], [82.7, 71.0], [82.8, 71.0], [82.9, 71.0], [83.0, 71.0], [83.1, 71.0], [83.2, 71.0], [83.3, 72.0], [83.4, 72.0], [83.5, 72.0], [83.6, 72.0], [83.7, 72.0], [83.8, 72.0], [83.9, 73.0], [84.0, 73.0], [84.1, 73.0], [84.2, 73.0], [84.3, 73.0], [84.4, 73.0], [84.5, 74.0], [84.6, 74.0], [84.7, 74.0], [84.8, 74.0], [84.9, 74.0], [85.0, 74.0], [85.1, 74.0], [85.2, 75.0], [85.3, 75.0], [85.4, 75.0], [85.5, 75.0], [85.6, 75.0], [85.7, 75.0], [85.8, 76.0], [85.9, 76.0], [86.0, 76.0], [86.1, 76.0], [86.2, 76.0], [86.3, 76.0], [86.4, 77.0], [86.5, 77.0], [86.6, 77.0], [86.7, 77.0], [86.8, 77.0], [86.9, 77.0], [87.0, 78.0], [87.1, 78.0], [87.2, 78.0], [87.3, 78.0], [87.4, 78.0], [87.5, 78.0], [87.6, 79.0], [87.7, 79.0], [87.8, 79.0], [87.9, 79.0], [88.0, 79.0], [88.1, 79.0], [88.2, 80.0], [88.3, 80.0], [88.4, 80.0], [88.5, 80.0], [88.6, 80.0], [88.7, 81.0], [88.8, 81.0], [88.9, 81.0], [89.0, 81.0], [89.1, 81.0], [89.2, 82.0], [89.3, 82.0], [89.4, 82.0], [89.5, 82.0], [89.6, 82.0], [89.7, 83.0], [89.8, 83.0], [89.9, 83.0], [90.0, 83.0], [90.1, 83.0], [90.2, 84.0], [90.3, 84.0], [90.4, 84.0], [90.5, 84.0], [90.6, 85.0], [90.7, 85.0], [90.8, 85.0], [90.9, 85.0], [91.0, 86.0], [91.1, 86.0], [91.2, 86.0], [91.3, 86.0], [91.4, 87.0], [91.5, 87.0], [91.6, 87.0], [91.7, 88.0], [91.8, 88.0], [91.9, 88.0], [92.0, 88.0], [92.1, 89.0], [92.2, 89.0], [92.3, 89.0], [92.4, 90.0], [92.5, 90.0], [92.6, 90.0], [92.7, 91.0], [92.8, 91.0], [92.9, 92.0], [93.0, 92.0], [93.1, 92.0], [93.2, 93.0], [93.3, 93.0], [93.4, 93.0], [93.5, 94.0], [93.6, 94.0], [93.7, 95.0], [93.8, 95.0], [93.9, 96.0], [94.0, 96.0], [94.1, 97.0], [94.2, 97.0], [94.3, 98.0], [94.4, 98.0], [94.5, 99.0], [94.6, 99.0], [94.7, 100.0], [94.8, 100.0], [94.9, 101.0], [95.0, 101.0], [95.1, 102.0], [95.2, 103.0], [95.3, 103.0], [95.4, 104.0], [95.5, 105.0], [95.6, 105.0], [95.7, 106.0], [95.8, 107.0], [95.9, 108.0], [96.0, 108.0], [96.1, 109.0], [96.2, 110.0], [96.3, 111.0], [96.4, 112.0], [96.5, 113.0], [96.6, 114.0], [96.7, 115.0], [96.8, 116.0], [96.9, 117.0], [97.0, 118.0], [97.1, 120.0], [97.2, 121.0], [97.3, 122.0], [97.4, 124.0], [97.5, 126.0], [97.6, 128.0], [97.7, 129.0], [97.8, 132.0], [97.9, 134.0], [98.0, 136.0], [98.1, 139.0], [98.2, 142.0], [98.3, 146.0], [98.4, 150.0], [98.5, 155.0], [98.6, 164.0], [98.7, 177.0], [98.8, 200.0], [98.9, 270.0], [99.0, 11251.0], [99.1, 11301.0], [99.2, 15431.0], [99.3, 15732.0], [99.4, 16329.0], [99.5, 20278.0], [99.6, 20284.0], [99.7, 20294.0], [99.8, 20311.0], [99.9, 20335.0], [100.0, 62031.0]], "isOverall": false, "label": "Directors by name", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 3066462.0, "series": [{"data": [[0.0, 3066462.0], [600.0, 24.0], [700.0, 2.0], [900.0, 2.0], [1000.0, 10.0], [1100.0, 42.0], [1400.0, 2.0], [9200.0, 122.0], [9000.0, 36.0], [9100.0, 40.0], [8900.0, 4.0], [9300.0, 42.0], [9500.0, 10.0], [9400.0, 2.0], [9700.0, 2.0], [9600.0, 2.0], [10000.0, 14.0], [10200.0, 4.0], [10700.0, 2.0], [10500.0, 2.0], [10400.0, 2.0], [11200.0, 3166.0], [11300.0, 1274.0], [11400.0, 2.0], [11900.0, 2.0], [15300.0, 926.0], [15200.0, 608.0], [15100.0, 100.0], [15000.0, 4.0], [15400.0, 1416.0], [15500.0, 1158.0], [15600.0, 704.0], [15700.0, 1156.0], [15800.0, 930.0], [16000.0, 436.0], [16100.0, 232.0], [15900.0, 560.0], [16200.0, 246.0], [16300.0, 236.0], [16600.0, 72.0], [16500.0, 140.0], [16400.0, 170.0], [16700.0, 74.0], [17100.0, 18.0], [16900.0, 14.0], [16800.0, 58.0], [17000.0, 2.0], [17200.0, 36.0], [17300.0, 66.0], [17400.0, 40.0], [17900.0, 12.0], [17600.0, 46.0], [17700.0, 4.0], [17500.0, 94.0], [18200.0, 2.0], [18300.0, 4.0], [18400.0, 12.0], [17800.0, 32.0], [18600.0, 6.0], [18900.0, 2.0], [18700.0, 20.0], [19400.0, 12.0], [20200.0, 9898.0], [20400.0, 314.0], [20300.0, 7372.0], [20700.0, 152.0], [20500.0, 68.0], [20800.0, 206.0], [20600.0, 40.0], [20900.0, 144.0], [21000.0, 46.0], [21500.0, 2.0], [21100.0, 34.0], [21200.0, 8.0], [21300.0, 16.0], [21400.0, 8.0], [100.0, 133528.0], [200.0, 4258.0], [60900.0, 2.0], [62000.0, 4.0], [61700.0, 8.0], [61500.0, 8.0], [300.0, 1592.0], [400.0, 178.0], [500.0, 100.0]], "isOverall": false, "label": "Directors by name", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 62000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 180.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 3190238.0, "series": [{"data": [[0.0, 3190238.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 180.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 32706.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 15782.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 162.0298982188296, "minX": 1.71907464E12, "maxY": 1200.0, "series": [{"data": [[1.71907686E12, 1000.0], [1.71907668E12, 1000.0], [1.7190765E12, 968.2506492934866], [1.71907698E12, 1000.0], [1.7190768E12, 1000.0], [1.71907662E12, 1000.0], [1.71907644E12, 397.91723415400566], [1.71907692E12, 1000.0], [1.71907674E12, 1000.0], [1.71907656E12, 1000.0], [1.71907704E12, 985.2337339411527]], "isOverall": false, "label": "Directors by name D", "isController": false}, {"data": [[1.7190759E12, 773.6616495921302], [1.71907638E12, 800.0], [1.7190762E12, 800.0], [1.71907602E12, 800.0], [1.71907584E12, 315.0977616853191], [1.71907632E12, 800.0], [1.71907614E12, 800.0], [1.71907644E12, 788.2086304355889], [1.71907596E12, 800.0], [1.71907626E12, 800.0], [1.71907608E12, 800.0]], "isOverall": false, "label": "Directors by name C", "isController": false}, {"data": [[1.71907524E12, 240.8973481608213], [1.71907542E12, 600.0], [1.71907572E12, 600.0], [1.71907554E12, 600.0], [1.71907536E12, 600.0], [1.71907584E12, 591.1283282193423], [1.71907566E12, 600.0], [1.71907548E12, 600.0], [1.71907578E12, 600.0], [1.7190753E12, 581.3918656962122], [1.7190756E12, 600.0]], "isOverall": false, "label": "Directors by name B", "isController": false}, {"data": [[1.71907476E12, 400.0], [1.71907524E12, 394.09898721076377], [1.71907494E12, 400.0], [1.71907488E12, 400.0], [1.71907506E12, 400.0], [1.719075E12, 400.0], [1.7190747E12, 387.83688716802044], [1.71907518E12, 400.0], [1.71907464E12, 162.0298982188296], [1.71907512E12, 400.0], [1.71907482E12, 400.0]], "isOverall": false, "label": "Directors by name A", "isController": false}, {"data": [[1.71907734E12, 1200.0], [1.71907752E12, 1200.0], [1.71907716E12, 1200.0], [1.71907728E12, 1200.0], [1.71907758E12, 1200.0], [1.7190771E12, 1161.1869177767778], [1.7190774E12, 1200.0], [1.71907746E12, 1200.0], [1.71907722E12, 1200.0], [1.71907764E12, 1183.0122722865763], [1.71907704E12, 473.3269572953753]], "isOverall": false, "label": "Directors by name E", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71907764E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 41.22222222222223, "minX": 1.0, "maxY": 1017.6340887629893, "series": [{"data": [[2.0, 42.333333333333336], [3.0, 68.25], [4.0, 56.33333333333333], [5.0, 53.33333333333333], [6.0, 64.5], [7.0, 48.0], [8.0, 47.333333333333336], [9.0, 59.166666666666664], [10.0, 64.0], [11.0, 49.5], [12.0, 55.0], [13.0, 46.2], [14.0, 47.800000000000004], [15.0, 48.83333333333333], [16.0, 43.75], [17.0, 56.33333333333333], [18.0, 43.49999999999999], [19.0, 42.0], [20.0, 46.375], [21.0, 52.0], [22.0, 54.0], [23.0, 201.8571428571429], [24.0, 111.39999999999999], [25.0, 46.0], [26.0, 130.22222222222223], [27.0, 79.83333333333334], [28.0, 106.42857142857144], [29.0, 60.24999999999999], [30.0, 64.71428571428571], [31.0, 73.66666666666667], [32.0, 65.75], [33.0, 59.33333333333333], [34.0, 82.16666666666667], [35.0, 65.22222222222221], [37.0, 69.6], [36.0, 61.6], [38.0, 102.66666666666667], [39.0, 62.699999999999996], [40.0, 69.33333333333336], [41.0, 59.3], [42.0, 73.0], [43.0, 63.5], [44.0, 70.28571428571428], [45.0, 71.99999999999999], [46.0, 67.61538461538463], [47.0, 60.50000000000001], [48.0, 77.39999999999999], [49.0, 69.0], [50.0, 68.85714285714285], [51.0, 65.0], [52.0, 62.14285714285714], [53.0, 67.90909090909092], [54.0, 68.26666666666668], [55.0, 55.00000000000001], [56.0, 61.71428571428572], [57.0, 67.3846153846154], [58.0, 71.23076923076923], [59.0, 60.454545454545446], [60.0, 62.666666666666664], [61.0, 63.4], [62.0, 61.26666666666666], [63.0, 61.83333333333333], [64.0, 71.28571428571428], [65.0, 66.13333333333333], [66.0, 67.23076923076923], [67.0, 60.41666666666666], [68.0, 63.07692307692308], [69.0, 63.84210526315789], [70.0, 64.33333333333333], [71.0, 63.92307692307693], [72.0, 61.14285714285715], [73.0, 63.333333333333336], [74.0, 61.06666666666667], [75.0, 60.333333333333336], [76.0, 61.315789473684205], [77.0, 60.250000000000014], [78.0, 57.84615384615385], [79.0, 61.5], [80.0, 59.44999999999999], [81.0, 55.285714285714285], [82.0, 61.46666666666666], [83.0, 59.13333333333334], [84.0, 51.57142857142857], [85.0, 61.05263157894736], [86.0, 59.684210526315795], [87.0, 56.583333333333336], [88.0, 62.18750000000001], [89.0, 56.0], [90.0, 61.50000000000001], [91.0, 58.26315789473684], [92.0, 56.38888888888888], [93.0, 56.42857142857142], [94.0, 54.42105263157895], [95.0, 61.81818181818182], [96.0, 59.33333333333334], [97.0, 58.64705882352941], [98.0, 58.8], [99.0, 58.1764705882353], [100.0, 56.888888888888886], [101.0, 55.608695652173914], [102.0, 54.57142857142856], [103.0, 55.380952380952394], [104.0, 55.739130434782616], [105.0, 56.36842105263157], [106.0, 61.8125], [107.0, 50.64285714285713], [108.0, 57.44444444444446], [109.0, 54.09090909090911], [110.0, 56.44117647058824], [111.0, 55.05263157894736], [112.0, 51.3], [113.0, 56.400000000000006], [114.0, 55.56521739130434], [115.0, 50.277777777777786], [116.0, 52.333333333333336], [117.0, 54.519999999999996], [118.0, 60.53333333333334], [119.0, 55.99999999999999], [120.0, 52.95], [121.0, 54.18181818181819], [122.0, 58.409090909090914], [123.0, 56.249999999999986], [124.0, 49.38095238095238], [125.0, 55.04166666666668], [126.0, 54.441176470588225], [127.0, 50.79999999999998], [128.0, 53.59999999999999], [129.0, 53.4], [130.0, 54.739130434782616], [131.0, 55.652173913043484], [132.0, 51.538461538461526], [133.0, 56.3], [134.0, 58.53846153846152], [135.0, 57.74999999999998], [136.0, 55.448275862068954], [137.0, 55.11111111111111], [138.0, 51.15384615384616], [139.0, 48.11538461538461], [140.0, 52.58620689655172], [141.0, 54.23333333333333], [142.0, 54.27272727272728], [143.0, 51.66666666666667], [144.0, 53.733333333333334], [145.0, 53.27272727272727], [146.0, 50.542857142857144], [147.0, 55.39130434782608], [148.0, 55.25000000000001], [149.0, 51.5], [150.0, 54.555555555555564], [151.0, 51.84615384615385], [152.0, 54.470588235294116], [153.0, 54.78260869565218], [154.0, 51.34285714285715], [155.0, 50.08333333333333], [156.0, 54.666666666666664], [157.0, 52.55882352941176], [158.0, 54.40909090909091], [159.0, 53.76470588235293], [160.0, 50.342857142857156], [161.0, 52.36111111111112], [162.0, 62.38095238095238], [163.0, 52.6774193548387], [164.0, 56.60000000000001], [165.0, 56.79310344827586], [166.0, 50.68965517241379], [167.0, 53.74193548387097], [168.0, 49.80645161290322], [169.0, 53.36363636363637], [170.0, 56.370370370370374], [171.0, 52.92500000000001], [172.0, 50.26470588235294], [173.0, 52.23076923076923], [174.0, 53.439024390243915], [175.0, 52.8695652173913], [176.0, 54.00000000000001], [177.0, 55.106382978723396], [178.0, 53.419354838709694], [179.0, 52.857142857142854], [180.0, 53.32258064516129], [181.0, 48.83333333333332], [182.0, 51.30555555555554], [183.0, 54.812499999999986], [184.0, 62.47727272727273], [185.0, 50.13793103448277], [186.0, 51.102564102564095], [187.0, 49.0967741935484], [188.0, 48.500000000000014], [189.0, 48.781249999999986], [190.0, 54.714285714285715], [191.0, 50.028571428571404], [192.0, 49.666666666666664], [193.0, 50.483870967741915], [194.0, 50.524999999999984], [195.0, 55.91666666666667], [196.0, 56.17142857142858], [197.0, 49.82352941176471], [198.0, 51.2162162162162], [199.0, 52.65789473684209], [200.0, 52.19444444444445], [201.0, 52.91176470588235], [202.0, 55.14705882352942], [203.0, 52.790697674418595], [204.0, 46.93478260869564], [205.0, 51.464285714285694], [206.0, 46.78048780487804], [207.0, 50.94871794871795], [208.0, 50.81818181818182], [209.0, 46.714285714285715], [210.0, 50.8780487804878], [211.0, 50.826086956521735], [212.0, 51.04545454545455], [213.0, 48.06818181818182], [214.0, 50.058823529411754], [215.0, 51.265306122448976], [216.0, 51.46153846153848], [217.0, 50.70731707317073], [218.0, 49.89130434782608], [219.0, 52.22916666666666], [220.0, 46.4], [221.0, 53.37499999999998], [222.0, 49.568181818181834], [223.0, 51.862068965517246], [224.0, 48.04545454545455], [225.0, 49.51111111111112], [226.0, 49.75555555555553], [227.0, 49.382978723404285], [228.0, 47.866666666666674], [229.0, 48.677419354838726], [230.0, 49.70454545454545], [231.0, 50.01960784313726], [232.0, 50.23529411764706], [233.0, 48.666666666666664], [234.0, 52.26666666666667], [235.0, 49.486486486486505], [236.0, 56.187499999999986], [237.0, 48.75757575757575], [238.0, 52.212765957446784], [239.0, 53.28301886792456], [240.0, 50.435897435897445], [241.0, 51.341463414634134], [242.0, 51.84782608695654], [243.0, 48.844444444444456], [244.0, 50.673469387755084], [245.0, 52.41304347826087], [246.0, 54.5], [247.0, 48.94230769230768], [248.0, 48.20000000000001], [249.0, 51.83333333333333], [250.0, 51.08888888888891], [251.0, 50.978260869565226], [252.0, 50.10416666666668], [253.0, 48.711538461538446], [254.0, 49.35555555555556], [255.0, 49.15384615384617], [257.0, 49.22641509433959], [256.0, 49.76923076923078], [258.0, 49.97826086956521], [259.0, 52.54054054054053], [260.0, 50.5], [261.0, 49.606557377049185], [262.0, 48.735849056603755], [263.0, 52.42499999999998], [264.0, 52.95918367346939], [270.0, 49.142857142857146], [271.0, 51.76744186046512], [268.0, 55.512195121951244], [269.0, 52.07462686567163], [265.0, 55.88636363636363], [266.0, 53.56363636363636], [267.0, 51.941176470588225], [273.0, 50.29629629629628], [272.0, 49.34545454545454], [274.0, 47.17307692307692], [275.0, 48.489361702127646], [276.0, 47.52272727272727], [277.0, 51.25806451612902], [278.0, 49.07547169811322], [279.0, 49.4705882352941], [280.0, 47.476190476190474], [286.0, 47.523076923076935], [287.0, 49.85106382978725], [284.0, 46.84782608695652], [285.0, 51.47368421052632], [281.0, 47.944444444444414], [282.0, 49.375], [283.0, 46.68085106382978], [289.0, 47.945454545454545], [288.0, 48.76595744680853], [290.0, 47.29999999999999], [291.0, 50.61016949152543], [292.0, 47.653061224489775], [293.0, 47.33333333333333], [294.0, 49.21818181818181], [295.0, 48.54901960784314], [296.0, 50.06521739130433], [302.0, 51.469696969696976], [303.0, 47.93220338983051], [300.0, 47.42592592592593], [301.0, 46.59090909090907], [297.0, 50.94444444444444], [298.0, 52.676056338028154], [299.0, 48.48888888888888], [305.0, 47.509433962264175], [304.0, 48.49122807017544], [306.0, 51.48979591836737], [307.0, 52.584615384615375], [308.0, 48.81355932203391], [309.0, 48.64814814814815], [310.0, 50.703124999999986], [311.0, 49.61538461538461], [312.0, 47.00000000000001], [318.0, 48.76363636363638], [319.0, 46.597014925373166], [316.0, 47.28070175438596], [317.0, 48.50877192982457], [313.0, 48.020408163265294], [314.0, 48.375], [315.0, 48.491228070175424], [321.0, 51.037037037037024], [320.0, 51.5531914893617], [322.0, 53.081967213114744], [323.0, 48.50704225352113], [324.0, 52.017543859649145], [325.0, 50.350877192982416], [326.0, 48.81355932203388], [327.0, 55.41176470588236], [328.0, 46.69565217391305], [334.0, 49.86274509803921], [335.0, 54.18181818181818], [332.0, 54.40677966101696], [333.0, 50.33333333333334], [329.0, 55.016393442622956], [330.0, 50.678571428571416], [331.0, 50.50000000000003], [337.0, 51.648148148148145], [336.0, 52.14285714285714], [338.0, 49.5846153846154], [339.0, 48.43636363636362], [340.0, 47.086956521739125], [341.0, 47.29090909090908], [342.0, 52.30303030303029], [343.0, 56.66666666666666], [344.0, 57.761904761904745], [350.0, 51.83823529411766], [351.0, 51.47916666666666], [348.0, 51.61643835616438], [349.0, 47.950819672131146], [345.0, 52.38666666666665], [346.0, 54.61111111111111], [347.0, 52.10144927536229], [353.0, 56.573170731707336], [352.0, 53.33333333333331], [354.0, 52.647058823529406], [355.0, 55.632911392405084], [356.0, 52.07575757575758], [357.0, 51.74285714285714], [358.0, 51.693548387096754], [359.0, 48.59183673469388], [360.0, 50.015873015873], [366.0, 53.333333333333314], [367.0, 51.000000000000014], [364.0, 55.18987341772153], [365.0, 48.919999999999995], [361.0, 50.94117647058822], [362.0, 55.169014084507026], [363.0, 52.58208955223881], [369.0, 48.56862745098041], [368.0, 49.47297297297297], [370.0, 64.75], [371.0, 52.51351351351349], [372.0, 54.08064516129031], [373.0, 52.73333333333334], [374.0, 53.12121212121212], [375.0, 52.10526315789472], [376.0, 48.19642857142856], [382.0, 54.77464788732396], [383.0, 49.971830985915524], [380.0, 51.57627118644069], [381.0, 50.191176470588225], [377.0, 45.61194029850746], [378.0, 50.55999999999999], [379.0, 50.81690140845068], [385.0, 54.322580645161274], [384.0, 51.84507042253523], [386.0, 51.07352941176471], [387.0, 54.023529411764706], [388.0, 54.41428571428573], [389.0, 52.756097560975604], [390.0, 51.54166666666664], [391.0, 45.40000000000001], [392.0, 54.57499999999997], [398.0, 52.69230769230768], [399.0, 50.59999999999998], [396.0, 57.22093023255815], [397.0, 52.781609195402304], [393.0, 52.417910447761194], [394.0, 52.14545454545456], [395.0, 53.728813559322035], [401.0, 48.073170731707314], [400.0, 51.430767961725664], [402.0, 47.358490566037744], [403.0, 49.89795918367346], [404.0, 51.51063829787233], [405.0, 49.742857142857154], [406.0, 49.811594202898554], [407.0, 48.78723404255319], [408.0, 50.21153846153846], [414.0, 49.910714285714306], [415.0, 52.29166666666667], [412.0, 49.07843137254902], [413.0, 48.88095238095237], [409.0, 48.755102040816304], [410.0, 50.3695652173913], [411.0, 49.49999999999999], [417.0, 51.550000000000004], [416.0, 47.12962962962964], [418.0, 51.47058823529409], [419.0, 54.49999999999998], [420.0, 51.03508771929822], [421.0, 57.55769230769232], [422.0, 50.75757575757575], [423.0, 54.673469387755105], [424.0, 48.87755102040815], [430.0, 59.12068965517241], [431.0, 57.680000000000014], [428.0, 51.40000000000001], [429.0, 60.75000000000002], [425.0, 53.09433962264151], [426.0, 50.62962962962964], [427.0, 52.68888888888889], [433.0, 48.628571428571426], [432.0, 50.80952380952381], [434.0, 53.06666666666664], [435.0, 51.956521739130444], [436.0, 51.84210526315791], [437.0, 55.758620689655174], [438.0, 51.61999999999998], [439.0, 50.29310344827587], [440.0, 55.078431372549005], [446.0, 62.807017543859644], [447.0, 61.426666666666655], [444.0, 55.930232558139544], [445.0, 59.43243243243243], [441.0, 59.3673469387755], [442.0, 59.08333333333334], [443.0, 56.71794871794871], [449.0, 49.23728813559322], [448.0, 53.59322033898305], [450.0, 50.55319148936171], [451.0, 49.727272727272734], [452.0, 52.23529411764705], [453.0, 49.28070175438596], [454.0, 53.1132075471698], [455.0, 54.83018867924529], [456.0, 51.015624999999964], [462.0, 50.253968253968246], [463.0, 53.06779661016949], [460.0, 53.08928571428572], [461.0, 47.73684210526316], [457.0, 46.811320754716995], [458.0, 47.304347826086975], [459.0, 52.79245283018869], [465.0, 54.33333333333333], [464.0, 52.424242424242415], [466.0, 50.0625], [467.0, 51.661764705882334], [468.0, 47.90566037735849], [469.0, 52.56521739130435], [470.0, 49.93617021276597], [471.0, 48.99999999999999], [472.0, 53.523809523809526], [478.0, 52.85454545454547], [479.0, 53.61194029850744], [476.0, 48.31481481481481], [477.0, 51.912280701754376], [473.0, 56.98684210526315], [474.0, 50.80701754385963], [475.0, 52.51724137931034], [482.0, 69.71604938271606], [480.0, 55.133333333333326], [481.0, 51.11111111111111], [483.0, 53.68333333333335], [492.0, 55.99999999999999], [493.0, 51.454545454545446], [494.0, 51.953488372093], [495.0, 60.55882352941177], [484.0, 48.765957446808514], [485.0, 52.52307692307692], [486.0, 53.42622950819674], [487.0, 50.46153846153846], [488.0, 57.035714285714285], [489.0, 53.43076923076922], [490.0, 46.25000000000001], [491.0, 54.018867924528294], [497.0, 55.78666666666667], [496.0, 53.80357142857144], [498.0, 50.352272727272734], [499.0, 54.1860465116279], [500.0, 52.090909090909086], [501.0, 45.12765957446805], [502.0, 55.25757575757575], [503.0, 53.26923076923077], [504.0, 50.53999999999999], [510.0, 56.491228070175445], [511.0, 50.27118644067798], [508.0, 48.46938775510203], [509.0, 53.543859649122794], [505.0, 60.430769230769215], [506.0, 54.89130434782607], [507.0, 54.28571428571431], [515.0, 51.711538461538446], [512.0, 52.41666666666664], [526.0, 51.01785714285714], [527.0, 55.44927536231884], [524.0, 51.9090909090909], [525.0, 53.034482758620676], [522.0, 48.49152542372881], [523.0, 53.78000000000003], [513.0, 53.74647887323947], [514.0, 51.07017543859649], [516.0, 61.806451612903224], [517.0, 54.396226415094354], [518.0, 62.08333333333336], [519.0, 56.22666666666665], [528.0, 53.28571428571429], [542.0, 54.95999999999997], [543.0, 54.86567164179103], [540.0, 54.22666666666665], [541.0, 53.57500000000001], [538.0, 52.26086956521739], [539.0, 50.77192982456141], [536.0, 56.924242424242436], [537.0, 59.46774193548389], [529.0, 51.68421052631579], [530.0, 52.54545454545455], [531.0, 47.46808510638297], [532.0, 52.011627906976756], [533.0, 48.79032258064518], [534.0, 52.423076923076934], [535.0, 51.24999999999999], [520.0, 53.12121212121209], [521.0, 52.08333333333332], [547.0, 50.23529411764706], [544.0, 52.84615384615386], [558.0, 57.63636363636364], [559.0, 51.84999999999999], [556.0, 60.40789473684214], [557.0, 54.17187499999999], [554.0, 63.32894736842107], [555.0, 58.976190476190474], [545.0, 55.16279069767443], [546.0, 59.203703703703695], [548.0, 66.10569105691054], [549.0, 58.273972602739704], [550.0, 52.000000000000014], [551.0, 58.951612903225794], [560.0, 61.819672131147534], [574.0, 51.852272727272734], [575.0, 48.00000000000001], [572.0, 49.19354838709679], [573.0, 55.17117117117117], [570.0, 51.6984126984127], [571.0, 52.36065573770491], [568.0, 56.15384615384617], [569.0, 64.5568181818182], [561.0, 55.312500000000014], [562.0, 68.93650793650797], [563.0, 65.53333333333332], [564.0, 56.12820512820514], [565.0, 57.98181818181818], [566.0, 50.82000000000002], [567.0, 52.15384615384616], [552.0, 55.88172043010752], [553.0, 53.20512820512822], [579.0, 54.818181818181806], [576.0, 49.169491525423716], [590.0, 48.867924528301884], [591.0, 53.985294117647044], [588.0, 51.86666666666665], [589.0, 55.13333333333335], [586.0, 49.3090909090909], [587.0, 47.38333333333335], [577.0, 48.373333333333356], [578.0, 50.64150943396227], [580.0, 54.64285714285712], [581.0, 60.129032258064534], [582.0, 50.987804878048756], [583.0, 48.64473684210526], [592.0, 57.770491803278674], [606.0, 51.19753086419753], [607.0, 54.02173913043476], [604.0, 55.357142857142854], [605.0, 51.0], [602.0, 53.66666666666667], [603.0, 49.82758620689655], [600.0, 53.20595407735971], [601.0, 61.39285714285712], [593.0, 54.70454545454546], [594.0, 50.641509433962256], [595.0, 49.32758620689658], [596.0, 49.83333333333332], [597.0, 51.41935483870967], [598.0, 53.5232558139535], [599.0, 56.98095238095239], [584.0, 51.90624999999999], [585.0, 51.346153846153854], [611.0, 51.239999999999995], [608.0, 52.27272727272727], [622.0, 53.13333333333332], [623.0, 51.06976744186048], [620.0, 54.68852459016393], [621.0, 52.390625], [618.0, 50.02222222222223], [619.0, 51.159090909090914], [609.0, 53.48000000000002], [610.0, 47.18749999999999], [612.0, 51.41818181818185], [613.0, 45.62500000000002], [614.0, 49.85000000000001], [615.0, 49.509803921568626], [624.0, 49.72093023255815], [638.0, 55.25000000000001], [639.0, 60.527027027027025], [636.0, 52.48148148148149], [637.0, 60.76470588235292], [634.0, 61.15555555555556], [635.0, 64.68831168831171], [632.0, 52.58333333333333], [633.0, 52.2], [625.0, 47.326086956521756], [626.0, 54.10416666666668], [627.0, 46.323529411764696], [628.0, 56.64285714285713], [629.0, 50.50909090909091], [630.0, 48.60377358490568], [631.0, 45.93749999999999], [616.0, 50.212765957446805], [617.0, 47.92682926829268], [643.0, 50.80952380952381], [640.0, 55.51785714285717], [654.0, 48.71698113207547], [655.0, 49.88135593220339], [652.0, 51.13793103448277], [653.0, 48.767857142857146], [650.0, 62.39682539682537], [651.0, 57.40384615384618], [641.0, 46.869565217391305], [642.0, 47.10526315789475], [644.0, 58.80851063829786], [645.0, 52.30232558139537], [646.0, 61.59701492537314], [647.0, 54.295081967213115], [656.0, 50.89473684210529], [670.0, 51.457627118644055], [671.0, 53.10204081632652], [668.0, 51.63492063492063], [669.0, 47.090909090909086], [666.0, 49.81578947368422], [667.0, 44.06122448979592], [664.0, 46.764705882352956], [665.0, 50.394736842105274], [657.0, 48.48214285714286], [658.0, 48.22448979591836], [659.0, 47.63157894736842], [660.0, 49.10869565217391], [661.0, 47.87234042553191], [662.0, 50.173076923076906], [663.0, 52.395061728395056], [648.0, 52.67857142857142], [649.0, 52.93548387096774], [675.0, 52.80851063829786], [672.0, 54.27631578947367], [686.0, 53.85714285714287], [687.0, 50.457627118644076], [684.0, 52.21538461538464], [685.0, 50.62162162162162], [682.0, 48.33333333333334], [683.0, 56.99999999999999], [673.0, 54.1449275362319], [674.0, 50.115384615384606], [676.0, 51.65853658536586], [677.0, 50.205128205128204], [678.0, 54.766666666666666], [679.0, 57.488888888888894], [688.0, 53.506329113924046], [702.0, 56.8125], [703.0, 45.82222222222222], [700.0, 50.7], [701.0, 51.241379310344826], [698.0, 54.95555555555556], [699.0, 66.28205128205124], [696.0, 57.19101123595507], [697.0, 52.325], [689.0, 53.0253164556962], [690.0, 49.510204081632644], [691.0, 50.70212765957447], [692.0, 50.277777777777786], [693.0, 50.69230769230769], [694.0, 50.418604651162816], [695.0, 50.29090909090908], [680.0, 52.09302325581396], [681.0, 47.62], [707.0, 52.2037037037037], [704.0, 49.87179487179487], [718.0, 55.51162790697675], [719.0, 57.70212765957448], [716.0, 54.14925373134329], [717.0, 54.17241379310348], [714.0, 54.58620689655174], [715.0, 60.20754716981131], [705.0, 52.52238805970149], [706.0, 54.865853658536594], [708.0, 50.824561403508774], [709.0, 47.77966101694914], [710.0, 50.918032786885256], [711.0, 47.6078431372549], [720.0, 50.26190476190476], [734.0, 47.738095238095234], [735.0, 55.51428571428571], [732.0, 48.36956521739128], [733.0, 52.016666666666666], [730.0, 50.55932203389831], [731.0, 54.15151515151515], [728.0, 52.04545454545452], [729.0, 51.012345679012334], [721.0, 62.37349397590358], [722.0, 59.61728395061728], [723.0, 53.5909090909091], [724.0, 51.214285714285715], [725.0, 57.46153846153847], [726.0, 48.45161290322581], [727.0, 53.919999999999995], [712.0, 47.763157894736835], [713.0, 52.711111111111116], [739.0, 53.447368421052644], [736.0, 49.88679245283019], [750.0, 53.11475409836065], [751.0, 49.03703703703702], [748.0, 47.194029850746254], [749.0, 48.578947368421034], [746.0, 48.857142857142854], [747.0, 48.47619047619047], [737.0, 51.12820512820512], [738.0, 54.24107142857142], [740.0, 45.92452830188679], [741.0, 49.34883720930235], [742.0, 51.94594594594596], [743.0, 53.959183673469404], [752.0, 61.30508474576274], [766.0, 60.285714285714285], [767.0, 44.05555555555556], [764.0, 63.64406779661016], [765.0, 52.51063829787234], [762.0, 50.54761904761907], [763.0, 55.84615384615386], [760.0, 55.58928571428572], [761.0, 72.84545454545459], [753.0, 51.89473684210526], [754.0, 57.74358974358973], [755.0, 54.941860465116264], [756.0, 60.45333333333334], [757.0, 46.93939393939393], [758.0, 52.09375], [759.0, 50.70731707317073], [744.0, 51.016949152542374], [745.0, 54.80701754385965], [774.0, 54.2982456140351], [769.0, 56.72549019607844], [768.0, 62.645161290322584], [782.0, 68.63829787234046], [783.0, 59.04651162790697], [780.0, 57.629032258064505], [781.0, 62.25757575757572], [778.0, 54.95918367346939], [779.0, 63.38983050847455], [771.0, 55.87179487179487], [770.0, 49.01785714285716], [772.0, 52.6865671641791], [773.0, 61.58653846153847], [775.0, 57.342105263157904], [792.0, 53.63157894736842], [793.0, 47.93975903614454], [794.0, 48.32203389830509], [795.0, 53.358974358974365], [796.0, 51.36956521739131], [797.0, 51.14999999999999], [798.0, 54.07017543859651], [799.0, 51.595959595959606], [784.0, 60.94805194805193], [785.0, 50.78846153846154], [786.0, 50.875], [787.0, 51.09230769230769], [788.0, 51.087499999999984], [789.0, 48.53571428571427], [790.0, 47.01886792452829], [791.0, 48.644444444444446], [776.0, 57.800000000000004], [777.0, 61.49122807017547], [803.0, 55.749999999999986], [800.0, 56.05393774841363], [814.0, 66.93939393939395], [815.0, 52.88571428571428], [812.0, 56.35185185185185], [813.0, 61.13432835820895], [810.0, 49.625], [811.0, 46.17241379310345], [801.0, 51.39999999999999], [802.0, 56.96428571428571], [804.0, 59.42307692307691], [805.0, 60.61702127659574], [806.0, 50.020408163265294], [807.0, 55.60377358490565], [816.0, 58.63414634146342], [830.0, 49.09756097560977], [831.0, 48.34285714285714], [828.0, 49.51724137931035], [829.0, 44.16666666666667], [826.0, 53.19999999999999], [827.0, 45.27272727272728], [824.0, 55.637931034482754], [825.0, 47.85185185185186], [817.0, 55.66666666666668], [818.0, 60.56521739130432], [819.0, 49.13793103448277], [820.0, 54.03333333333334], [821.0, 54.06666666666667], [822.0, 53.96078431372547], [823.0, 58.47999999999999], [808.0, 45.029411764705884], [809.0, 44.39130434782608], [835.0, 47.04347826086956], [832.0, 48.72727272727275], [846.0, 52.692307692307686], [847.0, 45.744680851063826], [844.0, 46.85294117647061], [845.0, 48.82142857142856], [842.0, 81.0925925925926], [843.0, 49.49999999999999], [833.0, 45.1], [834.0, 46.20512820512818], [836.0, 58.57142857142856], [837.0, 64.57142857142856], [838.0, 62.062500000000014], [839.0, 85.21739130434781], [848.0, 46.99999999999999], [862.0, 49.11428571428572], [863.0, 54.69230769230768], [860.0, 47.00000000000001], [861.0, 52.57894736842105], [858.0, 52.26190476190477], [859.0, 46.833333333333336], [856.0, 51.82142857142859], [857.0, 55.89655172413796], [849.0, 44.54285714285714], [850.0, 49.14705882352941], [851.0, 47.909090909090914], [852.0, 44.31034482758622], [853.0, 48.28571428571429], [854.0, 52.91304347826087], [855.0, 61.93333333333333], [840.0, 87.63461538461539], [841.0, 84.44594594594591], [867.0, 47.81818181818183], [864.0, 60.90384615384616], [878.0, 44.142857142857146], [879.0, 47.42857142857142], [876.0, 48.3181818181818], [877.0, 48.48648648648648], [874.0, 50.66666666666668], [875.0, 51.928571428571445], [865.0, 61.04166666666669], [866.0, 63.10714285714286], [868.0, 45.21875000000001], [869.0, 45.02500000000002], [870.0, 54.13043478260868], [871.0, 45.162162162162154], [881.0, 55.52500000000001], [895.0, 67.12820512820514], [880.0, 46.79166666666665], [893.0, 73.22222222222227], [894.0, 71.53846153846153], [891.0, 66.96000000000001], [892.0, 75.28571428571429], [889.0, 60.0], [888.0, 50.75], [890.0, 65.24999999999997], [882.0, 44.1904761904762], [883.0, 61.149999999999984], [884.0, 62.125], [885.0, 107.04347826086956], [886.0, 63.65384615384615], [887.0, 57.363636363636346], [872.0, 49.096153846153825], [873.0, 50.33333333333333], [899.0, 50.20833333333332], [896.0, 54.54545454545456], [910.0, 57.58064516129031], [911.0, 47.68627450980393], [908.0, 67.68965517241378], [909.0, 57.92307692307692], [906.0, 48.48571428571429], [907.0, 58.019607843137265], [897.0, 52.29411764705882], [898.0, 48.75609756097562], [900.0, 67.46511627906975], [901.0, 53.03846153846153], [902.0, 54.093749999999986], [903.0, 47.23809523809524], [912.0, 46.75000000000001], [926.0, 58.03124999999998], [927.0, 58.64814814814814], [924.0, 45.310344827586206], [925.0, 54.94736842105262], [922.0, 49.57692307692307], [923.0, 55.65116279069766], [920.0, 54.48148148148147], [921.0, 53.02439024390245], [913.0, 53.82222222222222], [914.0, 55.75], [915.0, 56.96551724137931], [916.0, 55.42222222222223], [917.0, 51.9032258064516], [918.0, 48.82857142857142], [919.0, 53.628571428571426], [904.0, 46.44736842105262], [905.0, 53.34999999999999], [931.0, 52.35416666666668], [928.0, 61.9122807017544], [942.0, 59.87755102040818], [943.0, 56.43396226415093], [940.0, 58.472727272727276], [941.0, 59.982456140350905], [938.0, 47.00000000000001], [939.0, 56.473684210526315], [929.0, 74.16071428571428], [930.0, 47.58333333333334], [932.0, 46.160000000000004], [933.0, 53.651162790697676], [934.0, 55.391304347826086], [935.0, 75.99999999999999], [944.0, 62.38095238095239], [958.0, 58.02500000000001], [959.0, 57.04081632653062], [956.0, 44.74999999999999], [957.0, 61.07462686567163], [954.0, 56.36666666666667], [955.0, 52.04999999999999], [952.0, 55.75862068965517], [953.0, 55.66071428571426], [945.0, 53.65853658536587], [946.0, 51.97872340425532], [947.0, 62.059999999999995], [948.0, 63.000000000000036], [949.0, 47.02439024390244], [950.0, 54.34146341463417], [951.0, 50.292682926829265], [936.0, 57.80769230769229], [937.0, 43.96428571428572], [963.0, 60.0], [960.0, 55.56410256410257], [974.0, 68.70967741935485], [975.0, 61.1132075471698], [972.0, 61.73584905660377], [973.0, 72.78333333333332], [970.0, 59.04166666666668], [971.0, 55.350877192982466], [961.0, 48.8], [962.0, 56.102040816326536], [964.0, 54.65384615384616], [965.0, 64.39999999999999], [966.0, 54.07142857142856], [967.0, 78.65671641791047], [976.0, 57.80555555555554], [990.0, 49.2391304347826], [991.0, 47.9814814814815], [988.0, 46.162162162162154], [989.0, 45.58620689655172], [986.0, 55.322580645161295], [987.0, 50.54054054054054], [984.0, 57.31578947368421], [985.0, 61.055555555555536], [977.0, 52.71739130434783], [978.0, 56.49999999999999], [979.0, 57.91489361702126], [980.0, 57.45901639344264], [981.0, 48.761904761904766], [982.0, 53.98461538461542], [983.0, 57.84615384615385], [968.0, 68.03225806451616], [969.0, 64.231884057971], [995.0, 57.48051948051947], [992.0, 53.67187500000003], [1006.0, 41.22222222222223], [1007.0, 50.5625], [1004.0, 47.0], [1005.0, 47.074074074074076], [1002.0, 61.22222222222223], [1003.0, 55.09523809523809], [993.0, 54.29166666666667], [994.0, 52.16363636363635], [996.0, 47.285714285714285], [997.0, 47.94915254237289], [998.0, 47.00000000000001], [999.0, 53.65714285714285], [1008.0, 56.39285714285715], [1022.0, 57.34999999999998], [1023.0, 49.42857142857143], [1020.0, 59.714285714285715], [1021.0, 62.078947368421034], [1018.0, 59.60869565217391], [1019.0, 58.90625], [1016.0, 41.705882352941174], [1017.0, 50.074074074074076], [1009.0, 55.0], [1010.0, 62.6], [1011.0, 62.760000000000005], [1012.0, 44.65384615384616], [1013.0, 49.77777777777778], [1014.0, 42.61538461538462], [1015.0, 53.86111111111112], [1000.0, 56.602199472445676], [1001.0, 60.75], [1030.0, 70.27272727272725], [1024.0, 55.49999999999999], [1052.0, 45.125], [1054.0, 52.09090909090909], [1048.0, 52.409090909090914], [1050.0, 56.611111111111114], [1044.0, 51.69565217391304], [1046.0, 45.75999999999999], [1026.0, 49.64], [1028.0, 59.40909090909091], [1032.0, 48.607142857142875], [1034.0, 48.87500000000001], [1036.0, 56.66666666666667], [1038.0, 53.461538461538474], [1056.0, 48.50000000000001], [1084.0, 80.28571428571429], [1086.0, 85.5], [1080.0, 59.78947368421052], [1082.0, 64.14814814814815], [1076.0, 73.82352941176468], [1078.0, 51.25000000000002], [1072.0, 67.24242424242422], [1074.0, 63.478260869565204], [1058.0, 48.769230769230774], [1060.0, 56.14285714285714], [1062.0, 55.42857142857142], [1064.0, 76.85714285714286], [1066.0, 48.3103448275862], [1068.0, 48.75], [1070.0, 54.87878787878788], [1040.0, 52.05882352941176], [1042.0, 45.51724137931034], [1094.0, 60.03333333333333], [1088.0, 111.875], [1116.0, 53.066666666666684], [1118.0, 53.00000000000002], [1112.0, 59.03846153846155], [1114.0, 46.56000000000001], [1108.0, 45.78571428571429], [1110.0, 41.54545454545455], [1090.0, 65.47058823529413], [1092.0, 54.69999999999999], [1096.0, 62.21428571428575], [1098.0, 64.99999999999997], [1100.0, 71.7333333333333], [1102.0, 63.23529411764706], [1120.0, 52.1923076923077], [1150.0, 62.27272727272728], [1148.0, 60.0], [1144.0, 63.93749999999998], [1146.0, 54.91428571428571], [1140.0, 53.58333333333334], [1142.0, 51.516129032258064], [1136.0, 44.5], [1138.0, 50.86666666666667], [1122.0, 59.8], [1124.0, 44.53571428571427], [1126.0, 45.28571428571429], [1128.0, 52.07407407407407], [1130.0, 53.04347826086956], [1132.0, 53.66666666666667], [1134.0, 48.300000000000004], [1104.0, 59.74999999999999], [1106.0, 62.06666666666667], [1154.0, 75.8695652173913], [1152.0, 58.44444444444445], [1180.0, 84.13636363636365], [1182.0, 78.66666666666664], [1176.0, 69.57142857142856], [1178.0, 92.5769230769231], [1156.0, 58.39473684210527], [1158.0, 63.4871794871795], [1160.0, 54.16666666666667], [1164.0, 44.0], [1162.0, 47.0], [1166.0, 81.22222222222221], [1184.0, 63.53333333333333], [1200.0, 1017.6340887629893], [1186.0, 76.0909090909091], [1188.0, 66.1904761904762], [1190.0, 50.304347826086946], [1192.0, 57.66666666666667], [1194.0, 57.54545454545453], [1196.0, 62.829268292682926], [1198.0, 54.34482758620688], [1168.0, 97.58139534883722], [1170.0, 86.44117647058825], [1172.0, 82.65517241379311], [1174.0, 106.00000000000001], [1031.0, 61.69999999999999], [1025.0, 53.24137931034484], [1053.0, 44.52941176470588], [1055.0, 54.61538461538461], [1049.0, 46.64705882352941], [1051.0, 49.99999999999999], [1045.0, 49.22222222222223], [1047.0, 61.65625], [1027.0, 55.680000000000014], [1029.0, 59.28571428571429], [1033.0, 51.714285714285715], [1035.0, 49.99999999999999], [1037.0, 53.60000000000001], [1039.0, 53.50000000000001], [1057.0, 45.95238095238095], [1085.0, 80.74999999999999], [1087.0, 62.68750000000001], [1081.0, 48.96000000000001], [1083.0, 74.8], [1077.0, 60.2], [1079.0, 50.6842105263158], [1073.0, 52.35294117647059], [1075.0, 72.69230769230766], [1059.0, 43.43749999999999], [1061.0, 45.07692307692309], [1063.0, 69.30769230769229], [1065.0, 52.857142857142854], [1067.0, 46.73913043478262], [1069.0, 52.57142857142857], [1071.0, 58.67999999999998], [1041.0, 59.45714285714287], [1043.0, 48.28571428571427], [1095.0, 58.03703703703704], [1089.0, 104.46666666666667], [1117.0, 62.80952380952381], [1119.0, 44.160000000000004], [1113.0, 48.64705882352942], [1115.0, 51.38461538461538], [1109.0, 45.916666666666664], [1111.0, 51.909090909090914], [1091.0, 60.500000000000014], [1093.0, 55.62499999999999], [1097.0, 64.85185185185188], [1099.0, 65.91666666666667], [1101.0, 56.64705882352943], [1103.0, 58.476190476190474], [1121.0, 46.8888888888889], [1149.0, 68.27272727272727], [1151.0, 61.12000000000001], [1145.0, 66.625], [1147.0, 57.86666666666666], [1141.0, 48.96153846153845], [1143.0, 48.9047619047619], [1137.0, 49.875], [1139.0, 48.27777777777778], [1123.0, 56.49999999999999], [1125.0, 46.333333333333336], [1127.0, 52.285714285714306], [1129.0, 48.05882352941177], [1131.0, 57.1304347826087], [1133.0, 47.6111111111111], [1135.0, 59.8], [1105.0, 54.5], [1107.0, 47.39285714285714], [1155.0, 65.07142857142858], [1153.0, 85.89473684210526], [1181.0, 73.86486486486487], [1183.0, 106.17857142857144], [1177.0, 83.43478260869564], [1179.0, 91.06896551724138], [1173.0, 73.38235294117649], [1175.0, 72.67999999999998], [1157.0, 56.75], [1159.0, 61.30769230769231], [1161.0, 52.29411764705883], [1163.0, 73.53191489361704], [1165.0, 89.60000000000001], [1167.0, 44.0], [1185.0, 98.63636363636363], [1187.0, 66.2], [1189.0, 48.46153846153847], [1191.0, 49.51851851851852], [1193.0, 63.15384615384612], [1195.0, 60.07692307692307], [1197.0, 58.30769230769229], [1199.0, 59.10344827586207], [1169.0, 108.81818181818183], [1171.0, 73.72222222222224], [1.0, 55.0]], "isOverall": false, "label": "Directors by name", "isController": false}, {"data": [[845.3034289973367, 233.73440785253035]], "isOverall": false, "label": "Directors by name-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 8364.533333333333, "minX": 1.71907464E12, "maxY": 2197562.933333333, "series": [{"data": [[1.71907542E12, 1132286.2], [1.71907602E12, 1505261.6666666667], [1.71907644E12, 1275963.1], [1.71907482E12, 756291.4], [1.71907704E12, 1580983.8333333333], [1.7190762E12, 1480356.5], [1.7190768E12, 1847149.9], [1.719075E12, 739952.7333333333], [1.71907662E12, 1876818.6], [1.71907722E12, 678537.0666666667], [1.71907764E12, 1525175.0666666667], [1.7190756E12, 1103010.8333333333], [1.71907476E12, 735969.5666666667], [1.71907638E12, 1552384.0], [1.71907698E12, 1939897.4333333333], [1.71907536E12, 1104074.7666666666], [1.71907758E12, 944609.5666666667], [1.71907518E12, 785336.4], [1.7190774E12, 612519.1333333333], [1.71907578E12, 1171793.9666666666], [1.71907494E12, 749439.5666666667], [1.71907716E12, 2197562.933333333], [1.71907554E12, 1123123.2333333334], [1.71907596E12, 1463117.0666666667], [1.71907656E12, 1829018.7333333334], [1.71907734E12, 636270.3], [1.71907752E12, 1662170.4666666666], [1.71907572E12, 1171771.5666666667], [1.71907632E12, 1566775.4], [1.71907614E12, 1493790.6], [1.71907512E12, 782841.6], [1.71907674E12, 1867524.2333333334], [1.7190759E12, 1404198.7333333334], [1.71907488E12, 775218.2333333333], [1.7190765E12, 1750362.9], [1.7190747E12, 708222.0666666667], [1.71907692E12, 1953207.3], [1.7190753E12, 1053470.7666666666], [1.71907668E12, 1922813.6666666667], [1.71907506E12, 839245.7666666667], [1.71907728E12, 505305.6666666667], [1.7190771E12, 2097836.0], [1.71907548E12, 1158944.0], [1.71907746E12, 1544878.8], [1.71907608E12, 1542237.2666666666], [1.71907524E12, 651249.2], [1.71907686E12, 2083854.3666666667], [1.71907584E12, 956470.0], [1.71907566E12, 1254459.6], [1.71907464E12, 59615.26666666667], [1.71907626E12, 1660863.3333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71907542E12, 153722.46666666667], [1.71907602E12, 204260.26666666666], [1.71907644E12, 165041.93333333332], [1.71907482E12, 102449.6], [1.71907704E12, 204557.23333333334], [1.7190762E12, 203819.93333333332], [1.7190768E12, 254545.23333333334], [1.719075E12, 101807.53333333334], [1.71907662E12, 254908.33333333334], [1.71907722E12, 85939.23333333334], [1.71907764E12, 208372.63333333333], [1.7190756E12, 152024.43333333332], [1.71907476E12, 101968.2], [1.71907638E12, 202802.0], [1.71907698E12, 253581.3], [1.71907536E12, 153242.2], [1.71907758E12, 117407.6], [1.71907518E12, 101977.46666666666], [1.7190774E12, 69926.63333333333], [1.71907578E12, 152732.13333333333], [1.71907494E12, 101582.4], [1.71907716E12, 304664.23333333334], [1.71907554E12, 152493.46666666667], [1.71907596E12, 202839.2], [1.71907656E12, 253807.73333333334], [1.71907734E12, 67226.5], [1.71907752E12, 213203.96666666667], [1.71907572E12, 153239.4], [1.71907632E12, 204313.66666666666], [1.71907614E12, 202307.96666666667], [1.71907512E12, 102297.26666666666], [1.71907674E12, 253184.16666666666], [1.7190759E12, 195066.96666666667], [1.71907488E12, 102572.8], [1.7190765E12, 243420.76666666666], [1.7190747E12, 98247.46666666666], [1.71907692E12, 255016.13333333333], [1.7190753E12, 146487.36666666667], [1.71907668E12, 255108.16666666666], [1.71907506E12, 102049.46666666666], [1.71907728E12, 56754.23333333333], [1.7190771E12, 291597.56666666665], [1.71907548E12, 153672.9], [1.71907746E12, 201459.43333333332], [1.71907608E12, 204444.93333333332], [1.71907524E12, 84770.73333333334], [1.71907686E12, 254552.03333333333], [1.71907584E12, 124209.8], [1.71907566E12, 152971.93333333332], [1.71907464E12, 8364.533333333333], [1.71907626E12, 202655.16666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71907764E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 50.03021213939031, "minX": 1.71907464E12, "maxY": 4393.110916228161, "series": [{"data": [[1.71907542E12, 52.781641168289035], [1.71907602E12, 59.10576998560776], [1.71907644E12, 54.107722195240086], [1.71907482E12, 51.61073720457032], [1.71907704E12, 58.60862636501384], [1.7190762E12, 54.197340925713725], [1.7190768E12, 53.337669671427825], [1.719075E12, 50.56605648535569], [1.71907662E12, 58.48661172967645], [1.71907722E12, 2526.981483651702], [1.71907764E12, 58.758636525998355], [1.7190756E12, 53.79091514026502], [1.71907476E12, 52.69208272404449], [1.71907638E12, 57.12433522831449], [1.71907698E12, 58.943218723154466], [1.71907536E12, 51.40156385751502], [1.71907758E12, 1766.6574192996188], [1.71907518E12, 50.75095106571498], [1.7190774E12, 3752.239214040966], [1.71907578E12, 52.80832927423267], [1.71907494E12, 50.27032234546661], [1.71907716E12, 57.338210103128326], [1.71907554E12, 51.26610469351643], [1.71907596E12, 55.6250262549885], [1.71907656E12, 56.66486214276732], [1.71907734E12, 3886.7242741320492], [1.71907752E12, 902.2156498803328], [1.71907572E12, 54.14292178634829], [1.71907632E12, 57.7023032328824], [1.71907614E12, 55.211294117647], [1.71907512E12, 51.22183410666859], [1.71907674E12, 54.92774029121124], [1.7190759E12, 54.51594386003445], [1.71907488E12, 51.78833333333315], [1.7190765E12, 58.32526301888443], [1.7190747E12, 50.03021213939031], [1.71907692E12, 54.36779012113214], [1.7190753E12, 52.835668044328834], [1.71907668E12, 57.526413908672154], [1.71907506E12, 53.274999999999615], [1.71907728E12, 4393.110916228161], [1.7190771E12, 60.11349563619736], [1.71907548E12, 54.37630371297445], [1.71907746E12, 369.5532571458472], [1.71907608E12, 55.58549398849965], [1.71907524E12, 51.70973841790102], [1.71907686E12, 54.763238832513736], [1.71907584E12, 55.02731887799012], [1.71907566E12, 54.09884753316417], [1.71907464E12, 52.84351145038175], [1.71907626E12, 55.97729422895005]], "isOverall": false, "label": "Directors by name", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71907764E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 50.0272672738177, "minX": 1.71907464E12, "maxY": 4391.670675686966, "series": [{"data": [[1.71907542E12, 52.77093184979139], [1.71907602E12, 59.09370665968818], [1.71907644E12, 54.0774162214674], [1.71907482E12, 51.60390254082543], [1.71907704E12, 58.56635665395274], [1.7190762E12, 54.19138543516847], [1.7190768E12, 53.33091418651837], [1.719075E12, 50.56229079497911], [1.71907662E12, 58.472038749449844], [1.71907722E12, 2526.970760576598], [1.71907764E12, 58.748966678572934], [1.7190756E12, 53.78548663888184], [1.71907476E12, 52.69072487988313], [1.71907638E12, 56.988079955987445], [1.71907698E12, 58.914367129717235], [1.71907536E12, 51.39906168549099], [1.71907758E12, 1766.4609983731498], [1.71907518E12, 50.72614518734688], [1.7190774E12, 3751.1985875113755], [1.71907578E12, 52.78209588755131], [1.71907494E12, 50.26344841951787], [1.71907716E12, 57.334854046495096], [1.71907554E12, 51.25722413015605], [1.71907596E12, 55.62229573618926], [1.71907656E12, 56.66238616811442], [1.71907734E12, 3885.933407248307], [1.71907752E12, 901.990646216986], [1.71907572E12, 54.12287235894024], [1.71907632E12, 57.665508957016634], [1.71907614E12, 55.20214379084968], [1.71907512E12, 51.20681924821443], [1.71907674E12, 54.91514341222884], [1.7190759E12, 54.51163173940541], [1.71907488E12, 51.7768229166667], [1.7190765E12, 58.321257208257734], [1.7190747E12, 50.0272672738177], [1.71907692E12, 54.34331262160271], [1.7190753E12, 52.83255916023552], [1.71907668E12, 57.51026392961909], [1.71907506E12, 53.22745302713949], [1.71907728E12, 4391.670675686966], [1.7190771E12, 60.11066605420229], [1.71907548E12, 54.353949381170125], [1.71907746E12, 369.4657810089137], [1.71907608E12, 55.57009932043841], [1.71907524E12, 51.68313898518739], [1.71907686E12, 54.70967674442929], [1.71907584E12, 54.99961280330445], [1.71907566E12, 54.0567877163054], [1.71907464E12, 52.83842239185746], [1.71907626E12, 55.925128771155556]], "isOverall": false, "label": "Directors by name", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71907764E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.45848854416491935, "minX": 1.71907464E12, "maxY": 476.8570030067819, "series": [{"data": [[1.71907542E12, 0.7579972183588299], [1.71907602E12, 0.7549914954860687], [1.71907644E12, 1.1698559171118637], [1.71907482E12, 0.7193614024103936], [1.71907704E12, 1.1454621453576381], [1.7190762E12, 0.7455856232368588], [1.7190768E12, 0.7470353251207864], [1.719075E12, 0.730439330543935], [1.71907662E12, 0.7572288272420407], [1.71907722E12, 207.92107113559044], [1.71907764E12, 0.45848854416491935], [1.7190756E12, 0.7327075963996792], [1.71907476E12, 0.7461353666179276], [1.71907638E12, 1.3136674438710112], [1.71907698E12, 0.7577471871267905], [1.71907536E12, 0.7368201563857482], [1.71907758E12, 214.11357992978952], [1.71907518E12, 0.740372088175515], [1.7190774E12, 476.8570030067819], [1.71907578E12, 0.7504001113353207], [1.71907494E12, 0.7499869812008524], [1.71907716E12, 0.7726621220066553], [1.71907554E12, 0.7385784160682627], [1.71907596E12, 0.750813904641885], [1.71907656E12, 0.7582147803096968], [1.71907734E12, 181.12313768969517], [1.71907752E12, 136.82596590631923], [1.71907572E12, 0.7420028542587627], [1.71907632E12, 0.802475583642347], [1.71907614E12, 0.777281045751643], [1.71907512E12, 0.7335905322975845], [1.71907674E12, 0.7473521485721455], [1.7190759E12, 0.787305336592599], [1.71907488E12, 0.7407291666666639], [1.7190765E12, 0.7955495884139617], [1.7190747E12, 0.7769537001690539], [1.71907692E12, 0.747400573233741], [1.7190753E12, 0.7810614096046296], [1.71907668E12, 0.766694595726854], [1.71907506E12, 0.7464509394572055], [1.71907728E12, 194.65914975361318], [1.7190771E12, 0.7898392282958208], [1.71907548E12, 0.7551453205395631], [1.71907746E12, 2.2621668976699074], [1.71907608E12, 0.7988761108207064], [1.71907524E12, 1.2946738102741933], [1.71907686E12, 0.7504550685218169], [1.71907584E12, 1.1983737738771298], [1.71907566E12, 0.7494516207652961], [1.71907464E12, 5.2315521628498916], [1.71907626E12, 0.7584883843161949]], "isOverall": false, "label": "Directors by name", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71907764E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 36.0, "minX": 1.71907464E12, "maxY": 62031.0, "series": [{"data": [[1.71907542E12, 236.0], [1.71907602E12, 338.0], [1.71907644E12, 382.0], [1.71907482E12, 221.0], [1.71907704E12, 479.0], [1.7190762E12, 298.0], [1.7190768E12, 216.0], [1.719075E12, 153.0], [1.71907662E12, 330.0], [1.71907722E12, 21577.0], [1.71907764E12, 379.0], [1.7190756E12, 275.0], [1.71907476E12, 317.0], [1.71907638E12, 1412.0], [1.71907698E12, 666.0], [1.71907536E12, 190.0], [1.71907758E12, 20556.0], [1.71907518E12, 171.0], [1.7190774E12, 62031.0], [1.71907578E12, 257.0], [1.71907494E12, 160.0], [1.71907716E12, 259.0], [1.71907554E12, 167.0], [1.71907596E12, 208.0], [1.71907656E12, 322.0], [1.71907734E12, 61773.0], [1.71907752E12, 20449.0], [1.71907572E12, 296.0], [1.71907632E12, 416.0], [1.71907614E12, 213.0], [1.71907512E12, 233.0], [1.71907674E12, 258.0], [1.7190759E12, 239.0], [1.71907488E12, 205.0], [1.7190765E12, 289.0], [1.7190747E12, 222.0], [1.71907692E12, 241.0], [1.7190753E12, 223.0], [1.71907668E12, 334.0], [1.71907506E12, 312.0], [1.71907728E12, 62000.0], [1.7190771E12, 314.0], [1.71907548E12, 341.0], [1.71907746E12, 20380.0], [1.71907608E12, 1089.0], [1.71907524E12, 173.0], [1.71907686E12, 198.0], [1.71907584E12, 272.0], [1.71907566E12, 383.0], [1.71907464E12, 414.0], [1.71907626E12, 289.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71907542E12, 36.0], [1.71907602E12, 36.0], [1.71907644E12, 36.0], [1.71907482E12, 36.0], [1.71907704E12, 37.0], [1.7190762E12, 36.0], [1.7190768E12, 36.0], [1.719075E12, 36.0], [1.71907662E12, 36.0], [1.71907722E12, 36.0], [1.71907764E12, 36.0], [1.7190756E12, 36.0], [1.71907476E12, 36.0], [1.71907638E12, 36.0], [1.71907698E12, 37.0], [1.71907536E12, 36.0], [1.71907758E12, 36.0], [1.71907518E12, 37.0], [1.7190774E12, 37.0], [1.71907578E12, 36.0], [1.71907494E12, 36.0], [1.71907716E12, 36.0], [1.71907554E12, 36.0], [1.71907596E12, 36.0], [1.71907656E12, 36.0], [1.71907734E12, 37.0], [1.71907752E12, 36.0], [1.71907572E12, 36.0], [1.71907632E12, 37.0], [1.71907614E12, 36.0], [1.71907512E12, 37.0], [1.71907674E12, 37.0], [1.7190759E12, 36.0], [1.71907488E12, 37.0], [1.7190765E12, 36.0], [1.7190747E12, 36.0], [1.71907692E12, 36.0], [1.7190753E12, 36.0], [1.71907668E12, 36.0], [1.71907506E12, 37.0], [1.71907728E12, 37.0], [1.7190771E12, 36.0], [1.71907548E12, 36.0], [1.71907746E12, 36.0], [1.71907608E12, 36.0], [1.71907524E12, 37.0], [1.71907686E12, 36.0], [1.71907584E12, 37.0], [1.71907566E12, 36.0], [1.71907464E12, 38.0], [1.71907626E12, 36.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71907542E12, 74.0], [1.71907602E12, 80.0], [1.71907644E12, 80.0], [1.71907482E12, 69.0], [1.71907704E12, 87.0], [1.7190762E12, 79.0], [1.7190768E12, 76.0], [1.719075E12, 66.0], [1.71907662E12, 91.0], [1.71907722E12, 20282.0], [1.71907764E12, 92.90000000000146], [1.7190756E12, 78.0], [1.71907476E12, 68.0], [1.71907638E12, 80.0], [1.71907698E12, 88.0], [1.71907536E12, 76.0], [1.71907758E12, 105.0], [1.71907518E12, 68.0], [1.7190774E12, 20280.0], [1.71907578E12, 73.0], [1.71907494E12, 66.0], [1.71907716E12, 95.0], [1.71907554E12, 69.0], [1.71907596E12, 80.0], [1.71907656E12, 82.0], [1.71907734E12, 20283.0], [1.71907752E12, 88.0], [1.71907572E12, 81.0], [1.71907632E12, 82.0], [1.71907614E12, 78.0], [1.71907512E12, 68.0], [1.71907674E12, 80.0], [1.7190759E12, 84.0], [1.71907488E12, 74.0], [1.7190765E12, 87.0], [1.7190747E12, 66.0], [1.71907692E12, 78.0], [1.7190753E12, 74.0], [1.71907668E12, 82.0], [1.71907506E12, 78.0], [1.71907728E12, 20290.0], [1.7190771E12, 81.0], [1.71907548E12, 77.0], [1.71907746E12, 86.0], [1.71907608E12, 91.0], [1.71907524E12, 73.0], [1.71907686E12, 79.0], [1.71907584E12, 83.0], [1.71907566E12, 78.0], [1.71907464E12, 80.0], [1.71907626E12, 90.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71907542E12, 106.0], [1.71907602E12, 120.9900000000016], [1.71907644E12, 113.0], [1.71907482E12, 109.0], [1.71907704E12, 198.0], [1.7190762E12, 121.0], [1.7190768E12, 113.0], [1.719075E12, 96.0], [1.71907662E12, 136.0], [1.71907722E12, 20922.99], [1.71907764E12, 159.9900000000016], [1.7190756E12, 120.0], [1.71907476E12, 104.0], [1.71907638E12, 123.0], [1.71907698E12, 142.0], [1.71907536E12, 119.0], [1.71907758E12, 20368.0], [1.71907518E12, 99.9900000000016], [1.7190774E12, 20341.0], [1.71907578E12, 113.0], [1.71907494E12, 95.0], [1.71907716E12, 148.9900000000016], [1.71907554E12, 103.0], [1.71907596E12, 116.0], [1.71907656E12, 125.0], [1.71907734E12, 20342.0], [1.71907752E12, 152.9900000000016], [1.71907572E12, 149.0], [1.71907632E12, 144.9900000000016], [1.71907614E12, 112.0], [1.71907512E12, 107.0], [1.71907674E12, 120.0], [1.7190759E12, 132.9900000000016], [1.71907488E12, 110.0], [1.7190765E12, 132.0], [1.7190747E12, 100.0], [1.71907692E12, 131.9900000000016], [1.7190753E12, 113.0], [1.71907668E12, 121.0], [1.71907506E12, 136.0], [1.71907728E12, 20357.0], [1.7190771E12, 114.0], [1.71907548E12, 132.9900000000016], [1.71907746E12, 15530.990000000002], [1.71907608E12, 140.0], [1.71907524E12, 107.0], [1.71907686E12, 118.0], [1.71907584E12, 175.0], [1.71907566E12, 123.0], [1.71907464E12, 110.0], [1.71907626E12, 152.9900000000016]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71907542E12, 47.0], [1.71907602E12, 46.0], [1.71907644E12, 48.0], [1.71907482E12, 46.0], [1.71907704E12, 48.0], [1.7190762E12, 46.0], [1.7190768E12, 45.0], [1.719075E12, 46.0], [1.71907662E12, 52.0], [1.71907722E12, 72.0], [1.71907764E12, 52.0], [1.7190756E12, 47.0], [1.71907476E12, 46.0], [1.71907638E12, 48.0], [1.71907698E12, 48.0], [1.71907536E12, 47.0], [1.71907758E12, 55.0], [1.71907518E12, 47.0], [1.7190774E12, 68.0], [1.71907578E12, 46.0], [1.71907494E12, 46.0], [1.71907716E12, 53.0], [1.71907554E12, 45.0], [1.71907596E12, 48.0], [1.71907656E12, 49.0], [1.71907734E12, 71.0], [1.71907752E12, 48.0], [1.71907572E12, 47.0], [1.71907632E12, 52.0], [1.71907614E12, 48.0], [1.71907512E12, 47.0], [1.71907674E12, 47.0], [1.7190759E12, 48.0], [1.71907488E12, 47.0], [1.7190765E12, 51.0], [1.7190747E12, 46.0], [1.71907692E12, 46.0], [1.7190753E12, 46.0], [1.71907668E12, 49.0], [1.71907506E12, 48.0], [1.71907728E12, 72.0], [1.7190771E12, 49.0], [1.71907548E12, 46.0], [1.71907746E12, 48.0], [1.71907608E12, 50.0], [1.71907524E12, 46.0], [1.71907686E12, 47.0], [1.71907584E12, 47.0], [1.71907566E12, 47.0], [1.71907464E12, 44.0], [1.71907626E12, 49.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.71907542E12, 84.0], [1.71907602E12, 94.0], [1.71907644E12, 89.0], [1.71907482E12, 81.0], [1.71907704E12, 109.0], [1.7190762E12, 90.0], [1.7190768E12, 85.95000000000073], [1.719075E12, 77.0], [1.71907662E12, 106.0], [1.71907722E12, 20327.0], [1.71907764E12, 110.0], [1.7190756E12, 89.0], [1.71907476E12, 79.0], [1.71907638E12, 91.95000000000073], [1.71907698E12, 103.0], [1.71907536E12, 87.0], [1.71907758E12, 20283.0], [1.71907518E12, 78.0], [1.7190774E12, 20298.0], [1.71907578E12, 85.0], [1.71907494E12, 77.0], [1.71907716E12, 113.0], [1.71907554E12, 79.0], [1.71907596E12, 90.0], [1.71907656E12, 94.0], [1.71907734E12, 20303.0], [1.71907752E12, 109.0], [1.71907572E12, 101.0], [1.71907632E12, 98.0], [1.71907614E12, 88.0], [1.71907512E12, 79.0], [1.71907674E12, 91.0], [1.7190759E12, 99.0], [1.71907488E12, 84.0], [1.7190765E12, 103.0], [1.7190747E12, 78.0], [1.71907692E12, 93.0], [1.7190753E12, 83.0], [1.71907668E12, 94.0], [1.71907506E12, 94.0], [1.71907728E12, 20314.0], [1.7190771E12, 90.95000000000073], [1.71907548E12, 90.0], [1.71907746E12, 112.0], [1.71907608E12, 105.0], [1.71907524E12, 81.0], [1.71907686E12, 91.0], [1.71907584E12, 102.95000000000073], [1.71907566E12, 91.0], [1.71907464E12, 86.0], [1.71907626E12, 105.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71907764E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 20291.0, "series": [{"data": [[2.0, 13614.5], [4.0, 11272.0], [6.0, 4836.0], [8.0, 49.5], [12.0, 64.5], [14.0, 9263.0], [16.0, 78.5], [18.0, 88.0], [20.0, 81.5], [22.0, 10303.5], [24.0, 9268.0], [26.0, 47.0], [30.0, 11272.0], [32.0, 98.5], [34.0, 57.0], [42.0, 11274.0], [44.0, 11281.5], [50.0, 80.0], [56.0, 79.0], [62.0, 60.0], [70.0, 77.0], [80.0, 77.0], [84.0, 77.0], [96.0, 44.0], [100.0, 50.5], [106.0, 53.0], [114.0, 45.0], [118.0, 4516.5], [116.0, 15318.5], [120.0, 45.0], [132.0, 61.5], [130.0, 44.0], [128.0, 46.5], [142.0, 43.0], [140.0, 44.0], [148.0, 44.0], [146.0, 53.0], [150.0, 75.0], [152.0, 55.0], [164.0, 11284.5], [170.0, 43.0], [174.0, 43.0], [180.0, 44.0], [188.0, 44.5], [200.0, 44.5], [214.0, 49.0], [208.0, 44.0], [216.0, 53.0], [220.0, 47.0], [226.0, 43.0], [224.0, 44.0], [236.0, 52.5], [244.0, 43.0], [242.0, 60.5], [264.0, 46.0], [270.0, 45.0], [280.0, 7597.5], [284.0, 44.5], [278.0, 44.0], [276.0, 44.0], [282.0, 46.0], [296.0, 15309.0], [294.0, 11286.0], [292.0, 46.0], [302.0, 15305.0], [288.0, 45.0], [300.0, 11285.5], [310.0, 44.0], [316.0, 44.0], [308.0, 15364.5], [314.0, 48.0], [312.0, 15441.5], [322.0, 44.0], [328.0, 44.0], [324.0, 44.0], [326.0, 44.0], [342.0, 45.0], [346.0, 44.0], [348.0, 43.0], [340.0, 44.0], [360.0, 5679.0], [362.0, 45.0], [356.0, 11291.0], [358.0, 15456.0], [378.0, 45.0], [382.0, 47.0], [368.0, 45.0], [398.0, 52.0], [396.0, 11289.0], [388.0, 55.0], [404.0, 45.0], [412.0, 45.0], [414.0, 44.0], [408.0, 54.0], [406.0, 85.0], [426.0, 45.0], [428.0, 43.0], [446.0, 44.0], [434.0, 51.0], [438.0, 45.0], [442.0, 45.0], [450.0, 46.0], [458.0, 15575.0], [454.0, 45.0], [460.0, 100.5], [448.0, 11284.0], [472.0, 45.0], [470.0, 44.0], [474.0, 45.0], [476.0, 44.0], [464.0, 47.0], [492.0, 46.0], [480.0, 49.0], [494.0, 46.0], [488.0, 49.0], [482.0, 44.0], [484.0, 15512.5], [508.0, 46.0], [510.0, 46.0], [498.0, 44.0], [504.0, 46.0], [496.0, 44.0], [500.0, 54.0], [502.0, 44.0], [512.0, 46.0], [528.0, 48.0], [536.0, 45.0], [542.0, 48.0], [540.0, 49.0], [534.0, 51.0], [526.0, 48.0], [532.0, 45.0], [518.0, 46.0], [514.0, 45.0], [516.0, 56.0], [530.0, 45.0], [524.0, 47.5], [522.0, 50.0], [520.0, 45.0], [572.0, 46.0], [556.0, 45.0], [544.0, 54.0], [546.0, 48.0], [558.0, 46.0], [568.0, 46.0], [570.0, 46.0], [574.0, 47.0], [562.0, 46.0], [566.0, 47.0], [564.0, 45.0], [560.0, 47.0], [552.0, 45.0], [554.0, 46.0], [600.0, 47.0], [594.0, 44.5], [578.0, 45.0], [580.0, 46.0], [582.0, 47.0], [598.0, 45.0], [596.0, 47.0], [584.0, 47.0], [576.0, 46.0], [588.0, 47.0], [590.0, 46.0], [592.0, 46.0], [602.0, 47.0], [604.0, 48.0], [606.0, 47.0], [586.0, 47.0], [632.0, 46.0], [626.0, 47.0], [624.0, 46.0], [638.0, 46.0], [630.0, 45.0], [628.0, 47.0], [608.0, 46.0], [636.0, 46.0], [634.0, 46.0], [622.0, 46.0], [620.0, 46.0], [618.0, 45.0], [616.0, 45.0], [614.0, 46.0], [612.0, 46.0], [610.0, 46.0], [642.0, 45.0], [640.0, 46.0], [654.0, 46.0], [652.0, 47.0], [660.0, 46.0], [662.0, 45.0], [650.0, 46.0], [646.0, 46.0], [644.0, 46.0], [648.0, 48.0], [668.0, 46.0], [666.0, 46.0], [664.0, 46.0], [658.0, 47.0], [656.0, 47.0], [670.0, 47.0], [674.0, 47.0], [676.0, 46.0], [678.0, 46.0], [696.0, 47.0], [672.0, 46.0], [686.0, 46.0], [694.0, 47.0], [692.0, 46.0], [680.0, 47.0], [684.0, 47.0], [682.0, 47.0], [698.0, 49.0], [690.0, 47.0], [688.0, 47.0], [700.0, 46.0], [702.0, 49.0], [706.0, 47.0], [710.0, 47.0], [704.0, 48.0], [714.0, 47.0], [728.0, 47.0], [730.0, 46.0], [732.0, 45.0], [734.0, 15216.0], [720.0, 47.0], [722.0, 46.0], [726.0, 46.0], [724.0, 45.0], [712.0, 53.0], [718.0, 47.0], [716.0, 47.0], [708.0, 47.0], [760.0, 49.0], [738.0, 50.0], [750.0, 47.0], [766.0, 46.0], [758.0, 47.0], [756.0, 46.0], [752.0, 49.0], [754.0, 62.0], [764.0, 47.0], [762.0, 45.0], [746.0, 46.0], [748.0, 45.0], [742.0, 46.0], [740.0, 46.0], [736.0, 46.0], [778.0, 50.0], [790.0, 49.0], [774.0, 49.0], [782.0, 48.0], [792.0, 46.0], [796.0, 46.0], [770.0, 58.5], [798.0, 54.0], [824.0, 45.0], [830.0, 46.0], [816.0, 46.0], [812.0, 48.0], [810.0, 47.0], [808.0, 121.5], [814.0, 46.0], [820.0, 47.0], [828.0, 48.0], [826.0, 63.0], [822.0, 51.0], [806.0, 46.0], [800.0, 48.0], [802.0, 50.0], [804.0, 46.0], [834.0, 47.0], [848.0, 47.0], [852.0, 46.0], [854.0, 48.0], [842.0, 47.0], [840.0, 47.0], [850.0, 50.0], [856.0, 48.0], [858.0, 58.0], [832.0, 45.0], [846.0, 47.0], [838.0, 47.0], [836.0, 46.0], [844.0, 44.0], [866.0, 61.0], [872.0, 47.0], [868.0, 48.0], [888.0, 48.0], [870.0, 46.0], [890.0, 47.0], [892.0, 51.0], [882.0, 46.0], [886.0, 46.0], [874.0, 56.0], [884.0, 58.0], [878.0, 48.0], [864.0, 61.5], [902.0, 47.0], [910.0, 47.0], [896.0, 44.0], [916.0, 47.0], [918.0, 44.0], [924.0, 51.0], [908.0, 45.0], [926.0, 53.0], [914.0, 47.0], [912.0, 47.0], [904.0, 48.0], [920.0, 47.0], [922.0, 45.0], [898.0, 47.0], [900.0, 49.0], [952.0, 53.0], [958.0, 45.0], [954.0, 48.0], [956.0, 46.0], [940.0, 47.0], [930.0, 49.0], [928.0, 47.0], [942.0, 46.0], [934.0, 46.0], [932.0, 47.0], [948.0, 46.0], [950.0, 49.0], [946.0, 48.0], [944.0, 46.0], [936.0, 47.0], [938.0, 46.0], [966.0, 47.0], [988.0, 48.0], [986.0, 46.0], [984.0, 47.0], [982.0, 48.0], [980.0, 46.0], [978.0, 48.0], [972.0, 47.0], [970.0, 48.0], [968.0, 46.0], [974.0, 47.0], [960.0, 50.0], [964.0, 46.0], [962.0, 47.0], [976.0, 47.0], [990.0, 53.0], [1016.0, 46.0], [1008.0, 47.0], [1012.0, 46.0], [1010.0, 52.0], [998.0, 46.0], [996.0, 46.0], [1022.0, 48.0], [994.0, 48.0], [1000.0, 46.0], [1006.0, 55.0], [992.0, 45.0], [1002.0, 50.0], [1020.0, 48.0], [1018.0, 46.0], [1014.0, 47.0], [1078.0, 46.0], [1038.0, 48.0], [1032.0, 46.0], [1034.0, 47.0], [1036.0, 50.0], [1030.0, 47.0], [1028.0, 47.0], [1026.0, 47.0], [1024.0, 47.0], [1056.0, 47.0], [1066.0, 47.0], [1062.0, 48.0], [1064.0, 47.0], [1068.0, 45.0], [1070.0, 47.0], [1048.0, 47.0], [1050.0, 47.0], [1052.0, 47.0], [1044.0, 47.0], [1040.0, 46.0], [1042.0, 46.0], [1046.0, 48.0], [1074.0, 47.0], [1076.0, 47.0], [1072.0, 47.0], [1058.0, 46.0], [1060.0, 46.0], [1054.0, 47.0], [1080.0, 45.0], [1082.0, 46.0], [1086.0, 45.0], [1084.0, 46.0], [1102.0, 45.0], [1094.0, 47.0], [1118.0, 45.0], [1106.0, 47.0], [1104.0, 54.0], [1098.0, 49.0], [1110.0, 48.0], [1108.0, 50.0], [1112.0, 48.0], [1116.0, 49.0], [1114.0, 45.0], [1090.0, 47.5], [1092.0, 45.0], [1100.0, 49.0], [1130.0, 46.0], [1134.0, 58.0], [1120.0, 47.0], [1124.0, 50.0], [1126.0, 46.0], [1128.0, 55.0], [1122.0, 54.0], [1146.0, 46.0], [1148.0, 48.0], [1144.0, 48.0], [1138.0, 48.0], [1136.0, 46.0], [1140.0, 44.0], [1150.0, 47.0], [1088.0, 47.0], [1096.0, 48.0], [1164.0, 47.0], [1156.0, 48.0], [1208.0, 50.0], [1172.0, 47.0], [1174.0, 46.0], [1176.0, 48.0], [1178.0, 45.0], [1182.0, 49.0], [1152.0, 45.5], [1154.0, 47.0], [1180.0, 47.0], [1162.0, 58.0], [1158.0, 48.0], [1160.0, 49.0], [1214.0, 48.0], [1210.0, 48.0], [1212.0, 46.0], [1200.0, 49.0], [1202.0, 47.0], [1166.0, 44.0], [1168.0, 49.0], [1170.0, 45.0], [1186.0, 47.0], [1188.0, 47.0], [1190.0, 46.0], [1192.0, 49.0], [1196.0, 45.0], [1194.0, 46.0], [1184.0, 46.0], [1230.0, 46.0], [1270.0, 48.0], [1258.0, 51.0], [1260.0, 47.0], [1262.0, 46.0], [1256.0, 49.0], [1252.0, 51.0], [1250.0, 47.0], [1254.0, 48.0], [1248.0, 46.0], [1278.0, 47.0], [1272.0, 47.0], [1274.0, 47.0], [1276.0, 46.0], [1236.0, 48.0], [1266.0, 50.0], [1232.0, 47.0], [1234.0, 55.0], [1268.0, 50.0], [1264.0, 47.0], [1226.0, 50.0], [1228.0, 52.0], [1224.0, 46.0], [1222.0, 49.0], [1220.0, 47.0], [1218.0, 50.0], [1246.0, 46.0], [1216.0, 51.0], [1244.0, 50.0], [1240.0, 50.0], [1238.0, 47.0], [1242.0, 50.0], [1294.0, 48.0], [1296.0, 46.0], [1298.0, 50.0], [1304.0, 46.0], [1306.0, 49.0], [1308.0, 45.0], [1280.0, 47.0], [1310.0, 45.0], [1302.0, 47.0], [1300.0, 49.0], [1284.0, 47.0], [1282.0, 49.0], [1326.0, 47.0], [1342.0, 47.0], [1314.0, 48.0], [1320.0, 47.0], [1318.0, 46.0], [1312.0, 50.0], [1324.0, 47.0], [1332.0, 47.0], [1334.0, 46.0], [1338.0, 49.0], [1336.0, 46.0], [1340.0, 49.0], [1330.0, 47.0], [1328.0, 47.0], [1286.0, 47.0], [1288.0, 51.0], [1290.0, 45.0], [1292.0, 63.0], [1400.0, 49.0], [1354.0, 48.0], [1388.0, 48.0], [1390.0, 46.0], [1386.0, 54.0], [1384.0, 46.0], [1370.0, 51.0], [1366.0, 48.0], [1368.0, 47.0], [1392.0, 58.0], [1356.0, 48.0], [1358.0, 47.0], [1394.0, 51.0], [1398.0, 47.0], [1396.0, 47.0], [1406.0, 48.0], [1376.0, 63.0], [1380.0, 57.0], [1378.0, 48.0], [1402.0, 48.0], [1404.0, 48.0], [1382.0, 49.0], [1360.0, 47.0], [1364.0, 48.0], [1374.0, 49.0], [1372.0, 44.0], [1344.0, 47.0], [1350.0, 49.0], [1352.0, 46.0], [1346.0, 49.0], [1348.0, 47.0], [1362.0, 54.0], [1412.0, 51.0], [1434.0, 47.0], [1424.0, 60.0], [1426.0, 49.0], [1416.0, 46.0], [1414.0, 51.0], [1422.0, 49.0], [1456.0, 48.0], [1418.0, 53.0], [1420.0, 46.0], [1410.0, 46.0], [1408.0, 51.0], [1436.0, 49.0], [1438.0, 48.0], [1442.0, 48.0], [1446.0, 48.0], [1444.0, 46.0], [1430.0, 49.0], [1428.0, 49.0], [1432.0, 46.0], [1464.0, 48.0], [1462.0, 47.0], [1460.0, 49.0], [1470.0, 48.0], [1440.0, 52.0], [1466.0, 48.0], [1468.0, 46.0], [1458.0, 52.0], [1452.0, 50.0], [1454.0, 48.0], [1450.0, 52.0], [1448.0, 47.0], [1476.0, 48.0], [1494.0, 53.0], [1500.0, 51.0], [1496.0, 49.0], [1498.0, 46.0], [1474.0, 47.0], [1472.0, 50.0], [1502.0, 48.0], [1488.0, 55.0], [1490.0, 48.0], [1486.0, 49.0], [1522.0, 46.0], [1528.0, 49.0], [1526.0, 49.0], [1524.0, 49.0], [1520.0, 47.0], [1484.0, 49.0], [1532.0, 51.0], [1534.0, 48.0], [1530.0, 49.0], [1508.0, 49.0], [1506.0, 46.0], [1510.0, 47.0], [1512.0, 48.0], [1514.0, 53.0], [1516.0, 50.0], [1518.0, 46.0], [1504.0, 51.0], [1482.0, 48.0], [1492.0, 47.0], [1478.0, 50.0], [1480.0, 47.0], [1544.0, 49.0], [1598.0, 47.0], [1550.0, 48.0], [1546.0, 47.0], [1548.0, 59.0], [1586.0, 45.0], [1590.0, 49.0], [1588.0, 49.0], [1596.0, 48.0], [1594.0, 49.0], [1592.0, 50.0], [1584.0, 50.0], [1566.0, 48.0], [1572.0, 50.0], [1570.0, 47.0], [1568.0, 46.0], [1542.0, 52.0], [1540.0, 46.0], [1536.0, 50.0], [1538.0, 48.0], [1562.0, 46.0], [1564.0, 45.0], [1560.0, 46.0], [1558.0, 47.0], [1554.0, 47.0], [1552.0, 47.0], [1556.0, 50.0], [1574.0, 49.0], [1580.0, 45.0], [1582.0, 47.0], [1578.0, 48.0], [1576.0, 48.0], [1658.0, 48.0], [1626.0, 47.0], [1618.0, 53.0], [1616.0, 50.0], [1628.0, 51.0], [1662.0, 56.0], [1632.0, 47.0], [1660.0, 52.0], [1636.0, 47.0], [1638.0, 46.0], [1634.0, 46.0], [1640.0, 47.0], [1642.0, 46.0], [1646.0, 48.0], [1644.0, 45.0], [1630.0, 49.0], [1648.0, 52.0], [1650.0, 46.0], [1654.0, 48.0], [1656.0, 49.0], [1614.0, 48.0], [1612.0, 46.0], [1610.0, 48.0], [1608.0, 49.0], [1606.0, 56.0], [1602.0, 49.0], [1600.0, 44.0], [1620.0, 48.0], [1622.0, 47.0], [1624.0, 47.0], [1712.0, 48.0], [1718.0, 49.0], [1700.0, 48.0], [1698.0, 48.0], [1696.0, 51.0], [1722.0, 49.0], [1724.0, 52.0], [1726.0, 46.0], [1682.0, 53.0], [1710.0, 47.0], [1708.0, 46.0], [1704.0, 51.0], [1706.0, 50.0], [1702.0, 48.0], [1688.0, 49.0], [1684.0, 49.0], [1686.0, 51.0], [1680.0, 49.0], [1690.0, 51.0], [1666.0, 52.0], [1668.0, 47.0], [1664.0, 55.0], [1694.0, 46.0], [1692.0, 51.0], [1678.0, 52.0], [1676.0, 61.5], [1672.0, 50.5], [1674.0, 45.0], [1670.0, 49.0], [1714.0, 48.0], [1716.0, 48.0], [1732.0, 50.0], [1772.0, 48.0], [1774.0, 60.0], [1780.0, 53.5], [1778.0, 47.0], [1742.0, 51.0], [1740.0, 49.0], [1736.0, 50.0], [1734.0, 49.0], [1776.0, 48.0], [1790.0, 63.0], [1760.0, 46.0], [1788.0, 52.0], [1782.0, 48.0], [1784.0, 51.0], [1786.0, 46.0], [1762.0, 50.0], [1750.0, 50.0], [1748.0, 47.0], [1744.0, 47.0], [1746.0, 44.0], [1752.0, 48.0], [1766.0, 50.0], [1764.0, 46.0], [1768.0, 46.0], [1730.0, 64.0], [1728.0, 54.0], [1754.0, 51.0], [1758.0, 49.0], [1844.0, 52.0], [1794.0, 50.0], [1804.0, 48.0], [1806.0, 49.0], [1840.0, 47.0], [1842.0, 49.0], [1850.0, 63.0], [1852.0, 49.0], [1848.0, 46.0], [1846.0, 49.0], [1854.0, 58.0], [1824.0, 49.0], [1826.0, 48.0], [1802.0, 49.0], [1796.0, 46.0], [1798.0, 61.0], [1800.0, 45.0], [1834.0, 52.0], [1838.0, 50.0], [1836.0, 47.0], [1832.0, 48.0], [1830.0, 46.0], [1828.0, 50.0], [1818.0, 47.0], [1816.0, 54.0], [1814.0, 49.0], [1812.0, 50.0], [1808.0, 51.0], [1810.0, 48.0], [1792.0, 49.0], [1820.0, 50.0], [1862.0, 62.0], [1860.0, 54.0], [1858.0, 55.0], [1878.0, 55.0], [1872.0, 50.0], [1882.0, 53.0], [1856.0, 50.0], [1904.0, 52.0], [1866.0, 46.0], [1864.0, 50.0], [1868.0, 47.0], [1870.0, 46.0], [1906.0, 49.0], [1912.0, 47.0], [1908.0, 53.0], [1910.0, 47.0], [1914.0, 51.0], [1888.0, 52.0], [1916.0, 48.0], [1884.0, 48.0], [1886.0, 49.0], [1892.0, 52.0], [1894.0, 46.0], [1900.0, 51.0], [1898.0, 48.0], [1902.0, 45.0], [1896.0, 57.0], [1890.0, 50.0], [1972.0, 49.0], [1930.0, 55.0], [1962.0, 48.0], [1966.0, 51.0], [1978.0, 48.0], [1976.0, 48.0], [1974.0, 48.0], [1956.0, 47.0], [1952.0, 81.0], [1982.0, 51.0], [1970.0, 53.0], [1968.0, 58.0], [1934.0, 48.0], [1926.0, 52.0], [1928.0, 56.0], [1922.0, 49.0], [1924.0, 54.0], [1936.0, 47.0], [1944.0, 52.0], [1942.0, 53.0], [1946.0, 49.0], [1950.0, 80.0], [1948.0, 49.0], [1940.0, 53.0], [1920.0, 53.0], [1958.0, 46.0], [1986.0, 48.0], [2046.0, 70.0], [2004.0, 52.0], [2002.0, 44.0], [2034.0, 57.0], [1998.0, 55.0], [2026.0, 46.0], [2018.0, 47.0], [2008.0, 49.0], [2012.0, 47.0], [2010.0, 53.0], [2014.0, 50.0], [1988.0, 48.0], [1996.0, 51.0], [2030.0, 50.0], [2052.0, 48.0], [2068.0, 52.0], [2108.0, 78.0], [2128.0, 54.0], [2064.0, 77.0], [2120.0, 51.0], [2076.0, 61.0], [2184.0, 101.0], [2192.0, 20281.0], [2050.0, 48.0], [2138.0, 20291.0], [2066.0, 84.5], [2062.0, 64.0], [2106.0, 56.0], [2134.0, 55.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[544.0, 0.0], [960.0, 0.0], [1370.0, 0.0], [1594.0, 0.0], [1592.0, 0.0], [1656.0, 0.0], [1658.0, 0.0], [1666.0, 0.0], [1684.0, 0.0], [1718.0, 0.0], [1710.0, 0.0], [1776.0, 0.0], [1766.0, 0.0], [1834.0, 0.0], [1816.0, 0.0], [1820.0, 0.0], [1858.0, 0.0], [1856.0, 0.0], [1896.0, 0.0], [1952.0, 0.0], [1930.0, 0.0], [1940.0, 0.0], [1970.0, 0.0], [1934.0, 0.0], [1950.0, 0.0], [2004.0, 0.0], [2108.0, 0.0], [2128.0, 0.0], [2138.0, 0.0], [2066.0, 0.0], [2062.0, 0.0], [2184.0, 0.0], [2192.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2192.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 20291.0, "series": [{"data": [[2.0, 13614.5], [4.0, 11272.0], [6.0, 4836.0], [8.0, 49.5], [12.0, 64.5], [14.0, 9263.0], [16.0, 78.5], [18.0, 88.0], [20.0, 81.5], [22.0, 10303.5], [24.0, 9268.0], [26.0, 47.0], [30.0, 11272.0], [32.0, 98.5], [34.0, 57.0], [42.0, 11274.0], [44.0, 11281.5], [50.0, 80.0], [56.0, 79.0], [62.0, 60.0], [70.0, 77.0], [80.0, 77.0], [84.0, 77.0], [96.0, 44.0], [100.0, 50.5], [106.0, 53.0], [114.0, 45.0], [118.0, 4515.0], [116.0, 15318.5], [120.0, 45.0], [132.0, 61.5], [130.0, 44.0], [128.0, 46.5], [142.0, 43.0], [140.0, 44.0], [148.0, 44.0], [146.0, 53.0], [150.0, 75.0], [152.0, 55.0], [164.0, 11284.5], [170.0, 43.0], [174.0, 43.0], [180.0, 44.0], [188.0, 44.5], [200.0, 44.5], [214.0, 49.0], [208.0, 44.0], [216.0, 53.0], [220.0, 47.0], [226.0, 43.0], [224.0, 44.0], [236.0, 52.5], [244.0, 43.0], [242.0, 60.5], [264.0, 46.0], [270.0, 45.0], [280.0, 7580.0], [284.0, 44.5], [278.0, 44.0], [276.0, 44.0], [282.0, 46.0], [296.0, 15309.0], [294.0, 11284.0], [292.0, 46.0], [302.0, 15294.0], [288.0, 45.0], [300.0, 11285.0], [310.0, 44.0], [316.0, 44.0], [308.0, 15355.0], [314.0, 48.0], [312.0, 15441.5], [322.0, 44.0], [328.0, 44.0], [324.0, 44.0], [326.0, 44.0], [342.0, 44.5], [346.0, 44.0], [348.0, 43.0], [340.0, 44.0], [360.0, 5678.5], [362.0, 45.0], [356.0, 11291.0], [358.0, 15456.0], [378.0, 45.0], [382.0, 47.0], [368.0, 45.0], [398.0, 52.0], [396.0, 11285.0], [388.0, 55.0], [404.0, 45.0], [412.0, 45.0], [414.0, 44.0], [408.0, 54.0], [406.0, 85.0], [426.0, 45.0], [428.0, 43.0], [446.0, 44.0], [434.0, 51.0], [438.0, 45.0], [442.0, 45.0], [450.0, 46.0], [458.0, 15568.0], [454.0, 45.0], [460.0, 100.5], [448.0, 11284.0], [472.0, 45.0], [470.0, 44.0], [474.0, 45.0], [476.0, 44.0], [464.0, 47.0], [492.0, 46.0], [480.0, 49.0], [494.0, 46.0], [488.0, 49.0], [482.0, 44.0], [484.0, 15512.5], [508.0, 46.0], [510.0, 46.0], [498.0, 44.0], [504.0, 46.0], [496.0, 44.0], [500.0, 54.0], [502.0, 44.0], [512.0, 46.0], [528.0, 48.0], [536.0, 45.0], [542.0, 48.0], [540.0, 49.0], [534.0, 51.0], [526.0, 48.0], [532.0, 45.0], [518.0, 46.0], [514.0, 45.0], [516.0, 56.0], [530.0, 45.0], [524.0, 47.0], [522.0, 50.0], [520.0, 45.0], [572.0, 46.0], [556.0, 45.0], [544.0, 54.0], [546.0, 48.0], [558.0, 46.0], [568.0, 46.0], [570.0, 46.0], [574.0, 47.0], [562.0, 46.0], [566.0, 46.0], [564.0, 45.0], [560.0, 47.0], [552.0, 45.0], [554.0, 46.0], [600.0, 47.0], [594.0, 44.5], [578.0, 45.0], [580.0, 46.0], [582.0, 47.0], [598.0, 45.0], [596.0, 47.0], [584.0, 47.0], [576.0, 46.0], [588.0, 47.0], [590.0, 46.0], [592.0, 46.0], [602.0, 47.0], [604.0, 48.0], [606.0, 47.0], [586.0, 47.0], [632.0, 46.0], [626.0, 47.0], [624.0, 46.0], [638.0, 46.0], [630.0, 45.0], [628.0, 47.0], [608.0, 46.0], [636.0, 46.0], [634.0, 46.0], [622.0, 46.0], [620.0, 46.0], [618.0, 45.0], [616.0, 45.0], [614.0, 46.0], [612.0, 46.0], [610.0, 46.0], [642.0, 45.0], [640.0, 46.0], [654.0, 46.0], [652.0, 46.5], [660.0, 46.0], [662.0, 45.0], [650.0, 46.0], [646.0, 46.0], [644.0, 46.0], [648.0, 48.0], [668.0, 46.0], [666.0, 46.0], [664.0, 46.0], [658.0, 47.0], [656.0, 47.0], [670.0, 47.0], [674.0, 47.0], [676.0, 46.0], [678.0, 46.0], [696.0, 47.0], [672.0, 46.0], [686.0, 46.0], [694.0, 47.0], [692.0, 46.0], [680.0, 47.0], [684.0, 47.0], [682.0, 47.0], [698.0, 49.0], [690.0, 47.0], [688.0, 47.0], [700.0, 46.0], [702.0, 49.0], [706.0, 47.0], [710.0, 47.0], [704.0, 48.0], [714.0, 47.0], [728.0, 47.0], [730.0, 46.0], [732.0, 45.0], [734.0, 15216.0], [720.0, 47.0], [722.0, 46.0], [726.0, 46.0], [724.0, 45.0], [712.0, 53.0], [718.0, 47.0], [716.0, 47.0], [708.0, 47.0], [760.0, 49.0], [738.0, 50.0], [750.0, 46.0], [766.0, 46.0], [758.0, 47.0], [756.0, 46.0], [752.0, 49.0], [754.0, 62.0], [764.0, 47.0], [762.0, 45.0], [746.0, 46.0], [748.0, 45.0], [742.0, 46.0], [740.0, 45.0], [736.0, 46.0], [778.0, 50.0], [790.0, 49.0], [774.0, 49.0], [782.0, 48.0], [792.0, 46.0], [796.0, 46.0], [770.0, 58.5], [798.0, 54.0], [824.0, 45.0], [830.0, 46.0], [816.0, 46.0], [812.0, 48.0], [810.0, 47.0], [808.0, 121.5], [814.0, 46.0], [820.0, 47.0], [828.0, 48.0], [826.0, 63.0], [822.0, 51.0], [806.0, 45.5], [800.0, 48.0], [802.0, 50.0], [804.0, 46.0], [834.0, 47.0], [848.0, 47.0], [852.0, 46.0], [854.0, 48.0], [842.0, 47.0], [840.0, 47.0], [850.0, 50.0], [856.0, 48.0], [858.0, 58.0], [832.0, 45.0], [846.0, 47.0], [838.0, 47.0], [836.0, 46.0], [844.0, 44.0], [866.0, 61.0], [872.0, 47.0], [868.0, 48.0], [888.0, 48.0], [870.0, 46.0], [890.0, 47.0], [892.0, 51.0], [882.0, 46.0], [886.0, 46.0], [874.0, 56.0], [884.0, 58.0], [878.0, 48.0], [864.0, 61.5], [902.0, 47.0], [910.0, 47.0], [896.0, 44.0], [916.0, 47.0], [918.0, 44.0], [924.0, 51.0], [908.0, 45.0], [926.0, 53.0], [914.0, 47.0], [912.0, 47.0], [904.0, 48.0], [920.0, 47.0], [922.0, 45.0], [898.0, 47.0], [900.0, 49.0], [952.0, 53.0], [958.0, 45.0], [954.0, 48.0], [956.0, 46.0], [940.0, 47.0], [930.0, 49.0], [928.0, 47.0], [942.0, 46.0], [934.0, 46.0], [932.0, 47.0], [948.0, 46.0], [950.0, 49.0], [946.0, 47.0], [944.0, 46.0], [936.0, 47.0], [938.0, 46.0], [966.0, 47.0], [988.0, 48.0], [986.0, 46.0], [984.0, 47.0], [982.0, 48.0], [980.0, 46.0], [978.0, 48.0], [972.0, 47.0], [970.0, 48.0], [968.0, 46.0], [974.0, 47.0], [960.0, 50.0], [964.0, 46.0], [962.0, 47.0], [976.0, 47.0], [990.0, 53.0], [1016.0, 46.0], [1008.0, 47.0], [1012.0, 46.0], [1010.0, 52.0], [998.0, 46.0], [996.0, 46.0], [1022.0, 48.0], [994.0, 48.0], [1000.0, 46.0], [1006.0, 55.0], [992.0, 45.0], [1002.0, 50.0], [1020.0, 48.0], [1018.0, 46.0], [1014.0, 47.0], [1078.0, 46.0], [1038.0, 48.0], [1032.0, 46.0], [1034.0, 47.0], [1036.0, 50.0], [1030.0, 47.0], [1028.0, 47.0], [1026.0, 47.0], [1024.0, 47.0], [1056.0, 47.0], [1066.0, 47.0], [1062.0, 48.0], [1064.0, 46.0], [1068.0, 45.0], [1070.0, 47.0], [1048.0, 47.0], [1050.0, 47.0], [1052.0, 47.0], [1044.0, 47.0], [1040.0, 46.0], [1042.0, 46.0], [1046.0, 48.0], [1074.0, 47.0], [1076.0, 46.0], [1072.0, 47.0], [1058.0, 46.0], [1060.0, 46.0], [1054.0, 47.0], [1080.0, 45.0], [1082.0, 46.0], [1086.0, 45.0], [1084.0, 46.0], [1102.0, 45.0], [1094.0, 47.0], [1118.0, 45.0], [1106.0, 47.0], [1104.0, 54.0], [1098.0, 49.0], [1110.0, 47.0], [1108.0, 50.0], [1112.0, 48.0], [1116.0, 49.0], [1114.0, 45.0], [1090.0, 47.5], [1092.0, 45.0], [1100.0, 49.0], [1130.0, 46.0], [1134.0, 58.0], [1120.0, 47.0], [1124.0, 50.0], [1126.0, 46.0], [1128.0, 55.0], [1122.0, 54.0], [1146.0, 46.0], [1148.0, 48.0], [1144.0, 48.0], [1138.0, 48.0], [1136.0, 46.0], [1140.0, 44.0], [1150.0, 47.0], [1088.0, 47.0], [1096.0, 48.0], [1164.0, 47.0], [1156.0, 48.0], [1208.0, 50.0], [1172.0, 47.0], [1174.0, 46.0], [1176.0, 48.0], [1178.0, 45.0], [1182.0, 49.0], [1152.0, 45.0], [1154.0, 47.0], [1180.0, 47.0], [1162.0, 58.0], [1158.0, 48.0], [1160.0, 49.0], [1214.0, 48.0], [1210.0, 48.0], [1212.0, 46.0], [1200.0, 49.0], [1202.0, 47.0], [1166.0, 44.0], [1168.0, 49.0], [1170.0, 45.0], [1186.0, 47.0], [1188.0, 47.0], [1190.0, 46.0], [1192.0, 49.0], [1196.0, 45.0], [1194.0, 46.0], [1184.0, 46.0], [1230.0, 46.0], [1270.0, 48.0], [1258.0, 51.0], [1260.0, 47.0], [1262.0, 46.0], [1256.0, 49.0], [1252.0, 51.0], [1250.0, 47.0], [1254.0, 48.0], [1248.0, 46.0], [1278.0, 47.0], [1272.0, 47.0], [1274.0, 47.0], [1276.0, 46.0], [1236.0, 48.0], [1266.0, 50.0], [1232.0, 47.0], [1234.0, 55.0], [1268.0, 50.0], [1264.0, 47.0], [1226.0, 49.5], [1228.0, 52.0], [1224.0, 46.0], [1222.0, 49.0], [1220.0, 47.0], [1218.0, 50.0], [1246.0, 46.0], [1216.0, 51.0], [1244.0, 50.0], [1240.0, 50.0], [1238.0, 47.0], [1242.0, 50.0], [1294.0, 48.0], [1296.0, 46.0], [1298.0, 50.0], [1304.0, 46.0], [1306.0, 49.0], [1308.0, 45.0], [1280.0, 47.0], [1310.0, 45.0], [1302.0, 47.0], [1300.0, 49.0], [1284.0, 47.0], [1282.0, 49.0], [1326.0, 47.0], [1342.0, 47.0], [1314.0, 48.0], [1320.0, 47.0], [1318.0, 46.0], [1312.0, 50.0], [1324.0, 47.0], [1332.0, 47.0], [1334.0, 46.0], [1338.0, 49.0], [1336.0, 46.0], [1340.0, 49.0], [1330.0, 47.0], [1328.0, 46.5], [1286.0, 47.0], [1288.0, 51.0], [1290.0, 45.0], [1292.0, 63.0], [1400.0, 49.0], [1354.0, 48.0], [1388.0, 48.0], [1390.0, 45.0], [1386.0, 54.0], [1384.0, 46.0], [1370.0, 51.0], [1366.0, 48.0], [1368.0, 47.0], [1392.0, 58.0], [1356.0, 48.0], [1358.0, 47.0], [1394.0, 51.0], [1398.0, 47.0], [1396.0, 47.0], [1406.0, 48.0], [1376.0, 63.0], [1380.0, 57.0], [1378.0, 48.0], [1402.0, 48.0], [1404.0, 48.0], [1382.0, 49.0], [1360.0, 47.0], [1364.0, 48.0], [1374.0, 49.0], [1372.0, 44.0], [1344.0, 47.0], [1350.0, 49.0], [1352.0, 46.0], [1346.0, 49.0], [1348.0, 47.0], [1362.0, 54.0], [1412.0, 51.0], [1434.0, 47.0], [1424.0, 60.0], [1426.0, 49.0], [1416.0, 46.0], [1414.0, 51.0], [1422.0, 49.0], [1456.0, 48.0], [1418.0, 53.0], [1420.0, 46.0], [1410.0, 46.0], [1408.0, 51.0], [1436.0, 49.0], [1438.0, 48.0], [1442.0, 48.0], [1446.0, 48.0], [1444.0, 46.0], [1430.0, 49.0], [1428.0, 49.0], [1432.0, 46.0], [1464.0, 48.0], [1462.0, 47.0], [1460.0, 49.0], [1470.0, 48.0], [1440.0, 51.5], [1466.0, 48.0], [1468.0, 46.0], [1458.0, 52.0], [1452.0, 50.0], [1454.0, 48.0], [1450.0, 52.0], [1448.0, 47.0], [1476.0, 48.0], [1494.0, 53.0], [1500.0, 51.0], [1496.0, 49.0], [1498.0, 46.0], [1474.0, 47.0], [1472.0, 50.0], [1502.0, 48.0], [1488.0, 55.0], [1490.0, 48.0], [1486.0, 49.0], [1522.0, 46.0], [1528.0, 49.0], [1526.0, 49.0], [1524.0, 49.0], [1520.0, 47.0], [1484.0, 49.0], [1532.0, 51.0], [1534.0, 48.0], [1530.0, 49.0], [1508.0, 49.0], [1506.0, 46.0], [1510.0, 47.0], [1512.0, 48.0], [1514.0, 53.0], [1516.0, 50.0], [1518.0, 46.0], [1504.0, 51.0], [1482.0, 48.0], [1492.0, 47.0], [1478.0, 50.0], [1480.0, 47.0], [1544.0, 49.0], [1598.0, 47.0], [1550.0, 48.0], [1546.0, 47.0], [1548.0, 59.0], [1586.0, 45.0], [1590.0, 49.0], [1588.0, 49.0], [1596.0, 48.0], [1594.0, 49.0], [1592.0, 50.0], [1584.0, 50.0], [1566.0, 48.0], [1572.0, 50.0], [1570.0, 47.0], [1568.0, 46.0], [1542.0, 52.0], [1540.0, 46.0], [1536.0, 50.0], [1538.0, 48.0], [1562.0, 46.0], [1564.0, 45.0], [1560.0, 46.0], [1558.0, 47.0], [1554.0, 47.0], [1552.0, 47.0], [1556.0, 50.0], [1574.0, 49.0], [1580.0, 45.0], [1582.0, 47.0], [1578.0, 48.0], [1576.0, 48.0], [1658.0, 48.0], [1626.0, 47.0], [1618.0, 53.0], [1616.0, 50.0], [1628.0, 51.0], [1662.0, 56.0], [1632.0, 46.0], [1660.0, 52.0], [1636.0, 47.0], [1638.0, 46.0], [1634.0, 46.0], [1640.0, 47.0], [1642.0, 46.0], [1646.0, 48.0], [1644.0, 45.0], [1630.0, 49.0], [1648.0, 52.0], [1650.0, 46.0], [1654.0, 48.0], [1656.0, 49.0], [1614.0, 48.0], [1612.0, 46.0], [1610.0, 48.0], [1608.0, 49.0], [1606.0, 56.0], [1602.0, 49.0], [1600.0, 44.0], [1620.0, 48.0], [1622.0, 47.0], [1624.0, 47.0], [1712.0, 48.0], [1718.0, 49.0], [1700.0, 47.0], [1698.0, 48.0], [1696.0, 51.0], [1722.0, 49.0], [1724.0, 52.0], [1726.0, 46.0], [1682.0, 53.0], [1710.0, 47.0], [1708.0, 46.0], [1704.0, 51.0], [1706.0, 50.0], [1702.0, 48.0], [1688.0, 49.0], [1684.0, 49.0], [1686.0, 51.0], [1680.0, 49.0], [1690.0, 51.0], [1666.0, 52.0], [1668.0, 47.0], [1664.0, 55.0], [1694.0, 46.0], [1692.0, 51.0], [1678.0, 52.0], [1676.0, 61.5], [1672.0, 50.5], [1674.0, 45.0], [1670.0, 48.0], [1714.0, 48.0], [1716.0, 48.0], [1732.0, 50.0], [1772.0, 48.0], [1774.0, 60.0], [1780.0, 53.5], [1778.0, 47.0], [1742.0, 51.0], [1740.0, 49.0], [1736.0, 50.0], [1734.0, 49.0], [1776.0, 48.0], [1790.0, 63.0], [1760.0, 46.0], [1788.0, 52.0], [1782.0, 48.0], [1784.0, 51.0], [1786.0, 46.0], [1762.0, 50.0], [1750.0, 50.0], [1748.0, 47.0], [1744.0, 47.0], [1746.0, 44.0], [1752.0, 48.0], [1766.0, 50.0], [1764.0, 46.0], [1768.0, 46.0], [1730.0, 64.0], [1728.0, 54.0], [1754.0, 51.0], [1758.0, 49.0], [1844.0, 52.0], [1794.0, 50.0], [1804.0, 48.0], [1806.0, 49.0], [1840.0, 47.0], [1842.0, 49.0], [1850.0, 63.0], [1852.0, 49.0], [1848.0, 45.5], [1846.0, 49.0], [1854.0, 58.0], [1824.0, 49.0], [1826.0, 48.0], [1802.0, 49.0], [1796.0, 46.0], [1798.0, 61.0], [1800.0, 45.0], [1834.0, 52.0], [1838.0, 50.0], [1836.0, 47.0], [1832.0, 48.0], [1830.0, 46.0], [1828.0, 50.0], [1818.0, 47.0], [1816.0, 54.0], [1814.0, 49.0], [1812.0, 50.0], [1808.0, 51.0], [1810.0, 48.0], [1792.0, 49.0], [1820.0, 50.0], [1862.0, 62.0], [1860.0, 54.0], [1858.0, 55.0], [1878.0, 55.0], [1872.0, 50.0], [1882.0, 53.0], [1856.0, 50.0], [1904.0, 52.0], [1866.0, 46.0], [1864.0, 50.0], [1868.0, 47.0], [1870.0, 46.0], [1906.0, 49.0], [1912.0, 47.0], [1908.0, 53.0], [1910.0, 47.0], [1914.0, 51.0], [1888.0, 52.0], [1916.0, 48.0], [1884.0, 48.0], [1886.0, 49.0], [1892.0, 52.0], [1894.0, 45.0], [1900.0, 51.0], [1898.0, 48.0], [1902.0, 45.0], [1896.0, 57.0], [1890.0, 50.0], [1972.0, 49.0], [1930.0, 55.0], [1962.0, 48.0], [1966.0, 51.0], [1978.0, 48.0], [1976.0, 48.0], [1974.0, 48.0], [1956.0, 47.0], [1952.0, 81.0], [1982.0, 51.0], [1970.0, 53.0], [1968.0, 58.0], [1934.0, 48.0], [1926.0, 52.0], [1928.0, 56.0], [1922.0, 49.0], [1924.0, 54.0], [1936.0, 47.0], [1944.0, 52.0], [1942.0, 53.0], [1946.0, 49.0], [1950.0, 80.0], [1948.0, 49.0], [1940.0, 53.0], [1920.0, 53.0], [1958.0, 46.0], [1986.0, 48.0], [2046.0, 70.0], [2004.0, 52.0], [2002.0, 44.0], [2034.0, 57.0], [1998.0, 55.0], [2026.0, 46.0], [2018.0, 47.0], [2008.0, 49.0], [2012.0, 47.0], [2010.0, 53.0], [2014.0, 50.0], [1988.0, 48.0], [1996.0, 51.0], [2030.0, 50.0], [2052.0, 48.0], [2068.0, 52.0], [2108.0, 78.0], [2128.0, 54.0], [2064.0, 77.0], [2120.0, 51.0], [2076.0, 61.0], [2184.0, 101.0], [2192.0, 20281.0], [2050.0, 48.0], [2138.0, 20291.0], [2066.0, 84.5], [2062.0, 64.0], [2106.0, 56.0], [2134.0, 55.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[544.0, 0.0], [960.0, 0.0], [1370.0, 0.0], [1594.0, 0.0], [1592.0, 0.0], [1656.0, 0.0], [1658.0, 0.0], [1666.0, 0.0], [1684.0, 0.0], [1718.0, 0.0], [1710.0, 0.0], [1776.0, 0.0], [1766.0, 0.0], [1834.0, 0.0], [1816.0, 0.0], [1820.0, 0.0], [1858.0, 0.0], [1856.0, 0.0], [1896.0, 0.0], [1952.0, 0.0], [1930.0, 0.0], [1940.0, 0.0], [1970.0, 0.0], [1934.0, 0.0], [1950.0, 0.0], [2004.0, 0.0], [2108.0, 0.0], [2128.0, 0.0], [2138.0, 0.0], [2066.0, 0.0], [2062.0, 0.0], [2184.0, 0.0], [2192.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2192.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 52.63333333333333, "minX": 1.71907464E12, "maxY": 1907.3333333333333, "series": [{"data": [[1.71907542E12, 957.6], [1.71907602E12, 1273.4], [1.71907644E12, 1029.3666666666666], [1.71907482E12, 638.8666666666667], [1.71907704E12, 1274.7666666666667], [1.7190762E12, 1275.8], [1.7190768E12, 1594.9666666666667], [1.719075E12, 638.2], [1.71907662E12, 1588.5666666666666], [1.71907722E12, 605.7666666666667], [1.71907764E12, 1304.8666666666666], [1.7190756E12, 953.2], [1.71907476E12, 638.0666666666667], [1.71907638E12, 1271.3666666666666], [1.71907698E12, 1591.9666666666667], [1.71907536E12, 958.6333333333333], [1.71907758E12, 778.0333333333333], [1.71907518E12, 639.9333333333333], [1.7190774E12, 451.5], [1.71907578E12, 958.0666666666667], [1.71907494E12, 639.9], [1.71907716E12, 1907.3333333333333], [1.71907554E12, 960.6333333333333], [1.71907596E12, 1269.3333333333333], [1.71907656E12, 1590.6], [1.71907734E12, 497.8], [1.71907752E12, 1338.0666666666666], [1.71907572E12, 957.8666666666667], [1.71907632E12, 1275.9333333333334], [1.71907614E12, 1276.0333333333333], [1.71907512E12, 639.3], [1.71907674E12, 1596.4], [1.7190759E12, 1214.8333333333333], [1.71907488E12, 639.9666666666667], [1.7190765E12, 1515.7], [1.7190747E12, 611.6666666666666], [1.71907692E12, 1592.9666666666667], [1.7190753E12, 912.9333333333333], [1.71907668E12, 1589.5], [1.71907506E12, 637.9333333333333], [1.71907728E12, 381.2], [1.7190771E12, 1815.3333333333333], [1.71907548E12, 959.0666666666667], [1.71907746E12, 1290.2666666666667], [1.71907608E12, 1275.2333333333333], [1.71907524E12, 528.6], [1.71907686E12, 1592.3], [1.71907584E12, 774.9], [1.71907566E12, 955.8666666666667], [1.71907464E12, 52.63333333333333], [1.71907626E12, 1268.7333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71907764E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 19.466666666666665, "minX": 1.71907464E12, "maxY": 1907.0, "series": [{"data": [[1.71907542E12, 958.6666666666666], [1.71907602E12, 1273.8333333333333], [1.71907644E12, 1029.5], [1.71907482E12, 638.9], [1.71907704E12, 1275.9333333333334], [1.7190762E12, 1276.1333333333334], [1.7190768E12, 1593.7666666666667], [1.719075E12, 637.3333333333334], [1.71907662E12, 1589.7], [1.71907722E12, 534.9333333333333], [1.71907764E12, 1306.4666666666667], [1.7190756E12, 951.7666666666667], [1.71907476E12, 638.2666666666667], [1.71907638E12, 1272.3666666666666], [1.71907698E12, 1590.9], [1.71907536E12, 959.1666666666666], [1.71907758E12, 739.6666666666666], [1.71907518E12, 639.6333333333333], [1.7190774E12, 437.76666666666665], [1.71907578E12, 958.0666666666667], [1.71907494E12, 640.1], [1.71907716E12, 1907.0], [1.71907554E12, 960.9], [1.71907596E12, 1269.6], [1.71907656E12, 1588.6], [1.71907734E12, 419.46666666666664], [1.71907752E12, 1340.7333333333333], [1.71907572E12, 957.6333333333333], [1.71907632E12, 1276.4666666666667], [1.71907614E12, 1275.0], [1.71907512E12, 639.3666666666667], [1.71907674E12, 1595.6333333333334], [1.7190759E12, 1213.6333333333334], [1.71907488E12, 640.0], [1.7190765E12, 1514.4666666666667], [1.7190747E12, 611.2333333333333], [1.71907692E12, 1593.3], [1.7190753E12, 911.3666666666667], [1.71907668E12, 1591.3333333333333], [1.71907506E12, 638.6666666666666], [1.71907728E12, 353.03333333333336], [1.7190771E12, 1814.1666666666667], [1.71907548E12, 958.8], [1.71907746E12, 1255.1666666666667], [1.71907608E12, 1275.3333333333333], [1.71907524E12, 528.8333333333334], [1.71907686E12, 1593.1666666666667], [1.71907584E12, 774.8], [1.71907566E12, 957.3666666666667], [1.71907464E12, 52.4], [1.71907626E12, 1268.4]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71907734E12, 61.56666666666667], [1.71907752E12, 24.133333333333333], [1.71907728E12, 46.06666666666667], [1.71907758E12, 38.93333333333333], [1.7190774E12, 38.93333333333333], [1.71907746E12, 19.466666666666665], [1.71907722E12, 33.93333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71907764E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 19.466666666666665, "minX": 1.71907464E12, "maxY": 1907.0, "series": [{"data": [[1.71907734E12, 61.56666666666667], [1.71907752E12, 24.133333333333333], [1.71907728E12, 46.06666666666667], [1.71907758E12, 38.93333333333333], [1.7190774E12, 38.93333333333333], [1.71907746E12, 19.466666666666665], [1.71907722E12, 33.93333333333333]], "isOverall": false, "label": "Directors by name-failure", "isController": false}, {"data": [[1.71907542E12, 958.6666666666666], [1.71907602E12, 1273.8333333333333], [1.71907644E12, 1029.5], [1.71907482E12, 638.9], [1.71907704E12, 1275.9333333333334], [1.7190762E12, 1276.1333333333334], [1.7190768E12, 1593.7666666666667], [1.719075E12, 637.3333333333334], [1.71907662E12, 1589.7], [1.71907722E12, 534.9333333333333], [1.71907764E12, 1306.4666666666667], [1.7190756E12, 951.7666666666667], [1.71907476E12, 638.2666666666667], [1.71907638E12, 1272.3666666666666], [1.71907698E12, 1590.9], [1.71907536E12, 959.1666666666666], [1.71907758E12, 739.6666666666666], [1.71907518E12, 639.6333333333333], [1.7190774E12, 437.76666666666665], [1.71907578E12, 958.0666666666667], [1.71907494E12, 640.1], [1.71907716E12, 1907.0], [1.71907554E12, 960.9], [1.71907596E12, 1269.6], [1.71907656E12, 1588.6], [1.71907734E12, 419.46666666666664], [1.71907752E12, 1340.7333333333333], [1.71907572E12, 957.6333333333333], [1.71907632E12, 1276.4666666666667], [1.71907614E12, 1275.0], [1.71907512E12, 639.3666666666667], [1.71907674E12, 1595.6333333333334], [1.7190759E12, 1213.6333333333334], [1.71907488E12, 640.0], [1.7190765E12, 1514.4666666666667], [1.7190747E12, 611.2333333333333], [1.71907692E12, 1593.3], [1.7190753E12, 911.3666666666667], [1.71907668E12, 1591.3333333333333], [1.71907506E12, 638.6666666666666], [1.71907728E12, 353.03333333333336], [1.7190771E12, 1814.1666666666667], [1.71907548E12, 958.8], [1.71907746E12, 1255.1666666666667], [1.71907608E12, 1275.3333333333333], [1.71907524E12, 528.8333333333334], [1.71907686E12, 1593.1666666666667], [1.71907584E12, 774.8], [1.71907566E12, 957.3666666666667], [1.71907464E12, 52.4], [1.71907626E12, 1268.4]], "isOverall": false, "label": "Directors by name-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71907764E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 19.466666666666665, "minX": 1.71907464E12, "maxY": 1907.0, "series": [{"data": [[1.71907542E12, 958.6666666666666], [1.71907602E12, 1273.8333333333333], [1.71907644E12, 1029.5], [1.71907482E12, 638.9], [1.71907704E12, 1275.9333333333334], [1.7190762E12, 1276.1333333333334], [1.7190768E12, 1593.7666666666667], [1.719075E12, 637.3333333333334], [1.71907662E12, 1589.7], [1.71907722E12, 534.9333333333333], [1.71907764E12, 1306.4666666666667], [1.7190756E12, 951.7666666666667], [1.71907476E12, 638.2666666666667], [1.71907638E12, 1272.3666666666666], [1.71907698E12, 1590.9], [1.71907536E12, 959.1666666666666], [1.71907758E12, 739.6666666666666], [1.71907518E12, 639.6333333333333], [1.7190774E12, 437.76666666666665], [1.71907578E12, 958.0666666666667], [1.71907494E12, 640.1], [1.71907716E12, 1907.0], [1.71907554E12, 960.9], [1.71907596E12, 1269.6], [1.71907656E12, 1588.6], [1.71907734E12, 419.46666666666664], [1.71907752E12, 1340.7333333333333], [1.71907572E12, 957.6333333333333], [1.71907632E12, 1276.4666666666667], [1.71907614E12, 1275.0], [1.71907512E12, 639.3666666666667], [1.71907674E12, 1595.6333333333334], [1.7190759E12, 1213.6333333333334], [1.71907488E12, 640.0], [1.7190765E12, 1514.4666666666667], [1.7190747E12, 611.2333333333333], [1.71907692E12, 1593.3], [1.7190753E12, 911.3666666666667], [1.71907668E12, 1591.3333333333333], [1.71907506E12, 638.6666666666666], [1.71907728E12, 353.03333333333336], [1.7190771E12, 1814.1666666666667], [1.71907548E12, 958.8], [1.71907746E12, 1255.1666666666667], [1.71907608E12, 1275.3333333333333], [1.71907524E12, 528.8333333333334], [1.71907686E12, 1593.1666666666667], [1.71907584E12, 774.8], [1.71907566E12, 957.3666666666667], [1.71907464E12, 52.4], [1.71907626E12, 1268.4]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.71907734E12, 61.56666666666667], [1.71907752E12, 24.133333333333333], [1.71907728E12, 46.06666666666667], [1.71907758E12, 38.93333333333333], [1.7190774E12, 38.93333333333333], [1.71907746E12, 19.466666666666665], [1.71907722E12, 33.93333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71907764E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

